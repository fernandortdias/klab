/**
 * Copyright (C) 2009-2016 integratedmodelling.org
 * generated by Xtext 2.12.0
 */
package org.integratedmodelling.kim.kdecl.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.integratedmodelling.kim.kdecl.ConceptDeclaration;
import org.integratedmodelling.kim.kdecl.DataType;
import org.integratedmodelling.kim.kdecl.KdeclPackage;
import org.integratedmodelling.kim.kdecl.Literal;
import org.integratedmodelling.kim.kdecl.RestrictionDefinition;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Restriction Definition</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#isOnly <em>Only</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#isNone <em>None</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#isExactly <em>Exactly</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#isAtLeast <em>At Least</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#isAtMost <em>At Most</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getHowmany <em>Howmany</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getSource <em>Source</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getDataType <em>Data Type</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getTraitType <em>Trait Type</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getSubject <em>Subject</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getValue <em>Value</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getMaxValue <em>Max Value</em>}</li>
 *   <li>{@link org.integratedmodelling.kim.kdecl.impl.RestrictionDefinitionImpl#getProperty <em>Property</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RestrictionDefinitionImpl extends MinimalEObjectImpl.Container implements RestrictionDefinition
{
  /**
   * The default value of the '{@link #isOnly() <em>Only</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOnly()
   * @generated
   * @ordered
   */
  protected static final boolean ONLY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isOnly() <em>Only</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isOnly()
   * @generated
   * @ordered
   */
  protected boolean only = ONLY_EDEFAULT;

  /**
   * The default value of the '{@link #isNone() <em>None</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNone()
   * @generated
   * @ordered
   */
  protected static final boolean NONE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isNone() <em>None</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isNone()
   * @generated
   * @ordered
   */
  protected boolean none = NONE_EDEFAULT;

  /**
   * The default value of the '{@link #isExactly() <em>Exactly</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExactly()
   * @generated
   * @ordered
   */
  protected static final boolean EXACTLY_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isExactly() <em>Exactly</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isExactly()
   * @generated
   * @ordered
   */
  protected boolean exactly = EXACTLY_EDEFAULT;

  /**
   * The default value of the '{@link #isAtLeast() <em>At Least</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAtLeast()
   * @generated
   * @ordered
   */
  protected static final boolean AT_LEAST_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAtLeast() <em>At Least</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAtLeast()
   * @generated
   * @ordered
   */
  protected boolean atLeast = AT_LEAST_EDEFAULT;

  /**
   * The default value of the '{@link #isAtMost() <em>At Most</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAtMost()
   * @generated
   * @ordered
   */
  protected static final boolean AT_MOST_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isAtMost() <em>At Most</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isAtMost()
   * @generated
   * @ordered
   */
  protected boolean atMost = AT_MOST_EDEFAULT;

  /**
   * The default value of the '{@link #getHowmany() <em>Howmany</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHowmany()
   * @generated
   * @ordered
   */
  protected static final int HOWMANY_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHowmany() <em>Howmany</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHowmany()
   * @generated
   * @ordered
   */
  protected int howmany = HOWMANY_EDEFAULT;

  /**
   * The cached value of the '{@link #getSource() <em>Source</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSource()
   * @generated
   * @ordered
   */
  protected ConceptDeclaration source;

  /**
   * The default value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected static final DataType DATA_TYPE_EDEFAULT = DataType.TEXT;

  /**
   * The cached value of the '{@link #getDataType() <em>Data Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDataType()
   * @generated
   * @ordered
   */
  protected DataType dataType = DATA_TYPE_EDEFAULT;

  /**
   * The cached value of the '{@link #getTraitType() <em>Trait Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTraitType()
   * @generated
   * @ordered
   */
  protected ConceptDeclaration traitType;

  /**
   * The cached value of the '{@link #getSubject() <em>Subject</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSubject()
   * @generated
   * @ordered
   */
  protected ConceptDeclaration subject;

  /**
   * The cached value of the '{@link #getValue() <em>Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getValue()
   * @generated
   * @ordered
   */
  protected Literal value;

  /**
   * The cached value of the '{@link #getMaxValue() <em>Max Value</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMaxValue()
   * @generated
   * @ordered
   */
  protected org.integratedmodelling.kim.kdecl.Number maxValue;

  /**
   * The default value of the '{@link #getProperty() <em>Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperty()
   * @generated
   * @ordered
   */
  protected static final String PROPERTY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getProperty() <em>Property</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getProperty()
   * @generated
   * @ordered
   */
  protected String property = PROPERTY_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RestrictionDefinitionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return KdeclPackage.Literals.RESTRICTION_DEFINITION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isOnly()
  {
    return only;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOnly(boolean newOnly)
  {
    boolean oldOnly = only;
    only = newOnly;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__ONLY, oldOnly, only));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isNone()
  {
    return none;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNone(boolean newNone)
  {
    boolean oldNone = none;
    none = newNone;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__NONE, oldNone, none));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isExactly()
  {
    return exactly;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setExactly(boolean newExactly)
  {
    boolean oldExactly = exactly;
    exactly = newExactly;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__EXACTLY, oldExactly, exactly));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isAtLeast()
  {
    return atLeast;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtLeast(boolean newAtLeast)
  {
    boolean oldAtLeast = atLeast;
    atLeast = newAtLeast;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__AT_LEAST, oldAtLeast, atLeast));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isAtMost()
  {
    return atMost;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAtMost(boolean newAtMost)
  {
    boolean oldAtMost = atMost;
    atMost = newAtMost;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__AT_MOST, oldAtMost, atMost));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public int getHowmany()
  {
    return howmany;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setHowmany(int newHowmany)
  {
    int oldHowmany = howmany;
    howmany = newHowmany;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__HOWMANY, oldHowmany, howmany));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConceptDeclaration getSource()
  {
    return source;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSource(ConceptDeclaration newSource, NotificationChain msgs)
  {
    ConceptDeclaration oldSource = source;
    source = newSource;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__SOURCE, oldSource, newSource);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSource(ConceptDeclaration newSource)
  {
    if (newSource != source)
    {
      NotificationChain msgs = null;
      if (source != null)
        msgs = ((InternalEObject)source).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__SOURCE, null, msgs);
      if (newSource != null)
        msgs = ((InternalEObject)newSource).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__SOURCE, null, msgs);
      msgs = basicSetSource(newSource, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__SOURCE, newSource, newSource));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public DataType getDataType()
  {
    return dataType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDataType(DataType newDataType)
  {
    DataType oldDataType = dataType;
    dataType = newDataType == null ? DATA_TYPE_EDEFAULT : newDataType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__DATA_TYPE, oldDataType, dataType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConceptDeclaration getTraitType()
  {
    return traitType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTraitType(ConceptDeclaration newTraitType, NotificationChain msgs)
  {
    ConceptDeclaration oldTraitType = traitType;
    traitType = newTraitType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE, oldTraitType, newTraitType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTraitType(ConceptDeclaration newTraitType)
  {
    if (newTraitType != traitType)
    {
      NotificationChain msgs = null;
      if (traitType != null)
        msgs = ((InternalEObject)traitType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE, null, msgs);
      if (newTraitType != null)
        msgs = ((InternalEObject)newTraitType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE, null, msgs);
      msgs = basicSetTraitType(newTraitType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE, newTraitType, newTraitType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ConceptDeclaration getSubject()
  {
    return subject;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSubject(ConceptDeclaration newSubject, NotificationChain msgs)
  {
    ConceptDeclaration oldSubject = subject;
    subject = newSubject;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__SUBJECT, oldSubject, newSubject);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSubject(ConceptDeclaration newSubject)
  {
    if (newSubject != subject)
    {
      NotificationChain msgs = null;
      if (subject != null)
        msgs = ((InternalEObject)subject).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__SUBJECT, null, msgs);
      if (newSubject != null)
        msgs = ((InternalEObject)newSubject).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__SUBJECT, null, msgs);
      msgs = basicSetSubject(newSubject, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__SUBJECT, newSubject, newSubject));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Literal getValue()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetValue(Literal newValue, NotificationChain msgs)
  {
    Literal oldValue = value;
    value = newValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__VALUE, oldValue, newValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setValue(Literal newValue)
  {
    if (newValue != value)
    {
      NotificationChain msgs = null;
      if (value != null)
        msgs = ((InternalEObject)value).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__VALUE, null, msgs);
      if (newValue != null)
        msgs = ((InternalEObject)newValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__VALUE, null, msgs);
      msgs = basicSetValue(newValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__VALUE, newValue, newValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public org.integratedmodelling.kim.kdecl.Number getMaxValue()
  {
    return maxValue;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetMaxValue(org.integratedmodelling.kim.kdecl.Number newMaxValue, NotificationChain msgs)
  {
    org.integratedmodelling.kim.kdecl.Number oldMaxValue = maxValue;
    maxValue = newMaxValue;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE, oldMaxValue, newMaxValue);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setMaxValue(org.integratedmodelling.kim.kdecl.Number newMaxValue)
  {
    if (newMaxValue != maxValue)
    {
      NotificationChain msgs = null;
      if (maxValue != null)
        msgs = ((InternalEObject)maxValue).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE, null, msgs);
      if (newMaxValue != null)
        msgs = ((InternalEObject)newMaxValue).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE, null, msgs);
      msgs = basicSetMaxValue(newMaxValue, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE, newMaxValue, newMaxValue));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getProperty()
  {
    return property;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setProperty(String newProperty)
  {
    String oldProperty = property;
    property = newProperty;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, KdeclPackage.RESTRICTION_DEFINITION__PROPERTY, oldProperty, property));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case KdeclPackage.RESTRICTION_DEFINITION__SOURCE:
        return basicSetSource(null, msgs);
      case KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE:
        return basicSetTraitType(null, msgs);
      case KdeclPackage.RESTRICTION_DEFINITION__SUBJECT:
        return basicSetSubject(null, msgs);
      case KdeclPackage.RESTRICTION_DEFINITION__VALUE:
        return basicSetValue(null, msgs);
      case KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE:
        return basicSetMaxValue(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case KdeclPackage.RESTRICTION_DEFINITION__ONLY:
        return isOnly();
      case KdeclPackage.RESTRICTION_DEFINITION__NONE:
        return isNone();
      case KdeclPackage.RESTRICTION_DEFINITION__EXACTLY:
        return isExactly();
      case KdeclPackage.RESTRICTION_DEFINITION__AT_LEAST:
        return isAtLeast();
      case KdeclPackage.RESTRICTION_DEFINITION__AT_MOST:
        return isAtMost();
      case KdeclPackage.RESTRICTION_DEFINITION__HOWMANY:
        return getHowmany();
      case KdeclPackage.RESTRICTION_DEFINITION__SOURCE:
        return getSource();
      case KdeclPackage.RESTRICTION_DEFINITION__DATA_TYPE:
        return getDataType();
      case KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE:
        return getTraitType();
      case KdeclPackage.RESTRICTION_DEFINITION__SUBJECT:
        return getSubject();
      case KdeclPackage.RESTRICTION_DEFINITION__VALUE:
        return getValue();
      case KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE:
        return getMaxValue();
      case KdeclPackage.RESTRICTION_DEFINITION__PROPERTY:
        return getProperty();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case KdeclPackage.RESTRICTION_DEFINITION__ONLY:
        setOnly((Boolean)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__NONE:
        setNone((Boolean)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__EXACTLY:
        setExactly((Boolean)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__AT_LEAST:
        setAtLeast((Boolean)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__AT_MOST:
        setAtMost((Boolean)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__HOWMANY:
        setHowmany((Integer)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__SOURCE:
        setSource((ConceptDeclaration)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__DATA_TYPE:
        setDataType((DataType)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE:
        setTraitType((ConceptDeclaration)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__SUBJECT:
        setSubject((ConceptDeclaration)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__VALUE:
        setValue((Literal)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE:
        setMaxValue((org.integratedmodelling.kim.kdecl.Number)newValue);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__PROPERTY:
        setProperty((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case KdeclPackage.RESTRICTION_DEFINITION__ONLY:
        setOnly(ONLY_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__NONE:
        setNone(NONE_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__EXACTLY:
        setExactly(EXACTLY_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__AT_LEAST:
        setAtLeast(AT_LEAST_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__AT_MOST:
        setAtMost(AT_MOST_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__HOWMANY:
        setHowmany(HOWMANY_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__SOURCE:
        setSource((ConceptDeclaration)null);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__DATA_TYPE:
        setDataType(DATA_TYPE_EDEFAULT);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE:
        setTraitType((ConceptDeclaration)null);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__SUBJECT:
        setSubject((ConceptDeclaration)null);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__VALUE:
        setValue((Literal)null);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE:
        setMaxValue((org.integratedmodelling.kim.kdecl.Number)null);
        return;
      case KdeclPackage.RESTRICTION_DEFINITION__PROPERTY:
        setProperty(PROPERTY_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case KdeclPackage.RESTRICTION_DEFINITION__ONLY:
        return only != ONLY_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__NONE:
        return none != NONE_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__EXACTLY:
        return exactly != EXACTLY_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__AT_LEAST:
        return atLeast != AT_LEAST_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__AT_MOST:
        return atMost != AT_MOST_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__HOWMANY:
        return howmany != HOWMANY_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__SOURCE:
        return source != null;
      case KdeclPackage.RESTRICTION_DEFINITION__DATA_TYPE:
        return dataType != DATA_TYPE_EDEFAULT;
      case KdeclPackage.RESTRICTION_DEFINITION__TRAIT_TYPE:
        return traitType != null;
      case KdeclPackage.RESTRICTION_DEFINITION__SUBJECT:
        return subject != null;
      case KdeclPackage.RESTRICTION_DEFINITION__VALUE:
        return value != null;
      case KdeclPackage.RESTRICTION_DEFINITION__MAX_VALUE:
        return maxValue != null;
      case KdeclPackage.RESTRICTION_DEFINITION__PROPERTY:
        return PROPERTY_EDEFAULT == null ? property != null : !PROPERTY_EDEFAULT.equals(property);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (only: ");
    result.append(only);
    result.append(", none: ");
    result.append(none);
    result.append(", exactly: ");
    result.append(exactly);
    result.append(", atLeast: ");
    result.append(atLeast);
    result.append(", atMost: ");
    result.append(atMost);
    result.append(", howmany: ");
    result.append(howmany);
    result.append(", dataType: ");
    result.append(dataType);
    result.append(", property: ");
    result.append(property);
    result.append(')');
    return result.toString();
  }

} //RestrictionDefinitionImpl
