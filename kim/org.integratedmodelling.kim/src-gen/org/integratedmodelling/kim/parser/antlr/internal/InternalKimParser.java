package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LOWERCASE_ID", "RULE_UPPERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_INT", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_UPPERCASE_PATH", "RULE_BACKCASE_ID", "RULE_ANNOTATION_ID", "RULE_TEMPLATE_VAR", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'project'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "')'", "'match'", "'metadata'", "'?'", "'*'", "'column'", "'row'", "'='", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'instantiation'", "'termination'", "'context'", "'related'", "'set'", "'integrate'", "'do'", "'then'", "'finally'", "'move'", "'away'", "'for'", "'model'", "'learn'", "'number'", "'object'", "'text'", "'boolean'", "'>'", "'>='", "'<='", "'<'", "'where'", "'=='", "'only'", "'without'", "'!='", "'plus'", "'minus'", "'times'", "'by'", "'namespace'", "'scenario'", "'worldview'", "'language'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'with'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'&'", "'/'", "'.'", "'observe'", "'extends'", "'children'", "'any'", "'per'", "'optional'", "'required'", "'default'", "'when'", "'named'", "'all'", "'down'", "'total'", "'averaged'", "'summed'", "'of'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'linking'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'cooccurrent'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'change'", "'rate'", "'changed'", "'uncertainty'", "'magnitude'", "'level'", "'type'", "'observability'", "'proportion'", "'percentage'", "'ratio'", "'monetary'", "'value'", "'occurrence'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'rescaling'", "'is'", "'equals'", "'core'", "'nothing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'targeting'", "'confers'", "'emerges'", "'creates'", "'applies'", "'links'", "'affects'", "'implies'", "'uses'", "'exactly'", "'at'", "'least'", "'most'", "'more'", "'contains'", "'between'", "'identity'", "'attribute'", "'realm'", "'extent'", "'{'", "'?='", "'error'", "'nodata'", "'missing'", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'@'", "'+'", "'-'", "'l'", "'e'", "'E'", "'AD'", "'CE'", "'BC'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__261=261;
    public static final int RULE_BACKCASE_ID=14;
    public static final int T__260=260;
    public static final int T__142=142;
    public static final int T__263=263;
    public static final int T__141=141;
    public static final int T__262=262;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__258=258;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__257=257;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__259=259;
    public static final int T__133=133;
    public static final int T__254=254;
    public static final int T__132=132;
    public static final int T__253=253;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__256=256;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int T__255=255;
    public static final int T__250=250;
    public static final int RULE_ID=12;
    public static final int T__131=131;
    public static final int T__252=252;
    public static final int T__130=130;
    public static final int T__251=251;
    public static final int RULE_INT=10;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__247=247;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__246=246;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__249=249;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__248=248;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int RULE_TEMPLATE_VAR=16;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__243=243;
    public static final int T__121=121;
    public static final int T__242=242;
    public static final int T__124=124;
    public static final int T__245=245;
    public static final int T__123=123;
    public static final int T__244=244;
    public static final int T__120=120;
    public static final int T__241=241;
    public static final int T__240=240;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=18;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__239=239;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=15;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=5;
    public static final int RULE_ML_COMMENT=17;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=11;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=19;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=20;
    public static final int RULE_LOWERCASE_ID=4;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_LOWERCASE_ID && LA3_0<=RULE_STRING)||(LA3_0>=RULE_EXPR && LA3_0<=RULE_LOWERCASE_DASHID)||LA3_0==RULE_UPPERCASE_PATH||(LA3_0>=29 && LA3_0<=30)||LA3_0==39||LA3_0==117||(LA3_0>=138 && LA3_0<=139)||(LA3_0>=147 && LA3_0<=148)||(LA3_0>=150 && LA3_0<=155)||(LA3_0>=157 && LA3_0<=168)||(LA3_0>=255 && LA3_0<=256)) ) {
                alt3=1;
            }
            else if ( (LA3_0==EOF||LA3_0==RULE_ANNOTATION_ID||(LA3_0>=22 && LA3_0<=25)||(LA3_0>=75 && LA3_0<=80)||(LA3_0>=94 && LA3_0<=96)||LA3_0==100||LA3_0==114||(LA3_0>=172 && LA3_0<=180)||LA3_0==196||(LA3_0>=213 && LA3_0<=216)||(LA3_0>=222 && LA3_0<=253)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=22 && LA2_0<=25)||(LA2_0>=75 && LA2_0<=80)||LA2_0==100||LA2_0==114||(LA2_0>=172 && LA2_0<=180)||LA2_0==196||(LA2_0>=213 && LA2_0<=216)||(LA2_0>=222 && LA2_0<=253)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_model_6_0 = null;

        EObject lv_body_7_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )? ( (lv_model_6_0= ruleMODEL_TYPE ) ) ( (lv_body_7_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==RULE_ANNOTATION_ID) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:326:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:327:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:328:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_5);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:345:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop5:
                    do {
                        int alt5=2;
                        int LA5_0 = input.LA(1);

                        if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                            alt5=1;
                        }


                        switch (alt5) {
                    	case 1 :
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:346:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:347:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_5);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop5;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:365:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )?
            int alt9=2;
            switch ( input.LA(1) ) {
                case 22:
                case 23:
                case 24:
                    {
                    alt9=1;
                    }
                    break;
                case 75:
                    {
                    int LA9_2 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 76:
                    {
                    int LA9_3 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 77:
                    {
                    int LA9_4 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 78:
                    {
                    int LA9_5 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 79:
                    {
                    int LA9_6 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
                case 80:
                    {
                    int LA9_7 = input.LA(2);

                    if ( (synpred13_InternalKim()) ) {
                        alt9=1;
                    }
                    }
                    break;
            }

            switch (alt9) {
                case 1 :
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
                    // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
                    // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
                    loop8:
                    do {
                        int alt8=3;
                        int LA8_0 = input.LA(1);

                        if ( LA8_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                            alt8=1;
                        }
                        else if ( LA8_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }
                        else if ( LA8_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                            alt8=2;
                        }


                        switch (alt8) {
                    	case 1 :
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    {
                    	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
                    	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
                    	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
                    	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    {
                    	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
                    	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
                    	    {
                    	    lv_inactive_3_0=(Token)match(input,22,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(lv_inactive_3_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
                    	      									
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      										if (current==null) {
                    	      											current = createModelElement(grammarAccess.getModelStatementRule());
                    	      										}
                    	      										setWithLastConsumed(current, "inactive", lv_inactive_3_0 != null, "void");
                    	      									
                    	    }

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
                    	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
                    	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
                    	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
                    	    }
                    	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
                    	    {
                    	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
                    	    int alt7=2;
                    	    int LA7_0 = input.LA(1);

                    	    if ( (LA7_0==23) ) {
                    	        alt7=1;
                    	    }
                    	    switch (alt7) {
                    	        case 1 :
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            {
                    	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                    	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                    	            {
                    	            lv_projectPrivate_4_0=(Token)match(input,23,FOLLOW_7); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(lv_projectPrivate_4_0, grammarAccess.getModelStatementAccess().getProjectPrivateProjectKeyword_1_1_0_0());
                    	              										
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              											if (current==null) {
                    	              												current = createModelElement(grammarAccess.getModelStatementRule());
                    	              											}
                    	              											setWithLastConsumed(current, "projectPrivate", lv_projectPrivate_4_0 != null, "project");
                    	              										
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    {
                    	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
                    	    // InternalKim.g:416:11: lv_private_5_0= 'private'
                    	    {
                    	    lv_private_5_0=(Token)match(input,24,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											newLeafNode(lv_private_5_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_1_0());
                    	      										
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElement(grammarAccess.getModelStatementRule());
                    	      											}
                    	      											setWithLastConsumed(current, "private", lv_private_5_0 != null, "private");
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop8;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

                    }
                    break;

            }

            // InternalKim.g:441:3: ( (lv_model_6_0= ruleMODEL_TYPE ) )
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:442:4: (lv_model_6_0= ruleMODEL_TYPE )
            // InternalKim.g:443:5: lv_model_6_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_8);
            lv_model_6_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_6_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:460:3: ( (lv_body_7_0= ruleModelBodyStatement ) )
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            {
            // InternalKim.g:461:4: (lv_body_7_0= ruleModelBodyStatement )
            // InternalKim.g:462:5: lv_body_7_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_7_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_7_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:486:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:486:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:487:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:493:1: ruleDefineStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_defineBody_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:499:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:500:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) ) )
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'define' ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:501:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ANNOTATION_ID) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:502:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:503:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:504:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:521:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop10:
                    do {
                        int alt10=2;
                        int LA10_0 = input.LA(1);

                        if ( (LA10_0==RULE_ANNOTATION_ID) ) {
                            alt10=1;
                        }


                        switch (alt10) {
                    	case 1 :
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:522:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:523:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getDefineStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop10;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,25,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:545:3: ( (lv_defineBody_3_0= ruleDefinitionBody ) )
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            {
            // InternalKim.g:546:4: (lv_defineBody_3_0= ruleDefinitionBody )
            // InternalKim.g:547:5: lv_defineBody_3_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_3_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_3_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:568:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:568:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:569:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:575:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_defineClass_0_0=null;
        Token lv_name_1_1=null;
        Token lv_name_1_2=null;
        Token otherlv_2=null;
        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:581:2: ( ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) ) )
            // InternalKim.g:582:2: ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) )
            {
            // InternalKim.g:582:2: ( ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) ) )
            // InternalKim.g:583:3: ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )? ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) ) otherlv_2= 'as' ( (lv_value_3_0= ruleValue ) )
            {
            // InternalKim.g:583:3: ( (lv_defineClass_0_0= RULE_LOWERCASE_ID ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_LOWERCASE_ID) ) {
                int LA12_1 = input.LA(2);

                if ( ((LA12_1>=RULE_LOWERCASE_ID && LA12_1<=RULE_UPPERCASE_ID)) ) {
                    alt12=1;
                }
            }
            switch (alt12) {
                case 1 :
                    // InternalKim.g:584:4: (lv_defineClass_0_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:584:4: (lv_defineClass_0_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:585:5: lv_defineClass_0_0= RULE_LOWERCASE_ID
                    {
                    lv_defineClass_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_10); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_defineClass_0_0, grammarAccess.getDefinitionBodyAccess().getDefineClassLOWERCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"defineClass",
                      						lv_defineClass_0_0,
                      						"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:601:3: ( ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:602:4: ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) )
            {
            // InternalKim.g:602:4: ( (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID ) )
            // InternalKim.g:603:5: (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:603:5: (lv_name_1_1= RULE_UPPERCASE_ID | lv_name_1_2= RULE_LOWERCASE_ID )
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==RULE_UPPERCASE_ID) ) {
                alt13=1;
            }
            else if ( (LA13_0==RULE_LOWERCASE_ID) ) {
                alt13=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }
            switch (alt13) {
                case 1 :
                    // InternalKim.g:604:6: lv_name_1_1= RULE_UPPERCASE_ID
                    {
                    lv_name_1_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_1, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_1,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:619:6: lv_name_1_2= RULE_LOWERCASE_ID
                    {
                    lv_name_1_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_2, grammarAccess.getDefinitionBodyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDefinitionBodyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;

            }


            }


            }

            otherlv_2=(Token)match(input,26,FOLLOW_12); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getDefinitionBodyAccess().getAsKeyword_2());
              		
            }
            // InternalKim.g:640:3: ( (lv_value_3_0= ruleValue ) )
            // InternalKim.g:641:4: (lv_value_3_0= ruleValue )
            {
            // InternalKim.g:641:4: (lv_value_3_0= ruleValue )
            // InternalKim.g:642:5: lv_value_3_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:663:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:663:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:664:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:670:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_7=null;
        Token lv_name_8_0=null;
        Token otherlv_10=null;
        Token lv_docstring_12_0=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_discretization_22_0=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_34=null;
        Token lv_lookupTableId_36_0=null;
        Token lv_twoway_37_0=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        Token lv_lookupTableId_45_0=null;
        Token otherlv_47=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_concept_5_0 = null;

        EObject lv_observables_9_0 = null;

        EObject lv_observables_11_0 = null;

        EObject lv_dependencies_14_0 = null;

        EObject lv_dependencies_16_0 = null;

        EObject lv_contextualizers_18_0 = null;

        EObject lv_contextualizers_20_0 = null;

        EObject lv_classification_24_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_27_0 = null;

        EObject lv_lookupTableArgs_30_0 = null;

        EObject lv_lookupTableArgs_32_0 = null;

        EObject lv_lookupTable_35_0 = null;

        EObject lv_lookupTableArgs_39_0 = null;

        EObject lv_lookupTableArgs_41_0 = null;

        EObject lv_lookupTable_44_0 = null;

        EObject lv_actions_46_0 = null;

        EObject lv_metadata_48_0 = null;



        	enterRule();

        try {
            // InternalKim.g:676:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? ) )
            // InternalKim.g:677:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? )
            {
            // InternalKim.g:677:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )? )
            // InternalKim.g:678:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )? ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) ) ( (lv_docstring_12_0= RULE_STRING ) )? (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )? (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )? ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )? ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )? ( (lv_actions_46_0= ruleActionSpecification ) )* (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )?
            {
            // InternalKim.g:678:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==27) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalKim.g:679:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:679:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:680:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,27,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", lv_instantiator_0_0 != null, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:692:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )?
            int alt18=2;
            alt18 = dfa18.predict(input);
            switch (alt18) {
                case 1 :
                    // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as'
                    {
                    // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )
                    int alt17=4;
                    alt17 = dfa17.predict(input);
                    switch (alt17) {
                        case 1 :
                            // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_13);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop15:
                            do {
                                int alt15=2;
                                int LA15_0 = input.LA(1);

                                if ( (LA15_0==28) ) {
                                    alt15=1;
                                }


                                switch (alt15) {
                            	case 1 :
                            	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,28,FOLLOW_14); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_13);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop15;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                            {
                            // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                            // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                            {
                            // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                            // InternalKim.g:743:7: lv_number_4_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_number_4_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_4_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_11);
                            lv_concept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt16=2;
                            int LA16_0 = input.LA(1);

                            if ( (LA16_0==29) ) {
                                alt16=1;
                            }
                            else if ( (LA16_0==30) ) {
                                alt16=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 16, 0, input);

                                throw nvae;
                            }
                            switch (alt16) {
                                case 1 :
                                    // InternalKim.g:784:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,29,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:795:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,30,FOLLOW_11); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }

                    otherlv_7=(Token)match(input,26,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:814:3: ( ( (lv_name_8_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_LOWERCASE_ID) ) {
                int LA20_1 = input.LA(2);

                if ( (LA20_1==EOF||LA20_1==RULE_STRING||LA20_1==21||(LA20_1>=31 && LA20_1<=34)||LA20_1==38||(LA20_1>=41 && LA20_1<=42)||(LA20_1>=59 && LA20_1<=61)||(LA20_1>=67 && LA20_1<=72)) ) {
                    alt20=1;
                }
                else if ( (LA20_1==26||LA20_1==39||LA20_1==110||LA20_1==113) ) {
                    alt20=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 20, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA20_0>=RULE_UPPERCASE_ID && LA20_0<=RULE_STRING)||(LA20_0>=RULE_EXPR && LA20_0<=RULE_UPPERCASE_PATH)||LA20_0==RULE_ANNOTATION_ID||(LA20_0>=28 && LA20_0<=30)||LA20_0==39||(LA20_0>=54 && LA20_0<=55)||LA20_0==117||(LA20_0>=138 && LA20_0<=139)||(LA20_0>=147 && LA20_0<=148)||(LA20_0>=150 && LA20_0<=155)||(LA20_0>=157 && LA20_0<=168)||LA20_0==217||(LA20_0>=255 && LA20_0<=256)) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalKim.g:815:4: ( (lv_name_8_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:815:4: ( (lv_name_8_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:816:5: (lv_name_8_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:816:5: (lv_name_8_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:817:6: lv_name_8_0= RULE_LOWERCASE_ID
                    {
                    lv_name_8_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_8_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_8_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:834:4: ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:834:4: ( ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )* )
                    // InternalKim.g:835:5: ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) ) (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )*
                    {
                    // InternalKim.g:835:5: ( (lv_observables_9_0= ruleAnnotatedObservableSemantics ) )
                    // InternalKim.g:836:6: (lv_observables_9_0= ruleAnnotatedObservableSemantics )
                    {
                    // InternalKim.g:836:6: (lv_observables_9_0= ruleAnnotatedObservableSemantics )
                    // InternalKim.g:837:7: lv_observables_9_0= ruleAnnotatedObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_16);
                    lv_observables_9_0=ruleAnnotatedObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_9_0,
                      								"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:854:5: (otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) ) )*
                    loop19:
                    do {
                        int alt19=2;
                        int LA19_0 = input.LA(1);

                        if ( (LA19_0==28) ) {
                            alt19=1;
                        }


                        switch (alt19) {
                    	case 1 :
                    	    // InternalKim.g:855:6: otherlv_10= ',' ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) )
                    	    {
                    	    otherlv_10=(Token)match(input,28,FOLLOW_8); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_10, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:859:6: ( (lv_observables_11_0= ruleAnnotatedObservableSemantics ) )
                    	    // InternalKim.g:860:7: (lv_observables_11_0= ruleAnnotatedObservableSemantics )
                    	    {
                    	    // InternalKim.g:860:7: (lv_observables_11_0= ruleAnnotatedObservableSemantics )
                    	    // InternalKim.g:861:8: lv_observables_11_0= ruleAnnotatedObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesAnnotatedObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_observables_11_0=ruleAnnotatedObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_11_0,
                    	      									"org.integratedmodelling.kim.Kim.AnnotatedObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop19;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:881:3: ( (lv_docstring_12_0= RULE_STRING ) )?
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==RULE_STRING) ) {
                alt21=1;
            }
            switch (alt21) {
                case 1 :
                    // InternalKim.g:882:4: (lv_docstring_12_0= RULE_STRING )
                    {
                    // InternalKim.g:882:4: (lv_docstring_12_0= RULE_STRING )
                    // InternalKim.g:883:5: lv_docstring_12_0= RULE_STRING
                    {
                    lv_docstring_12_0=(Token)match(input,RULE_STRING,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_12_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:899:3: (otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )* )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==31) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // InternalKim.g:900:4: otherlv_13= 'observing' ( (lv_dependencies_14_0= ruleDependency ) ) (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    {
                    otherlv_13=(Token)match(input,31,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_13, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:904:4: ( (lv_dependencies_14_0= ruleDependency ) )
                    // InternalKim.g:905:5: (lv_dependencies_14_0= ruleDependency )
                    {
                    // InternalKim.g:905:5: (lv_dependencies_14_0= ruleDependency )
                    // InternalKim.g:906:6: lv_dependencies_14_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_19);
                    lv_dependencies_14_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_14_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:923:4: (otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) ) )*
                    loop22:
                    do {
                        int alt22=2;
                        int LA22_0 = input.LA(1);

                        if ( (LA22_0==28) ) {
                            alt22=1;
                        }


                        switch (alt22) {
                    	case 1 :
                    	    // InternalKim.g:924:5: otherlv_15= ',' ( (lv_dependencies_16_0= ruleDependency ) )
                    	    {
                    	    otherlv_15=(Token)match(input,28,FOLLOW_18); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_15, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:928:5: ( (lv_dependencies_16_0= ruleDependency ) )
                    	    // InternalKim.g:929:6: (lv_dependencies_16_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:929:6: (lv_dependencies_16_0= ruleDependency )
                    	    // InternalKim.g:930:7: lv_dependencies_16_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_19);
                    	    lv_dependencies_16_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_16_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop22;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:949:3: (otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )* )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==32) ) {
                alt25=1;
            }
            switch (alt25) {
                case 1 :
                    // InternalKim.g:950:4: otherlv_17= 'using' ( (lv_contextualizers_18_0= ruleValueExecution ) ) (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    {
                    otherlv_17=(Token)match(input,32,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_17, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:954:4: ( (lv_contextualizers_18_0= ruleValueExecution ) )
                    // InternalKim.g:955:5: (lv_contextualizers_18_0= ruleValueExecution )
                    {
                    // InternalKim.g:955:5: (lv_contextualizers_18_0= ruleValueExecution )
                    // InternalKim.g:956:6: lv_contextualizers_18_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_21);
                    lv_contextualizers_18_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_18_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:973:4: (otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) ) )*
                    loop24:
                    do {
                        int alt24=2;
                        int LA24_0 = input.LA(1);

                        if ( (LA24_0==28) ) {
                            alt24=1;
                        }


                        switch (alt24) {
                    	case 1 :
                    	    // InternalKim.g:974:5: otherlv_19= ',' ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_19=(Token)match(input,28,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_19, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:978:5: ( (lv_contextualizers_20_0= ruleValueExecution ) )
                    	    // InternalKim.g:979:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:979:6: (lv_contextualizers_20_0= ruleValueExecution )
                    	    // InternalKim.g:980:7: lv_contextualizers_20_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_21);
                    	    lv_contextualizers_20_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_20_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop24;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:999:3: ( (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( ((LA28_0>=33 && LA28_0<=34)) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalKim.g:1000:4: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) ) ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:1000:4: (otherlv_21= 'classified' | ( (lv_discretization_22_0= 'discretized' ) ) )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==33) ) {
                        alt26=1;
                    }
                    else if ( (LA26_0==34) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalKim.g:1001:5: otherlv_21= 'classified'
                            {
                            otherlv_21=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_21, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1006:5: ( (lv_discretization_22_0= 'discretized' ) )
                            {
                            // InternalKim.g:1006:5: ( (lv_discretization_22_0= 'discretized' ) )
                            // InternalKim.g:1007:6: (lv_discretization_22_0= 'discretized' )
                            {
                            // InternalKim.g:1007:6: (lv_discretization_22_0= 'discretized' )
                            // InternalKim.g:1008:7: lv_discretization_22_0= 'discretized'
                            {
                            lv_discretization_22_0=(Token)match(input,34,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_22_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", lv_discretization_22_0 != null, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1021:4: ( (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) ) | (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) ) )
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==35) ) {
                        alt27=1;
                    }
                    else if ( (LA27_0==36) ) {
                        alt27=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 27, 0, input);

                        throw nvae;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalKim.g:1022:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:1022:5: (otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) ) )
                            // InternalKim.g:1023:6: otherlv_23= 'into' ( (lv_classification_24_0= ruleClassification ) )
                            {
                            otherlv_23=(Token)match(input,35,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:1027:6: ( (lv_classification_24_0= ruleClassification ) )
                            // InternalKim.g:1028:7: (lv_classification_24_0= ruleClassification )
                            {
                            // InternalKim.g:1028:7: (lv_classification_24_0= ruleClassification )
                            // InternalKim.g:1029:8: lv_classification_24_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classification_24_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_24_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1048:5: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:1048:5: (otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) ) )
                            // InternalKim.g:1049:6: otherlv_25= 'according' otherlv_26= 'to' ( (lv_classificationProperty_27_0= rulePropertyId ) )
                            {
                            otherlv_25=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_25, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_26=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:1057:6: ( (lv_classificationProperty_27_0= rulePropertyId ) )
                            // InternalKim.g:1058:7: (lv_classificationProperty_27_0= rulePropertyId )
                            {
                            // InternalKim.g:1058:7: (lv_classificationProperty_27_0= rulePropertyId )
                            // InternalKim.g:1059:8: lv_classificationProperty_27_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_24);
                            lv_classificationProperty_27_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_27_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1079:3: ( (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) ) | ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) ) )?
            int alt34=3;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==38) ) {
                alt34=1;
            }
            else if ( (LA34_0==41) ) {
                alt34=2;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1080:4: (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )
                    {
                    // InternalKim.g:1080:4: (otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) ) )
                    // InternalKim.g:1081:5: otherlv_28= 'lookup' (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )? otherlv_34= 'into' ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) )
                    {
                    otherlv_28=(Token)match(input,38,FOLLOW_27); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_28, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0_0());
                      				
                    }
                    // InternalKim.g:1085:5: (otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')' )?
                    int alt30=2;
                    int LA30_0 = input.LA(1);

                    if ( (LA30_0==39) ) {
                        alt30=1;
                    }
                    switch (alt30) {
                        case 1 :
                            // InternalKim.g:1086:6: otherlv_29= '(' ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) ) (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )* otherlv_33= ')'
                            {
                            otherlv_29=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_0_1_0());
                              					
                            }
                            // InternalKim.g:1090:6: ( (lv_lookupTableArgs_30_0= ruleLookupTableArgument ) )
                            // InternalKim.g:1091:7: (lv_lookupTableArgs_30_0= ruleLookupTableArgument )
                            {
                            // InternalKim.g:1091:7: (lv_lookupTableArgs_30_0= ruleLookupTableArgument )
                            // InternalKim.g:1092:8: lv_lookupTableArgs_30_0= ruleLookupTableArgument
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentParserRuleCall_7_0_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_29);
                            lv_lookupTableArgs_30_0=ruleLookupTableArgument();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"lookupTableArgs",
                              									lv_lookupTableArgs_30_0,
                              									"org.integratedmodelling.kim.Kim.LookupTableArgument");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:1109:6: (otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) ) )*
                            loop29:
                            do {
                                int alt29=2;
                                int LA29_0 = input.LA(1);

                                if ( (LA29_0==28) ) {
                                    alt29=1;
                                }


                                switch (alt29) {
                            	case 1 :
                            	    // InternalKim.g:1110:7: otherlv_31= ',' ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) )
                            	    {
                            	    otherlv_31=(Token)match(input,28,FOLLOW_28); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_31, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_0_1_2_0());
                            	      						
                            	    }
                            	    // InternalKim.g:1114:7: ( (lv_lookupTableArgs_32_0= ruleLookupTableArgument ) )
                            	    // InternalKim.g:1115:8: (lv_lookupTableArgs_32_0= ruleLookupTableArgument )
                            	    {
                            	    // InternalKim.g:1115:8: (lv_lookupTableArgs_32_0= ruleLookupTableArgument )
                            	    // InternalKim.g:1116:9: lv_lookupTableArgs_32_0= ruleLookupTableArgument
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentParserRuleCall_7_0_1_2_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_29);
                            	    lv_lookupTableArgs_32_0=ruleLookupTableArgument();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"lookupTableArgs",
                            	      										lv_lookupTableArgs_32_0,
                            	      										"org.integratedmodelling.kim.Kim.LookupTableArgument");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop29;
                                }
                            } while (true);

                            otherlv_33=(Token)match(input,40,FOLLOW_30); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_33, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_0_1_3());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_34=(Token)match(input,35,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_0_2());
                      				
                    }
                    // InternalKim.g:1143:5: ( ( (lv_lookupTable_35_0= ruleTable ) ) | ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) ) )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==RULE_LOWERCASE_ID||LA31_0==RULE_STRING||(LA31_0>=RULE_EXPR && LA31_0<=RULE_LOWERCASE_DASHID)||LA31_0==RULE_UPPERCASE_PATH||(LA31_0>=29 && LA31_0<=30)||LA31_0==39||LA31_0==44||LA31_0==47||(LA31_0>=53 && LA31_0<=54)||LA31_0==58||(LA31_0>=81 && LA31_0<=84)||LA31_0==89||(LA31_0>=138 && LA31_0<=139)||(LA31_0>=147 && LA31_0<=148)||(LA31_0>=150 && LA31_0<=155)||(LA31_0>=157 && LA31_0<=168)||(LA31_0>=255 && LA31_0<=256)) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==RULE_UPPERCASE_ID) ) {
                        int LA31_2 = input.LA(2);

                        if ( (LA31_2==110||LA31_2==113) ) {
                            alt31=1;
                        }
                        else if ( (LA31_2==EOF||LA31_2==21||LA31_2==42||(LA31_2>=59 && LA31_2<=61)||(LA31_2>=67 && LA31_2<=72)) ) {
                            alt31=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 31, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalKim.g:1144:6: ( (lv_lookupTable_35_0= ruleTable ) )
                            {
                            // InternalKim.g:1144:6: ( (lv_lookupTable_35_0= ruleTable ) )
                            // InternalKim.g:1145:7: (lv_lookupTable_35_0= ruleTable )
                            {
                            // InternalKim.g:1145:7: (lv_lookupTable_35_0= ruleTable )
                            // InternalKim.g:1146:8: lv_lookupTable_35_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_0_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_32);
                            lv_lookupTable_35_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"lookupTable",
                              									lv_lookupTable_35_0,
                              									"org.integratedmodelling.kim.Kim.Table");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1164:6: ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1164:6: ( (lv_lookupTableId_36_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1165:7: (lv_lookupTableId_36_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1165:7: (lv_lookupTableId_36_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1166:8: lv_lookupTableId_36_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_36_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_lookupTableId_36_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_0_3_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"lookupTableId",
                              									lv_lookupTableId_36_0,
                              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1185:4: ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) )
                    {
                    // InternalKim.g:1185:4: ( ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) ) )
                    // InternalKim.g:1186:5: ( (lv_twoway_37_0= 'match' ) ) (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )? otherlv_43= 'to' ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) )
                    {
                    // InternalKim.g:1186:5: ( (lv_twoway_37_0= 'match' ) )
                    // InternalKim.g:1187:6: (lv_twoway_37_0= 'match' )
                    {
                    // InternalKim.g:1187:6: (lv_twoway_37_0= 'match' )
                    // InternalKim.g:1188:7: lv_twoway_37_0= 'match'
                    {
                    lv_twoway_37_0=(Token)match(input,41,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_twoway_37_0, grammarAccess.getModelBodyStatementAccess().getTwowayMatchKeyword_7_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      							}
                      							setWithLastConsumed(current, "twoway", lv_twoway_37_0 != null, "match");
                      						
                    }

                    }


                    }

                    // InternalKim.g:1200:5: (otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')' )?
                    int alt32=2;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==39) ) {
                        alt32=1;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalKim.g:1201:6: otherlv_38= '(' ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) ) otherlv_40= ',' ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) ) otherlv_42= ')'
                            {
                            otherlv_38=(Token)match(input,39,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_38, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_1_0());
                              					
                            }
                            // InternalKim.g:1205:6: ( (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified ) )
                            // InternalKim.g:1206:7: (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified )
                            {
                            // InternalKim.g:1206:7: (lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified )
                            // InternalKim.g:1207:8: lv_lookupTableArgs_39_0= ruleLookupTableArgumentQualified
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentQualifiedParserRuleCall_7_1_1_1_0());
                              							
                            }
                            pushFollow(FOLLOW_35);
                            lv_lookupTableArgs_39_0=ruleLookupTableArgumentQualified();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"lookupTableArgs",
                              									lv_lookupTableArgs_39_0,
                              									"org.integratedmodelling.kim.Kim.LookupTableArgumentQualified");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_40=(Token)match(input,28,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_40, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_1_2());
                              					
                            }
                            // InternalKim.g:1228:6: ( (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified ) )
                            // InternalKim.g:1229:7: (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified )
                            {
                            // InternalKim.g:1229:7: (lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified )
                            // InternalKim.g:1230:8: lv_lookupTableArgs_41_0= ruleLookupTableArgumentQualified
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLookupTableArgumentQualifiedParserRuleCall_7_1_1_3_0());
                              							
                            }
                            pushFollow(FOLLOW_36);
                            lv_lookupTableArgs_41_0=ruleLookupTableArgumentQualified();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"lookupTableArgs",
                              									lv_lookupTableArgs_41_0,
                              									"org.integratedmodelling.kim.Kim.LookupTableArgumentQualified");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_42=(Token)match(input,40,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_42, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_1_4());
                              					
                            }

                            }
                            break;

                    }

                    otherlv_43=(Token)match(input,37,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_43, grammarAccess.getModelBodyStatementAccess().getToKeyword_7_1_2());
                      				
                    }
                    // InternalKim.g:1256:5: ( ( (lv_lookupTable_44_0= ruleTwoWayTable ) ) | ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==RULE_LOWERCASE_ID||LA33_0==RULE_STRING||(LA33_0>=RULE_EXPR && LA33_0<=RULE_LOWERCASE_DASHID)||LA33_0==RULE_UPPERCASE_PATH||(LA33_0>=29 && LA33_0<=30)||LA33_0==39||LA33_0==44||LA33_0==47||(LA33_0>=53 && LA33_0<=54)||LA33_0==58||(LA33_0>=81 && LA33_0<=84)||LA33_0==89||(LA33_0>=138 && LA33_0<=139)||(LA33_0>=147 && LA33_0<=148)||(LA33_0>=150 && LA33_0<=155)||(LA33_0>=157 && LA33_0<=168)||(LA33_0>=255 && LA33_0<=256)) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==RULE_UPPERCASE_ID) ) {
                        int LA33_2 = input.LA(2);

                        if ( (LA33_2==110||LA33_2==113) ) {
                            alt33=1;
                        }
                        else if ( (LA33_2==EOF||LA33_2==21||LA33_2==42||(LA33_2>=59 && LA33_2<=61)||(LA33_2>=67 && LA33_2<=72)) ) {
                            alt33=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 33, 2, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalKim.g:1257:6: ( (lv_lookupTable_44_0= ruleTwoWayTable ) )
                            {
                            // InternalKim.g:1257:6: ( (lv_lookupTable_44_0= ruleTwoWayTable ) )
                            // InternalKim.g:1258:7: (lv_lookupTable_44_0= ruleTwoWayTable )
                            {
                            // InternalKim.g:1258:7: (lv_lookupTable_44_0= ruleTwoWayTable )
                            // InternalKim.g:1259:8: lv_lookupTable_44_0= ruleTwoWayTable
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTwoWayTableParserRuleCall_7_1_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_32);
                            lv_lookupTable_44_0=ruleTwoWayTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"lookupTable",
                              									lv_lookupTable_44_0,
                              									"org.integratedmodelling.kim.Kim.TwoWayTable");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1277:6: ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) )
                            {
                            // InternalKim.g:1277:6: ( (lv_lookupTableId_45_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:1278:7: (lv_lookupTableId_45_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:1278:7: (lv_lookupTableId_45_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:1279:8: lv_lookupTableId_45_0= RULE_UPPERCASE_ID
                            {
                            lv_lookupTableId_45_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_32); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_lookupTableId_45_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdUPPERCASE_IDTerminalRuleCall_7_1_3_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"lookupTableId",
                              									lv_lookupTableId_45_0,
                              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:1298:3: ( (lv_actions_46_0= ruleActionSpecification ) )*
            loop35:
            do {
                int alt35=2;
                int LA35_0 = input.LA(1);

                if ( ((LA35_0>=59 && LA35_0<=61)||(LA35_0>=67 && LA35_0<=72)) ) {
                    alt35=1;
                }


                switch (alt35) {
            	case 1 :
            	    // InternalKim.g:1299:4: (lv_actions_46_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1299:4: (lv_actions_46_0= ruleActionSpecification )
            	    // InternalKim.g:1300:5: lv_actions_46_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_32);
            	    lv_actions_46_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_46_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop35;
                }
            } while (true);

            // InternalKim.g:1317:3: (otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==42) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // InternalKim.g:1318:4: otherlv_47= 'metadata' ( (lv_metadata_48_0= ruleMap ) )
                    {
                    otherlv_47=(Token)match(input,42,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_0());
                      			
                    }
                    // InternalKim.g:1322:4: ( (lv_metadata_48_0= ruleMap ) )
                    // InternalKim.g:1323:5: (lv_metadata_48_0= ruleMap )
                    {
                    // InternalKim.g:1323:5: (lv_metadata_48_0= ruleMap )
                    // InternalKim.g:1324:6: lv_metadata_48_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMapParserRuleCall_9_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_metadata_48_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_48_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleLookupTableArgument"
    // InternalKim.g:1346:1: entryRuleLookupTableArgument returns [EObject current=null] : iv_ruleLookupTableArgument= ruleLookupTableArgument EOF ;
    public final EObject entryRuleLookupTableArgument() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTableArgument = null;


        try {
            // InternalKim.g:1346:60: (iv_ruleLookupTableArgument= ruleLookupTableArgument EOF )
            // InternalKim.g:1347:2: iv_ruleLookupTableArgument= ruleLookupTableArgument EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTableArgument=ruleLookupTableArgument();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTableArgument; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTableArgument"


    // $ANTLR start "ruleLookupTableArgument"
    // InternalKim.g:1353:1: ruleLookupTableArgument returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) ) ;
    public final EObject ruleLookupTableArgument() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        EObject lv_concept_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1359:2: ( ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) ) )
            // InternalKim.g:1360:2: ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
            {
            // InternalKim.g:1360:2: ( ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
            int alt38=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA38_1 = input.LA(2);

                if ( (LA38_1==110||LA38_1==113) ) {
                    alt38=2;
                }
                else if ( (LA38_1==EOF||LA38_1==28||LA38_1==40) ) {
                    alt38=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;
                }
                }
                break;
            case 43:
            case 44:
                {
                alt38=1;
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 39:
            case 138:
            case 139:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
                {
                alt38=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalKim.g:1361:3: ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) )
                    {
                    // InternalKim.g:1361:3: ( ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) ) )
                    // InternalKim.g:1362:4: ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) )
                    {
                    // InternalKim.g:1362:4: ( (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' ) )
                    // InternalKim.g:1363:5: (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' )
                    {
                    // InternalKim.g:1363:5: (lv_id_0_1= RULE_LOWERCASE_ID | lv_id_0_2= '?' | lv_id_0_3= '*' )
                    int alt37=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt37=1;
                        }
                        break;
                    case 43:
                        {
                        alt37=2;
                        }
                        break;
                    case 44:
                        {
                        alt37=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 37, 0, input);

                        throw nvae;
                    }

                    switch (alt37) {
                        case 1 :
                            // InternalKim.g:1364:6: lv_id_0_1= RULE_LOWERCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getLookupTableArgumentAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLookupTableArgumentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1379:6: lv_id_0_2= '?'
                            {
                            lv_id_0_2=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getLookupTableArgumentAccess().getIdQuestionMarkKeyword_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLookupTableArgumentRule());
                              						}
                              						setWithLastConsumed(current, "id", lv_id_0_2, null);
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:1390:6: lv_id_0_3= '*'
                            {
                            lv_id_0_3=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getLookupTableArgumentAccess().getIdAsteriskKeyword_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLookupTableArgumentRule());
                              						}
                              						setWithLastConsumed(current, "id", lv_id_0_3, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1404:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1404:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1405:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1405:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:1406:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableArgumentAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableArgumentRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTableArgument"


    // $ANTLR start "entryRuleLookupTableArgumentQualified"
    // InternalKim.g:1427:1: entryRuleLookupTableArgumentQualified returns [EObject current=null] : iv_ruleLookupTableArgumentQualified= ruleLookupTableArgumentQualified EOF ;
    public final EObject entryRuleLookupTableArgumentQualified() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTableArgumentQualified = null;


        try {
            // InternalKim.g:1427:69: (iv_ruleLookupTableArgumentQualified= ruleLookupTableArgumentQualified EOF )
            // InternalKim.g:1428:2: iv_ruleLookupTableArgumentQualified= ruleLookupTableArgumentQualified EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableArgumentQualifiedRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTableArgumentQualified=ruleLookupTableArgumentQualified();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTableArgumentQualified; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTableArgumentQualified"


    // $ANTLR start "ruleLookupTableArgumentQualified"
    // InternalKim.g:1434:1: ruleLookupTableArgumentQualified returns [EObject current=null] : ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) ) ;
    public final EObject ruleLookupTableArgumentQualified() throws RecognitionException {
        EObject current = null;

        Token lv_key_0_1=null;
        Token lv_key_0_2=null;
        Token otherlv_1=null;
        Token lv_id_2_0=null;
        Token lv_key_3_1=null;
        Token lv_key_3_2=null;
        Token otherlv_4=null;
        EObject lv_concept_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1440:2: ( ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) ) )
            // InternalKim.g:1441:2: ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) )
            {
            // InternalKim.g:1441:2: ( ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) ) | ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) ) )
            int alt43=2;
            switch ( input.LA(1) ) {
            case 45:
                {
                int LA43_1 = input.LA(2);

                if ( (LA43_1==47) ) {
                    int LA43_5 = input.LA(3);

                    if ( (LA43_5==RULE_UPPERCASE_ID||LA43_5==RULE_CAMELCASE_ID||LA43_5==RULE_LOWERCASE_DASHID||LA43_5==RULE_UPPERCASE_PATH||LA43_5==39||(LA43_5>=138 && LA43_5<=139)||(LA43_5>=147 && LA43_5<=148)||(LA43_5>=150 && LA43_5<=155)||(LA43_5>=157 && LA43_5<=168)) ) {
                        alt43=2;
                    }
                    else if ( (LA43_5==RULE_LOWERCASE_ID) ) {
                        int LA43_3 = input.LA(4);

                        if ( (LA43_3==EOF||LA43_3==28||LA43_3==40) ) {
                            alt43=1;
                        }
                        else if ( (LA43_3==110||LA43_3==113) ) {
                            alt43=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 3, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;
                }
                }
                break;
            case 46:
                {
                int LA43_2 = input.LA(2);

                if ( (LA43_2==47) ) {
                    int LA43_5 = input.LA(3);

                    if ( (LA43_5==RULE_UPPERCASE_ID||LA43_5==RULE_CAMELCASE_ID||LA43_5==RULE_LOWERCASE_DASHID||LA43_5==RULE_UPPERCASE_PATH||LA43_5==39||(LA43_5>=138 && LA43_5<=139)||(LA43_5>=147 && LA43_5<=148)||(LA43_5>=150 && LA43_5<=155)||(LA43_5>=157 && LA43_5<=168)) ) {
                        alt43=2;
                    }
                    else if ( (LA43_5==RULE_LOWERCASE_ID) ) {
                        int LA43_3 = input.LA(4);

                        if ( (LA43_3==EOF||LA43_3==28||LA43_3==40) ) {
                            alt43=1;
                        }
                        else if ( (LA43_3==110||LA43_3==113) ) {
                            alt43=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 43, 3, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 43, 5, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                int LA43_3 = input.LA(2);

                if ( (LA43_3==EOF||LA43_3==28||LA43_3==40) ) {
                    alt43=1;
                }
                else if ( (LA43_3==110||LA43_3==113) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 39:
            case 138:
            case 139:
            case 147:
            case 148:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
                {
                alt43=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }

            switch (alt43) {
                case 1 :
                    // InternalKim.g:1442:3: ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:1442:3: ( ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:1443:4: ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )? ( (lv_id_2_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:1443:4: ( ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '=' )?
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( ((LA40_0>=45 && LA40_0<=46)) ) {
                        alt40=1;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1444:5: ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) ) otherlv_1= '='
                            {
                            // InternalKim.g:1444:5: ( ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) ) )
                            // InternalKim.g:1445:6: ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) )
                            {
                            // InternalKim.g:1445:6: ( (lv_key_0_1= 'column' | lv_key_0_2= 'row' ) )
                            // InternalKim.g:1446:7: (lv_key_0_1= 'column' | lv_key_0_2= 'row' )
                            {
                            // InternalKim.g:1446:7: (lv_key_0_1= 'column' | lv_key_0_2= 'row' )
                            int alt39=2;
                            int LA39_0 = input.LA(1);

                            if ( (LA39_0==45) ) {
                                alt39=1;
                            }
                            else if ( (LA39_0==46) ) {
                                alt39=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 39, 0, input);

                                throw nvae;
                            }
                            switch (alt39) {
                                case 1 :
                                    // InternalKim.g:1447:8: lv_key_0_1= 'column'
                                    {
                                    lv_key_0_1=(Token)match(input,45,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_0_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyColumnKeyword_0_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_0_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1458:8: lv_key_0_2= 'row'
                                    {
                                    lv_key_0_2=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_0_2, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyRowKeyword_0_0_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_0_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_1=(Token)match(input,47,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getEqualsSignKeyword_0_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1476:4: ( (lv_id_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:1477:5: (lv_id_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:1477:5: (lv_id_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:1478:6: lv_id_2_0= RULE_LOWERCASE_ID
                    {
                    lv_id_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_id_2_0, grammarAccess.getLookupTableArgumentQualifiedAccess().getIdLOWERCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"id",
                      							lv_id_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1496:3: ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:1496:3: ( ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
                    // InternalKim.g:1497:4: ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )? ( (lv_concept_5_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1497:4: ( ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '=' )?
                    int alt42=2;
                    int LA42_0 = input.LA(1);

                    if ( ((LA42_0>=45 && LA42_0<=46)) ) {
                        alt42=1;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalKim.g:1498:5: ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) ) otherlv_4= '='
                            {
                            // InternalKim.g:1498:5: ( ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) ) )
                            // InternalKim.g:1499:6: ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) )
                            {
                            // InternalKim.g:1499:6: ( (lv_key_3_1= 'column' | lv_key_3_2= 'row' ) )
                            // InternalKim.g:1500:7: (lv_key_3_1= 'column' | lv_key_3_2= 'row' )
                            {
                            // InternalKim.g:1500:7: (lv_key_3_1= 'column' | lv_key_3_2= 'row' )
                            int alt41=2;
                            int LA41_0 = input.LA(1);

                            if ( (LA41_0==45) ) {
                                alt41=1;
                            }
                            else if ( (LA41_0==46) ) {
                                alt41=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 41, 0, input);

                                throw nvae;
                            }
                            switch (alt41) {
                                case 1 :
                                    // InternalKim.g:1501:8: lv_key_3_1= 'column'
                                    {
                                    lv_key_3_1=(Token)match(input,45,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_3_1, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyColumnKeyword_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_3_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1512:8: lv_key_3_2= 'row'
                                    {
                                    lv_key_3_2=(Token)match(input,46,FOLLOW_38); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_key_3_2, grammarAccess.getLookupTableArgumentQualifiedAccess().getKeyRowKeyword_1_0_0_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getLookupTableArgumentQualifiedRule());
                                      								}
                                      								setWithLastConsumed(current, "key", lv_key_3_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            otherlv_4=(Token)match(input,47,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getLookupTableArgumentQualifiedAccess().getEqualsSignKeyword_1_0_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1530:4: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1531:5: (lv_concept_5_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1531:5: (lv_concept_5_0= ruleConceptDeclaration )
                    // InternalKim.g:1532:6: lv_concept_5_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLookupTableArgumentQualifiedAccess().getConceptConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_5_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLookupTableArgumentQualifiedRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_5_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTableArgumentQualified"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1554:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1554:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1555:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1561:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1567:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1568:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1568:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1569:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1569:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1570:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1570:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1571:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1588:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==28) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalKim.g:1589:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1589:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1590:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1596:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1597:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1597:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1598:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1620:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1620:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1621:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1627:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1633:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1634:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1634:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1635:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1635:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1636:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1636:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1637:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_41);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1654:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt46=3;
            int LA46_0 = input.LA(1);

            if ( (LA46_0==48) ) {
                alt46=1;
            }
            else if ( ((LA46_0>=49 && LA46_0<=50)) ) {
                alt46=2;
            }
            switch (alt46) {
                case 1 :
                    // InternalKim.g:1655:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1655:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1656:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1656:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1657:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,48,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", lv_otherwise_1_0 != null, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1670:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1670:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1671:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1671:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==49) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==50) ) {
                        alt45=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:1672:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,49,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1677:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1677:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1678:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1678:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1679:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,50,FOLLOW_42); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", lv_negated_3_0 != null, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1692:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1693:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1693:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1694:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1717:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1717:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1718:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1724:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1730:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1731:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1731:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt51=10;
            alt51 = dfa51.predict(input);
            switch (alt51) {
                case 1 :
                    // InternalKim.g:1732:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1732:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt47=2;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==29) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==30) ) {
                        alt47=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 47, 0, input);

                        throw nvae;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalKim.g:1733:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1733:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1734:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1734:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1735:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1748:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1748:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1749:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1749:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1750:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1767:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1784:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt48=3;
                    int LA48_0 = input.LA(1);

                    if ( (LA48_0==51) ) {
                        alt48=1;
                    }
                    else if ( (LA48_0==52) ) {
                        alt48=2;
                    }
                    switch (alt48) {
                        case 1 :
                            // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1787:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1800:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1805:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1806:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1812:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1813:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1817:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1818:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1835:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt49=3;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==51) ) {
                        alt49=1;
                    }
                    else if ( (LA49_0==52) ) {
                        alt49=2;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1838:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1851:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1860:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1878:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1878:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1879:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,53,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1883:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1884:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1884:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1885:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1904:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1904:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1905:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1905:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1906:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1925:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1944:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1948:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1950:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1967:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==28) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1969:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1975:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1977:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2001:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2001:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:2002:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:2002:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2003:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2003:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:2004:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2021:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:2022:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:2022:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:2023:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2042:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:2042:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:2043:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:2043:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:2044:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2057:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:2057:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:2058:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:2058:4: (lv_star_22_0= '*' )
                    // InternalKim.g:2059:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", lv_star_22_0 != null, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithIdNoSet"
    // InternalKim.g:2075:1: entryRuleClassifierRHSWithIdNoSet returns [EObject current=null] : iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF ;
    public final EObject entryRuleClassifierRHSWithIdNoSet() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithIdNoSet = null;


        try {
            // InternalKim.g:2075:65: (iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF )
            // InternalKim.g:2076:2: iv_ruleClassifierRHSWithIdNoSet= ruleClassifierRHSWithIdNoSet EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithIdNoSet=ruleClassifierRHSWithIdNoSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithIdNoSet; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithIdNoSet"


    // $ANTLR start "ruleClassifierRHSWithIdNoSet"
    // InternalKim.g:2082:1: ruleClassifierRHSWithIdNoSet returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithIdNoSet() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token lv_string_10_0=null;
        Token lv_id_12_1=null;
        Token lv_nodata_15_0=null;
        Token lv_star_16_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_concept_11_0 = null;

        AntlrDatatypeRuleToken lv_id_12_2 = null;

        EObject lv_op_13_0 = null;

        EObject lv_expression_14_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2088:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) ) )
            // InternalKim.g:2089:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )
            {
            // InternalKim.g:2089:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )
            int alt56=9;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalKim.g:2090:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2090:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( (LA52_0==29) ) {
                        alt52=1;
                    }
                    else if ( (LA52_0==30) ) {
                        alt52=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 52, 0, input);

                        throw nvae;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalKim.g:2091:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2091:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2092:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2092:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2093:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2106:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2106:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2107:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2107:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2108:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2122:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2122:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2123:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2123:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2124:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2124:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2125:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2142:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt53=3;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==51) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==52) ) {
                        alt53=2;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalKim.g:2143:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2143:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2144:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2144:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2145:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2158:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2163:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2164:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdNoSetAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2170:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2171:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2175:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2176:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2193:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt54=3;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==51) ) {
                        alt54=1;
                    }
                    else if ( (LA54_0==52) ) {
                        alt54=2;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalKim.g:2194:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2194:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2195:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2195:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2196:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2209:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdNoSetAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2216:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2216:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2217:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2217:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2218:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2236:3: ( (lv_string_10_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2236:3: ( (lv_string_10_0= RULE_STRING ) )
                    // InternalKim.g:2237:4: (lv_string_10_0= RULE_STRING )
                    {
                    // InternalKim.g:2237:4: (lv_string_10_0= RULE_STRING )
                    // InternalKim.g:2238:5: lv_string_10_0= RULE_STRING
                    {
                    lv_string_10_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_10_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
                    // InternalKim.g:2257:5: lv_concept_11_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_11_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_11_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
                    // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
                    {
                    // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
                    // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
                    {
                    // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
                    int alt55=2;
                    alt55 = dfa55.predict(input);
                    switch (alt55) {
                        case 1 :
                            // InternalKim.g:2278:6: lv_id_12_1= RULE_LOWERCASE_ID
                            {
                            lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_12_1, grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdLOWERCASE_IDTerminalRuleCall_5_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_12_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2293:6: lv_id_12_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_12_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_12_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2312:3: ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2312:3: ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) )
                    // InternalKim.g:2313:4: ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) )
                    {
                    // InternalKim.g:2313:4: ( (lv_op_13_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2314:5: (lv_op_13_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2314:5: (lv_op_13_0= ruleREL_OPERATOR )
                    // InternalKim.g:2315:6: lv_op_13_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_13_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_13_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2332:4: ( (lv_expression_14_0= ruleNumber ) )
                    // InternalKim.g:2333:5: (lv_expression_14_0= ruleNumber )
                    {
                    // InternalKim.g:2333:5: (lv_expression_14_0= ruleNumber )
                    // InternalKim.g:2334:6: lv_expression_14_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_14_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_14_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2353:3: ( (lv_nodata_15_0= 'unknown' ) )
                    {
                    // InternalKim.g:2353:3: ( (lv_nodata_15_0= 'unknown' ) )
                    // InternalKim.g:2354:4: (lv_nodata_15_0= 'unknown' )
                    {
                    // InternalKim.g:2354:4: (lv_nodata_15_0= 'unknown' )
                    // InternalKim.g:2355:5: lv_nodata_15_0= 'unknown'
                    {
                    lv_nodata_15_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_15_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getNodataUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_15_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2368:3: ( (lv_star_16_0= '*' ) )
                    {
                    // InternalKim.g:2368:3: ( (lv_star_16_0= '*' ) )
                    // InternalKim.g:2369:4: (lv_star_16_0= '*' )
                    {
                    // InternalKim.g:2369:4: (lv_star_16_0= '*' )
                    // InternalKim.g:2370:5: lv_star_16_0= '*'
                    {
                    lv_star_16_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_16_0, grammarAccess.getClassifierRHSWithIdNoSetAccess().getStarAsteriskKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdNoSetRule());
                      					}
                      					setWithLastConsumed(current, "star", lv_star_16_0 != null, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithIdNoSet"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2386:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2386:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2387:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2393:1: ruleUrn returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_strings_1_0=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_2 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:2399:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ ) )
            // InternalKim.g:2400:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ )
            {
            // InternalKim.g:2400:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) ) | ( (lv_strings_1_0= RULE_STRING ) )+ )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=RULE_LOWERCASE_ID && LA59_0<=RULE_UPPERCASE_ID)||LA59_0==RULE_CAMELCASE_ID||LA59_0==RULE_LOWERCASE_DASHID||LA59_0==109) ) {
                alt59=1;
            }
            else if ( (LA59_0==RULE_STRING) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalKim.g:2401:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) )
                    {
                    // InternalKim.g:2401:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) ) )
                    // InternalKim.g:2402:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) )
                    {
                    // InternalKim.g:2402:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath ) )
                    // InternalKim.g:2403:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )
                    {
                    // InternalKim.g:2403:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )
                    int alt57=3;
                    alt57 = dfa57.predict(input);
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2404:6: lv_name_0_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2420:6: lv_name_0_2= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_2=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_2,
                              							"org.integratedmodelling.kim.Kim.UrnId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:2436:6: lv_name_0_3= ruleLocalFilePath
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_0_2());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_name_0_3=ruleLocalFilePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getUrnRule());
                              						}
                              						set(
                              							current,
                              							"name",
                              							lv_name_0_3,
                              							"org.integratedmodelling.kim.Kim.LocalFilePath");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2455:3: ( (lv_strings_1_0= RULE_STRING ) )+
                    {
                    // InternalKim.g:2455:3: ( (lv_strings_1_0= RULE_STRING ) )+
                    int cnt58=0;
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==RULE_STRING) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // InternalKim.g:2456:4: (lv_strings_1_0= RULE_STRING )
                    	    {
                    	    // InternalKim.g:2456:4: (lv_strings_1_0= RULE_STRING )
                    	    // InternalKim.g:2457:5: lv_strings_1_0= RULE_STRING
                    	    {
                    	    lv_strings_1_0=(Token)match(input,RULE_STRING,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(lv_strings_1_0, grammarAccess.getUrnAccess().getStringsSTRINGTerminalRuleCall_1_0());
                    	      				
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      					if (current==null) {
                    	      						current = createModelElement(grammarAccess.getUrnRule());
                    	      					}
                    	      					addWithLastConsumed(
                    	      						current,
                    	      						"strings",
                    	      						lv_strings_1_0,
                    	      						"org.eclipse.xtext.common.Terminals.STRING");
                    	      				
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt58 >= 1 ) break loop58;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(58, input);
                                throw eee;
                        }
                        cnt58++;
                    } while (true);


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2477:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2477:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2478:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2484:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_1 = null;

        EObject lv_table_2_2 = null;



        	enterRule();

        try {
            // InternalKim.g:2490:2: ( ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2491:2: ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2491:2: ( () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}' )
            // InternalKim.g:2492:3: () otherlv_1= '{{' ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2492:3: ()
            // InternalKim.g:2493:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,55,FOLLOW_48); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2506:3: ( ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0>=RULE_LOWERCASE_ID && LA61_0<=RULE_STRING)||(LA61_0>=RULE_EXPR && LA61_0<=RULE_LOWERCASE_DASHID)||LA61_0==RULE_UPPERCASE_PATH||(LA61_0>=29 && LA61_0<=30)||LA61_0==39||LA61_0==44||LA61_0==47||(LA61_0>=53 && LA61_0<=54)||LA61_0==58||(LA61_0>=81 && LA61_0<=84)||LA61_0==89||(LA61_0>=138 && LA61_0<=139)||(LA61_0>=147 && LA61_0<=148)||(LA61_0>=150 && LA61_0<=155)||(LA61_0>=157 && LA61_0<=168)||(LA61_0>=255 && LA61_0<=256)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // InternalKim.g:2507:4: ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) )
                    {
                    // InternalKim.g:2507:4: ( (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable ) )
                    // InternalKim.g:2508:5: (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable )
                    {
                    // InternalKim.g:2508:5: (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable )
                    int alt60=2;
                    alt60 = dfa60.predict(input);
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2509:6: lv_table_2_1= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0_0());
                              					
                            }
                            pushFollow(FOLLOW_49);
                            lv_table_2_1=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getLookupTableRule());
                              						}
                              						set(
                              							current,
                              							"table",
                              							lv_table_2_1,
                              							"org.integratedmodelling.kim.Kim.Table");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2525:6: lv_table_2_2= ruleTwoWayTable
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTwoWayTableParserRuleCall_2_0_1());
                              					
                            }
                            pushFollow(FOLLOW_49);
                            lv_table_2_2=ruleTwoWayTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getLookupTableRule());
                              						}
                              						set(
                              							current,
                              							"table",
                              							lv_table_2_2,
                              							"org.integratedmodelling.kim.Kim.TwoWayTable");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2551:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2551:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2552:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2558:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2564:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2565:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2565:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2566:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2566:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt62=2;
            alt62 = dfa62.predict(input);
            switch (alt62) {
                case 1 :
                    // InternalKim.g:2567:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2567:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2568:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2568:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2569:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_50);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2591:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2592:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2592:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2593:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2610:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==28) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalKim.g:2611:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2615:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2616:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2616:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2617:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleTwoWayTable"
    // InternalKim.g:2639:1: entryRuleTwoWayTable returns [EObject current=null] : iv_ruleTwoWayTable= ruleTwoWayTable EOF ;
    public final EObject entryRuleTwoWayTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTwoWayTable = null;


        try {
            // InternalKim.g:2639:52: (iv_ruleTwoWayTable= ruleTwoWayTable EOF )
            // InternalKim.g:2640:2: iv_ruleTwoWayTable= ruleTwoWayTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTwoWayTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTwoWayTable=ruleTwoWayTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTwoWayTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTwoWayTable"


    // $ANTLR start "ruleTwoWayTable"
    // InternalKim.g:2646:1: ruleTwoWayTable returns [EObject current=null] : ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTwoWayTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_columnClassifiers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2652:2: ( ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2653:2: ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2653:2: ( ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2654:3: ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2654:3: ( (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow ) )
            // InternalKim.g:2655:4: (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow )
            {
            // InternalKim.g:2655:4: (lv_columnClassifiers_0_0= ruleTwoWayHeaderRow )
            // InternalKim.g:2656:5: lv_columnClassifiers_0_0= ruleTwoWayHeaderRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTwoWayTableAccess().getColumnClassifiersTwoWayHeaderRowParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_50);
            lv_columnClassifiers_0_0=ruleTwoWayHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
              					}
              					set(
              						current,
              						"columnClassifiers",
              						lv_columnClassifiers_0_0,
              						"org.integratedmodelling.kim.Kim.TwoWayHeaderRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(this_SEPARATOR_1, grammarAccess.getTwoWayTableAccess().getSEPARATORTerminalRuleCall_1());
              		
            }
            // InternalKim.g:2677:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2678:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2678:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2679:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTwoWayTableAccess().getRowsTableRowParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2696:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==28) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalKim.g:2697:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,28,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTwoWayTableAccess().getCommaKeyword_3_0());
            	      			
            	    }
            	    // InternalKim.g:2701:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2702:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2702:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2703:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTwoWayTableAccess().getRowsTableRowParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_40);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTwoWayTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTwoWayTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2725:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2725:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2726:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2732:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2738:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2739:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2739:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2740:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2740:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2741:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2741:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2742:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2742:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==RULE_LOWERCASE_ID) ) {
                alt65=1;
            }
            else if ( (LA65_0==RULE_STRING) ) {
                alt65=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;
            }
            switch (alt65) {
                case 1 :
                    // InternalKim.g:2743:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2758:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2775:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==57) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalKim.g:2776:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,57,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2780:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2781:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2781:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2782:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2782:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt66=2;
            	    int LA66_0 = input.LA(1);

            	    if ( (LA66_0==RULE_LOWERCASE_ID) ) {
            	        alt66=1;
            	    }
            	    else if ( (LA66_0==RULE_STRING) ) {
            	        alt66=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 66, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt66) {
            	        case 1 :
            	            // InternalKim.g:2783:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_51); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2798:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_51); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2820:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2820:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2821:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2827:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2833:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2834:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2834:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2835:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2835:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2836:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2836:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2837:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_51);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2854:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==57) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalKim.g:2855:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,57,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2859:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2860:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2860:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2861:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTwoWayHeaderRow"
    // InternalKim.g:2883:1: entryRuleTwoWayHeaderRow returns [EObject current=null] : iv_ruleTwoWayHeaderRow= ruleTwoWayHeaderRow EOF ;
    public final EObject entryRuleTwoWayHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTwoWayHeaderRow = null;


        try {
            // InternalKim.g:2883:56: (iv_ruleTwoWayHeaderRow= ruleTwoWayHeaderRow EOF )
            // InternalKim.g:2884:2: iv_ruleTwoWayHeaderRow= ruleTwoWayHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTwoWayHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTwoWayHeaderRow=ruleTwoWayHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTwoWayHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTwoWayHeaderRow"


    // $ANTLR start "ruleTwoWayHeaderRow"
    // InternalKim.g:2890:1: ruleTwoWayHeaderRow returns [EObject current=null] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ ) ;
    public final EObject ruleTwoWayHeaderRow() throws RecognitionException {
        EObject current = null;

        Token this_LOWERCASE_ID_0=null;
        Token otherlv_2=null;
        EObject this_TableClassifier_1 = null;

        EObject lv_elements_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2896:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ ) )
            // InternalKim.g:2897:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ )
            {
            // InternalKim.g:2897:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+ )
            // InternalKim.g:2898:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier ) (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+
            {
            // InternalKim.g:2898:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_TableClassifier_1= ruleTableClassifier )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_LOWERCASE_ID) ) {
                int LA69_1 = input.LA(2);

                if ( (LA69_1==110||LA69_1==113) ) {
                    alt69=2;
                }
                else if ( (LA69_1==57) ) {
                    alt69=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA69_0>=RULE_UPPERCASE_ID && LA69_0<=RULE_STRING)||(LA69_0>=RULE_EXPR && LA69_0<=RULE_LOWERCASE_DASHID)||LA69_0==RULE_UPPERCASE_PATH||(LA69_0>=29 && LA69_0<=30)||LA69_0==39||LA69_0==44||LA69_0==47||(LA69_0>=53 && LA69_0<=54)||LA69_0==58||(LA69_0>=81 && LA69_0<=84)||LA69_0==89||(LA69_0>=138 && LA69_0<=139)||(LA69_0>=147 && LA69_0<=148)||(LA69_0>=150 && LA69_0<=155)||(LA69_0>=157 && LA69_0<=168)||(LA69_0>=255 && LA69_0<=256)) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalKim.g:2899:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getTwoWayHeaderRowAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2904:4: this_TableClassifier_1= ruleTableClassifier
                    {
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getTwoWayHeaderRowAccess().getTableClassifierParserRuleCall_0_1());
                      			
                    }
                    pushFollow(FOLLOW_53);
                    this_TableClassifier_1=ruleTableClassifier();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_TableClassifier_1;
                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2916:3: (otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) ) )+
            int cnt70=0;
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==57) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalKim.g:2917:4: otherlv_2= '|' ( (lv_elements_3_0= ruleTableClassifier ) )
            	    {
            	    otherlv_2=(Token)match(input,57,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getTwoWayHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2921:4: ( (lv_elements_3_0= ruleTableClassifier ) )
            	    // InternalKim.g:2922:5: (lv_elements_3_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2922:5: (lv_elements_3_0= ruleTableClassifier )
            	    // InternalKim.g:2923:6: lv_elements_3_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTwoWayHeaderRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_51);
            	    lv_elements_3_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTwoWayHeaderRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_3_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt70 >= 1 ) break loop70;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(70, input);
                        throw eee;
                }
                cnt70++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTwoWayHeaderRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2945:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2945:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2946:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2952:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_12=null;
        Token lv_string_14_0=null;
        Token lv_expr_18_0=null;
        Token lv_nodata_19_0=null;
        Token lv_star_20_0=null;
        Token lv_anything_21_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_quantity_10_0 = null;

        EObject lv_date_11_0 = null;

        EObject lv_set_13_0 = null;

        EObject lv_concept_15_0 = null;

        EObject lv_op_16_0 = null;

        EObject lv_expression_17_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2958:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) ) )
            // InternalKim.g:2959:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            {
            // InternalKim.g:2959:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )
            int alt74=13;
            alt74 = dfa74.predict(input);
            switch (alt74) {
                case 1 :
                    // InternalKim.g:2960:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2960:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( (LA71_0==29) ) {
                        alt71=1;
                    }
                    else if ( (LA71_0==30) ) {
                        alt71=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 71, 0, input);

                        throw nvae;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKim.g:2961:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2961:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2962:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2962:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2963:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2976:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2976:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2977:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2977:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2978:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2992:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2992:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2993:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2993:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2994:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2994:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2995:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3012:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt72=3;
                    int LA72_0 = input.LA(1);

                    if ( (LA72_0==51) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==52) ) {
                        alt72=2;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalKim.g:3013:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:3013:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:3014:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:3014:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:3015:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,51,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3028:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,52,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:3033:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:3034:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:3040:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:3041:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:3045:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:3046:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_45);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3063:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt73=3;
                    int LA73_0 = input.LA(1);

                    if ( (LA73_0==51) ) {
                        alt73=1;
                    }
                    else if ( (LA73_0==52) ) {
                        alt73=2;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalKim.g:3064:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:3064:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:3065:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:3065:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:3066:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3079:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3086:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:3086:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:3087:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:3087:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:3088:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3106:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    {
                    // InternalKim.g:3106:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    // InternalKim.g:3107:4: (lv_quantity_10_0= ruleQuantity )
                    {
                    // InternalKim.g:3107:4: (lv_quantity_10_0= ruleQuantity )
                    // InternalKim.g:3108:5: lv_quantity_10_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getQuantityQuantityParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_10_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_10_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3126:3: ( (lv_date_11_0= ruleDate ) )
                    {
                    // InternalKim.g:3126:3: ( (lv_date_11_0= ruleDate ) )
                    // InternalKim.g:3127:4: (lv_date_11_0= ruleDate )
                    {
                    // InternalKim.g:3127:4: (lv_date_11_0= ruleDate )
                    // InternalKim.g:3128:5: lv_date_11_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getDateDateParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_11_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_11_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3146:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    {
                    // InternalKim.g:3146:3: (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) )
                    // InternalKim.g:3147:4: otherlv_12= 'in' ( (lv_set_13_0= ruleList ) )
                    {
                    otherlv_12=(Token)match(input,53,FOLLOW_46); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getTableClassifierAccess().getInKeyword_5_0());
                      			
                    }
                    // InternalKim.g:3151:4: ( (lv_set_13_0= ruleList ) )
                    // InternalKim.g:3152:5: (lv_set_13_0= ruleList )
                    {
                    // InternalKim.g:3152:5: (lv_set_13_0= ruleList )
                    // InternalKim.g:3153:6: lv_set_13_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_13_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_13_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:3172:3: ( (lv_string_14_0= RULE_STRING ) )
                    {
                    // InternalKim.g:3172:3: ( (lv_string_14_0= RULE_STRING ) )
                    // InternalKim.g:3173:4: (lv_string_14_0= RULE_STRING )
                    {
                    // InternalKim.g:3173:4: (lv_string_14_0= RULE_STRING )
                    // InternalKim.g:3174:5: lv_string_14_0= RULE_STRING
                    {
                    lv_string_14_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_14_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_14_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:3191:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:3191:3: ( (lv_concept_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:3192:4: (lv_concept_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:3192:4: (lv_concept_15_0= ruleConceptDeclaration )
                    // InternalKim.g:3193:5: lv_concept_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_15_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:3211:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:3211:3: ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) )
                    // InternalKim.g:3212:4: ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) )
                    {
                    // InternalKim.g:3212:4: ( (lv_op_16_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:3213:5: (lv_op_16_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:3213:5: (lv_op_16_0= ruleREL_OPERATOR )
                    // InternalKim.g:3214:6: lv_op_16_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_8_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_16_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_16_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3231:4: ( (lv_expression_17_0= ruleNumber ) )
                    // InternalKim.g:3232:5: (lv_expression_17_0= ruleNumber )
                    {
                    // InternalKim.g:3232:5: (lv_expression_17_0= ruleNumber )
                    // InternalKim.g:3233:6: lv_expression_17_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_8_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_17_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_17_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:3252:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:3252:3: ( (lv_expr_18_0= RULE_EXPR ) )
                    // InternalKim.g:3253:4: (lv_expr_18_0= RULE_EXPR )
                    {
                    // InternalKim.g:3253:4: (lv_expr_18_0= RULE_EXPR )
                    // InternalKim.g:3254:5: lv_expr_18_0= RULE_EXPR
                    {
                    lv_expr_18_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_18_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_18_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:3271:3: ( (lv_nodata_19_0= 'unknown' ) )
                    {
                    // InternalKim.g:3271:3: ( (lv_nodata_19_0= 'unknown' ) )
                    // InternalKim.g:3272:4: (lv_nodata_19_0= 'unknown' )
                    {
                    // InternalKim.g:3272:4: (lv_nodata_19_0= 'unknown' )
                    // InternalKim.g:3273:5: lv_nodata_19_0= 'unknown'
                    {
                    lv_nodata_19_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_19_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_19_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:3286:3: ( (lv_star_20_0= '*' ) )
                    {
                    // InternalKim.g:3286:3: ( (lv_star_20_0= '*' ) )
                    // InternalKim.g:3287:4: (lv_star_20_0= '*' )
                    {
                    // InternalKim.g:3287:4: (lv_star_20_0= '*' )
                    // InternalKim.g:3288:5: lv_star_20_0= '*'
                    {
                    lv_star_20_0=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_20_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_11_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", lv_star_20_0 != null, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:3301:3: ( (lv_anything_21_0= '#' ) )
                    {
                    // InternalKim.g:3301:3: ( (lv_anything_21_0= '#' ) )
                    // InternalKim.g:3302:4: (lv_anything_21_0= '#' )
                    {
                    // InternalKim.g:3302:4: (lv_anything_21_0= '#' )
                    // InternalKim.g:3303:5: lv_anything_21_0= '#'
                    {
                    lv_anything_21_0=(Token)match(input,58,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_21_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", lv_anything_21_0 != null, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:3319:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:3319:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:3320:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:3326:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token lv_over_1_0=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_instantiation_10_0=null;
        Token lv_termination_11_0=null;
        Token otherlv_13=null;
        Token lv_anyContextEvent_14_0=null;
        Token lv_relatedEventContext_15_0=null;
        Token otherlv_19=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_12_0 = null;

        EObject lv_eventContext_16_0 = null;

        EObject lv_parameters_17_0 = null;

        EObject lv_actions_18_0 = null;

        EObject lv_actions_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3332:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) ) )
            // InternalKim.g:3333:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            {
            // InternalKim.g:3333:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* ) )
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=59 && LA85_0<=60)) ) {
                alt85=1;
            }
            else if ( (LA85_0==61||(LA85_0>=67 && LA85_0<=72)) ) {
                alt85=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }
            switch (alt85) {
                case 1 :
                    // InternalKim.g:3334:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:3334:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:3335:4: ( (lv_integrated_0_0= 'aggregated' ) )? ( (lv_over_1_0= 'over' ) ) ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:3335:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==59) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalKim.g:3336:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:3336:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:3337:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,59,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", lv_integrated_0_0 != null, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3349:4: ( (lv_over_1_0= 'over' ) )
                    // InternalKim.g:3350:5: (lv_over_1_0= 'over' )
                    {
                    // InternalKim.g:3350:5: (lv_over_1_0= 'over' )
                    // InternalKim.g:3351:6: lv_over_1_0= 'over'
                    {
                    lv_over_1_0=(Token)match(input,60,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getActionSpecificationAccess().getOverOverKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "over", lv_over_1_0 != null, "over");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3363:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:3364:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:3364:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:3365:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3382:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop76:
                    do {
                        int alt76=2;
                        int LA76_0 = input.LA(1);

                        if ( (LA76_0==28) ) {
                            alt76=1;
                        }


                        switch (alt76) {
                    	case 1 :
                    	    // InternalKim.g:3383:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:3383:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:3384:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,28,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3390:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:3391:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:3391:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:3392:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop76;
                        }
                    } while (true);

                    // InternalKim.g:3410:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt78=2;
                    alt78 = dfa78.predict(input);
                    switch (alt78) {
                        case 1 :
                            // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:3413:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_40);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:3430:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop77:
                            do {
                                int alt77=2;
                                int LA77_0 = input.LA(1);

                                if ( (LA77_0==28) ) {
                                    alt77=1;
                                }


                                switch (alt77) {
                            	case 1 :
                            	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:3432:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,28,FOLLOW_56); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:3438:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:3440:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_40);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop77;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3461:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    {
                    // InternalKim.g:3461:3: ( ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )* )
                    // InternalKim.g:3462:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )? ( (lv_actions_18_0= ruleAction ) ) ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    {
                    // InternalKim.g:3462:4: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )? )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==61) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3463:5: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) ) ( (lv_parameters_17_0= ruleList ) )?
                            {
                            // InternalKim.g:3463:5: ( (lv_trigger_8_0= 'on' ) )
                            // InternalKim.g:3464:6: (lv_trigger_8_0= 'on' )
                            {
                            // InternalKim.g:3464:6: (lv_trigger_8_0= 'on' )
                            // InternalKim.g:3465:7: lv_trigger_8_0= 'on'
                            {
                            lv_trigger_8_0=(Token)match(input,61,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "trigger", lv_trigger_8_0 != null, "on");
                              						
                            }

                            }


                            }

                            // InternalKim.g:3477:5: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_instantiation_10_0= 'instantiation' ) ) | ( (lv_termination_11_0= 'termination' ) ) | ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? ) )
                            int alt81=4;
                            switch ( input.LA(1) ) {
                            case 62:
                                {
                                alt81=1;
                                }
                                break;
                            case 63:
                                {
                                alt81=2;
                                }
                                break;
                            case 64:
                                {
                                alt81=3;
                                }
                                break;
                            case RULE_LOWERCASE_ID:
                            case RULE_UPPERCASE_ID:
                            case RULE_CAMELCASE_ID:
                            case RULE_LOWERCASE_DASHID:
                            case RULE_UPPERCASE_PATH:
                            case 39:
                            case 138:
                            case 139:
                            case 147:
                            case 148:
                            case 150:
                            case 151:
                            case 152:
                            case 153:
                            case 154:
                            case 155:
                            case 157:
                            case 158:
                            case 159:
                            case 160:
                            case 161:
                            case 162:
                            case 163:
                            case 164:
                            case 165:
                            case 166:
                            case 167:
                            case 168:
                                {
                                alt81=4;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 81, 0, input);

                                throw nvae;
                            }

                            switch (alt81) {
                                case 1 :
                                    // InternalKim.g:3478:6: ( (lv_initialization_9_0= 'definition' ) )
                                    {
                                    // InternalKim.g:3478:6: ( (lv_initialization_9_0= 'definition' ) )
                                    // InternalKim.g:3479:7: (lv_initialization_9_0= 'definition' )
                                    {
                                    // InternalKim.g:3479:7: (lv_initialization_9_0= 'definition' )
                                    // InternalKim.g:3480:8: lv_initialization_9_0= 'definition'
                                    {
                                    lv_initialization_9_0=(Token)match(input,62,FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_0_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "initialization", lv_initialization_9_0 != null, "definition");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3493:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    {
                                    // InternalKim.g:3493:6: ( (lv_instantiation_10_0= 'instantiation' ) )
                                    // InternalKim.g:3494:7: (lv_instantiation_10_0= 'instantiation' )
                                    {
                                    // InternalKim.g:3494:7: (lv_instantiation_10_0= 'instantiation' )
                                    // InternalKim.g:3495:8: lv_instantiation_10_0= 'instantiation'
                                    {
                                    lv_instantiation_10_0=(Token)match(input,63,FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_instantiation_10_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_0_1_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "instantiation", lv_instantiation_10_0 != null, "instantiation");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3508:6: ( (lv_termination_11_0= 'termination' ) )
                                    {
                                    // InternalKim.g:3508:6: ( (lv_termination_11_0= 'termination' ) )
                                    // InternalKim.g:3509:7: (lv_termination_11_0= 'termination' )
                                    {
                                    // InternalKim.g:3509:7: (lv_termination_11_0= 'termination' )
                                    // InternalKim.g:3510:8: lv_termination_11_0= 'termination'
                                    {
                                    lv_termination_11_0=(Token)match(input,64,FOLLOW_58); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_termination_11_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_0_1_2_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getActionSpecificationRule());
                                      								}
                                      								setWithLastConsumed(current, "termination", lv_termination_11_0 != null, "termination");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:3523:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    {
                                    // InternalKim.g:3523:6: ( ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )? )
                                    // InternalKim.g:3524:7: ( (lv_event_12_0= ruleConceptDeclaration ) ) (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    {
                                    // InternalKim.g:3524:7: ( (lv_event_12_0= ruleConceptDeclaration ) )
                                    // InternalKim.g:3525:8: (lv_event_12_0= ruleConceptDeclaration )
                                    {
                                    // InternalKim.g:3525:8: (lv_event_12_0= ruleConceptDeclaration )
                                    // InternalKim.g:3526:9: lv_event_12_0= ruleConceptDeclaration
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_0_1_3_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_59);
                                    lv_event_12_0=ruleConceptDeclaration();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      									}
                                      									set(
                                      										current,
                                      										"event",
                                      										lv_event_12_0,
                                      										"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:3543:7: (otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) ) )?
                                    int alt80=2;
                                    int LA80_0 = input.LA(1);

                                    if ( (LA80_0==53) ) {
                                        alt80=1;
                                    }
                                    switch (alt80) {
                                        case 1 :
                                            // InternalKim.g:3544:8: otherlv_13= 'in' ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) ) ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            {
                                            otherlv_13=(Token)match(input,53,FOLLOW_60); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              								newLeafNode(otherlv_13, grammarAccess.getActionSpecificationAccess().getInKeyword_1_0_1_3_1_0());
                                              							
                                            }
                                            // InternalKim.g:3548:8: ( ( (lv_anyContextEvent_14_0= 'context' ) ) | ( (lv_relatedEventContext_15_0= 'related' ) ) )
                                            int alt79=2;
                                            int LA79_0 = input.LA(1);

                                            if ( (LA79_0==65) ) {
                                                alt79=1;
                                            }
                                            else if ( (LA79_0==66) ) {
                                                alt79=2;
                                            }
                                            else {
                                                if (state.backtracking>0) {state.failed=true; return current;}
                                                NoViableAltException nvae =
                                                    new NoViableAltException("", 79, 0, input);

                                                throw nvae;
                                            }
                                            switch (alt79) {
                                                case 1 :
                                                    // InternalKim.g:3549:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    {
                                                    // InternalKim.g:3549:9: ( (lv_anyContextEvent_14_0= 'context' ) )
                                                    // InternalKim.g:3550:10: (lv_anyContextEvent_14_0= 'context' )
                                                    {
                                                    // InternalKim.g:3550:10: (lv_anyContextEvent_14_0= 'context' )
                                                    // InternalKim.g:3551:11: lv_anyContextEvent_14_0= 'context'
                                                    {
                                                    lv_anyContextEvent_14_0=(Token)match(input,65,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_anyContextEvent_14_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_0_1_3_1_1_0_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "anyContextEvent", lv_anyContextEvent_14_0 != null, "context");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;
                                                case 2 :
                                                    // InternalKim.g:3564:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    {
                                                    // InternalKim.g:3564:9: ( (lv_relatedEventContext_15_0= 'related' ) )
                                                    // InternalKim.g:3565:10: (lv_relatedEventContext_15_0= 'related' )
                                                    {
                                                    // InternalKim.g:3565:10: (lv_relatedEventContext_15_0= 'related' )
                                                    // InternalKim.g:3566:11: lv_relatedEventContext_15_0= 'related'
                                                    {
                                                    lv_relatedEventContext_15_0=(Token)match(input,66,FOLLOW_23); if (state.failed) return current;
                                                    if ( state.backtracking==0 ) {

                                                      											newLeafNode(lv_relatedEventContext_15_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_0_1_3_1_1_1_0());
                                                      										
                                                    }
                                                    if ( state.backtracking==0 ) {

                                                      											if (current==null) {
                                                      												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                                      											}
                                                      											setWithLastConsumed(current, "relatedEventContext", lv_relatedEventContext_15_0 != null, "related");
                                                      										
                                                    }

                                                    }


                                                    }


                                                    }
                                                    break;

                                            }

                                            // InternalKim.g:3579:8: ( (lv_eventContext_16_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3580:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3580:9: (lv_eventContext_16_0= ruleConceptDeclaration )
                                            // InternalKim.g:3581:10: lv_eventContext_16_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              										newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_0_1_3_1_2_0());
                                              									
                                            }
                                            pushFollow(FOLLOW_58);
                                            lv_eventContext_16_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										set(
                                              											current,
                                              											"eventContext",
                                              											lv_eventContext_16_0,
                                              											"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              										afterParserOrEnumRuleCall();
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:3601:5: ( (lv_parameters_17_0= ruleList ) )?
                            int alt82=2;
                            int LA82_0 = input.LA(1);

                            if ( (LA82_0==39) ) {
                                alt82=1;
                            }
                            switch (alt82) {
                                case 1 :
                                    // InternalKim.g:3602:6: (lv_parameters_17_0= ruleList )
                                    {
                                    // InternalKim.g:3602:6: (lv_parameters_17_0= ruleList )
                                    // InternalKim.g:3603:7: lv_parameters_17_0= ruleList
                                    {
                                    if ( state.backtracking==0 ) {

                                      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_0_2_0());
                                      						
                                    }
                                    pushFollow(FOLLOW_56);
                                    lv_parameters_17_0=ruleList();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                      							}
                                      							set(
                                      								current,
                                      								"parameters",
                                      								lv_parameters_17_0,
                                      								"org.integratedmodelling.kim.Kim.List");
                                      							afterParserOrEnumRuleCall();
                                      						
                                    }

                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3621:4: ( (lv_actions_18_0= ruleAction ) )
                    // InternalKim.g:3622:5: (lv_actions_18_0= ruleAction )
                    {
                    // InternalKim.g:3622:5: (lv_actions_18_0= ruleAction )
                    // InternalKim.g:3623:6: lv_actions_18_0= ruleAction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_actions_18_0=ruleAction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"actions",
                      							lv_actions_18_0,
                      							"org.integratedmodelling.kim.Kim.Action");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3640:4: ( ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) ) )*
                    loop84:
                    do {
                        int alt84=2;
                        int LA84_0 = input.LA(1);

                        if ( (LA84_0==28) ) {
                            alt84=1;
                        }


                        switch (alt84) {
                    	case 1 :
                    	    // InternalKim.g:3641:5: ( ( ',' )=>otherlv_19= ',' ) ( (lv_actions_20_0= ruleAction ) )
                    	    {
                    	    // InternalKim.g:3641:5: ( ( ',' )=>otherlv_19= ',' )
                    	    // InternalKim.g:3642:6: ( ',' )=>otherlv_19= ','
                    	    {
                    	    otherlv_19=(Token)match(input,28,FOLLOW_56); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_19, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:3648:5: ( (lv_actions_20_0= ruleAction ) )
                    	    // InternalKim.g:3649:6: (lv_actions_20_0= ruleAction )
                    	    {
                    	    // InternalKim.g:3649:6: (lv_actions_20_0= ruleAction )
                    	    // InternalKim.g:3650:7: lv_actions_20_0= ruleAction
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_actions_20_0=ruleAction();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"actions",
                    	      								lv_actions_20_0,
                    	      								"org.integratedmodelling.kim.Kim.Action");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop84;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3673:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3673:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3674:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3680:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3686:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3687:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3687:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt87=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA87_1 = input.LA(2);

                if ( (synpred141_InternalKim()) ) {
                    alt87=1;
                }
                else if ( (true) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                int LA87_2 = input.LA(2);

                if ( (synpred141_InternalKim()) ) {
                    alt87=1;
                }
                else if ( (true) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                int LA87_3 = input.LA(2);

                if ( (synpred141_InternalKim()) ) {
                    alt87=1;
                }
                else if ( (true) ) {
                    alt87=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 87, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 87, 0, input);

                throw nvae;
            }

            switch (alt87) {
                case 1 :
                    // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3690:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3708:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3708:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3709:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3709:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3710:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3710:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==RULE_LOWERCASE_ID) ) {
                        int LA86_1 = input.LA(2);

                        if ( (LA86_1==EOF||(LA86_1>=RULE_LOWERCASE_ID && LA86_1<=RULE_STRING)||LA86_1==RULE_CAMELCASE_ID||LA86_1==RULE_LOWERCASE_DASHID||LA86_1==RULE_UPPERCASE_PATH||LA86_1==21||LA86_1==28||LA86_1==32||(LA86_1>=39 && LA86_1<=40)||LA86_1==42||(LA86_1>=59 && LA86_1<=61)||(LA86_1>=67 && LA86_1<=72)||LA86_1==109||(LA86_1>=138 && LA86_1<=139)||(LA86_1>=147 && LA86_1<=148)||(LA86_1>=150 && LA86_1<=155)||(LA86_1>=157 && LA86_1<=168)) ) {
                            alt86=1;
                        }
                        else if ( (LA86_1==110||LA86_1==113) ) {
                            alt86=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 86, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA86_0==RULE_UPPERCASE_ID||LA86_0==RULE_LOWERCASE_DASHID) ) {
                        alt86=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 86, 0, input);

                        throw nvae;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3711:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3726:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3748:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3748:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3749:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3755:1: ruleAction returns [EObject current=null] : ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_set_0_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_conditionNegative_5_0=null;
        Token lv_integrate_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token lv_conditionNegative_12_0=null;
        Token lv_do_14_1=null;
        Token lv_do_14_2=null;
        Token lv_do_14_3=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_conditionNegative_19_0=null;
        Token lv_move_21_0=null;
        Token lv_away_23_0=null;
        EObject lv_assignments_1_0 = null;

        EObject lv_assignments_3_0 = null;

        EObject lv_condition_6_0 = null;

        EObject lv_assignments_8_0 = null;

        EObject lv_assignments_10_0 = null;

        EObject lv_condition_13_0 = null;

        EObject lv_executed_15_0 = null;

        EObject lv_executed_17_0 = null;

        EObject lv_condition_20_0 = null;

        EObject lv_where_22_0 = null;

        EObject lv_condition_24_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3761:2: ( ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) ) )
            // InternalKim.g:3762:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3762:2: ( ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? ) | ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? ) | ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? ) | ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? ) )
            int alt100=4;
            switch ( input.LA(1) ) {
            case 67:
                {
                alt100=1;
                }
                break;
            case 68:
                {
                alt100=2;
                }
                break;
            case 69:
            case 70:
            case 71:
                {
                alt100=3;
                }
                break;
            case 72:
                {
                alt100=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // InternalKim.g:3763:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3763:3: ( ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )? )
                    // InternalKim.g:3764:4: ( (lv_set_0_0= 'set' ) ) ( (lv_assignments_1_0= ruleValueAssignment ) ) (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3764:4: ( (lv_set_0_0= 'set' ) )
                    // InternalKim.g:3765:5: (lv_set_0_0= 'set' )
                    {
                    // InternalKim.g:3765:5: (lv_set_0_0= 'set' )
                    // InternalKim.g:3766:6: lv_set_0_0= 'set'
                    {
                    lv_set_0_0=(Token)match(input,67,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_set_0_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "set", lv_set_0_0 != null, "set");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3778:4: ( (lv_assignments_1_0= ruleValueAssignment ) )
                    // InternalKim.g:3779:5: (lv_assignments_1_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3779:5: (lv_assignments_1_0= ruleValueAssignment )
                    // InternalKim.g:3780:6: lv_assignments_1_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_assignments_1_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_1_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3797:4: (otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) ) )*
                    loop88:
                    do {
                        int alt88=2;
                        int LA88_0 = input.LA(1);

                        if ( (LA88_0==28) ) {
                            int LA88_2 = input.LA(2);

                            if ( ((LA88_2>=RULE_LOWERCASE_ID && LA88_2<=RULE_STRING)||(LA88_2>=RULE_EXPR && LA88_2<=RULE_ID)||(LA88_2>=28 && LA88_2<=30)||LA88_2==37||LA88_2==39||LA88_2==54||(LA88_2>=255 && LA88_2<=256)) ) {
                                alt88=1;
                            }


                        }


                        switch (alt88) {
                    	case 1 :
                    	    // InternalKim.g:3798:5: otherlv_2= ',' ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_2=(Token)match(input,28,FOLLOW_61); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3802:5: ( (lv_assignments_3_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3803:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3803:6: (lv_assignments_3_0= ruleValueAssignment )
                    	    // InternalKim.g:3804:7: lv_assignments_3_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_assignments_3_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop88;
                        }
                    } while (true);

                    // InternalKim.g:3822:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) ) )?
                    int alt90=2;
                    int LA90_0 = input.LA(1);

                    if ( ((LA90_0>=49 && LA90_0<=50)) ) {
                        alt90=1;
                    }
                    switch (alt90) {
                        case 1 :
                            // InternalKim.g:3823:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) ) ( (lv_condition_6_0= ruleValue ) )
                            {
                            // InternalKim.g:3823:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) ) )
                            // InternalKim.g:3824:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3834:6: (otherlv_4= 'if' | ( (lv_conditionNegative_5_0= 'unless' ) ) )
                            int alt89=2;
                            int LA89_0 = input.LA(1);

                            if ( (LA89_0==49) ) {
                                alt89=1;
                            }
                            else if ( (LA89_0==50) ) {
                                alt89=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 89, 0, input);

                                throw nvae;
                            }
                            switch (alt89) {
                                case 1 :
                                    // InternalKim.g:3835:7: otherlv_4= 'if'
                                    {
                                    otherlv_4=(Token)match(input,49,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_4, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3840:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3840:7: ( (lv_conditionNegative_5_0= 'unless' ) )
                                    // InternalKim.g:3841:8: (lv_conditionNegative_5_0= 'unless' )
                                    {
                                    // InternalKim.g:3841:8: (lv_conditionNegative_5_0= 'unless' )
                                    // InternalKim.g:3842:9: lv_conditionNegative_5_0= 'unless'
                                    {
                                    lv_conditionNegative_5_0=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_5_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", lv_conditionNegative_5_0 != null, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3856:5: ( (lv_condition_6_0= ruleValue ) )
                            // InternalKim.g:3857:6: (lv_condition_6_0= ruleValue )
                            {
                            // InternalKim.g:3857:6: (lv_condition_6_0= ruleValue )
                            // InternalKim.g:3858:7: lv_condition_6_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_6_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_6_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3878:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3878:3: ( ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )? )
                    // InternalKim.g:3879:4: ( (lv_integrate_7_0= 'integrate' ) ) ( (lv_assignments_8_0= ruleValueAssignment ) ) (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3879:4: ( (lv_integrate_7_0= 'integrate' ) )
                    // InternalKim.g:3880:5: (lv_integrate_7_0= 'integrate' )
                    {
                    // InternalKim.g:3880:5: (lv_integrate_7_0= 'integrate' )
                    // InternalKim.g:3881:6: lv_integrate_7_0= 'integrate'
                    {
                    lv_integrate_7_0=(Token)match(input,68,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_7_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", lv_integrate_7_0 != null, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3893:4: ( (lv_assignments_8_0= ruleValueAssignment ) )
                    // InternalKim.g:3894:5: (lv_assignments_8_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3894:5: (lv_assignments_8_0= ruleValueAssignment )
                    // InternalKim.g:3895:6: lv_assignments_8_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_assignments_8_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_8_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3912:4: (otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) ) )*
                    loop91:
                    do {
                        int alt91=2;
                        int LA91_0 = input.LA(1);

                        if ( (LA91_0==28) ) {
                            int LA91_2 = input.LA(2);

                            if ( ((LA91_2>=RULE_LOWERCASE_ID && LA91_2<=RULE_STRING)||(LA91_2>=RULE_EXPR && LA91_2<=RULE_ID)||(LA91_2>=28 && LA91_2<=30)||LA91_2==37||LA91_2==39||LA91_2==54||(LA91_2>=255 && LA91_2<=256)) ) {
                                alt91=1;
                            }


                        }


                        switch (alt91) {
                    	case 1 :
                    	    // InternalKim.g:3913:5: otherlv_9= ',' ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_9=(Token)match(input,28,FOLLOW_61); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_9, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3917:5: ( (lv_assignments_10_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3918:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3918:6: (lv_assignments_10_0= ruleValueAssignment )
                    	    // InternalKim.g:3919:7: lv_assignments_10_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_assignments_10_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_10_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop91;
                        }
                    } while (true);

                    // InternalKim.g:3937:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) ) )?
                    int alt93=2;
                    int LA93_0 = input.LA(1);

                    if ( ((LA93_0>=49 && LA93_0<=50)) ) {
                        alt93=1;
                    }
                    switch (alt93) {
                        case 1 :
                            // InternalKim.g:3938:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) ) ( (lv_condition_13_0= ruleValue ) )
                            {
                            // InternalKim.g:3938:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) ) )
                            // InternalKim.g:3939:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3949:6: (otherlv_11= 'if' | ( (lv_conditionNegative_12_0= 'unless' ) ) )
                            int alt92=2;
                            int LA92_0 = input.LA(1);

                            if ( (LA92_0==49) ) {
                                alt92=1;
                            }
                            else if ( (LA92_0==50) ) {
                                alt92=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 92, 0, input);

                                throw nvae;
                            }
                            switch (alt92) {
                                case 1 :
                                    // InternalKim.g:3950:7: otherlv_11= 'if'
                                    {
                                    otherlv_11=(Token)match(input,49,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_11, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3955:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3955:7: ( (lv_conditionNegative_12_0= 'unless' ) )
                                    // InternalKim.g:3956:8: (lv_conditionNegative_12_0= 'unless' )
                                    {
                                    // InternalKim.g:3956:8: (lv_conditionNegative_12_0= 'unless' )
                                    // InternalKim.g:3957:9: lv_conditionNegative_12_0= 'unless'
                                    {
                                    lv_conditionNegative_12_0=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_12_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", lv_conditionNegative_12_0 != null, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3971:5: ( (lv_condition_13_0= ruleValue ) )
                            // InternalKim.g:3972:6: (lv_condition_13_0= ruleValue )
                            {
                            // InternalKim.g:3972:6: (lv_condition_13_0= ruleValue )
                            // InternalKim.g:3973:7: lv_condition_13_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_13_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_13_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3993:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3993:3: ( ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )? )
                    // InternalKim.g:3994:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) ) ( (lv_executed_15_0= ruleValueExecution ) ) (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3994:4: ( ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) ) )
                    // InternalKim.g:3995:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    {
                    // InternalKim.g:3995:5: ( (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' ) )
                    // InternalKim.g:3996:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    {
                    // InternalKim.g:3996:6: (lv_do_14_1= 'do' | lv_do_14_2= 'then' | lv_do_14_3= 'finally' )
                    int alt94=3;
                    switch ( input.LA(1) ) {
                    case 69:
                        {
                        alt94=1;
                        }
                        break;
                    case 70:
                        {
                        alt94=2;
                        }
                        break;
                    case 71:
                        {
                        alt94=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 94, 0, input);

                        throw nvae;
                    }

                    switch (alt94) {
                        case 1 :
                            // InternalKim.g:3997:7: lv_do_14_1= 'do'
                            {
                            lv_do_14_1=(Token)match(input,69,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_1, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", lv_do_14_1 != null, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4008:7: lv_do_14_2= 'then'
                            {
                            lv_do_14_2=(Token)match(input,70,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_2, grammarAccess.getActionAccess().getDoThenKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", lv_do_14_2 != null, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:4019:7: lv_do_14_3= 'finally'
                            {
                            lv_do_14_3=(Token)match(input,71,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_do_14_3, grammarAccess.getActionAccess().getDoFinallyKeyword_2_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "do", lv_do_14_3 != null, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:4032:4: ( (lv_executed_15_0= ruleValueExecution ) )
                    // InternalKim.g:4033:5: (lv_executed_15_0= ruleValueExecution )
                    {
                    // InternalKim.g:4033:5: (lv_executed_15_0= ruleValueExecution )
                    // InternalKim.g:4034:6: lv_executed_15_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_62);
                    lv_executed_15_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_15_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4051:4: (otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) ) )*
                    loop95:
                    do {
                        int alt95=2;
                        int LA95_0 = input.LA(1);

                        if ( (LA95_0==28) ) {
                            int LA95_2 = input.LA(2);

                            if ( ((LA95_2>=RULE_LOWERCASE_ID && LA95_2<=RULE_STRING)||LA95_2==RULE_EXPR||LA95_2==RULE_LOWERCASE_DASHID||LA95_2==109) ) {
                                alt95=1;
                            }


                        }


                        switch (alt95) {
                    	case 1 :
                    	    // InternalKim.g:4052:5: otherlv_16= ',' ( (lv_executed_17_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_16=(Token)match(input,28,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:4056:5: ( (lv_executed_17_0= ruleValueExecution ) )
                    	    // InternalKim.g:4057:6: (lv_executed_17_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:4057:6: (lv_executed_17_0= ruleValueExecution )
                    	    // InternalKim.g:4058:7: lv_executed_17_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_62);
                    	    lv_executed_17_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop95;
                        }
                    } while (true);

                    // InternalKim.g:4076:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) ) )?
                    int alt97=2;
                    int LA97_0 = input.LA(1);

                    if ( ((LA97_0>=49 && LA97_0<=50)) ) {
                        alt97=1;
                    }
                    switch (alt97) {
                        case 1 :
                            // InternalKim.g:4077:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) ) ( (lv_condition_20_0= ruleValue ) )
                            {
                            // InternalKim.g:4077:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) ) )
                            // InternalKim.g:4078:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            {
                            // InternalKim.g:4088:6: (otherlv_18= 'if' | ( (lv_conditionNegative_19_0= 'unless' ) ) )
                            int alt96=2;
                            int LA96_0 = input.LA(1);

                            if ( (LA96_0==49) ) {
                                alt96=1;
                            }
                            else if ( (LA96_0==50) ) {
                                alt96=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 96, 0, input);

                                throw nvae;
                            }
                            switch (alt96) {
                                case 1 :
                                    // InternalKim.g:4089:7: otherlv_18= 'if'
                                    {
                                    otherlv_18=(Token)match(input,49,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_18, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4094:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    {
                                    // InternalKim.g:4094:7: ( (lv_conditionNegative_19_0= 'unless' ) )
                                    // InternalKim.g:4095:8: (lv_conditionNegative_19_0= 'unless' )
                                    {
                                    // InternalKim.g:4095:8: (lv_conditionNegative_19_0= 'unless' )
                                    // InternalKim.g:4096:9: lv_conditionNegative_19_0= 'unless'
                                    {
                                    lv_conditionNegative_19_0=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_19_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", lv_conditionNegative_19_0 != null, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:4110:5: ( (lv_condition_20_0= ruleValue ) )
                            // InternalKim.g:4111:6: (lv_condition_20_0= ruleValue )
                            {
                            // InternalKim.g:4111:6: (lv_condition_20_0= ruleValue )
                            // InternalKim.g:4112:7: lv_condition_20_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_20_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_20_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:4132:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    {
                    // InternalKim.g:4132:3: ( ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )? )
                    // InternalKim.g:4133:4: ( (lv_move_21_0= 'move' ) ) ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    {
                    // InternalKim.g:4133:4: ( (lv_move_21_0= 'move' ) )
                    // InternalKim.g:4134:5: (lv_move_21_0= 'move' )
                    {
                    // InternalKim.g:4134:5: (lv_move_21_0= 'move' )
                    // InternalKim.g:4135:6: lv_move_21_0= 'move'
                    {
                    lv_move_21_0=(Token)match(input,72,FOLLOW_63); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_21_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", lv_move_21_0 != null, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:4147:4: ( ( (lv_where_22_0= ruleValue ) ) | ( (lv_away_23_0= 'away' ) ) )
                    int alt98=2;
                    int LA98_0 = input.LA(1);

                    if ( ((LA98_0>=RULE_LOWERCASE_ID && LA98_0<=RULE_STRING)||(LA98_0>=RULE_EXPR && LA98_0<=RULE_ID)||(LA98_0>=28 && LA98_0<=30)||LA98_0==39||(LA98_0>=54 && LA98_0<=55)||LA98_0==217||(LA98_0>=255 && LA98_0<=256)) ) {
                        alt98=1;
                    }
                    else if ( (LA98_0==73) ) {
                        alt98=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 98, 0, input);

                        throw nvae;
                    }
                    switch (alt98) {
                        case 1 :
                            // InternalKim.g:4148:5: ( (lv_where_22_0= ruleValue ) )
                            {
                            // InternalKim.g:4148:5: ( (lv_where_22_0= ruleValue ) )
                            // InternalKim.g:4149:6: (lv_where_22_0= ruleValue )
                            {
                            // InternalKim.g:4149:6: (lv_where_22_0= ruleValue )
                            // InternalKim.g:4150:7: lv_where_22_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_64);
                            lv_where_22_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_22_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:4168:5: ( (lv_away_23_0= 'away' ) )
                            {
                            // InternalKim.g:4168:5: ( (lv_away_23_0= 'away' ) )
                            // InternalKim.g:4169:6: (lv_away_23_0= 'away' )
                            {
                            // InternalKim.g:4169:6: (lv_away_23_0= 'away' )
                            // InternalKim.g:4170:7: lv_away_23_0= 'away'
                            {
                            lv_away_23_0=(Token)match(input,73,FOLLOW_64); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_23_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", lv_away_23_0 != null, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4183:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?
                    int alt99=2;
                    alt99 = dfa99.predict(input);
                    switch (alt99) {
                        case 1 :
                            // InternalKim.g:4184:5: ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue )
                            {
                            // InternalKim.g:4188:5: (lv_condition_24_0= ruleValue )
                            // InternalKim.g:4189:6: lv_condition_24_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_24_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_24_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:4211:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:4211:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:4212:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:4218:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4224:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:4225:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:4225:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:4226:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:4226:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( (LA102_0==RULE_LOWERCASE_ID) ) {
                int LA102_1 = input.LA(2);

                if ( (LA102_1==37) ) {
                    alt102=1;
                }
            }
            else if ( (LA102_0==37) ) {
                alt102=1;
            }
            switch (alt102) {
                case 1 :
                    // InternalKim.g:4227:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:4227:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt101=2;
                    int LA101_0 = input.LA(1);

                    if ( (LA101_0==RULE_LOWERCASE_ID) ) {
                        alt101=1;
                    }
                    switch (alt101) {
                        case 1 :
                            // InternalKim.g:4228:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:4228:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:4229:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,37,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4250:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:4251:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:4251:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:4252:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:4273:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:4273:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:4274:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:4280:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4286:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:4287:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:4287:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt106=6;
            alt106 = dfa106.predict(input);
            switch (alt106) {
                case 1 :
                    // InternalKim.g:4288:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:4288:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:4289:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:4289:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:4290:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:4310:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4328:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4328:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4329:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4329:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:4330:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:4330:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:4331:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:4347:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt104=2;
                    int LA104_0 = input.LA(1);

                    if ( (LA104_0==53) ) {
                        alt104=1;
                    }
                    switch (alt104) {
                        case 1 :
                            // InternalKim.g:4348:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,53,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:4352:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4353:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4353:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4354:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4354:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt103=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt103=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt103=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt103=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 103, 0, input);

                                throw nvae;
                            }

                            switch (alt103) {
                                case 1 :
                                    // InternalKim.g:4355:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4370:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4385:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt105=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt105=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt105=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt105=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 105, 0, input);

                        throw nvae;
                    }

                    switch (alt105) {
                        case 1 :
                            // InternalKim.g:4408:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4423:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:4438:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:4456:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:4456:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:4457:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:4457:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:4458:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:4476:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:4476:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:4477:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:4477:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:4478:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", lv_null_7_0 != null, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:4494:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:4494:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:4495:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:4501:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4507:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4508:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4508:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4509:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4509:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4510:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4510:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4511:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_67);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4528:3: (otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==74) ) {
                alt107=1;
            }
            switch (alt107) {
                case 1 :
                    // InternalKim.g:4529:4: otherlv_1= 'for' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,74,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getForKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4533:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4534:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4534:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4535:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4556:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4556:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4557:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4563:1: ruleExecutableValue returns [EObject current=null] : ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        Token lv_urn_4_2=null;
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_1 = null;

        EObject lv_condition_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4569:2: ( ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) )
            // InternalKim.g:4570:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            {
            // InternalKim.g:4570:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
            // InternalKim.g:4571:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) ) ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            {
            // InternalKim.g:4571:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )
            int alt111=3;
            alt111 = dfa111.predict(input);
            switch (alt111) {
                case 1 :
                    // InternalKim.g:4572:4: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4572:4: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4573:5: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4573:5: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4574:6: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_68);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"function",
                      							lv_function_0_0,
                      							"org.integratedmodelling.kim.Kim.Function");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4592:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4592:4: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4593:5: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4593:5: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4594:6: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4594:6: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4595:7: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_69); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_0_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getExecutableValueRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"expr",
                      								lv_expr_1_0,
                      								"org.integratedmodelling.kim.Kim.EXPR");
                      						
                    }

                    }


                    }

                    // InternalKim.g:4611:5: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt109=2;
                    int LA109_0 = input.LA(1);

                    if ( (LA109_0==53) ) {
                        alt109=1;
                    }
                    switch (alt109) {
                        case 1 :
                            // InternalKim.g:4612:6: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,53,FOLLOW_66); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_0_1_1_0());
                              					
                            }
                            // InternalKim.g:4616:6: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4617:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4617:7: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4618:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4618:8: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt108=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt108=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt108=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt108=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 108, 0, input);

                                throw nvae;
                            }

                            switch (alt108) {
                                case 1 :
                                    // InternalKim.g:4619:9: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_0_1_1_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_1,
                                      										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4634:9: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_0_1_1_1_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4649:9: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_0_1_1_1_0_2());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getExecutableValueRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"language",
                                      										lv_language_3_3,
                                      										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4669:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    {
                    // InternalKim.g:4669:4: ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) )
                    // InternalKim.g:4670:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    {
                    // InternalKim.g:4670:5: ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) )
                    // InternalKim.g:4671:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    {
                    // InternalKim.g:4671:6: (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING )
                    int alt110=2;
                    int LA110_0 = input.LA(1);

                    if ( ((LA110_0>=RULE_LOWERCASE_ID && LA110_0<=RULE_UPPERCASE_ID)||LA110_0==RULE_LOWERCASE_DASHID||LA110_0==109) ) {
                        alt110=1;
                    }
                    else if ( (LA110_0==RULE_STRING) ) {
                        alt110=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 110, 0, input);

                        throw nvae;
                    }
                    switch (alt110) {
                        case 1 :
                            // InternalKim.g:4672:7: lv_urn_4_1= ruleUrnId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_0_2_0_0());
                              						
                            }
                            pushFollow(FOLLOW_68);
                            lv_urn_4_1=ruleUrnId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                              							}
                              							set(
                              								current,
                              								"urn",
                              								lv_urn_4_1,
                              								"org.integratedmodelling.kim.Kim.UrnId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4688:7: lv_urn_4_2= RULE_STRING
                            {
                            lv_urn_4_2=(Token)match(input,RULE_STRING,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_urn_4_2, grammarAccess.getExecutableValueAccess().getUrnSTRINGTerminalRuleCall_0_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"urn",
                              								lv_urn_4_2,
                              								"org.eclipse.xtext.common.Terminals.STRING");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4706:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
            int alt113=2;
            alt113 = dfa113.predict(input);
            switch (alt113) {
                case 1 :
                    // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
                    {
                    // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
                    int alt112=2;
                    int LA112_0 = input.LA(1);

                    if ( (LA112_0==49) ) {
                        alt112=1;
                    }
                    else if ( (LA112_0==50) ) {
                        alt112=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 112, 0, input);

                        throw nvae;
                    }
                    switch (alt112) {
                        case 1 :
                            // InternalKim.g:4708:5: otherlv_5= 'if'
                            {
                            otherlv_5=(Token)match(input,49,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_5, grammarAccess.getExecutableValueAccess().getIfKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            {
                            // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                            // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                            {
                            // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                            // InternalKim.g:4715:7: lv_conditionNegated_6_0= 'unless'
                            {
                            lv_conditionNegated_6_0=(Token)match(input,50,FOLLOW_12); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_conditionNegated_6_0, grammarAccess.getExecutableValueAccess().getConditionNegatedUnlessKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getExecutableValueRule());
                              							}
                              							setWithLastConsumed(current, "conditionNegated", lv_conditionNegated_6_0 != null, "unless");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:4728:4: ( (lv_condition_7_0= ruleValue ) )
                    // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
                    {
                    // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
                    // InternalKim.g:4730:6: lv_condition_7_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_condition_7_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      						}
                      						set(
                      							current,
                      							"condition",
                      							lv_condition_7_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4752:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4752:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4753:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4759:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4765:2: ( (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4766:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4766:2: (kw= 'model' | kw= 'learn' | kw= 'number' | kw= 'object' | kw= 'text' | kw= 'boolean' )
            int alt114=6;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt114=1;
                }
                break;
            case 76:
                {
                alt114=2;
                }
                break;
            case 77:
                {
                alt114=3;
                }
                break;
            case 78:
                {
                alt114=4;
                }
                break;
            case 79:
                {
                alt114=5;
                }
                break;
            case 80:
                {
                alt114=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 114, 0, input);

                throw nvae;
            }

            switch (alt114) {
                case 1 :
                    // InternalKim.g:4767:3: kw= 'model'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4773:3: kw= 'learn'
                    {
                    kw=(Token)match(input,76,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4779:3: kw= 'number'
                    {
                    kw=(Token)match(input,77,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4785:3: kw= 'object'
                    {
                    kw=(Token)match(input,78,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getObjectKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4791:3: kw= 'text'
                    {
                    kw=(Token)match(input,79,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4797:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleVALUE_OPERATOR"
    // InternalKim.g:4806:1: entryRuleVALUE_OPERATOR returns [String current=null] : iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF ;
    public final String entryRuleVALUE_OPERATOR() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVALUE_OPERATOR = null;


        try {
            // InternalKim.g:4806:54: (iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF )
            // InternalKim.g:4807:2: iv_ruleVALUE_OPERATOR= ruleVALUE_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVALUE_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVALUE_OPERATOR=ruleVALUE_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVALUE_OPERATOR.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVALUE_OPERATOR"


    // $ANTLR start "ruleVALUE_OPERATOR"
    // InternalKim.g:4813:1: ruleVALUE_OPERATOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) ;
    public final AntlrDatatypeRuleToken ruleVALUE_OPERATOR() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4819:2: ( (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' ) )
            // InternalKim.g:4820:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            {
            // InternalKim.g:4820:2: (kw= '>' | kw= '>=' | kw= '<=' | kw= '<' | kw= 'where' | kw= '==' | kw= '=' | kw= 'only' | kw= 'without' | kw= '!=' | kw= 'plus' | kw= 'minus' | kw= 'times' | kw= 'over' | kw= 'by' )
            int alt115=15;
            switch ( input.LA(1) ) {
            case 81:
                {
                alt115=1;
                }
                break;
            case 82:
                {
                alt115=2;
                }
                break;
            case 83:
                {
                alt115=3;
                }
                break;
            case 84:
                {
                alt115=4;
                }
                break;
            case 85:
                {
                alt115=5;
                }
                break;
            case 86:
                {
                alt115=6;
                }
                break;
            case 47:
                {
                alt115=7;
                }
                break;
            case 87:
                {
                alt115=8;
                }
                break;
            case 88:
                {
                alt115=9;
                }
                break;
            case 89:
                {
                alt115=10;
                }
                break;
            case 90:
                {
                alt115=11;
                }
                break;
            case 91:
                {
                alt115=12;
                }
                break;
            case 92:
                {
                alt115=13;
                }
                break;
            case 60:
                {
                alt115=14;
                }
                break;
            case 93:
                {
                alt115=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 115, 0, input);

                throw nvae;
            }

            switch (alt115) {
                case 1 :
                    // InternalKim.g:4821:3: kw= '>'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4827:3: kw= '>='
                    {
                    kw=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getGreaterThanSignEqualsSignKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4833:3: kw= '<='
                    {
                    kw=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignEqualsSignKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4839:3: kw= '<'
                    {
                    kw=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getLessThanSignKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4845:3: kw= 'where'
                    {
                    kw=(Token)match(input,85,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWhereKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4851:3: kw= '=='
                    {
                    kw=(Token)match(input,86,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignEqualsSignKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:4857:3: kw= '='
                    {
                    kw=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getEqualsSignKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:4863:3: kw= 'only'
                    {
                    kw=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOnlyKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:4869:3: kw= 'without'
                    {
                    kw=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getWithoutKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:4875:3: kw= '!='
                    {
                    kw=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getExclamationMarkEqualsSignKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:4881:3: kw= 'plus'
                    {
                    kw=(Token)match(input,90,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getPlusKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:4887:3: kw= 'minus'
                    {
                    kw=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getMinusKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:4893:3: kw= 'times'
                    {
                    kw=(Token)match(input,92,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getTimesKeyword_12());
                      		
                    }

                    }
                    break;
                case 14 :
                    // InternalKim.g:4899:3: kw= 'over'
                    {
                    kw=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getOverKeyword_13());
                      		
                    }

                    }
                    break;
                case 15 :
                    // InternalKim.g:4905:3: kw= 'by'
                    {
                    kw=(Token)match(input,93,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getVALUE_OPERATORAccess().getByKeyword_14());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVALUE_OPERATOR"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4914:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4920:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4921:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4930:1: ruleNamespace returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;
        Token lv_inactive_5_0=null;
        Token otherlv_6=null;
        Token lv_scenario_7_0=null;
        Token lv_worldviewBound_8_0=null;
        Token lv_docstring_10_0=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        AntlrDatatypeRuleToken lv_name_9_0 = null;

        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;

        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;

        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;

        EObject lv_domainConcept_30_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;

        AntlrDatatypeRuleToken lv_version_37_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;

        EObject lv_parameters_47_0 = null;

        EObject lv_metadata_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()
        	);

        try {
            // InternalKim.g:4941:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:4942:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:4942:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';' )
            // InternalKim.g:4943:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) ) ( (lv_name_9_0= rulePathName ) ) ( (lv_docstring_10_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )? (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:4943:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt117=2;
            int LA117_0 = input.LA(1);

            if ( (LA117_0==RULE_ANNOTATION_ID) ) {
                alt117=1;
            }
            switch (alt117) {
                case 1 :
                    // InternalKim.g:4944:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:4944:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:4945:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:4945:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:4946:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:4963:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop116:
                    do {
                        int alt116=2;
                        int LA116_0 = input.LA(1);

                        if ( (LA116_0==RULE_ANNOTATION_ID) ) {
                            alt116=1;
                        }


                        switch (alt116) {
                    	case 1 :
                    	    // InternalKim.g:4964:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:4964:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:4965:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_70);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop116;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:4983:3: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4984:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4984:4: ( ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4985:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4988:5: ( ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4989:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4989:6: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )*
            loop119:
            do {
                int alt119=3;
                int LA119_0 = input.LA(1);

                if ( LA119_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt119=1;
                }
                else if ( LA119_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt119=1;
                }
                else if ( LA119_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt119=2;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
            	    // InternalKim.g:4991:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4991:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4992:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4995:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
            	    // InternalKim.g:4995:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4995:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
            	    // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
            	    {
            	    // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )?
            	    int alt118=2;
            	    int LA118_0 = input.LA(1);

            	    if ( (LA118_0==23) ) {
            	        alt118=1;
            	    }
            	    switch (alt118) {
            	        case 1 :
            	            // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
            	            {
            	            // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
            	            // InternalKim.g:4997:11: lv_projectPrivate_3_0= 'project'
            	            {
            	            lv_projectPrivate_3_0=(Token)match(input,23,FOLLOW_7); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_projectPrivate_3_0, grammarAccess.getNamespaceAccess().getProjectPrivateProjectKeyword_1_0_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getNamespaceRule());
            	              											}
            	              											setWithLastConsumed(current, "projectPrivate", lv_projectPrivate_3_0 != null, "project");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5009:9: ( (lv_private_4_0= 'private' ) )
            	    // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
            	    {
            	    // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
            	    // InternalKim.g:5011:11: lv_private_4_0= 'private'
            	    {
            	    lv_private_4_0=(Token)match(input,24,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_private_4_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(current, "private", lv_private_4_0 != null, "private");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
            	    // InternalKim.g:5030:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:5030:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
            	    // InternalKim.g:5031:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:5034:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
            	    // InternalKim.g:5034:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5034:19: ( (lv_inactive_5_0= 'void' ) )
            	    // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
            	    {
            	    // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
            	    // InternalKim.g:5035:10: lv_inactive_5_0= 'void'
            	    {
            	    lv_inactive_5_0=(Token)match(input,22,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_5_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", lv_inactive_5_0 != null, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:5059:3: (otherlv_6= 'namespace' | ( (lv_scenario_7_0= 'scenario' ) ) | ( (lv_worldviewBound_8_0= 'worldview' ) ) )
            int alt120=3;
            switch ( input.LA(1) ) {
            case 94:
                {
                alt120=1;
                }
                break;
            case 95:
                {
                alt120=2;
                }
                break;
            case 96:
                {
                alt120=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 120, 0, input);

                throw nvae;
            }

            switch (alt120) {
                case 1 :
                    // InternalKim.g:5060:4: otherlv_6= 'namespace'
                    {
                    otherlv_6=(Token)match(input,94,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5065:4: ( (lv_scenario_7_0= 'scenario' ) )
                    {
                    // InternalKim.g:5065:4: ( (lv_scenario_7_0= 'scenario' ) )
                    // InternalKim.g:5066:5: (lv_scenario_7_0= 'scenario' )
                    {
                    // InternalKim.g:5066:5: (lv_scenario_7_0= 'scenario' )
                    // InternalKim.g:5067:6: lv_scenario_7_0= 'scenario'
                    {
                    lv_scenario_7_0=(Token)match(input,95,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_7_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", lv_scenario_7_0 != null, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:5080:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    {
                    // InternalKim.g:5080:4: ( (lv_worldviewBound_8_0= 'worldview' ) )
                    // InternalKim.g:5081:5: (lv_worldviewBound_8_0= 'worldview' )
                    {
                    // InternalKim.g:5081:5: (lv_worldviewBound_8_0= 'worldview' )
                    // InternalKim.g:5082:6: lv_worldviewBound_8_0= 'worldview'
                    {
                    lv_worldviewBound_8_0=(Token)match(input,96,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_8_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", lv_worldviewBound_8_0 != null, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5095:3: ( (lv_name_9_0= rulePathName ) )
            // InternalKim.g:5096:4: (lv_name_9_0= rulePathName )
            {
            // InternalKim.g:5096:4: (lv_name_9_0= rulePathName )
            // InternalKim.g:5097:5: lv_name_9_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_72);
            lv_name_9_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_9_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:5114:3: ( (lv_docstring_10_0= RULE_STRING ) )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==RULE_STRING) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalKim.g:5115:4: (lv_docstring_10_0= RULE_STRING )
                    {
                    // InternalKim.g:5115:4: (lv_docstring_10_0= RULE_STRING )
                    // InternalKim.g:5116:5: lv_docstring_10_0= RULE_STRING
                    {
                    lv_docstring_10_0=(Token)match(input,RULE_STRING,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_10_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_10_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:5132:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:5133:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:5133:4: ( ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:5134:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:5137:5: ( ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:5138:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:5138:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop131:
            do {
                int alt131=9;
                alt131 = dfa131.predict(input);
                switch (alt131) {
            	case 1 :
            	    // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:5140:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:5140:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
            	    // InternalKim.g:5141:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:5144:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
            	    // InternalKim.g:5144:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5144:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
            	    // InternalKim.g:5144:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    {
            	    otherlv_12=(Token)match(input,32,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,97,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getNamespaceAccess().getLanguageKeyword_5_0_1());
            	      								
            	    }
            	    // InternalKim.g:5152:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
            	    // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    {
            	    // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
            	    // InternalKim.g:5154:11: lv_language_14_0= RULE_UPPERCASE_ID
            	    {
            	    lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_language_14_0, grammarAccess.getNamespaceAccess().getLanguageUPPERCASE_IDTerminalRuleCall_5_0_2_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getNamespaceRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"language",
            	      												lv_language_14_0,
            	      												"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:5177:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:5177:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:5178:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:5181:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:5181:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5181:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
            	    // InternalKim.g:5181:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    {
            	    otherlv_15=(Token)match(input,32,FOLLOW_76); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getNamespaceAccess().getUsingKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:5185:9: ( (lv_imported_16_0= ruleImport ) )
            	    // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
            	    {
            	    // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
            	    // InternalKim.g:5187:11: lv_imported_16_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_imported_16_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_16_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5204:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
            	    loop122:
            	    do {
            	        int alt122=2;
            	        int LA122_0 = input.LA(1);

            	        if ( (LA122_0==28) ) {
            	            alt122=1;
            	        }


            	        switch (alt122) {
            	    	case 1 :
            	    	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' )
            	    	    // InternalKim.g:5206:11: ( ',' )=>otherlv_17= ','
            	    	    {
            	    	    otherlv_17=(Token)match(input,28,FOLLOW_76); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_17, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:5212:10: ( (lv_imported_18_0= ruleImport ) )
            	    	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
            	    	    // InternalKim.g:5214:12: lv_imported_18_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_imported_18_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_18_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop122;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:5239:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:5239:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:5240:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:5243:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:5243:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5243:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:5243:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_19=(Token)match(input,98,FOLLOW_78); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getNamespaceAccess().getImportsKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:5247:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
            	    // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
            	    // InternalKim.g:5249:11: lv_owlImports_20_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_owlImports_20_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_20_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5266:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
            	    loop123:
            	    do {
            	        int alt123=2;
            	        int LA123_0 = input.LA(1);

            	        if ( (LA123_0==28) ) {
            	            alt123=1;
            	        }


            	        switch (alt123) {
            	    	case 1 :
            	    	    // InternalKim.g:5267:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_21=(Token)match(input,28,FOLLOW_78); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_21, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:5271:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
            	    	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
            	    	    // InternalKim.g:5273:12: lv_owlImports_22_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_owlImports_22_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_22_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop123;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:5298:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:5298:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:5299:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:5302:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:5302:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5302:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
            	    // InternalKim.g:5302:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,99,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_3_0());
            	      								
            	    }
            	    // InternalKim.g:5306:9: ( (lv_coverage_24_0= ruleFunction ) )
            	    // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
            	    {
            	    // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
            	    // InternalKim.g:5308:11: lv_coverage_24_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_coverage_24_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_24_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5325:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
            	    loop124:
            	    do {
            	        int alt124=2;
            	        int LA124_0 = input.LA(1);

            	        if ( (LA124_0==28) ) {
            	            alt124=1;
            	        }


            	        switch (alt124) {
            	    	case 1 :
            	    	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' )
            	    	    // InternalKim.g:5327:11: ( ',' )=>otherlv_25= ','
            	    	    {
            	    	    otherlv_25=(Token)match(input,28,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_25, grammarAccess.getNamespaceAccess().getCommaKeyword_5_3_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:5333:10: ( (lv_coverage_26_0= ruleFunction ) )
            	    	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
            	    	    // InternalKim.g:5335:12: lv_coverage_26_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_coverage_26_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop124;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:5360:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:5360:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5361:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:5364:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5364:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5364:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5364:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,53,FOLLOW_79); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getInKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_28=(Token)match(input,100,FOLLOW_80); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getNamespaceAccess().getDomainKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:5372:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
            	    int alt125=2;
            	    int LA125_0 = input.LA(1);

            	    if ( (LA125_0==101) ) {
            	        alt125=1;
            	    }
            	    else if ( ((LA125_0>=RULE_LOWERCASE_ID && LA125_0<=RULE_UPPERCASE_ID)||LA125_0==RULE_CAMELCASE_ID||LA125_0==RULE_LOWERCASE_DASHID||LA125_0==RULE_UPPERCASE_PATH||LA125_0==39||(LA125_0>=138 && LA125_0<=139)||(LA125_0>=147 && LA125_0<=148)||(LA125_0>=150 && LA125_0<=155)||(LA125_0>=157 && LA125_0<=168)) ) {
            	        alt125=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 125, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt125) {
            	        case 1 :
            	            // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            {
            	            // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
            	            // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
            	            {
            	            // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
            	            // InternalKim.g:5375:12: lv_rootDomain_29_0= 'root'
            	            {
            	            lv_rootDomain_29_0=(Token)match(input,101,FOLLOW_73); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_29_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_4_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", lv_rootDomain_29_0 != null, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
            	            // InternalKim.g:5390:12: lv_domainConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_73);
            	            lv_domainConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
            	    // InternalKim.g:5415:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:5415:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
            	    // InternalKim.g:5416:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:5419:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
            	    // InternalKim.g:5419:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5419:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
            	    // InternalKim.g:5419:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,102,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,103,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getNamespaceAccess().getWithKeyword_5_5_1());
            	      								
            	    }
            	    // InternalKim.g:5427:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
            	    // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    {
            	    // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
            	    // InternalKim.g:5429:11: lv_disjointNamespaces_33_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_77);
            	    lv_disjointNamespaces_33_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_33_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:5446:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
            	    loop126:
            	    do {
            	        int alt126=2;
            	        int LA126_0 = input.LA(1);

            	        if ( (LA126_0==28) ) {
            	            alt126=1;
            	        }


            	        switch (alt126) {
            	    	case 1 :
            	    	    // InternalKim.g:5447:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )
            	    	    {
            	    	    otherlv_34=(Token)match(input,28,FOLLOW_26); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getCommaKeyword_5_5_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:5451:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )
            	    	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
            	    	    // InternalKim.g:5453:12: lv_disjointNamespaces_35_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_77);
            	    	    lv_disjointNamespaces_35_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_35_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop126;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:5478:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:5478:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:5479:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:5482:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:5482:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5482:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:5482:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
            	    {
            	    otherlv_36=(Token)match(input,104,FOLLOW_82); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_36, grammarAccess.getNamespaceAccess().getVersionKeyword_5_6_0());
            	      								
            	    }
            	    // InternalKim.g:5486:9: ( (lv_version_37_0= ruleVersionNumber ) )
            	    // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
            	    // InternalKim.g:5488:11: lv_version_37_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_73);
            	    lv_version_37_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_37_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:5512:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
            	    }
            	    // InternalKim.g:5512:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:5513:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
            	    // InternalKim.g:5516:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:5516:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:5516:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:5517:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
            	    // InternalKim.g:5520:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+
            	    int cnt130=0;
            	    loop130:
            	    do {
            	        int alt130=4;
            	        switch ( input.LA(1) ) {
            	        case 32:
            	            {
            	            int LA130_2 = input.LA(2);

            	            if ( synpred232_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	                alt130=3;
            	            }


            	            }
            	            break;
            	        case 105:
            	            {
            	            int LA130_3 = input.LA(2);

            	            if ( synpred229_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	                alt130=1;
            	            }


            	            }
            	            break;
            	        case 107:
            	            {
            	            int LA130_4 = input.LA(2);

            	            if ( synpred231_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	                alt130=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt130) {
            	    	case 1 :
            	    	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:5523:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
            	    	    }
            	    	    // InternalKim.g:5523:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:5524:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
            	    	    // InternalKim.g:5527:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:5527:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5527:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:5527:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_39=(Token)match(input,105,FOLLOW_83); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getResolveKeyword_5_7_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5531:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
            	    	    int alt128=2;
            	    	    int LA128_0 = input.LA(1);

            	    	    if ( (LA128_0==106) ) {
            	    	        alt128=1;
            	    	    }
            	    	    switch (alt128) {
            	    	        case 1 :
            	    	            // InternalKim.g:5532:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_40=(Token)match(input,106,FOLLOW_84); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_40, grammarAccess.getNamespaceAccess().getFromKeyword_5_7_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:5536:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
            	    	            loop127:
            	    	            do {
            	    	                int alt127=2;
            	    	                int LA127_0 = input.LA(1);

            	    	                if ( ((LA127_0>=RULE_LOWERCASE_ID && LA127_0<=RULE_UPPERCASE_ID)||LA127_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt127=1;
            	    	                }


            	    	                switch (alt127) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
            	    	            	    // InternalKim.g:5538:17: lv_lookupNamespace_41_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_84);
            	    	            	    lv_lookupNamespace_41_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_41_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop127;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:5563:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
            	    	    }
            	    	    // InternalKim.g:5563:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:5564:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
            	    	    // InternalKim.g:5567:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:5567:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5567:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
            	    	    // InternalKim.g:5567:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_42=(Token)match(input,107,FOLLOW_84); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_7_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5571:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
            	    	    loop129:
            	    	    do {
            	    	        int alt129=2;
            	    	        int LA129_0 = input.LA(1);

            	    	        if ( ((LA129_0>=RULE_LOWERCASE_ID && LA129_0<=RULE_UPPERCASE_ID)||LA129_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt129=1;
            	    	        }


            	    	        switch (alt129) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
            	    	    	    // InternalKim.g:5573:16: lv_blacklistNamespace_43_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_84);
            	    	    	    lv_blacklistNamespace_43_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_43_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop129;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
            	    	    // InternalKim.g:5597:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
            	    	    }
            	    	    // InternalKim.g:5597:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
            	    	    // InternalKim.g:5598:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
            	    	    // InternalKim.g:5601:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
            	    	    // InternalKim.g:5601:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:5601:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
            	    	    // InternalKim.g:5601:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
            	    	    {
            	    	    otherlv_44=(Token)match(input,32,FOLLOW_37); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getUsingKeyword_5_7_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:5605:14: ( (lv_weights_45_0= ruleMap ) )
            	    	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
            	    	    {
            	    	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
            	    	    // InternalKim.g:5607:16: lv_weights_45_0= ruleMap
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_73);
            	    	    lv_weights_45_0=ruleMap();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_45_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Map");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt130 >= 1 ) break loop130;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(130, input);
            	                throw eee;
            	        }
            	        cnt130++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop131;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:5650:3: (otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) ) )?
            int alt132=2;
            int LA132_0 = input.LA(1);

            if ( (LA132_0==108) ) {
                alt132=1;
            }
            switch (alt132) {
                case 1 :
                    // InternalKim.g:5651:4: otherlv_46= 'parameters' ( (lv_parameters_47_0= ruleMap ) )
                    {
                    otherlv_46=(Token)match(input,108,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getNamespaceAccess().getParametersKeyword_6_0());
                      			
                    }
                    // InternalKim.g:5655:4: ( (lv_parameters_47_0= ruleMap ) )
                    // InternalKim.g:5656:5: (lv_parameters_47_0= ruleMap )
                    {
                    // InternalKim.g:5656:5: (lv_parameters_47_0= ruleMap )
                    // InternalKim.g:5657:6: lv_parameters_47_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMapParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_85);
                    lv_parameters_47_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_47_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:5675:3: (otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) ) )?
            int alt133=2;
            int LA133_0 = input.LA(1);

            if ( (LA133_0==42) ) {
                alt133=1;
            }
            switch (alt133) {
                case 1 :
                    // InternalKim.g:5676:4: otherlv_48= 'metadata' ( (lv_metadata_49_0= ruleMap ) )
                    {
                    otherlv_48=(Token)match(input,42,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_0());
                      			
                    }
                    // InternalKim.g:5680:4: ( (lv_metadata_49_0= ruleMap ) )
                    // InternalKim.g:5681:5: (lv_metadata_49_0= ruleMap )
                    {
                    // InternalKim.g:5681:5: (lv_metadata_49_0= ruleMap )
                    // InternalKim.g:5682:6: lv_metadata_49_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMapParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_metadata_49_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_49_0,
                      							"org.integratedmodelling.kim.Kim.Map");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,21,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5711:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5711:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5712:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5718:1: ruleOwlImport returns [EObject current=null] : ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;
        Token otherlv_5=null;
        AntlrDatatypeRuleToken lv_single_3_0 = null;

        EObject lv_imports_4_0 = null;

        AntlrDatatypeRuleToken lv_urn_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5724:2: ( ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) ) )
            // InternalKim.g:5725:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) )
            {
            // InternalKim.g:5725:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) | ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) ) )
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_STRING) ) {
                alt135=1;
            }
            else if ( ((LA135_0>=RULE_LOWERCASE_ID && LA135_0<=RULE_UPPERCASE_ID)||LA135_0==RULE_LOWERCASE_DASHID||LA135_0==39) ) {
                alt135=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 135, 0, input);

                throw nvae;
            }
            switch (alt135) {
                case 1 :
                    // InternalKim.g:5726:3: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
                    {
                    // InternalKim.g:5726:3: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
                    // InternalKim.g:5727:4: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:5727:4: ( (lv_name_0_0= RULE_STRING ) )
                    // InternalKim.g:5728:5: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:5728:5: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:5729:6: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getOwlImportRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_0,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }


                    }

                    // InternalKim.g:5745:4: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:5746:5: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,26,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_0_1_0());
                      				
                    }
                    // InternalKim.g:5750:5: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:5751:6: (lv_prefix_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:5751:6: (lv_prefix_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:5752:7: lv_prefix_2_0= RULE_LOWERCASE_ID
                    {
                    lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_0_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getOwlImportRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"prefix",
                      								lv_prefix_2_0,
                      								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:5771:3: ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) )
                    {
                    // InternalKim.g:5771:3: ( ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) ) )
                    // InternalKim.g:5772:4: ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) ) otherlv_5= 'from' ( (lv_urn_6_0= ruleUrnId ) )
                    {
                    // InternalKim.g:5772:4: ( ( (lv_single_3_0= rulePathName ) ) | ( (lv_imports_4_0= ruleList ) ) )
                    int alt134=2;
                    int LA134_0 = input.LA(1);

                    if ( ((LA134_0>=RULE_LOWERCASE_ID && LA134_0<=RULE_UPPERCASE_ID)||LA134_0==RULE_LOWERCASE_DASHID) ) {
                        alt134=1;
                    }
                    else if ( (LA134_0==39) ) {
                        alt134=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 134, 0, input);

                        throw nvae;
                    }
                    switch (alt134) {
                        case 1 :
                            // InternalKim.g:5773:5: ( (lv_single_3_0= rulePathName ) )
                            {
                            // InternalKim.g:5773:5: ( (lv_single_3_0= rulePathName ) )
                            // InternalKim.g:5774:6: (lv_single_3_0= rulePathName )
                            {
                            // InternalKim.g:5774:6: (lv_single_3_0= rulePathName )
                            // InternalKim.g:5775:7: lv_single_3_0= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOwlImportAccess().getSinglePathNameParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_single_3_0=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOwlImportRule());
                              							}
                              							set(
                              								current,
                              								"single",
                              								lv_single_3_0,
                              								"org.integratedmodelling.kim.Kim.PathName");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5793:5: ( (lv_imports_4_0= ruleList ) )
                            {
                            // InternalKim.g:5793:5: ( (lv_imports_4_0= ruleList ) )
                            // InternalKim.g:5794:6: (lv_imports_4_0= ruleList )
                            {
                            // InternalKim.g:5794:6: (lv_imports_4_0= ruleList )
                            // InternalKim.g:5795:7: lv_imports_4_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getOwlImportAccess().getImportsListParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_imports_4_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getOwlImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_4_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_5=(Token)match(input,106,FOLLOW_87); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getOwlImportAccess().getFromKeyword_1_1());
                      			
                    }
                    // InternalKim.g:5817:4: ( (lv_urn_6_0= ruleUrnId ) )
                    // InternalKim.g:5818:5: (lv_urn_6_0= ruleUrnId )
                    {
                    // InternalKim.g:5818:5: (lv_urn_6_0= ruleUrnId )
                    // InternalKim.g:5819:6: lv_urn_6_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getOwlImportAccess().getUrnUrnIdParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_urn_6_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getOwlImportRule());
                      						}
                      						set(
                      							current,
                      							"urn",
                      							lv_urn_6_0,
                      							"org.integratedmodelling.kim.Kim.UrnId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5841:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5841:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5842:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5848:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5854:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5855:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5855:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5856:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5856:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt137=2;
            int LA137_0 = input.LA(1);

            if ( (LA137_0==39||LA137_0==44) ) {
                alt137=1;
            }
            switch (alt137) {
                case 1 :
                    // InternalKim.g:5857:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5857:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt136=2;
                    int LA136_0 = input.LA(1);

                    if ( (LA136_0==39) ) {
                        alt136=1;
                    }
                    else if ( (LA136_0==44) ) {
                        alt136=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 136, 0, input);

                        throw nvae;
                    }
                    switch (alt136) {
                        case 1 :
                            // InternalKim.g:5858:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5858:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5859:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5859:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5860:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_86);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5878:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5878:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5879:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5879:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5880:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,44,FOLLOW_86); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", lv_star_1_0 != null, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,106,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5898:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5899:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5899:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5900:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5921:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5921:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5922:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5928:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_8=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_10 = null;

        AntlrDatatypeRuleToken this_Path_12 = null;

        AntlrDatatypeRuleToken this_UrnKvp_13 = null;

        AntlrDatatypeRuleToken this_Path_15 = null;

        AntlrDatatypeRuleToken this_UrnKvp_16 = null;



        	enterRule();

        try {
            // InternalKim.g:5934:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? ) )
            // InternalKim.g:5935:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            {
            // InternalKim.g:5935:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )? )
            // InternalKim.g:5936:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' (this_Path_7= rulePath | this_INT_8= RULE_INT ) (kw= ':' this_VersionNumber_10= ruleVersionNumber )? (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            {
            // InternalKim.g:5936:3: (kw= 'urn:klab:' )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==109) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalKim.g:5937:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,109,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            // InternalKim.g:5988:3: (this_Path_7= rulePath | this_INT_8= RULE_INT )
            int alt139=2;
            int LA139_0 = input.LA(1);

            if ( ((LA139_0>=RULE_LOWERCASE_ID && LA139_0<=RULE_UPPERCASE_ID)||LA139_0==RULE_LOWERCASE_DASHID) ) {
                alt139=1;
            }
            else if ( (LA139_0==RULE_INT) ) {
                alt139=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 139, 0, input);

                throw nvae;
            }
            switch (alt139) {
                case 1 :
                    // InternalKim.g:5989:4: this_Path_7= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7_0());
                      			
                    }
                    pushFollow(FOLLOW_90);
                    this_Path_7=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6000:4: this_INT_8= RULE_INT
                    {
                    this_INT_8=(Token)match(input,RULE_INT,FOLLOW_90); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_8, grammarAccess.getUrnIdAccess().getINTTerminalRuleCall_7_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6008:3: (kw= ':' this_VersionNumber_10= ruleVersionNumber )?
            int alt140=2;
            int LA140_0 = input.LA(1);

            if ( (LA140_0==110) ) {
                alt140=1;
            }
            switch (alt140) {
                case 1 :
                    // InternalKim.g:6009:4: kw= ':' this_VersionNumber_10= ruleVersionNumber
                    {
                    kw=(Token)match(input,110,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_91);
                    this_VersionNumber_10=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6025:3: (kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )* )?
            int alt144=2;
            int LA144_0 = input.LA(1);

            if ( (LA144_0==58) ) {
                alt144=1;
            }
            switch (alt144) {
                case 1 :
                    // InternalKim.g:6026:4: kw= '#' (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp ) (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    {
                    kw=(Token)match(input,58,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:6031:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )
                    int alt141=2;
                    alt141 = dfa141.predict(input);
                    switch (alt141) {
                        case 1 :
                            // InternalKim.g:6032:5: this_Path_12= rulePath
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_1_0());
                              				
                            }
                            pushFollow(FOLLOW_92);
                            this_Path_12=rulePath();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_Path_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6043:5: this_UrnKvp_13= ruleUrnKvp
                            {
                            if ( state.backtracking==0 ) {

                              					newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_1_1());
                              				
                            }
                            pushFollow(FOLLOW_92);
                            this_UrnKvp_13=ruleUrnKvp();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UrnKvp_13);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					afterParserOrEnumRuleCall();
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:6054:4: (kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp ) )*
                    loop143:
                    do {
                        int alt143=2;
                        int LA143_0 = input.LA(1);

                        if ( (LA143_0==111) ) {
                            alt143=1;
                        }


                        switch (alt143) {
                    	case 1 :
                    	    // InternalKim.g:6055:5: kw= '&' (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    {
                    	    kw=(Token)match(input,111,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getUrnIdAccess().getAmpersandKeyword_9_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:6060:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )
                    	    int alt142=2;
                    	    alt142 = dfa142.predict(input);
                    	    switch (alt142) {
                    	        case 1 :
                    	            // InternalKim.g:6061:6: this_Path_15= rulePath
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_9_2_1_0());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_92);
                    	            this_Path_15=rulePath();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_Path_15);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:6072:6: this_UrnKvp_16= ruleUrnKvp
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              						newCompositeNode(grammarAccess.getUrnIdAccess().getUrnKvpParserRuleCall_9_2_1_1());
                    	              					
                    	            }
                    	            pushFollow(FOLLOW_92);
                    	            this_UrnKvp_16=ruleUrnKvp();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UrnKvp_16);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						afterParserOrEnumRuleCall();
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop143;
                        }
                    } while (true);


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleWellFormedUrnIdWithFragment"
    // InternalKim.g:6089:1: entryRuleWellFormedUrnIdWithFragment returns [String current=null] : iv_ruleWellFormedUrnIdWithFragment= ruleWellFormedUrnIdWithFragment EOF ;
    public final String entryRuleWellFormedUrnIdWithFragment() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleWellFormedUrnIdWithFragment = null;


        try {
            // InternalKim.g:6089:67: (iv_ruleWellFormedUrnIdWithFragment= ruleWellFormedUrnIdWithFragment EOF )
            // InternalKim.g:6090:2: iv_ruleWellFormedUrnIdWithFragment= ruleWellFormedUrnIdWithFragment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleWellFormedUrnIdWithFragment=ruleWellFormedUrnIdWithFragment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleWellFormedUrnIdWithFragment.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleWellFormedUrnIdWithFragment"


    // $ANTLR start "ruleWellFormedUrnIdWithFragment"
    // InternalKim.g:6096:1: ruleWellFormedUrnIdWithFragment returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) ) ;
    public final AntlrDatatypeRuleToken ruleWellFormedUrnIdWithFragment() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_LOWERCASE_ID_10=null;
        Token this_UPPERCASE_ID_11=null;
        Token this_INT_12=null;
        Token this_STRING_13=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_PathName_2 = null;

        AntlrDatatypeRuleToken this_PathName_4 = null;

        AntlrDatatypeRuleToken this_PathName_6 = null;

        AntlrDatatypeRuleToken this_VersionNumber_8 = null;



        	enterRule();

        try {
            // InternalKim.g:6102:2: ( (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) ) )
            // InternalKim.g:6103:2: (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) )
            {
            // InternalKim.g:6103:2: (this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING ) )
            // InternalKim.g:6104:3: this_PathName_0= rulePathName kw= ':' this_PathName_2= rulePathName kw= ':' this_PathName_4= rulePathName kw= ':' this_PathName_6= rulePathName (kw= ':' this_VersionNumber_8= ruleVersionNumber )? kw= '#' (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_1());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_2());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_2=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_2);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_3());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_4());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_4=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_4);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_26); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_5());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getPathNameParserRuleCall_6());
              		
            }
            pushFollow(FOLLOW_93);
            this_PathName_6=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_6);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:6159:3: (kw= ':' this_VersionNumber_8= ruleVersionNumber )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==110) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalKim.g:6160:4: kw= ':' this_VersionNumber_8= ruleVersionNumber
                    {
                    kw=(Token)match(input,110,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getColonKeyword_7_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getWellFormedUrnIdWithFragmentAccess().getVersionNumberParserRuleCall_7_1());
                      			
                    }
                    pushFollow(FOLLOW_94);
                    this_VersionNumber_8=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,58,FOLLOW_95); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getNumberSignKeyword_8());
              		
            }
            // InternalKim.g:6181:3: (this_LOWERCASE_ID_10= RULE_LOWERCASE_ID | this_UPPERCASE_ID_11= RULE_UPPERCASE_ID | this_INT_12= RULE_INT | this_STRING_13= RULE_STRING )
            int alt146=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt146=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt146=2;
                }
                break;
            case RULE_INT:
                {
                alt146=3;
                }
                break;
            case RULE_STRING:
                {
                alt146=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 146, 0, input);

                throw nvae;
            }

            switch (alt146) {
                case 1 :
                    // InternalKim.g:6182:4: this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getLOWERCASE_IDTerminalRuleCall_9_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6190:4: this_UPPERCASE_ID_11= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_11=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_11);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_11, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getUPPERCASE_IDTerminalRuleCall_9_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:6198:4: this_INT_12= RULE_INT
                    {
                    this_INT_12=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_12);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_12, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getINTTerminalRuleCall_9_2());
                      			
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:6206:4: this_STRING_13= RULE_STRING
                    {
                    this_STRING_13=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_STRING_13);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_STRING_13, grammarAccess.getWellFormedUrnIdWithFragmentAccess().getSTRINGTerminalRuleCall_9_3());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleWellFormedUrnIdWithFragment"


    // $ANTLR start "entryRuleUrnKvp"
    // InternalKim.g:6218:1: entryRuleUrnKvp returns [String current=null] : iv_ruleUrnKvp= ruleUrnKvp EOF ;
    public final String entryRuleUrnKvp() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnKvp = null;


        try {
            // InternalKim.g:6218:46: (iv_ruleUrnKvp= ruleUrnKvp EOF )
            // InternalKim.g:6219:2: iv_ruleUrnKvp= ruleUrnKvp EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnKvpRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnKvp=ruleUrnKvp();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnKvp.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnKvp"


    // $ANTLR start "ruleUrnKvp"
    // InternalKim.g:6225:1: ruleUrnKvp returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) ;
    public final AntlrDatatypeRuleToken ruleUrnKvp() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_INT_3=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;

        AntlrDatatypeRuleToken this_Path_2 = null;



        	enterRule();

        try {
            // InternalKim.g:6231:2: ( (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) ) )
            // InternalKim.g:6232:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            {
            // InternalKim.g:6232:2: (this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT ) )
            // InternalKim.g:6233:3: this_PathName_0= rulePathName kw= '=' (this_Path_2= rulePath | this_INT_3= RULE_INT )
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnKvpAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_38);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,47,FOLLOW_89); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnKvpAccess().getEqualsSignKeyword_1());
              		
            }
            // InternalKim.g:6248:3: (this_Path_2= rulePath | this_INT_3= RULE_INT )
            int alt147=2;
            int LA147_0 = input.LA(1);

            if ( ((LA147_0>=RULE_LOWERCASE_ID && LA147_0<=RULE_UPPERCASE_ID)||LA147_0==RULE_LOWERCASE_DASHID) ) {
                alt147=1;
            }
            else if ( (LA147_0==RULE_INT) ) {
                alt147=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 147, 0, input);

                throw nvae;
            }
            switch (alt147) {
                case 1 :
                    // InternalKim.g:6249:4: this_Path_2= rulePath
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnKvpAccess().getPathParserRuleCall_2_0());
                      			
                    }
                    pushFollow(FOLLOW_2);
                    this_Path_2=rulePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_Path_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6260:4: this_INT_3= RULE_INT
                    {
                    this_INT_3=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_3, grammarAccess.getUrnKvpAccess().getINTTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnKvp"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:6272:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:6272:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:6273:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:6279:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:6285:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:6286:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:6286:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:6287:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:6287:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt148=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt148=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt148=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt148=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 148, 0, input);

                throw nvae;
            }

            switch (alt148) {
                case 1 :
                    // InternalKim.g:6288:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:6296:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:6304:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_96); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6312:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop150:
            do {
                int alt150=2;
                int LA150_0 = input.LA(1);

                if ( (LA150_0==112) ) {
                    alt150=1;
                }


                switch (alt150) {
            	case 1 :
            	    // InternalKim.g:6313:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,112,FOLLOW_97); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:6318:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt149=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt149=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt149=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt149=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 149, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt149) {
            	        case 1 :
            	            // InternalKim.g:6319:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6327:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:6335:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop150;
                }
            } while (true);

            // InternalKim.g:6344:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt151=2;
            int LA151_0 = input.LA(1);

            if ( (LA151_0==113) ) {
                alt151=1;
            }
            switch (alt151) {
                case 1 :
                    // InternalKim.g:6345:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,113,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_91); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6358:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt152=2;
            int LA152_0 = input.LA(1);

            if ( (LA152_0==58) ) {
                alt152=1;
            }
            switch (alt152) {
                case 1 :
                    // InternalKim.g:6359:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,58,FOLLOW_39); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:6376:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:6376:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:6377:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:6383:1: ruleObserveStatement returns [EObject current=null] : ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_annotations_1_0 = null;

        EObject lv_body_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6389:2: ( ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:6390:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:6390:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:6391:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )? otherlv_2= 'observe' ( (lv_body_3_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:6391:3: ( ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )* )?
            int alt154=2;
            int LA154_0 = input.LA(1);

            if ( (LA154_0==RULE_ANNOTATION_ID) ) {
                alt154=1;
            }
            switch (alt154) {
                case 1 :
                    // InternalKim.g:6392:4: ( (lv_annotations_0_0= ruleAnnotation ) ) ( (lv_annotations_1_0= ruleAnnotation ) )*
                    {
                    // InternalKim.g:6392:4: ( (lv_annotations_0_0= ruleAnnotation ) )
                    // InternalKim.g:6393:5: (lv_annotations_0_0= ruleAnnotation )
                    {
                    // InternalKim.g:6393:5: (lv_annotations_0_0= ruleAnnotation )
                    // InternalKim.g:6394:6: lv_annotations_0_0= ruleAnnotation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_98);
                    lv_annotations_0_0=ruleAnnotation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                      						}
                      						add(
                      							current,
                      							"annotations",
                      							lv_annotations_0_0,
                      							"org.integratedmodelling.kim.Kim.Annotation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:6411:4: ( (lv_annotations_1_0= ruleAnnotation ) )*
                    loop153:
                    do {
                        int alt153=2;
                        int LA153_0 = input.LA(1);

                        if ( (LA153_0==RULE_ANNOTATION_ID) ) {
                            alt153=1;
                        }


                        switch (alt153) {
                    	case 1 :
                    	    // InternalKim.g:6412:5: (lv_annotations_1_0= ruleAnnotation )
                    	    {
                    	    // InternalKim.g:6412:5: (lv_annotations_1_0= ruleAnnotation )
                    	    // InternalKim.g:6413:6: lv_annotations_1_0= ruleAnnotation
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_98);
                    	    lv_annotations_1_0=ruleAnnotation();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getObserveStatementRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"annotations",
                    	      							lv_annotations_1_0,
                    	      							"org.integratedmodelling.kim.Kim.Annotation");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop153;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_2=(Token)match(input,114,FOLLOW_99); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_2, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:6435:3: ( (lv_body_3_0= ruleObserveStatementBody ) )
            // InternalKim.g:6436:4: (lv_body_3_0= ruleObserveStatementBody )
            {
            // InternalKim.g:6436:4: (lv_body_3_0= ruleObserveStatementBody )
            // InternalKim.g:6437:5: lv_body_3_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_3_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_3_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:6458:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:6463:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:6464:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:6473:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;

        EObject lv_accessor_24_0 = null;

        EObject lv_metadata_26_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4()
        	);

        try {
            // InternalKim.g:6483:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:6484:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:6484:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:6485:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:6485:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
            // InternalKim.g:6486:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:6489:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?)
            // InternalKim.g:6490:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+ {...}?
            {
            // InternalKim.g:6490:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+
            int cnt164=0;
            loop164:
            do {
                int alt164=4;
                alt164 = dfa164.predict(input);
                switch (alt164) {
            	case 1 :
            	    // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    {
            	    // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
            	    // InternalKim.g:6492:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:6492:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
            	    // InternalKim.g:6493:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:6496:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
            	    // InternalKim.g:6496:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6496:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
            	    // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    {
            	    // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt155=2;
            	    alt155 = dfa155.predict(input);
            	    switch (alt155) {
            	        case 1 :
            	            // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:6499:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_11);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,26,FOLLOW_100); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:6521:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:6523:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_101);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:6540:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt156=2;
            	    int LA156_0 = input.LA(1);

            	    if ( (LA156_0==RULE_STRING) ) {
            	        int LA156_1 = input.LA(2);

            	        if ( (synpred262_InternalKim()) ) {
            	            alt156=1;
            	        }
            	    }
            	    switch (alt156) {
            	        case 1 :
            	            // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:6542:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_101); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:6558:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt158=2;
            	    int LA158_0 = input.LA(1);

            	    if ( (LA158_0==115) ) {
            	        alt158=1;
            	    }
            	    switch (alt158) {
            	        case 1 :
            	            // InternalKim.g:6559:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,115,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:6563:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:6565:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_102);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:6582:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop157:
            	            do {
            	                int alt157=2;
            	                int LA157_0 = input.LA(1);

            	                if ( (LA157_0==28) ) {
            	                    alt157=1;
            	                }


            	                switch (alt157) {
            	            	case 1 :
            	            	    // InternalKim.g:6583:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,28,FOLLOW_26); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:6587:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:6589:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_102);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop157;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:6608:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
            	    // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    {
            	    // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
            	    // InternalKim.g:6610:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
            	    // InternalKim.g:6613:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
            	    // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    {
            	    // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
            	    loop161:
            	    do {
            	        int alt161=3;
            	        int LA161_0 = input.LA(1);

            	        if ( LA161_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	            alt161=1;
            	        }
            	        else if ( LA161_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	            alt161=2;
            	        }


            	        switch (alt161) {
            	    	case 1 :
            	    	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
            	    	    // InternalKim.g:6616:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
            	    	    }
            	    	    // InternalKim.g:6616:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
            	    	    // InternalKim.g:6617:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
            	    	    // InternalKim.g:6620:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
            	    	    // InternalKim.g:6620:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:6620:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
            	    	    // InternalKim.g:6620:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    {
            	    	    otherlv_10=(Token)match(input,31,FOLLOW_103); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_4_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:6624:14: ( (lv_states_11_0= ruleObservableSemantics ) )
            	    	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    {
            	    	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
            	    	    // InternalKim.g:6626:16: lv_states_11_0= ruleObservableSemantics
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_102);
            	    	    lv_states_11_0=ruleObservableSemantics();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																}
            	    	      																add(
            	    	      																	current,
            	    	      																	"states",
            	    	      																	lv_states_11_0,
            	    	      																	"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:6643:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	    	    loop159:
            	    	    do {
            	    	        int alt159=2;
            	    	        int LA159_0 = input.LA(1);

            	    	        if ( (LA159_0==28) ) {
            	    	            alt159=1;
            	    	        }


            	    	        switch (alt159) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6644:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    {
            	    	    	    otherlv_12=(Token)match(input,28,FOLLOW_103); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_0_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6648:15: ( (lv_states_13_0= ruleObservableSemantics ) )
            	    	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    {
            	    	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
            	    	    	    // InternalKim.g:6650:17: lv_states_13_0= ruleObservableSemantics
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_102);
            	    	    	    lv_states_13_0=ruleObservableSemantics();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"states",
            	    	    	      																		lv_states_13_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop159;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
            	    	    // InternalKim.g:6675:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
            	    	    }
            	    	    // InternalKim.g:6675:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
            	    	    // InternalKim.g:6676:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
            	    	    // InternalKim.g:6679:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
            	    	    // InternalKim.g:6679:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:6679:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
            	    	    // InternalKim.g:6679:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    {
            	    	    otherlv_14=(Token)match(input,116,FOLLOW_46); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getChildrenKeyword_0_4_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:6683:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
            	    	    // InternalKim.g:6684:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
            	    	    {
            	    	    otherlv_15=(Token)match(input,39,FOLLOW_99); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_1_0());
            	    	      														
            	    	    }
            	    	    // InternalKim.g:6688:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
            	    	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    {
            	    	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
            	    	    // InternalKim.g:6690:17: lv_observations_16_0= ruleObserveStatementBody
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
            	    	      																
            	    	    }
            	    	    pushFollow(FOLLOW_36);
            	    	    lv_observations_16_0=ruleObserveStatementBody();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																	if (current==null) {
            	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      																	}
            	    	      																	add(
            	    	      																		current,
            	    	      																		"observations",
            	    	      																		lv_observations_16_0,
            	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	      																	afterParserOrEnumRuleCall();
            	    	      																
            	    	    }

            	    	    }


            	    	    }

            	    	    otherlv_17=(Token)match(input,40,FOLLOW_102); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      															newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_1_2());
            	    	      														
            	    	    }

            	    	    }

            	    	    // InternalKim.g:6712:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
            	    	    loop160:
            	    	    do {
            	    	        int alt160=2;
            	    	        int LA160_0 = input.LA(1);

            	    	        if ( (LA160_0==28) ) {
            	    	            alt160=1;
            	    	        }


            	    	        switch (alt160) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:6713:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
            	    	    	    {
            	    	    	    otherlv_18=(Token)match(input,28,FOLLOW_46); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_4_1_2_0());
            	    	    	      														
            	    	    	    }
            	    	    	    otherlv_19=(Token)match(input,39,FOLLOW_99); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_19, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_4_1_2_1());
            	    	    	      														
            	    	    	    }
            	    	    	    // InternalKim.g:6721:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
            	    	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    {
            	    	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
            	    	    	    // InternalKim.g:6723:17: lv_observations_20_0= ruleObserveStatementBody
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
            	    	    	      																
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_36);
            	    	    	    lv_observations_20_0=ruleObserveStatementBody();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																	if (current==null) {
            	    	    	      																		current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	    	      																	}
            	    	    	      																	add(
            	    	    	      																		current,
            	    	    	      																		"observations",
            	    	    	      																		lv_observations_20_0,
            	    	    	      																		"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	    	    	      																	afterParserOrEnumRuleCall();
            	    	    	      																
            	    	    	    }

            	    	    	    }


            	    	    	    }

            	    	    	    otherlv_21=(Token)match(input,40,FOLLOW_102); if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      															newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_4_1_2_3());
            	    	    	      														
            	    	    	    }

            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop160;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop161;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());

            	    }

            	    // InternalKim.g:6758:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
            	    loop162:
            	    do {
            	        int alt162=2;
            	        int LA162_0 = input.LA(1);

            	        if ( ((LA162_0>=59 && LA162_0<=61)||(LA162_0>=67 && LA162_0<=72)) ) {
            	            alt162=1;
            	        }


            	        switch (alt162) {
            	    	case 1 :
            	    	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
            	    	    // InternalKim.g:6760:10: lv_actions_22_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_104);
            	    	    lv_actions_22_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_22_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop162;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    {
            	    // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
            	    // InternalKim.g:6784:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:6784:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
            	    // InternalKim.g:6785:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:6788:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
            	    // InternalKim.g:6788:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6788:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
            	    // InternalKim.g:6788:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
            	    {
            	    otherlv_23=(Token)match(input,32,FOLLOW_105); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_1_0());
            	      							
            	    }
            	    // InternalKim.g:6792:8: ( (lv_accessor_24_0= ruleFunction ) )?
            	    int alt163=2;
            	    alt163 = dfa163.predict(input);
            	    switch (alt163) {
            	        case 1 :
            	            // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
            	            {
            	            // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
            	            // InternalKim.g:6794:10: lv_accessor_24_0= ruleFunction
            	            {
            	            if ( state.backtracking==0 ) {

            	              										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
            	              									
            	            }
            	            pushFollow(FOLLOW_105);
            	            lv_accessor_24_0=ruleFunction();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										set(
            	              											current,
            	              											"accessor",
            	              											lv_accessor_24_0,
            	              											"org.integratedmodelling.kim.Kim.Function");
            	              										afterParserOrEnumRuleCall();
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
            	    // InternalKim.g:6818:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
            	    }
            	    // InternalKim.g:6818:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
            	    // InternalKim.g:6819:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
            	    // InternalKim.g:6822:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
            	    // InternalKim.g:6822:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:6822:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
            	    // InternalKim.g:6822:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) )
            	    {
            	    otherlv_25=(Token)match(input,42,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      								newLeafNode(otherlv_25, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_2_0());
            	      							
            	    }
            	    // InternalKim.g:6826:8: ( (lv_metadata_26_0= ruleMap ) )
            	    // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
            	    {
            	    // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
            	    // InternalKim.g:6828:10: lv_metadata_26_0= ruleMap
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_105);
            	    lv_metadata_26_0=ruleMap();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"metadata",
            	      											lv_metadata_26_0,
            	      											"org.integratedmodelling.kim.Kim.Map");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt164 >= 1 ) break loop164;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(164, input);
                        throw eee;
                }
                cnt164++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:6865:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6869:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:6870:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:6879:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token lv_optional_15_0=null;
        Token otherlv_16=null;
        Token lv_default_17_0=null;
        Token otherlv_18=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token lv_name_29_1=null;
        Token lv_name_29_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_defaultLiteral_19_0 = null;

        EObject lv_defaultConcept_20_0 = null;

        AntlrDatatypeRuleToken lv_causes_22_0 = null;

        AntlrDatatypeRuleToken lv_causes_24_0 = null;

        EObject lv_from_25_0 = null;

        EObject lv_to_27_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:6888:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:6889:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:6889:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:6890:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:6890:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt165=2;
            alt165 = dfa165.predict(input);
            switch (alt165) {
                case 1 :
                    // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:6893:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,26,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:6915:3: ( (lv_generic_2_0= 'any' ) )?
            int alt166=2;
            int LA166_0 = input.LA(1);

            if ( (LA166_0==117) ) {
                alt166=1;
            }
            switch (alt166) {
                case 1 :
                    // InternalKim.g:6916:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:6916:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:6917:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,117,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_2_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6929:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:6930:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:6930:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:6931:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:6948:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6949:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6949:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:6950:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:6953:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:6954:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:6954:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop175:
            do {
                int alt175=8;
                alt175 = dfa175.predict(input);
                switch (alt175) {
            	case 1 :
            	    // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6956:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:6956:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6957:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:6960:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6960:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6960:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:6960:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:6968:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:6970:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6994:5: {...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:6994:116: ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6995:6: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:6998:9: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6998:10: {...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6998:19: ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt168=2;
            	    int LA168_0 = input.LA(1);

            	    if ( (LA168_0==53) ) {
            	        alt168=1;
            	    }
            	    else if ( (LA168_0==118) && (synpred280_InternalKim())) {
            	        alt168=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 168, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt168) {
            	        case 1 :
            	            // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' )
            	            // InternalKim.g:7000:11: ( 'in' )=>otherlv_8= 'in'
            	            {
            	            otherlv_8=(Token)match(input,53,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              										
            	            }

            	            }

            	            // InternalKim.g:7006:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt167=2;
            	            int LA167_0 = input.LA(1);

            	            if ( (LA167_0==EOF||LA167_0==RULE_LOWERCASE_ID||LA167_0==RULE_STRING||(LA167_0>=RULE_CAMELCASE_ID && LA167_0<=RULE_LOWERCASE_DASHID)||(LA167_0>=RULE_UPPERCASE_PATH && LA167_0<=RULE_BACKCASE_ID)||LA167_0==21||LA167_0==28||(LA167_0>=31 && LA167_0<=32)||LA167_0==36||(LA167_0>=39 && LA167_0<=40)||LA167_0==42||LA167_0==44||LA167_0==47||LA167_0==53||(LA167_0>=59 && LA167_0<=61)||(LA167_0>=67 && LA167_0<=72)||(LA167_0>=81 && LA167_0<=93)||LA167_0==109||LA167_0==112||LA167_0==116||(LA167_0>=118 && LA167_0<=121)||LA167_0==123||(LA167_0>=125 && LA167_0<=128)||(LA167_0>=138 && LA167_0<=139)||(LA167_0>=147 && LA167_0<=148)||(LA167_0>=150 && LA167_0<=155)||(LA167_0>=157 && LA167_0<=168)||(LA167_0>=255 && LA167_0<=256)||LA167_0==263) ) {
            	                alt167=1;
            	            }
            	            else if ( (LA167_0==RULE_UPPERCASE_ID) ) {
            	                int LA167_2 = input.LA(2);

            	                if ( (LA167_2==EOF||(LA167_2>=RULE_LOWERCASE_ID && LA167_2<=RULE_STRING)||(LA167_2>=RULE_CAMELCASE_ID && LA167_2<=RULE_LOWERCASE_DASHID)||LA167_2==RULE_UPPERCASE_PATH||LA167_2==21||LA167_2==26||LA167_2==28||(LA167_2>=31 && LA167_2<=32)||LA167_2==36||(LA167_2>=39 && LA167_2<=40)||LA167_2==42||LA167_2==44||LA167_2==47||LA167_2==53||(LA167_2>=59 && LA167_2<=61)||(LA167_2>=67 && LA167_2<=72)||(LA167_2>=81 && LA167_2<=93)||(LA167_2>=109 && LA167_2<=110)||(LA167_2>=112 && LA167_2<=113)||LA167_2==116||(LA167_2>=118 && LA167_2<=121)||LA167_2==123||(LA167_2>=125 && LA167_2<=128)||(LA167_2>=138 && LA167_2<=139)||(LA167_2>=147 && LA167_2<=148)||(LA167_2>=150 && LA167_2<=155)||(LA167_2>=157 && LA167_2<=168)||(LA167_2>=255 && LA167_2<=256)||LA167_2==263) ) {
            	                    alt167=1;
            	                }
            	                else if ( (LA167_2==254) ) {
            	                    alt167=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 167, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 167, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt167) {
            	                case 1 :
            	                    // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:7009:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:7029:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' )
            	            // InternalKim.g:7051:11: ( 'per' )=>otherlv_11= 'per'
            	            {
            	            otherlv_11=(Token)match(input,118,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_11, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              										
            	            }

            	            }

            	            // InternalKim.g:7057:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:7059:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:7084:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:7084:116: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:7085:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:7088:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:7088:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7088:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
            	    // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) )
            	    // InternalKim.g:7089:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:7093:10: (lv_valueOperators_13_0= ruleValueOperator )
            	    // InternalKim.g:7094:11: lv_valueOperators_13_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_valueOperators_13_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_13_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:7111:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
            	    loop169:
            	    do {
            	        int alt169=2;
            	        alt169 = dfa169.predict(input);
            	        switch (alt169) {
            	    	case 1 :
            	    	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    	    // InternalKim.g:7113:11: lv_valueOperators_14_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_107);
            	    	    lv_valueOperators_14_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_14_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop169;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
            	    // InternalKim.g:7137:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:7137:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
            	    // InternalKim.g:7138:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:7141:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
            	    // InternalKim.g:7141:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7141:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
            	    int alt170=2;
            	    int LA170_0 = input.LA(1);

            	    if ( (LA170_0==119) ) {
            	        alt170=1;
            	    }
            	    else if ( (LA170_0==120) ) {
            	        alt170=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 170, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt170) {
            	        case 1 :
            	            // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
            	            {
            	            // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
            	            // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
            	            {
            	            // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
            	            // InternalKim.g:7143:11: lv_optional_15_0= 'optional'
            	            {
            	            lv_optional_15_0=(Token)match(input,119,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_15_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", lv_optional_15_0 != null, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7156:9: otherlv_16= 'required'
            	            {
            	            otherlv_16=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_16, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
            	    // InternalKim.g:7167:5: {...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:7167:116: ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
            	    // InternalKim.g:7168:6: ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:7171:9: ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
            	    // InternalKim.g:7171:10: {...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7171:19: ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
            	    // InternalKim.g:7171:20: ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
            	    {
            	    // InternalKim.g:7171:20: ( (lv_default_17_0= 'default' ) )
            	    // InternalKim.g:7172:10: (lv_default_17_0= 'default' )
            	    {
            	    // InternalKim.g:7172:10: (lv_default_17_0= 'default' )
            	    // InternalKim.g:7173:11: lv_default_17_0= 'default'
            	    {
            	    lv_default_17_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_default_17_0, grammarAccess.getObservableSemanticsAccess().getDefaultDefaultKeyword_3_4_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(current, "default", lv_default_17_0 != null, "default");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_18=(Token)match(input,37,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_4_1());
            	      								
            	    }
            	    // InternalKim.g:7189:9: ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) )
            	    int alt171=2;
            	    int LA171_0 = input.LA(1);

            	    if ( (LA171_0==RULE_STRING||LA171_0==RULE_INT||(LA171_0>=29 && LA171_0<=30)||(LA171_0>=255 && LA171_0<=256)) ) {
            	        alt171=1;
            	    }
            	    else if ( ((LA171_0>=RULE_LOWERCASE_ID && LA171_0<=RULE_UPPERCASE_ID)||LA171_0==RULE_CAMELCASE_ID||LA171_0==RULE_LOWERCASE_DASHID||LA171_0==RULE_UPPERCASE_PATH||LA171_0==39||(LA171_0>=138 && LA171_0<=139)||(LA171_0>=147 && LA171_0<=148)||(LA171_0>=150 && LA171_0<=155)||(LA171_0>=157 && LA171_0<=168)) ) {
            	        alt171=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 171, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt171) {
            	        case 1 :
            	            // InternalKim.g:7190:10: ( (lv_defaultLiteral_19_0= ruleLiteral ) )
            	            {
            	            // InternalKim.g:7190:10: ( (lv_defaultLiteral_19_0= ruleLiteral ) )
            	            // InternalKim.g:7191:11: (lv_defaultLiteral_19_0= ruleLiteral )
            	            {
            	            // InternalKim.g:7191:11: (lv_defaultLiteral_19_0= ruleLiteral )
            	            // InternalKim.g:7192:12: lv_defaultLiteral_19_0= ruleLiteral
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDefaultLiteralLiteralParserRuleCall_3_4_2_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_110);
            	            lv_defaultLiteral_19_0=ruleLiteral();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultLiteral",
            	              													lv_defaultLiteral_19_0,
            	              													"org.integratedmodelling.kim.Kim.Literal");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7210:10: ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) )
            	            {
            	            // InternalKim.g:7210:10: ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:7211:11: (lv_defaultConcept_20_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:7211:11: (lv_defaultConcept_20_0= ruleConceptDeclaration )
            	            // InternalKim.g:7212:12: lv_defaultConcept_20_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDefaultConceptConceptDeclarationParserRuleCall_3_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_110);
            	            lv_defaultConcept_20_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultConcept",
            	              													lv_defaultConcept_20_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:7230:9: (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
            	    int alt173=2;
            	    int LA173_0 = input.LA(1);

            	    if ( (LA173_0==122) ) {
            	        alt173=1;
            	    }
            	    switch (alt173) {
            	        case 1 :
            	            // InternalKim.g:7231:10: otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )*
            	            {
            	            otherlv_21=(Token)match(input,122,FOLLOW_111); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_21, grammarAccess.getObservableSemanticsAccess().getWhenKeyword_3_4_3_0());
            	              									
            	            }
            	            // InternalKim.g:7235:10: ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) )
            	            // InternalKim.g:7236:11: (lv_causes_22_0= ruleRESOLUTION_EXCEPTION )
            	            {
            	            // InternalKim.g:7236:11: (lv_causes_22_0= ruleRESOLUTION_EXCEPTION )
            	            // InternalKim.g:7237:12: lv_causes_22_0= ruleRESOLUTION_EXCEPTION
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_4_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_112);
            	            lv_causes_22_0=ruleRESOLUTION_EXCEPTION();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												add(
            	              													current,
            	              													"causes",
            	              													lv_causes_22_0,
            	              													"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:7254:10: (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )*
            	            loop172:
            	            do {
            	                int alt172=2;
            	                int LA172_0 = input.LA(1);

            	                if ( (LA172_0==28) ) {
            	                    int LA172_2 = input.LA(2);

            	                    if ( ((LA172_2>=219 && LA172_2<=221)) ) {
            	                        alt172=1;
            	                    }


            	                }


            	                switch (alt172) {
            	            	case 1 :
            	            	    // InternalKim.g:7255:11: otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) )
            	            	    {
            	            	    otherlv_23=(Token)match(input,28,FOLLOW_111); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_23, grammarAccess.getObservableSemanticsAccess().getCommaKeyword_3_4_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:7259:11: ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) )
            	            	    // InternalKim.g:7260:12: (lv_causes_24_0= ruleRESOLUTION_EXCEPTION )
            	            	    {
            	            	    // InternalKim.g:7260:12: (lv_causes_24_0= ruleRESOLUTION_EXCEPTION )
            	            	    // InternalKim.g:7261:13: lv_causes_24_0= ruleRESOLUTION_EXCEPTION
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_4_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_112);
            	            	    lv_causes_24_0=ruleRESOLUTION_EXCEPTION();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"causes",
            	            	      														lv_causes_24_0,
            	            	      														"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop172;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:7286:4: ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7286:4: ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7287:5: {...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:7287:116: ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7288:6: ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:7291:9: ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7291:10: {...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7291:19: ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) )
            	    // InternalKim.g:7291:20: ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7291:20: ( (lv_from_25_0= ruleNumber ) )
            	    // InternalKim.g:7292:10: (lv_from_25_0= ruleNumber )
            	    {
            	    // InternalKim.g:7292:10: (lv_from_25_0= ruleNumber )
            	    // InternalKim.g:7293:11: lv_from_25_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_5_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_25_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_25_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_26=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_5_1());
            	      								
            	    }
            	    // InternalKim.g:7314:9: ( (lv_to_27_0= ruleNumber ) )
            	    // InternalKim.g:7315:10: (lv_to_27_0= ruleNumber )
            	    {
            	    // InternalKim.g:7315:10: (lv_to_27_0= ruleNumber )
            	    // InternalKim.g:7316:11: lv_to_27_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_to_27_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_27_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:7339:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7339:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:7340:5: {...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:7340:116: ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:7341:6: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:7344:9: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:7344:10: {...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7344:19: (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:7344:20: otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
            	    {
            	    otherlv_28=(Token)match(input,123,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_6_0());
            	      								
            	    }
            	    // InternalKim.g:7348:9: ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
            	    // InternalKim.g:7349:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:7349:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
            	    // InternalKim.g:7350:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
            	    {
            	    // InternalKim.g:7350:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
            	    int alt174=2;
            	    int LA174_0 = input.LA(1);

            	    if ( (LA174_0==RULE_LOWERCASE_ID) ) {
            	        alt174=1;
            	    }
            	    else if ( (LA174_0==RULE_STRING) ) {
            	        alt174=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 174, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt174) {
            	        case 1 :
            	            // InternalKim.g:7351:12: lv_name_29_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_29_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_29_1, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_6_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_29_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7366:12: lv_name_29_2= RULE_STRING
            	            {
            	            lv_name_29_2=(Token)match(input,RULE_STRING,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_29_2, grammarAccess.getObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_6_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_29_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:7403:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:7407:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:7408:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:7417:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token lv_generic_0_0=null;
        Token lv_global_1_0=null;
        Token lv_exclusive_2_0=null;
        Token otherlv_5=null;
        Token otherlv_8=null;
        Token otherlv_13=null;
        EObject lv_declaration_3_0 = null;

        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_valueOperators_10_0 = null;

        EObject lv_valueOperators_11_0 = null;

        EObject lv_from_12_0 = null;

        EObject lv_to_14_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:7426:2: ( ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:7427:2: ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:7427:2: ( ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:7428:3: ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:7428:3: ( ( (lv_generic_0_0= 'any' ) ) | ( (lv_global_1_0= 'all' ) ) | ( (lv_exclusive_2_0= 'only' ) ) )?
            int alt176=4;
            switch ( input.LA(1) ) {
                case 117:
                    {
                    alt176=1;
                    }
                    break;
                case 124:
                    {
                    alt176=2;
                    }
                    break;
                case 87:
                    {
                    alt176=3;
                    }
                    break;
            }

            switch (alt176) {
                case 1 :
                    // InternalKim.g:7429:4: ( (lv_generic_0_0= 'any' ) )
                    {
                    // InternalKim.g:7429:4: ( (lv_generic_0_0= 'any' ) )
                    // InternalKim.g:7430:5: (lv_generic_0_0= 'any' )
                    {
                    // InternalKim.g:7430:5: (lv_generic_0_0= 'any' )
                    // InternalKim.g:7431:6: lv_generic_0_0= 'any'
                    {
                    lv_generic_0_0=(Token)match(input,117,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_generic_0_0, grammarAccess.getSimpleObservableSemanticsAccess().getGenericAnyKeyword_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "generic", lv_generic_0_0 != null, "any");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7444:4: ( (lv_global_1_0= 'all' ) )
                    {
                    // InternalKim.g:7444:4: ( (lv_global_1_0= 'all' ) )
                    // InternalKim.g:7445:5: (lv_global_1_0= 'all' )
                    {
                    // InternalKim.g:7445:5: (lv_global_1_0= 'all' )
                    // InternalKim.g:7446:6: lv_global_1_0= 'all'
                    {
                    lv_global_1_0=(Token)match(input,124,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_global_1_0, grammarAccess.getSimpleObservableSemanticsAccess().getGlobalAllKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "global", lv_global_1_0 != null, "all");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7459:4: ( (lv_exclusive_2_0= 'only' ) )
                    {
                    // InternalKim.g:7459:4: ( (lv_exclusive_2_0= 'only' ) )
                    // InternalKim.g:7460:5: (lv_exclusive_2_0= 'only' )
                    {
                    // InternalKim.g:7460:5: (lv_exclusive_2_0= 'only' )
                    // InternalKim.g:7461:6: lv_exclusive_2_0= 'only'
                    {
                    lv_exclusive_2_0=(Token)match(input,87,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_exclusive_2_0, grammarAccess.getSimpleObservableSemanticsAccess().getExclusiveOnlyKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(current, "exclusive", lv_exclusive_2_0 != null, "only");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:7474:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:7475:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:7475:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:7476:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_113);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:7493:3: ( ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:7494:4: ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:7494:4: ( ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* ) )
            // InternalKim.g:7495:5: ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());
            // InternalKim.g:7498:5: ( ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )* )
            // InternalKim.g:7499:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*
            {
            // InternalKim.g:7499:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*
            loop180:
            do {
                int alt180=4;
                alt180 = dfa180.predict(input);
                switch (alt180) {
            	case 1 :
            	    // InternalKim.g:7500:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7500:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
            	    // InternalKim.g:7501:5: {...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalKim.g:7501:122: ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:7502:6: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
            	    // InternalKim.g:7505:9: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:7505:10: {...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7505:19: ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:7505:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    {
            	    // InternalKim.g:7505:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
            	    int alt178=2;
            	    int LA178_0 = input.LA(1);

            	    if ( (LA178_0==53) ) {
            	        alt178=1;
            	    }
            	    else if ( (LA178_0==118) && (synpred303_InternalKim())) {
            	        alt178=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 178, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt178) {
            	        case 1 :
            	            // InternalKim.g:7506:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
            	            {
            	            // InternalKim.g:7506:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
            	            // InternalKim.g:7507:11: ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:7527:11: ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:7528:12: ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            {
            	            // InternalKim.g:7528:12: ( ( 'in' )=>otherlv_5= 'in' )
            	            // InternalKim.g:7529:13: ( 'in' )=>otherlv_5= 'in'
            	            {
            	            otherlv_5=(Token)match(input,53,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_2_0_0_0_0_0());
            	              												
            	            }

            	            }

            	            // InternalKim.g:7535:12: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
            	            int alt177=2;
            	            int LA177_0 = input.LA(1);

            	            if ( (LA177_0==EOF||LA177_0==RULE_LOWERCASE_ID||LA177_0==RULE_STRING||(LA177_0>=RULE_EXPR && LA177_0<=RULE_LOWERCASE_DASHID)||(LA177_0>=RULE_UPPERCASE_PATH && LA177_0<=RULE_BACKCASE_ID)||LA177_0==RULE_TEMPLATE_VAR||(LA177_0>=28 && LA177_0<=30)||(LA177_0>=39 && LA177_0<=40)||LA177_0==44||LA177_0==47||(LA177_0>=53 && LA177_0<=55)||LA177_0==60||(LA177_0>=81 && LA177_0<=93)||LA177_0==112||(LA177_0>=117 && LA177_0<=118)||(LA177_0>=124 && LA177_0<=128)||(LA177_0>=138 && LA177_0<=139)||(LA177_0>=146 && LA177_0<=148)||(LA177_0>=150 && LA177_0<=155)||(LA177_0>=157 && LA177_0<=168)||LA177_0==217||(LA177_0>=255 && LA177_0<=256)||LA177_0==263) ) {
            	                alt177=1;
            	            }
            	            else if ( (LA177_0==RULE_UPPERCASE_ID) ) {
            	                int LA177_2 = input.LA(2);

            	                if ( (LA177_2==EOF||(LA177_2>=RULE_LOWERCASE_ID && LA177_2<=RULE_STRING)||(LA177_2>=RULE_EXPR && LA177_2<=RULE_LOWERCASE_DASHID)||LA177_2==RULE_UPPERCASE_PATH||LA177_2==RULE_TEMPLATE_VAR||(LA177_2>=28 && LA177_2<=30)||(LA177_2>=39 && LA177_2<=40)||LA177_2==44||LA177_2==47||(LA177_2>=53 && LA177_2<=55)||LA177_2==60||(LA177_2>=81 && LA177_2<=93)||LA177_2==110||(LA177_2>=112 && LA177_2<=113)||(LA177_2>=117 && LA177_2<=118)||(LA177_2>=124 && LA177_2<=128)||(LA177_2>=138 && LA177_2<=139)||(LA177_2>=146 && LA177_2<=148)||(LA177_2>=150 && LA177_2<=155)||(LA177_2>=157 && LA177_2<=168)||LA177_2==217||(LA177_2>=255 && LA177_2<=256)||LA177_2==263) ) {
            	                    alt177=1;
            	                }
            	                else if ( (LA177_2==254) ) {
            	                    alt177=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 177, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 177, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt177) {
            	                case 1 :
            	                    // InternalKim.g:7536:13: ( (lv_unit_6_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:7536:13: ( (lv_unit_6_0= ruleUnit ) )
            	                    // InternalKim.g:7537:14: (lv_unit_6_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:7537:14: (lv_unit_6_0= ruleUnit )
            	                    // InternalKim.g:7538:15: lv_unit_6_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
            	                      														
            	                    }
            	                    pushFollow(FOLLOW_113);
            	                    lv_unit_6_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      															if (current==null) {
            	                      																current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      															}
            	                      															set(
            	                      																current,
            	                      																"unit",
            	                      																lv_unit_6_0,
            	                      																"org.integratedmodelling.kim.Kim.Unit");
            	                      															afterParserOrEnumRuleCall();
            	                      														
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:7556:13: ( (lv_currency_7_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:7556:13: ( (lv_currency_7_0= ruleCurrency ) )
            	                    // InternalKim.g:7557:14: (lv_currency_7_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:7557:14: (lv_currency_7_0= ruleCurrency )
            	                    // InternalKim.g:7558:15: lv_currency_7_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
            	                      														
            	                    }
            	                    pushFollow(FOLLOW_113);
            	                    lv_currency_7_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      															if (current==null) {
            	                      																current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      															}
            	                      															set(
            	                      																current,
            	                      																"currency",
            	                      																lv_currency_7_0,
            	                      																"org.integratedmodelling.kim.Kim.Currency");
            	                      															afterParserOrEnumRuleCall();
            	                      														
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:7579:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:7579:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
            	            // InternalKim.g:7580:11: ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) )
            	            {
            	            // InternalKim.g:7580:11: ( ( 'per' )=>otherlv_8= 'per' )
            	            // InternalKim.g:7581:12: ( 'per' )=>otherlv_8= 'per'
            	            {
            	            otherlv_8=(Token)match(input,118,FOLLOW_114); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_2_0_0_1_0());
            	              											
            	            }

            	            }

            	            // InternalKim.g:7587:11: ( (lv_unit_9_0= ruleUnit ) )
            	            // InternalKim.g:7588:12: (lv_unit_9_0= ruleUnit )
            	            {
            	            // InternalKim.g:7588:12: (lv_unit_9_0= ruleUnit )
            	            // InternalKim.g:7589:13: lv_unit_9_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_113);
            	            lv_unit_9_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              													}
            	              													set(
            	              														current,
            	              														"unit",
            	              														lv_unit_9_0,
            	              														"org.integratedmodelling.kim.Kim.Unit");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:7614:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:7614:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:7615:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalKim.g:7615:122: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:7616:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
            	    // InternalKim.g:7619:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:7619:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7619:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
            	    // InternalKim.g:7619:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:7619:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) )
            	    // InternalKim.g:7620:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:7624:10: (lv_valueOperators_10_0= ruleValueOperator )
            	    // InternalKim.g:7625:11: lv_valueOperators_10_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_valueOperators_10_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_10_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:7642:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*
            	    loop179:
            	    do {
            	        int alt179=2;
            	        alt179 = dfa179.predict(input);
            	        switch (alt179) {
            	    	case 1 :
            	    	    // InternalKim.g:7643:10: (lv_valueOperators_11_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:7643:10: (lv_valueOperators_11_0= ruleValueOperator )
            	    	    // InternalKim.g:7644:11: lv_valueOperators_11_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_113);
            	    	    lv_valueOperators_11_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_11_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop179;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:7667:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:7667:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:7668:5: {...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalKim.g:7668:122: ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:7669:6: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
            	    // InternalKim.g:7672:9: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
            	    // InternalKim.g:7672:10: {...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:7672:19: ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
            	    // InternalKim.g:7672:20: ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:7672:20: ( (lv_from_12_0= ruleNumber ) )
            	    // InternalKim.g:7673:10: (lv_from_12_0= ruleNumber )
            	    {
            	    // InternalKim.g:7673:10: (lv_from_12_0= ruleNumber )
            	    // InternalKim.g:7674:11: lv_from_12_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_12_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_12_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_13=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_2_2_1());
            	      								
            	    }
            	    // InternalKim.g:7695:9: ( (lv_to_14_0= ruleNumber ) )
            	    // InternalKim.g:7696:10: (lv_to_14_0= ruleNumber )
            	    {
            	    // InternalKim.g:7696:10: (lv_to_14_0= ruleNumber )
            	    // InternalKim.g:7697:11: lv_to_14_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_to_14_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_14_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleValueOperator"
    // InternalKim.g:7734:1: entryRuleValueOperator returns [EObject current=null] : iv_ruleValueOperator= ruleValueOperator EOF ;
    public final EObject entryRuleValueOperator() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueOperator = null;


        try {
            // InternalKim.g:7734:54: (iv_ruleValueOperator= ruleValueOperator EOF )
            // InternalKim.g:7735:2: iv_ruleValueOperator= ruleValueOperator EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueOperatorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueOperator=ruleValueOperator();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueOperator; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueOperator"


    // $ANTLR start "ruleValueOperator"
    // InternalKim.g:7741:1: ruleValueOperator returns [EObject current=null] : ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) ) ;
    public final EObject ruleValueOperator() throws RecognitionException {
        EObject current = null;

        Token lv_downTo_1_0=null;
        Token otherlv_2=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_total_9_0=null;
        Token lv_averaged_10_0=null;
        Token lv_summed_11_0=null;
        AntlrDatatypeRuleToken lv_modifier_0_0 = null;

        EObject lv_comparisonValue_3_0 = null;

        EObject lv_comparisonQuantity_4_0 = null;

        EObject lv_comparisonConcept_5_0 = null;

        EObject lv_comparisonObservable_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7747:2: ( ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) ) )
            // InternalKim.g:7748:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) )
            {
            // InternalKim.g:7748:2: ( ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) ) | ( (lv_total_9_0= 'total' ) ) | ( (lv_averaged_10_0= 'averaged' ) ) | ( (lv_summed_11_0= 'summed' ) ) )
            int alt183=4;
            switch ( input.LA(1) ) {
            case 47:
            case 60:
            case 81:
            case 82:
            case 83:
            case 84:
            case 85:
            case 86:
            case 87:
            case 88:
            case 89:
            case 90:
            case 91:
            case 92:
            case 93:
            case 125:
                {
                alt183=1;
                }
                break;
            case 126:
                {
                alt183=2;
                }
                break;
            case 127:
                {
                alt183=3;
                }
                break;
            case 128:
                {
                alt183=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 183, 0, input);

                throw nvae;
            }

            switch (alt183) {
                case 1 :
                    // InternalKim.g:7749:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    {
                    // InternalKim.g:7749:3: ( ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) ) )
                    // InternalKim.g:7750:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) ) ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    {
                    // InternalKim.g:7750:4: ( ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) ) | ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' ) )
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( (LA181_0==47||LA181_0==60||(LA181_0>=81 && LA181_0<=93)) ) {
                        alt181=1;
                    }
                    else if ( (LA181_0==125) ) {
                        alt181=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 181, 0, input);

                        throw nvae;
                    }
                    switch (alt181) {
                        case 1 :
                            // InternalKim.g:7751:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            {
                            // InternalKim.g:7751:5: ( (lv_modifier_0_0= ruleVALUE_OPERATOR ) )
                            // InternalKim.g:7752:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            {
                            // InternalKim.g:7752:6: (lv_modifier_0_0= ruleVALUE_OPERATOR )
                            // InternalKim.g:7753:7: lv_modifier_0_0= ruleVALUE_OPERATOR
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getModifierVALUE_OPERATORParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_115);
                            lv_modifier_0_0=ruleVALUE_OPERATOR();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"modifier",
                              								lv_modifier_0_0,
                              								"org.integratedmodelling.kim.Kim.VALUE_OPERATOR");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7771:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            {
                            // InternalKim.g:7771:5: ( ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to' )
                            // InternalKim.g:7772:6: ( (lv_downTo_1_0= 'down' ) ) otherlv_2= 'to'
                            {
                            // InternalKim.g:7772:6: ( (lv_downTo_1_0= 'down' ) )
                            // InternalKim.g:7773:7: (lv_downTo_1_0= 'down' )
                            {
                            // InternalKim.g:7773:7: (lv_downTo_1_0= 'down' )
                            // InternalKim.g:7774:8: lv_downTo_1_0= 'down'
                            {
                            lv_downTo_1_0=(Token)match(input,125,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_downTo_1_0, grammarAccess.getValueOperatorAccess().getDownToDownKeyword_0_0_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getValueOperatorRule());
                              								}
                              								setWithLastConsumed(current, "downTo", lv_downTo_1_0, "down");
                              							
                            }

                            }


                            }

                            otherlv_2=(Token)match(input,37,FOLLOW_115); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getValueOperatorAccess().getToKeyword_0_0_1_1());
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:7792:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )
                    int alt182=4;
                    alt182 = dfa182.predict(input);
                    switch (alt182) {
                        case 1 :
                            // InternalKim.g:7793:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            {
                            // InternalKim.g:7793:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
                            // InternalKim.g:7794:6: (lv_comparisonValue_3_0= ruleNumber )
                            {
                            // InternalKim.g:7794:6: (lv_comparisonValue_3_0= ruleNumber )
                            // InternalKim.g:7795:7: lv_comparisonValue_3_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonValue_3_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonValue",
                              								lv_comparisonValue_3_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:7813:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            {
                            // InternalKim.g:7813:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
                            // InternalKim.g:7814:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            {
                            // InternalKim.g:7814:6: (lv_comparisonQuantity_4_0= ruleQuantity )
                            // InternalKim.g:7815:7: lv_comparisonQuantity_4_0= ruleQuantity
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonQuantity_4_0=ruleQuantity();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							set(
                              								current,
                              								"comparisonQuantity",
                              								lv_comparisonQuantity_4_0,
                              								"org.integratedmodelling.kim.Kim.Quantity");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:7833:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:7833:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
                            // InternalKim.g:7834:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:7834:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
                            // InternalKim.g:7835:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_comparisonConcept_5_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              							}
                              							add(
                              								current,
                              								"comparisonConcept",
                              								lv_comparisonConcept_5_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:7853:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            {
                            // InternalKim.g:7853:5: (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' )
                            // InternalKim.g:7854:6: otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')'
                            {
                            otherlv_6=(Token)match(input,39,FOLLOW_103); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getValueOperatorAccess().getLeftParenthesisKeyword_0_1_3_0());
                              					
                            }
                            // InternalKim.g:7858:6: ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) )
                            // InternalKim.g:7859:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            {
                            // InternalKim.g:7859:7: (lv_comparisonObservable_7_0= ruleObservableSemantics )
                            // InternalKim.g:7860:8: lv_comparisonObservable_7_0= ruleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonObservableObservableSemanticsParserRuleCall_0_1_3_1_0());
                              							
                            }
                            pushFollow(FOLLOW_36);
                            lv_comparisonObservable_7_0=ruleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getValueOperatorRule());
                              								}
                              								set(
                              									current,
                              									"comparisonObservable",
                              									lv_comparisonObservable_7_0,
                              									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getValueOperatorAccess().getRightParenthesisKeyword_0_1_3_2());
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7885:3: ( (lv_total_9_0= 'total' ) )
                    {
                    // InternalKim.g:7885:3: ( (lv_total_9_0= 'total' ) )
                    // InternalKim.g:7886:4: (lv_total_9_0= 'total' )
                    {
                    // InternalKim.g:7886:4: (lv_total_9_0= 'total' )
                    // InternalKim.g:7887:5: lv_total_9_0= 'total'
                    {
                    lv_total_9_0=(Token)match(input,126,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_total_9_0, grammarAccess.getValueOperatorAccess().getTotalTotalKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "total", lv_total_9_0, "total");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7900:3: ( (lv_averaged_10_0= 'averaged' ) )
                    {
                    // InternalKim.g:7900:3: ( (lv_averaged_10_0= 'averaged' ) )
                    // InternalKim.g:7901:4: (lv_averaged_10_0= 'averaged' )
                    {
                    // InternalKim.g:7901:4: (lv_averaged_10_0= 'averaged' )
                    // InternalKim.g:7902:5: lv_averaged_10_0= 'averaged'
                    {
                    lv_averaged_10_0=(Token)match(input,127,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_averaged_10_0, grammarAccess.getValueOperatorAccess().getAveragedAveragedKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "averaged", lv_averaged_10_0, "averaged");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:7915:3: ( (lv_summed_11_0= 'summed' ) )
                    {
                    // InternalKim.g:7915:3: ( (lv_summed_11_0= 'summed' ) )
                    // InternalKim.g:7916:4: (lv_summed_11_0= 'summed' )
                    {
                    // InternalKim.g:7916:4: (lv_summed_11_0= 'summed' )
                    // InternalKim.g:7917:5: lv_summed_11_0= 'summed'
                    {
                    lv_summed_11_0=(Token)match(input,128,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_summed_11_0, grammarAccess.getValueOperatorAccess().getSummedSummedKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueOperatorRule());
                      					}
                      					setWithLastConsumed(current, "summed", lv_summed_11_0, "summed");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueOperator"


    // $ANTLR start "entryRuleAnnotatedObservableSemantics"
    // InternalKim.g:7933:1: entryRuleAnnotatedObservableSemantics returns [EObject current=null] : iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF ;
    public final EObject entryRuleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotatedObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:7937:2: (iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF )
            // InternalKim.g:7938:2: iv_ruleAnnotatedObservableSemantics= ruleAnnotatedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotatedObservableSemantics=ruleAnnotatedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotatedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotatedObservableSemantics"


    // $ANTLR start "ruleAnnotatedObservableSemantics"
    // InternalKim.g:7947:1: ruleAnnotatedObservableSemantics returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleAnnotatedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_generic_3_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_12=null;
        Token lv_optional_16_0=null;
        Token otherlv_17=null;
        Token lv_default_18_0=null;
        Token otherlv_19=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token lv_name_30_1=null;
        Token lv_name_30_2=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_value_1_0 = null;

        EObject lv_declaration_4_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;

        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;

        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;

        EObject lv_defaultLiteral_20_0 = null;

        EObject lv_defaultConcept_21_0 = null;

        AntlrDatatypeRuleToken lv_causes_23_0 = null;

        AntlrDatatypeRuleToken lv_causes_25_0 = null;

        EObject lv_from_26_0 = null;

        EObject lv_to_28_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4()
        	);

        try {
            // InternalKim.g:7956:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:7957:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:7957:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:7958:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )? ( (lv_generic_3_0= 'any' ) )? ( (lv_declaration_4_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:7958:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop184:
            do {
                int alt184=2;
                int LA184_0 = input.LA(1);

                if ( (LA184_0==RULE_ANNOTATION_ID) ) {
                    alt184=1;
                }


                switch (alt184) {
            	case 1 :
            	    // InternalKim.g:7959:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:7959:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:7960:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_116);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop184;
                }
            } while (true);

            // InternalKim.g:7977:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?
            int alt185=2;
            alt185 = dfa185.predict(input);
            switch (alt185) {
                case 1 :
                    // InternalKim.g:7978:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
                    {
                    // InternalKim.g:7978:4: ( (lv_value_1_0= ruleValue ) )
                    // InternalKim.g:7979:5: (lv_value_1_0= ruleValue )
                    {
                    // InternalKim.g:7979:5: (lv_value_1_0= ruleValue )
                    // InternalKim.g:7980:6: lv_value_1_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_1_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_1_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_2=(Token)match(input,26,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:8002:3: ( (lv_generic_3_0= 'any' ) )?
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==117) ) {
                alt186=1;
            }
            switch (alt186) {
                case 1 :
                    // InternalKim.g:8003:4: (lv_generic_3_0= 'any' )
                    {
                    // InternalKim.g:8003:4: (lv_generic_3_0= 'any' )
                    // InternalKim.g:8004:5: lv_generic_3_0= 'any'
                    {
                    lv_generic_3_0=(Token)match(input,117,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_3_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getGenericAnyKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_3_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8016:3: ( (lv_declaration_4_0= ruleConceptDeclaration ) )
            // InternalKim.g:8017:4: (lv_declaration_4_0= ruleConceptDeclaration )
            {
            // InternalKim.g:8017:4: (lv_declaration_4_0= ruleConceptDeclaration )
            // InternalKim.g:8018:5: lv_declaration_4_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_declaration_4_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_4_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:8035:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:8036:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:8036:4: ( ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:8037:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());
            // InternalKim.g:8040:5: ( ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:8041:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:8041:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop195:
            do {
                int alt195=8;
                alt195 = dfa195.predict(input);
                switch (alt195) {
            	case 1 :
            	    // InternalKim.g:8042:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8042:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:8043:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
            	    }
            	    // InternalKim.g:8043:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:8044:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
            	    // InternalKim.g:8047:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:8047:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8047:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
            	    // InternalKim.g:8047:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    {
            	    otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingKeyword_4_0_0());
            	      								
            	    }
            	    otherlv_7=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_0_1());
            	      								
            	    }
            	    // InternalKim.g:8055:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
            	    // InternalKim.g:8056:10: (lv_accordingTo_8_0= rulePropertyId )
            	    {
            	    // InternalKim.g:8056:10: (lv_accordingTo_8_0= rulePropertyId )
            	    // InternalKim.g:8057:11: lv_accordingTo_8_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_accordingTo_8_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_8_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:8080:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8080:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:8081:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
            	    }
            	    // InternalKim.g:8081:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:8082:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
            	    // InternalKim.g:8085:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:8085:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8085:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
            	    int alt188=2;
            	    int LA188_0 = input.LA(1);

            	    if ( (LA188_0==53) ) {
            	        alt188=1;
            	    }
            	    else if ( (LA188_0==118) ) {
            	        alt188=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 188, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt188) {
            	        case 1 :
            	            // InternalKim.g:8085:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:8085:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:8086:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            {
            	            otherlv_9=(Token)match(input,53,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_9, grammarAccess.getAnnotatedObservableSemanticsAccess().getInKeyword_4_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:8090:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
            	            int alt187=2;
            	            int LA187_0 = input.LA(1);

            	            if ( (LA187_0==EOF||LA187_0==RULE_LOWERCASE_ID||LA187_0==RULE_STRING||(LA187_0>=RULE_CAMELCASE_ID && LA187_0<=RULE_INT)||LA187_0==RULE_BACKCASE_ID||LA187_0==21||LA187_0==28||(LA187_0>=31 && LA187_0<=34)||LA187_0==36||(LA187_0>=38 && LA187_0<=39)||(LA187_0>=41 && LA187_0<=42)||LA187_0==44||LA187_0==47||LA187_0==53||(LA187_0>=59 && LA187_0<=61)||(LA187_0>=67 && LA187_0<=72)||(LA187_0>=81 && LA187_0<=93)||LA187_0==112||(LA187_0>=118 && LA187_0<=121)||LA187_0==123||(LA187_0>=125 && LA187_0<=128)||(LA187_0>=255 && LA187_0<=256)||LA187_0==263) ) {
            	                alt187=1;
            	            }
            	            else if ( (LA187_0==RULE_UPPERCASE_ID) ) {
            	                int LA187_2 = input.LA(2);

            	                if ( (LA187_2==EOF||LA187_2==RULE_STRING||LA187_2==RULE_INT||LA187_2==21||LA187_2==28||(LA187_2>=31 && LA187_2<=34)||LA187_2==36||LA187_2==38||(LA187_2>=41 && LA187_2<=42)||LA187_2==44||LA187_2==47||LA187_2==53||(LA187_2>=59 && LA187_2<=61)||(LA187_2>=67 && LA187_2<=72)||(LA187_2>=81 && LA187_2<=93)||LA187_2==112||(LA187_2>=118 && LA187_2<=121)||LA187_2==123||(LA187_2>=125 && LA187_2<=128)||(LA187_2>=255 && LA187_2<=256)||LA187_2==263) ) {
            	                    alt187=1;
            	                }
            	                else if ( (LA187_2==254) ) {
            	                    alt187=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 187, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 187, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt187) {
            	                case 1 :
            	                    // InternalKim.g:8091:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:8091:11: ( (lv_unit_10_0= ruleUnit ) )
            	                    // InternalKim.g:8092:12: (lv_unit_10_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:8092:12: (lv_unit_10_0= ruleUnit )
            	                    // InternalKim.g:8093:13: lv_unit_10_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_unit_10_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:8111:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:8111:11: ( (lv_currency_11_0= ruleCurrency ) )
            	                    // InternalKim.g:8112:12: (lv_currency_11_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:8112:12: (lv_currency_11_0= ruleCurrency )
            	                    // InternalKim.g:8113:13: lv_currency_11_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_currency_11_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8133:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:8133:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
            	            // InternalKim.g:8134:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
            	            {
            	            otherlv_12=(Token)match(input,118,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_12, grammarAccess.getAnnotatedObservableSemanticsAccess().getPerKeyword_4_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:8138:10: ( (lv_unit_13_0= ruleUnit ) )
            	            // InternalKim.g:8139:11: (lv_unit_13_0= ruleUnit )
            	            {
            	            // InternalKim.g:8139:11: (lv_unit_13_0= ruleUnit )
            	            // InternalKim.g:8140:12: lv_unit_13_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_unit_13_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_13_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:8164:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:8164:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:8165:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
            	    }
            	    // InternalKim.g:8165:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:8166:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
            	    // InternalKim.g:8169:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:8169:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8169:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
            	    // InternalKim.g:8169:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:8169:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
            	    // InternalKim.g:8170:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:8170:10: (lv_valueOperators_14_0= ruleValueOperator )
            	    // InternalKim.g:8171:11: lv_valueOperators_14_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_valueOperators_14_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_14_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:8188:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
            	    loop189:
            	    do {
            	        int alt189=2;
            	        alt189 = dfa189.predict(input);
            	        switch (alt189) {
            	    	case 1 :
            	    	    // InternalKim.g:8189:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:8189:10: (lv_valueOperators_15_0= ruleValueOperator )
            	    	    // InternalKim.g:8190:11: lv_valueOperators_15_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_107);
            	    	    lv_valueOperators_15_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_15_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop189;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:8213:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:8213:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
            	    // InternalKim.g:8214:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
            	    }
            	    // InternalKim.g:8214:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
            	    // InternalKim.g:8215:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
            	    // InternalKim.g:8218:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
            	    // InternalKim.g:8218:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8218:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
            	    int alt190=2;
            	    int LA190_0 = input.LA(1);

            	    if ( (LA190_0==119) ) {
            	        alt190=1;
            	    }
            	    else if ( (LA190_0==120) ) {
            	        alt190=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 190, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt190) {
            	        case 1 :
            	            // InternalKim.g:8218:20: ( (lv_optional_16_0= 'optional' ) )
            	            {
            	            // InternalKim.g:8218:20: ( (lv_optional_16_0= 'optional' ) )
            	            // InternalKim.g:8219:10: (lv_optional_16_0= 'optional' )
            	            {
            	            // InternalKim.g:8219:10: (lv_optional_16_0= 'optional' )
            	            // InternalKim.g:8220:11: lv_optional_16_0= 'optional'
            	            {
            	            lv_optional_16_0=(Token)match(input,119,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_16_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getOptionalOptionalKeyword_4_3_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", lv_optional_16_0 != null, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8233:9: otherlv_17= 'required'
            	            {
            	            otherlv_17=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getAnnotatedObservableSemanticsAccess().getRequiredKeyword_4_3_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:8243:4: ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:8243:4: ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
            	    // InternalKim.g:8244:5: {...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
            	    }
            	    // InternalKim.g:8244:125: ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
            	    // InternalKim.g:8245:6: ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
            	    // InternalKim.g:8248:9: ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
            	    // InternalKim.g:8248:10: {...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8248:19: ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
            	    // InternalKim.g:8248:20: ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
            	    {
            	    // InternalKim.g:8248:20: ( (lv_default_18_0= 'default' ) )
            	    // InternalKim.g:8249:10: (lv_default_18_0= 'default' )
            	    {
            	    // InternalKim.g:8249:10: (lv_default_18_0= 'default' )
            	    // InternalKim.g:8250:11: lv_default_18_0= 'default'
            	    {
            	    lv_default_18_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_default_18_0, grammarAccess.getAnnotatedObservableSemanticsAccess().getDefaultDefaultKeyword_4_4_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(current, "default", lv_default_18_0 != null, "default");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_19=(Token)match(input,37,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_4_1());
            	      								
            	    }
            	    // InternalKim.g:8266:9: ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) )
            	    int alt191=2;
            	    int LA191_0 = input.LA(1);

            	    if ( (LA191_0==RULE_STRING||LA191_0==RULE_INT||(LA191_0>=29 && LA191_0<=30)||(LA191_0>=255 && LA191_0<=256)) ) {
            	        alt191=1;
            	    }
            	    else if ( ((LA191_0>=RULE_LOWERCASE_ID && LA191_0<=RULE_UPPERCASE_ID)||LA191_0==RULE_CAMELCASE_ID||LA191_0==RULE_LOWERCASE_DASHID||LA191_0==RULE_UPPERCASE_PATH||LA191_0==39||(LA191_0>=138 && LA191_0<=139)||(LA191_0>=147 && LA191_0<=148)||(LA191_0>=150 && LA191_0<=155)||(LA191_0>=157 && LA191_0<=168)) ) {
            	        alt191=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 191, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt191) {
            	        case 1 :
            	            // InternalKim.g:8267:10: ( (lv_defaultLiteral_20_0= ruleLiteral ) )
            	            {
            	            // InternalKim.g:8267:10: ( (lv_defaultLiteral_20_0= ruleLiteral ) )
            	            // InternalKim.g:8268:11: (lv_defaultLiteral_20_0= ruleLiteral )
            	            {
            	            // InternalKim.g:8268:11: (lv_defaultLiteral_20_0= ruleLiteral )
            	            // InternalKim.g:8269:12: lv_defaultLiteral_20_0= ruleLiteral
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDefaultLiteralLiteralParserRuleCall_4_4_2_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_110);
            	            lv_defaultLiteral_20_0=ruleLiteral();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultLiteral",
            	              													lv_defaultLiteral_20_0,
            	              													"org.integratedmodelling.kim.Kim.Literal");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8287:10: ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) )
            	            {
            	            // InternalKim.g:8287:10: ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:8288:11: (lv_defaultConcept_21_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:8288:11: (lv_defaultConcept_21_0= ruleConceptDeclaration )
            	            // InternalKim.g:8289:12: lv_defaultConcept_21_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDefaultConceptConceptDeclarationParserRuleCall_4_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_110);
            	            lv_defaultConcept_21_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultConcept",
            	              													lv_defaultConcept_21_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:8307:9: (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
            	    int alt193=2;
            	    int LA193_0 = input.LA(1);

            	    if ( (LA193_0==122) ) {
            	        alt193=1;
            	    }
            	    switch (alt193) {
            	        case 1 :
            	            // InternalKim.g:8308:10: otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )*
            	            {
            	            otherlv_22=(Token)match(input,122,FOLLOW_111); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_22, grammarAccess.getAnnotatedObservableSemanticsAccess().getWhenKeyword_4_4_3_0());
            	              									
            	            }
            	            // InternalKim.g:8312:10: ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) )
            	            // InternalKim.g:8313:11: (lv_causes_23_0= ruleRESOLUTION_EXCEPTION )
            	            {
            	            // InternalKim.g:8313:11: (lv_causes_23_0= ruleRESOLUTION_EXCEPTION )
            	            // InternalKim.g:8314:12: lv_causes_23_0= ruleRESOLUTION_EXCEPTION
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_4_4_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_112);
            	            lv_causes_23_0=ruleRESOLUTION_EXCEPTION();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												add(
            	              													current,
            	              													"causes",
            	              													lv_causes_23_0,
            	              													"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:8331:10: (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )*
            	            loop192:
            	            do {
            	                int alt192=2;
            	                int LA192_0 = input.LA(1);

            	                if ( (LA192_0==28) ) {
            	                    int LA192_1 = input.LA(2);

            	                    if ( ((LA192_1>=219 && LA192_1<=221)) ) {
            	                        alt192=1;
            	                    }


            	                }


            	                switch (alt192) {
            	            	case 1 :
            	            	    // InternalKim.g:8332:11: otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) )
            	            	    {
            	            	    otherlv_24=(Token)match(input,28,FOLLOW_111); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_24, grammarAccess.getAnnotatedObservableSemanticsAccess().getCommaKeyword_4_4_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:8336:11: ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) )
            	            	    // InternalKim.g:8337:12: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
            	            	    {
            	            	    // InternalKim.g:8337:12: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
            	            	    // InternalKim.g:8338:13: lv_causes_25_0= ruleRESOLUTION_EXCEPTION
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_4_4_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_112);
            	            	    lv_causes_25_0=ruleRESOLUTION_EXCEPTION();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"causes",
            	            	      														lv_causes_25_0,
            	            	      														"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop192;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:8363:4: ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8363:4: ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:8364:5: {...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
            	    }
            	    // InternalKim.g:8364:125: ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:8365:6: ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
            	    // InternalKim.g:8368:9: ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) )
            	    // InternalKim.g:8368:10: {...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8368:19: ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) )
            	    // InternalKim.g:8368:20: ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:8368:20: ( (lv_from_26_0= ruleNumber ) )
            	    // InternalKim.g:8369:10: (lv_from_26_0= ruleNumber )
            	    {
            	    // InternalKim.g:8369:10: (lv_from_26_0= ruleNumber )
            	    // InternalKim.g:8370:11: lv_from_26_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_5_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_26_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_26_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_27=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getAnnotatedObservableSemanticsAccess().getToKeyword_4_5_1());
            	      								
            	    }
            	    // InternalKim.g:8391:9: ( (lv_to_28_0= ruleNumber ) )
            	    // InternalKim.g:8392:10: (lv_to_28_0= ruleNumber )
            	    {
            	    // InternalKim.g:8392:10: (lv_to_28_0= ruleNumber )
            	    // InternalKim.g:8393:11: lv_to_28_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_to_28_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAnnotatedObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_28_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:8416:4: ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8416:4: ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:8417:5: {...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6)");
            	    }
            	    // InternalKim.g:8417:125: ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:8418:6: ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6);
            	    // InternalKim.g:8421:9: ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:8421:10: {...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAnnotatedObservableSemantics", "true");
            	    }
            	    // InternalKim.g:8421:19: (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:8421:20: otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) )
            	    {
            	    otherlv_29=(Token)match(input,123,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_29, grammarAccess.getAnnotatedObservableSemanticsAccess().getNamedKeyword_4_6_0());
            	      								
            	    }
            	    // InternalKim.g:8425:9: ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) )
            	    // InternalKim.g:8426:10: ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:8426:10: ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) )
            	    // InternalKim.g:8427:11: (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING )
            	    {
            	    // InternalKim.g:8427:11: (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING )
            	    int alt194=2;
            	    int LA194_0 = input.LA(1);

            	    if ( (LA194_0==RULE_LOWERCASE_ID) ) {
            	        alt194=1;
            	    }
            	    else if ( (LA194_0==RULE_STRING) ) {
            	        alt194=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 194, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt194) {
            	        case 1 :
            	            // InternalKim.g:8428:12: lv_name_30_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_30_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_30_1, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_4_6_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_30_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8443:12: lv_name_30_2= RULE_STRING
            	            {
            	            lv_name_30_2=(Token)match(input,RULE_STRING,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_30_2, grammarAccess.getAnnotatedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_4_6_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getAnnotatedObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_30_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop195;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAnnotatedObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:8480:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:8484:2: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:8485:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:8494:1: ruleDependency returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        Token lv_default_11_0=null;
        Token otherlv_12=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_name_20_1=null;
        Token lv_name_20_2=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;

        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;

        EObject lv_defaultLiteral_13_0 = null;

        EObject lv_defaultConcept_14_0 = null;

        AntlrDatatypeRuleToken lv_causes_16_0 = null;

        AntlrDatatypeRuleToken lv_causes_18_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()
        	);

        try {
            // InternalKim.g:8503:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            // InternalKim.g:8504:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            {
            // InternalKim.g:8504:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) ) )
            // InternalKim.g:8505:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            {
            // InternalKim.g:8505:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop196:
            do {
                int alt196=2;
                int LA196_0 = input.LA(1);

                if ( (LA196_0==RULE_ANNOTATION_ID) ) {
                    alt196=1;
                }


                switch (alt196) {
            	case 1 :
            	    // InternalKim.g:8506:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8506:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8507:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDependencyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_18);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDependencyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop196;
                }
            } while (true);

            // InternalKim.g:8524:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )
            int alt206=2;
            alt206 = dfa206.predict(input);
            switch (alt206) {
                case 1 :
                    // InternalKim.g:8525:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    {
                    // InternalKim.g:8525:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
                    int alt198=2;
                    alt198 = dfa198.predict(input);
                    switch (alt198) {
                        case 1 :
                            // InternalKim.g:8526:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            {
                            // InternalKim.g:8526:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                            // InternalKim.g:8527:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            {
                            // InternalKim.g:8527:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                            // InternalKim.g:8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            {
                            // InternalKim.g:8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                            int alt197=4;
                            alt197 = dfa197.predict(input);
                            switch (alt197) {
                                case 1 :
                                    // InternalKim.g:8529:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                                    {
                                    lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_1_0_0_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8544:8: lv_modelReference_1_2= rulePathName
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_2=rulePathName();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_2,
                                      									"org.integratedmodelling.kim.Kim.PathName");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:8560:8: lv_modelReference_1_3= ruleUrnId
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferenceUrnIdParserRuleCall_1_0_0_0_2());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_modelReference_1_3=ruleUrnId();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDependencyRule());
                                      								}
                                      								set(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_3,
                                      									"org.integratedmodelling.kim.Kim.UrnId");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }
                                    break;
                                case 4 :
                                    // InternalKim.g:8576:8: lv_modelReference_1_4= RULE_STRING
                                    {
                                    lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_modelReference_1_4, grammarAccess.getDependencyAccess().getModelReferenceSTRINGTerminalRuleCall_1_0_0_0_3());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDependencyRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"modelReference",
                                      									lv_modelReference_1_4,
                                      									"org.eclipse.xtext.common.Terminals.STRING");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8594:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            {
                            // InternalKim.g:8594:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                            // InternalKim.g:8595:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            {
                            // InternalKim.g:8595:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                            // InternalKim.g:8596:7: lv_observable_2_0= ruleDependencyObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_observable_2_0=ruleDependencyObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDependencyRule());
                              							}
                              							set(
                              								current,
                              								"observable",
                              								lv_observable_2_0,
                              								"org.integratedmodelling.kim.Kim.DependencyObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8615:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    {
                    // InternalKim.g:8615:4: ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) )
                    // InternalKim.g:8616:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    {
                    // InternalKim.g:8616:5: ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) )
                    // InternalKim.g:8617:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());
                    // InternalKim.g:8620:6: ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?)
                    // InternalKim.g:8621:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?
                    {
                    // InternalKim.g:8621:7: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+
                    int cnt205=0;
                    loop205:
                    do {
                        int alt205=4;
                        int LA205_0 = input.LA(1);

                        if ( LA205_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                            alt205=1;
                        }
                        else if ( LA205_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                            alt205=2;
                        }
                        else if ( LA205_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2) ) {
                            alt205=3;
                        }


                        switch (alt205) {
                    	case 1 :
                    	    // InternalKim.g:8622:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    {
                    	    // InternalKim.g:8622:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
                    	    // InternalKim.g:8623:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
                    	    }
                    	    // InternalKim.g:8623:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
                    	    // InternalKim.g:8624:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
                    	    // InternalKim.g:8627:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
                    	    // InternalKim.g:8627:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:8627:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
                    	    // InternalKim.g:8627:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    {
                    	    otherlv_4=(Token)match(input,39,FOLLOW_103); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_4, grammarAccess.getDependencyAccess().getLeftParenthesisKeyword_1_1_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:8631:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    // InternalKim.g:8632:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    {
                    	    // InternalKim.g:8632:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
                    	    // InternalKim.g:8633:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_29);
                    	    lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	      												}
                    	      												add(
                    	      													current,
                    	      													"alternativeObservables",
                    	      													lv_alternativeObservables_5_0,
                    	      													"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }

                    	    // InternalKim.g:8650:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
                    	    loop199:
                    	    do {
                    	        int alt199=2;
                    	        int LA199_0 = input.LA(1);

                    	        if ( (LA199_0==28) ) {
                    	            alt199=1;
                    	        }


                    	        switch (alt199) {
                    	    	case 1 :
                    	    	    // InternalKim.g:8651:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    {
                    	    	    otherlv_6=(Token)match(input,28,FOLLOW_103); if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      											newLeafNode(otherlv_6, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_0_2_0());
                    	    	      										
                    	    	    }
                    	    	    // InternalKim.g:8655:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
                    	    	    // InternalKim.g:8656:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    {
                    	    	    // InternalKim.g:8656:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
                    	    	    // InternalKim.g:8657:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
                    	    	    {
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
                    	    	      												
                    	    	    }
                    	    	    pushFollow(FOLLOW_29);
                    	    	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

                    	    	    state._fsp--;
                    	    	    if (state.failed) return current;
                    	    	    if ( state.backtracking==0 ) {

                    	    	      													if (current==null) {
                    	    	      														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	    	      													}
                    	    	      													add(
                    	    	      														current,
                    	    	      														"alternativeObservables",
                    	    	      														lv_alternativeObservables_7_0,
                    	    	      														"org.integratedmodelling.kim.Kim.AlternativeDependencyObservableSemantics");
                    	    	      													afterParserOrEnumRuleCall();
                    	    	      												
                    	    	    }

                    	    	    }


                    	    	    }


                    	    	    }
                    	    	    break;

                    	    	default :
                    	    	    break loop199;
                    	        }
                    	    } while (true);

                    	    otherlv_8=(Token)match(input,40,FOLLOW_117); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_8, grammarAccess.getDependencyAccess().getRightParenthesisKeyword_1_1_0_3());
                    	      									
                    	    }
                    	    // InternalKim.g:8679:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
                    	    int alt200=3;
                    	    int LA200_0 = input.LA(1);

                    	    if ( (LA200_0==119) ) {
                    	        alt200=1;
                    	    }
                    	    else if ( (LA200_0==120) ) {
                    	        alt200=2;
                    	    }
                    	    switch (alt200) {
                    	        case 1 :
                    	            // InternalKim.g:8680:11: ( (lv_optional_9_0= 'optional' ) )
                    	            {
                    	            // InternalKim.g:8680:11: ( (lv_optional_9_0= 'optional' ) )
                    	            // InternalKim.g:8681:12: (lv_optional_9_0= 'optional' )
                    	            {
                    	            // InternalKim.g:8681:12: (lv_optional_9_0= 'optional' )
                    	            // InternalKim.g:8682:13: lv_optional_9_0= 'optional'
                    	            {
                    	            lv_optional_9_0=(Token)match(input,119,FOLLOW_118); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_optional_9_0, grammarAccess.getDependencyAccess().getOptionalOptionalKeyword_1_1_0_4_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(current, "optional", lv_optional_9_0 != null, "optional");
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:8695:11: otherlv_10= 'required'
                    	            {
                    	            otherlv_10=(Token)match(input,120,FOLLOW_118); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(otherlv_10, grammarAccess.getDependencyAccess().getRequiredKeyword_1_1_0_4_1());
                    	              										
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:8706:5: ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
                    	    {
                    	    // InternalKim.g:8706:5: ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
                    	    // InternalKim.g:8707:6: {...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
                    	    }
                    	    // InternalKim.g:8707:110: ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
                    	    // InternalKim.g:8708:7: ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
                    	    // InternalKim.g:8711:10: ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
                    	    // InternalKim.g:8711:11: {...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:8711:20: ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
                    	    // InternalKim.g:8711:21: ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
                    	    {
                    	    // InternalKim.g:8711:21: ( (lv_default_11_0= 'default' ) )
                    	    // InternalKim.g:8712:11: (lv_default_11_0= 'default' )
                    	    {
                    	    // InternalKim.g:8712:11: (lv_default_11_0= 'default' )
                    	    // InternalKim.g:8713:12: lv_default_11_0= 'default'
                    	    {
                    	    lv_default_11_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												newLeafNode(lv_default_11_0, grammarAccess.getDependencyAccess().getDefaultDefaultKeyword_1_1_1_0_0());
                    	      											
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElement(grammarAccess.getDependencyRule());
                    	      												}
                    	      												setWithLastConsumed(current, "default", lv_default_11_0 != null, "default");
                    	      											
                    	    }

                    	    }


                    	    }

                    	    otherlv_12=(Token)match(input,37,FOLLOW_109); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_12, grammarAccess.getDependencyAccess().getToKeyword_1_1_1_1());
                    	      									
                    	    }
                    	    // InternalKim.g:8729:10: ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) )
                    	    int alt201=2;
                    	    int LA201_0 = input.LA(1);

                    	    if ( (LA201_0==RULE_STRING||LA201_0==RULE_INT||(LA201_0>=29 && LA201_0<=30)||(LA201_0>=255 && LA201_0<=256)) ) {
                    	        alt201=1;
                    	    }
                    	    else if ( ((LA201_0>=RULE_LOWERCASE_ID && LA201_0<=RULE_UPPERCASE_ID)||LA201_0==RULE_CAMELCASE_ID||LA201_0==RULE_LOWERCASE_DASHID||LA201_0==RULE_UPPERCASE_PATH||LA201_0==39||(LA201_0>=138 && LA201_0<=139)||(LA201_0>=147 && LA201_0<=148)||(LA201_0>=150 && LA201_0<=155)||(LA201_0>=157 && LA201_0<=168)) ) {
                    	        alt201=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 201, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt201) {
                    	        case 1 :
                    	            // InternalKim.g:8730:11: ( (lv_defaultLiteral_13_0= ruleLiteral ) )
                    	            {
                    	            // InternalKim.g:8730:11: ( (lv_defaultLiteral_13_0= ruleLiteral ) )
                    	            // InternalKim.g:8731:12: (lv_defaultLiteral_13_0= ruleLiteral )
                    	            {
                    	            // InternalKim.g:8731:12: (lv_defaultLiteral_13_0= ruleLiteral )
                    	            // InternalKim.g:8732:13: lv_defaultLiteral_13_0= ruleLiteral
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              													newCompositeNode(grammarAccess.getDependencyAccess().getDefaultLiteralLiteralParserRuleCall_1_1_1_2_0_0());
                    	              												
                    	            }
                    	            pushFollow(FOLLOW_119);
                    	            lv_defaultLiteral_13_0=ruleLiteral();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	              													}
                    	              													set(
                    	              														current,
                    	              														"defaultLiteral",
                    	              														lv_defaultLiteral_13_0,
                    	              														"org.integratedmodelling.kim.Kim.Literal");
                    	              													afterParserOrEnumRuleCall();
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:8750:11: ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) )
                    	            {
                    	            // InternalKim.g:8750:11: ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) )
                    	            // InternalKim.g:8751:12: (lv_defaultConcept_14_0= ruleConceptDeclaration )
                    	            {
                    	            // InternalKim.g:8751:12: (lv_defaultConcept_14_0= ruleConceptDeclaration )
                    	            // InternalKim.g:8752:13: lv_defaultConcept_14_0= ruleConceptDeclaration
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              													newCompositeNode(grammarAccess.getDependencyAccess().getDefaultConceptConceptDeclarationParserRuleCall_1_1_1_2_1_0());
                    	              												
                    	            }
                    	            pushFollow(FOLLOW_119);
                    	            lv_defaultConcept_14_0=ruleConceptDeclaration();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	              													}
                    	              													set(
                    	              														current,
                    	              														"defaultConcept",
                    	              														lv_defaultConcept_14_0,
                    	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	              													afterParserOrEnumRuleCall();
                    	              												
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8770:10: (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
                    	    int alt203=2;
                    	    int LA203_0 = input.LA(1);

                    	    if ( (LA203_0==122) ) {
                    	        alt203=1;
                    	    }
                    	    switch (alt203) {
                    	        case 1 :
                    	            // InternalKim.g:8771:11: otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )*
                    	            {
                    	            otherlv_15=(Token)match(input,122,FOLLOW_111); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              											newLeafNode(otherlv_15, grammarAccess.getDependencyAccess().getWhenKeyword_1_1_1_3_0());
                    	              										
                    	            }
                    	            // InternalKim.g:8775:11: ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) )
                    	            // InternalKim.g:8776:12: (lv_causes_16_0= ruleRESOLUTION_EXCEPTION )
                    	            {
                    	            // InternalKim.g:8776:12: (lv_causes_16_0= ruleRESOLUTION_EXCEPTION )
                    	            // InternalKim.g:8777:13: lv_causes_16_0= ruleRESOLUTION_EXCEPTION
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              													newCompositeNode(grammarAccess.getDependencyAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_1_1_1_3_1_0());
                    	              												
                    	            }
                    	            pushFollow(FOLLOW_120);
                    	            lv_causes_16_0=ruleRESOLUTION_EXCEPTION();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	              													}
                    	              													add(
                    	              														current,
                    	              														"causes",
                    	              														lv_causes_16_0,
                    	              														"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
                    	              													afterParserOrEnumRuleCall();
                    	              												
                    	            }

                    	            }


                    	            }

                    	            // InternalKim.g:8794:11: (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )*
                    	            loop202:
                    	            do {
                    	                int alt202=2;
                    	                int LA202_0 = input.LA(1);

                    	                if ( (LA202_0==28) ) {
                    	                    int LA202_1 = input.LA(2);

                    	                    if ( ((LA202_1>=219 && LA202_1<=221)) ) {
                    	                        alt202=1;
                    	                    }


                    	                }


                    	                switch (alt202) {
                    	            	case 1 :
                    	            	    // InternalKim.g:8795:12: otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) )
                    	            	    {
                    	            	    otherlv_17=(Token)match(input,28,FOLLOW_111); if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      												newLeafNode(otherlv_17, grammarAccess.getDependencyAccess().getCommaKeyword_1_1_1_3_2_0());
                    	            	      											
                    	            	    }
                    	            	    // InternalKim.g:8799:12: ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) )
                    	            	    // InternalKim.g:8800:13: (lv_causes_18_0= ruleRESOLUTION_EXCEPTION )
                    	            	    {
                    	            	    // InternalKim.g:8800:13: (lv_causes_18_0= ruleRESOLUTION_EXCEPTION )
                    	            	    // InternalKim.g:8801:14: lv_causes_18_0= ruleRESOLUTION_EXCEPTION
                    	            	    {
                    	            	    if ( state.backtracking==0 ) {

                    	            	      														newCompositeNode(grammarAccess.getDependencyAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_1_1_1_3_2_1_0());
                    	            	      													
                    	            	    }
                    	            	    pushFollow(FOLLOW_120);
                    	            	    lv_causes_18_0=ruleRESOLUTION_EXCEPTION();

                    	            	    state._fsp--;
                    	            	    if (state.failed) return current;
                    	            	    if ( state.backtracking==0 ) {

                    	            	      														if (current==null) {
                    	            	      															current = createModelElementForParent(grammarAccess.getDependencyRule());
                    	            	      														}
                    	            	      														add(
                    	            	      															current,
                    	            	      															"causes",
                    	            	      															lv_causes_18_0,
                    	            	      															"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
                    	            	      														afterParserOrEnumRuleCall();
                    	            	      													
                    	            	    }

                    	            	    }


                    	            	    }


                    	            	    }
                    	            	    break;

                    	            	default :
                    	            	    break loop202;
                    	                }
                    	            } while (true);


                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:8826:5: ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8826:5: ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) )
                    	    // InternalKim.g:8827:6: {...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2)");
                    	    }
                    	    // InternalKim.g:8827:110: ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) )
                    	    // InternalKim.g:8828:7: ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2);
                    	    // InternalKim.g:8831:10: ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) )
                    	    // InternalKim.g:8831:11: {...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleDependency", "true");
                    	    }
                    	    // InternalKim.g:8831:20: (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) )
                    	    // InternalKim.g:8831:21: otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) )
                    	    {
                    	    otherlv_19=(Token)match(input,123,FOLLOW_52); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_19, grammarAccess.getDependencyAccess().getNamedKeyword_1_1_2_0());
                    	      									
                    	    }
                    	    // InternalKim.g:8835:10: ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) )
                    	    // InternalKim.g:8836:11: ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) )
                    	    {
                    	    // InternalKim.g:8836:11: ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) )
                    	    // InternalKim.g:8837:12: (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING )
                    	    {
                    	    // InternalKim.g:8837:12: (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING )
                    	    int alt204=2;
                    	    int LA204_0 = input.LA(1);

                    	    if ( (LA204_0==RULE_LOWERCASE_ID) ) {
                    	        alt204=1;
                    	    }
                    	    else if ( (LA204_0==RULE_STRING) ) {
                    	        alt204=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 204, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt204) {
                    	        case 1 :
                    	            // InternalKim.g:8838:13: lv_name_20_1= RULE_LOWERCASE_ID
                    	            {
                    	            lv_name_20_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_118); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_20_1, grammarAccess.getDependencyAccess().getNameLOWERCASE_IDTerminalRuleCall_1_1_2_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_20_1,
                    	              														"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                    	              												
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:8853:13: lv_name_20_2= RULE_STRING
                    	            {
                    	            lv_name_20_2=(Token)match(input,RULE_STRING,FOLLOW_118); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_name_20_2, grammarAccess.getDependencyAccess().getNameSTRINGTerminalRuleCall_1_1_2_1_0_1());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getDependencyRule());
                    	              													}
                    	              													setWithLastConsumed(
                    	              														current,
                    	              														"name",
                    	              														lv_name_20_2,
                    	              														"org.eclipse.xtext.common.Terminals.STRING");
                    	              												
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    if ( cnt205 >= 1 ) break loop205;
                    	    if (state.backtracking>0) {state.failed=true; return current;}
                                EarlyExitException eee =
                                    new EarlyExitException(205, input);
                                throw eee;
                        }
                        cnt205++;
                    } while (true);

                    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1()) ) {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        throw new FailedPredicateException(input, "ruleDependency", "getUnorderedGroupHelper().canLeave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1())");
                    }

                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1());

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:8892:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8896:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:8897:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:8906:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_main_0_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_25_0 = null;

        EObject lv_context_28_0 = null;

        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8915:2: ( ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? ) )
            // InternalKim.g:8916:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            {
            // InternalKim.g:8916:2: ( ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )? )
            // InternalKim.g:8917:3: ( (lv_main_0_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            {
            // InternalKim.g:8917:3: ( (lv_main_0_0= ruleConcept ) )+
            int cnt207=0;
            loop207:
            do {
                int alt207=2;
                alt207 = dfa207.predict(input);
                switch (alt207) {
            	case 1 :
            	    // InternalKim.g:8918:4: (lv_main_0_0= ruleConcept )
            	    {
            	    // InternalKim.g:8918:4: (lv_main_0_0= ruleConcept )
            	    // InternalKim.g:8919:5: lv_main_0_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_121);
            	    lv_main_0_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_0_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt207 >= 1 ) break loop207;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(207, input);
                        throw eee;
                }
                cnt207++;
            } while (true);

            // InternalKim.g:8936:3: ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?
            int alt213=2;
            alt213 = dfa213.predict(input);
            switch (alt213) {
                case 1 :
                    // InternalKim.g:8937:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    {
                    // InternalKim.g:8937:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
                    // InternalKim.g:8938:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    {
                    getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
                    // InternalKim.g:8941:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
                    // InternalKim.g:8942:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    {
                    // InternalKim.g:8942:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
                    loop212:
                    do {
                        int alt212=12;
                        alt212 = dfa212.predict(input);
                        switch (alt212) {
                    	case 1 :
                    	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
                    	    // InternalKim.g:8944:5: {...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
                    	    }
                    	    // InternalKim.g:8944:115: ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8945:6: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
                    	    // InternalKim.g:8948:9: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8948:10: {...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:8948:19: ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:8948:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    // InternalKim.g:8948:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:8949:10: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_2=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      										newLeafNode(otherlv_2, grammarAccess.getConceptDeclarationAccess().getOfKeyword_1_0_0_0());
                    	      									
                    	    }
                    	    // InternalKim.g:8953:10: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:8954:11: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:8954:11: ( (lv_distributedOfInherency_3_0= 'each' ) )?
                    	    int alt208=2;
                    	    int LA208_0 = input.LA(1);

                    	    if ( (LA208_0==27) ) {
                    	        alt208=1;
                    	    }
                    	    switch (alt208) {
                    	        case 1 :
                    	            // InternalKim.g:8955:12: (lv_distributedOfInherency_3_0= 'each' )
                    	            {
                    	            // InternalKim.g:8955:12: (lv_distributedOfInherency_3_0= 'each' )
                    	            // InternalKim.g:8956:13: lv_distributedOfInherency_3_0= 'each'
                    	            {
                    	            lv_distributedOfInherency_3_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              													newLeafNode(lv_distributedOfInherency_3_0, grammarAccess.getConceptDeclarationAccess().getDistributedOfInherencyEachKeyword_1_0_0_1_0_0());
                    	              												
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              													if (current==null) {
                    	              														current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              													}
                    	              													setWithLastConsumed(current, "distributedOfInherency", lv_distributedOfInherency_3_0 != null, "each");
                    	              												
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:8968:11: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:8969:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:8969:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:8970:13: lv_inherency_4_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
                    	      												
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      													if (current==null) {
                    	      														current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      													}
                    	      													set(
                    	      														current,
                    	      														"inherency",
                    	      														lv_inherency_4_0,
                    	      														"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      													afterParserOrEnumRuleCall();
                    	      												
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 2 :
                    	    // InternalKim.g:8995:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:8995:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:8996:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
                    	    }
                    	    // InternalKim.g:8996:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:8997:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
                    	    // InternalKim.g:9000:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9000:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9000:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9000:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_5=(Token)match(input,74,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_1_1_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9004:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9005:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:9005:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
                    	    int alt209=2;
                    	    int LA209_0 = input.LA(1);

                    	    if ( (LA209_0==27) ) {
                    	        alt209=1;
                    	    }
                    	    switch (alt209) {
                    	        case 1 :
                    	            // InternalKim.g:9006:11: (lv_distributedForInherency_6_0= 'each' )
                    	            {
                    	            // InternalKim.g:9006:11: (lv_distributedForInherency_6_0= 'each' )
                    	            // InternalKim.g:9007:12: lv_distributedForInherency_6_0= 'each'
                    	            {
                    	            lv_distributedForInherency_6_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedForInherency_6_0, grammarAccess.getConceptDeclarationAccess().getDistributedForInherencyEachKeyword_1_1_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedForInherency", lv_distributedForInherency_6_0 != null, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:9019:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9020:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9020:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9021:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"motivation",
                    	      													lv_motivation_7_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 3 :
                    	    // InternalKim.g:9045:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9045:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9046:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
                    	    }
                    	    // InternalKim.g:9046:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9047:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
                    	    // InternalKim.g:9050:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9050:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9050:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9050:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_8=(Token)match(input,103,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_8, grammarAccess.getConceptDeclarationAccess().getWithKeyword_1_2_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9054:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9055:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9055:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9056:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"compresent",
                    	      												lv_compresent_9_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 4 :
                    	    // InternalKim.g:9079:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9079:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9080:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
                    	    }
                    	    // InternalKim.g:9080:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9081:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
                    	    // InternalKim.g:9084:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9084:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9084:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9084:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_10=(Token)match(input,130,FOLLOW_124); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_1_3_0());
                    	      								
                    	    }
                    	    otherlv_11=(Token)match(input,93,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_11, grammarAccess.getConceptDeclarationAccess().getByKeyword_1_3_1());
                    	      								
                    	    }
                    	    // InternalKim.g:9092:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9093:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9093:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9094:11: lv_causant_12_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_causant_12_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"causant",
                    	      												lv_causant_12_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 5 :
                    	    // InternalKim.g:9117:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9117:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9118:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
                    	    }
                    	    // InternalKim.g:9118:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9119:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
                    	    // InternalKim.g:9122:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9122:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9122:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9122:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_13=(Token)match(input,131,FOLLOW_25); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_1_4_0());
                    	      								
                    	    }
                    	    otherlv_14=(Token)match(input,37,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_14, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_4_1());
                    	      								
                    	    }
                    	    // InternalKim.g:9130:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9131:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9131:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9132:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"adjacent",
                    	      												lv_adjacent_15_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 6 :
                    	    // InternalKim.g:9155:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9155:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9156:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
                    	    }
                    	    // InternalKim.g:9156:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9157:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
                    	    // InternalKim.g:9160:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9160:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9160:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9160:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_16=(Token)match(input,132,FOLLOW_125); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_1_5_0());
                    	      								
                    	    }
                    	    otherlv_17=(Token)match(input,53,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_17, grammarAccess.getConceptDeclarationAccess().getInKeyword_1_5_1());
                    	      								
                    	    }
                    	    // InternalKim.g:9168:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9169:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9169:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9170:11: lv_container_18_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_container_18_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"container",
                    	      												lv_container_18_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 7 :
                    	    // InternalKim.g:9193:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9193:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9194:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
                    	    }
                    	    // InternalKim.g:9194:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9195:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
                    	    // InternalKim.g:9198:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9198:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9198:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9198:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_19=(Token)match(input,133,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_19, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_1_6_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9202:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9203:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9203:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9204:11: lv_contained_20_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_contained_20_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"contained",
                    	      												lv_contained_20_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 8 :
                    	    // InternalKim.g:9227:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9227:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9228:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
                    	    }
                    	    // InternalKim.g:9228:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9229:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
                    	    // InternalKim.g:9232:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9232:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9232:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9232:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_21=(Token)match(input,134,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_21, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_1_7_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9236:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9237:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9237:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9238:11: lv_caused_22_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_caused_22_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"caused",
                    	      												lv_caused_22_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 9 :
                    	    // InternalKim.g:9261:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9261:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:9262:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
                    	    }
                    	    // InternalKim.g:9262:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9263:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
                    	    // InternalKim.g:9266:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9266:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9266:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9266:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_23=(Token)match(input,135,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_23, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_1_8_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9270:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9271:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:9271:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
                    	    int alt210=2;
                    	    int LA210_0 = input.LA(1);

                    	    if ( (LA210_0==27) ) {
                    	        alt210=1;
                    	    }
                    	    switch (alt210) {
                    	        case 1 :
                    	            // InternalKim.g:9272:11: (lv_distributedTemporalInherency_24_0= 'each' )
                    	            {
                    	            // InternalKim.g:9272:11: (lv_distributedTemporalInherency_24_0= 'each' )
                    	            // InternalKim.g:9273:12: lv_distributedTemporalInherency_24_0= 'each'
                    	            {
                    	            lv_distributedTemporalInherency_24_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedTemporalInherency_24_0, grammarAccess.getConceptDeclarationAccess().getDistributedTemporalInherencyEachKeyword_1_8_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedTemporalInherency", lv_distributedTemporalInherency_24_0 != null, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:9285:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9286:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9286:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9287:12: lv_during_25_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_during_25_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"during",
                    	      													lv_during_25_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 10 :
                    	    // InternalKim.g:9311:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9311:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
                    	    // InternalKim.g:9312:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
                    	    }
                    	    // InternalKim.g:9312:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9313:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
                    	    // InternalKim.g:9316:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9316:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9316:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9316:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    otherlv_26=(Token)match(input,136,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_26, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_1_9_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9320:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9321:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:9321:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
                    	    int alt211=2;
                    	    int LA211_0 = input.LA(1);

                    	    if ( (LA211_0==27) ) {
                    	        alt211=1;
                    	    }
                    	    switch (alt211) {
                    	        case 1 :
                    	            // InternalKim.g:9322:11: (lv_distributedWithinInherency_27_0= 'each' )
                    	            {
                    	            // InternalKim.g:9322:11: (lv_distributedWithinInherency_27_0= 'each' )
                    	            // InternalKim.g:9323:12: lv_distributedWithinInherency_27_0= 'each'
                    	            {
                    	            lv_distributedWithinInherency_27_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              												newLeafNode(lv_distributedWithinInherency_27_0, grammarAccess.getConceptDeclarationAccess().getDistributedWithinInherencyEachKeyword_1_9_1_0_0());
                    	              											
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              												if (current==null) {
                    	              													current = createModelElement(grammarAccess.getConceptDeclarationRule());
                    	              												}
                    	              												setWithLastConsumed(current, "distributedWithinInherency", lv_distributedWithinInherency_27_0 != null, "each");
                    	              											
                    	            }

                    	            }


                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:9335:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9336:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9336:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9337:12: lv_context_28_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
                    	      											
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_context_28_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      												if (current==null) {
                    	      													current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      												}
                    	      												set(
                    	      													current,
                    	      													"context",
                    	      													lv_context_28_0,
                    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      												afterParserOrEnumRuleCall();
                    	      											
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;
                    	case 11 :
                    	    // InternalKim.g:9361:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    {
                    	    // InternalKim.g:9361:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
                    	    // InternalKim.g:9362:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    {
                    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
                    	    }
                    	    // InternalKim.g:9362:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
                    	    // InternalKim.g:9363:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    {
                    	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
                    	    // InternalKim.g:9366:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
                    	    // InternalKim.g:9366:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
                    	    {
                    	    if ( !((true)) ) {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
                    	    }
                    	    // InternalKim.g:9366:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
                    	    // InternalKim.g:9366:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
                    	    {
                    	    otherlv_29=(Token)match(input,137,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_29, grammarAccess.getConceptDeclarationAccess().getLinkingKeyword_1_10_0());
                    	      								
                    	    }
                    	    // InternalKim.g:9370:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9371:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9371:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9372:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_25);
                    	    lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipSource",
                    	      												lv_relationshipSource_30_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }

                    	    otherlv_31=(Token)match(input,37,FOLLOW_122); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      									newLeafNode(otherlv_31, grammarAccess.getConceptDeclarationAccess().getToKeyword_1_10_2());
                    	      								
                    	    }
                    	    // InternalKim.g:9393:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
                    	    // InternalKim.g:9394:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:9394:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
                    	    // InternalKim.g:9395:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
                    	      										
                    	    }
                    	    pushFollow(FOLLOW_123);
                    	    lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      											if (current==null) {
                    	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                    	      											}
                    	      											set(
                    	      												current,
                    	      												"relationshipTarget",
                    	      												lv_relationshipTarget_32_0,
                    	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                    	      											afterParserOrEnumRuleCall();
                    	      										
                    	    }

                    	    }


                    	    }


                    	    }


                    	    }

                    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop212;
                        }
                    } while (true);


                    }


                    }

                    getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:9432:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:9432:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:9433:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:9439:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_1_0=null;
        Token lv_templateType_3_1=null;
        Token lv_templateType_3_2=null;
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Token lv_name_12_0=null;
        Token otherlv_14=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_18_0=null;
        Token otherlv_20=null;
        Token lv_name_21_0=null;
        Token otherlv_23=null;
        Token lv_name_24_0=null;
        Token otherlv_26=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_30_0=null;
        Token otherlv_32=null;
        Token lv_name_33_0=null;
        Token lv_template_34_0=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        AntlrDatatypeRuleToken lv_name_2_0 = null;

        EObject lv_extends_4_0 = null;

        EObject lv_extends_7_0 = null;

        EObject lv_extends_10_0 = null;

        EObject lv_extends_13_0 = null;

        EObject lv_extends_16_0 = null;

        EObject lv_extends_19_0 = null;

        EObject lv_extends_22_0 = null;

        EObject lv_extends_25_0 = null;

        EObject lv_extends_28_0 = null;

        EObject lv_extends_31_0 = null;



        	enterRule();

        try {
            // InternalKim.g:9445:2: ( ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) ) )
            // InternalKim.g:9446:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) )
            {
            // InternalKim.g:9446:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) )
            int alt216=4;
            alt216 = dfa216.predict(input);
            switch (alt216) {
                case 1 :
                    // InternalKim.g:9447:3: ( (lv_name_0_0= ruleAuthorityId ) )
                    {
                    // InternalKim.g:9447:3: ( (lv_name_0_0= ruleAuthorityId ) )
                    // InternalKim.g:9448:4: (lv_name_0_0= ruleAuthorityId )
                    {
                    // InternalKim.g:9448:4: (lv_name_0_0= ruleAuthorityId )
                    // InternalKim.g:9449:5: lv_name_0_0= ruleAuthorityId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameAuthorityIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_0=ruleAuthorityId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.AuthorityId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9467:3: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:9467:3: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:9468:4: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:9468:4: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:9469:5: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_1_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:9486:3: ( (lv_name_2_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:9486:3: ( (lv_name_2_0= ruleNamespaceId ) )
                    // InternalKim.g:9487:4: (lv_name_2_0= ruleNamespaceId )
                    {
                    // InternalKim.g:9487:4: (lv_name_2_0= ruleNamespaceId )
                    // InternalKim.g:9488:5: lv_name_2_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_2_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_2_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:9506:3: ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) )
                    {
                    // InternalKim.g:9506:3: ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) )
                    // InternalKim.g:9507:4: ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) )
                    {
                    // InternalKim.g:9507:4: ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) )
                    // InternalKim.g:9508:5: ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) )
                    {
                    // InternalKim.g:9508:5: ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) )
                    // InternalKim.g:9509:6: (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' )
                    {
                    // InternalKim.g:9509:6: (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' )
                    int alt214=2;
                    int LA214_0 = input.LA(1);

                    if ( (LA214_0==138) ) {
                        alt214=1;
                    }
                    else if ( (LA214_0==139) ) {
                        alt214=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 214, 0, input);

                        throw nvae;
                    }
                    switch (alt214) {
                        case 1 :
                            // InternalKim.g:9510:7: lv_templateType_3_1= '${'
                            {
                            lv_templateType_3_1=(Token)match(input,138,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_3_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_3_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_3_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:9521:7: lv_templateType_3_2= '#{'
                            {
                            lv_templateType_3_2=(Token)match(input,139,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_3_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_3_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_3_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:9534:4: ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) )
                    int alt215=10;
                    alt215 = dfa215.predict(input);
                    switch (alt215) {
                        case 1 :
                            // InternalKim.g:9535:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
                            {
                            // InternalKim.g:9535:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
                            // InternalKim.g:9536:6: ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) )
                            {
                            // InternalKim.g:9536:6: ( (lv_extends_4_0= ruleConcept ) )
                            // InternalKim.g:9537:7: (lv_extends_4_0= ruleConcept )
                            {
                            // InternalKim.g:9537:7: (lv_extends_4_0= ruleConcept )
                            // InternalKim.g:9538:8: lv_extends_4_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_4_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_4_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_5=(Token)match(input,110,FOLLOW_126); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_0_1());
                              					
                            }
                            // InternalKim.g:9559:6: ( (lv_name_6_0= 'context' ) )
                            // InternalKim.g:9560:7: (lv_name_6_0= 'context' )
                            {
                            // InternalKim.g:9560:7: (lv_name_6_0= 'context' )
                            // InternalKim.g:9561:8: lv_name_6_0= 'context'
                            {
                            lv_name_6_0=(Token)match(input,65,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_6_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_3_1_0_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_6_0, "context");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:9575:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
                            {
                            // InternalKim.g:9575:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
                            // InternalKim.g:9576:6: ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) )
                            {
                            // InternalKim.g:9576:6: ( (lv_extends_7_0= ruleConcept ) )
                            // InternalKim.g:9577:7: (lv_extends_7_0= ruleConcept )
                            {
                            // InternalKim.g:9577:7: (lv_extends_7_0= ruleConcept )
                            // InternalKim.g:9578:8: lv_extends_7_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_1_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_7_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_7_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_8=(Token)match(input,110,FOLLOW_128); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_1_1());
                              					
                            }
                            // InternalKim.g:9599:6: ( (lv_name_9_0= 'inherent' ) )
                            // InternalKim.g:9600:7: (lv_name_9_0= 'inherent' )
                            {
                            // InternalKim.g:9600:7: (lv_name_9_0= 'inherent' )
                            // InternalKim.g:9601:8: lv_name_9_0= 'inherent'
                            {
                            lv_name_9_0=(Token)match(input,140,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_9_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_3_1_1_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_9_0, "inherent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:9615:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
                            {
                            // InternalKim.g:9615:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
                            // InternalKim.g:9616:6: ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) )
                            {
                            // InternalKim.g:9616:6: ( (lv_extends_10_0= ruleConcept ) )
                            // InternalKim.g:9617:7: (lv_extends_10_0= ruleConcept )
                            {
                            // InternalKim.g:9617:7: (lv_extends_10_0= ruleConcept )
                            // InternalKim.g:9618:8: lv_extends_10_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_10_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_10_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_11=(Token)match(input,110,FOLLOW_129); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_11, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_2_1());
                              					
                            }
                            // InternalKim.g:9639:6: ( (lv_name_12_0= 'compresent' ) )
                            // InternalKim.g:9640:7: (lv_name_12_0= 'compresent' )
                            {
                            // InternalKim.g:9640:7: (lv_name_12_0= 'compresent' )
                            // InternalKim.g:9641:8: lv_name_12_0= 'compresent'
                            {
                            lv_name_12_0=(Token)match(input,141,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_12_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_3_1_2_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_12_0, "compresent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:9655:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
                            {
                            // InternalKim.g:9655:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
                            // InternalKim.g:9656:6: ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) )
                            {
                            // InternalKim.g:9656:6: ( (lv_extends_13_0= ruleConcept ) )
                            // InternalKim.g:9657:7: (lv_extends_13_0= ruleConcept )
                            {
                            // InternalKim.g:9657:7: (lv_extends_13_0= ruleConcept )
                            // InternalKim.g:9658:8: lv_extends_13_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_3_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_13_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_13_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_14=(Token)match(input,110,FOLLOW_130); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_14, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_3_1());
                              					
                            }
                            // InternalKim.g:9679:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:9680:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:9680:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:9681:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,131,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_3_1_3_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:9695:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
                            {
                            // InternalKim.g:9695:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
                            // InternalKim.g:9696:6: ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) )
                            {
                            // InternalKim.g:9696:6: ( (lv_extends_16_0= ruleConcept ) )
                            // InternalKim.g:9697:7: (lv_extends_16_0= ruleConcept )
                            {
                            // InternalKim.g:9697:7: (lv_extends_16_0= ruleConcept )
                            // InternalKim.g:9698:8: lv_extends_16_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_4_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_16_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_16_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_17=(Token)match(input,110,FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_4_1());
                              					
                            }
                            // InternalKim.g:9719:6: ( (lv_name_18_0= 'container' ) )
                            // InternalKim.g:9720:7: (lv_name_18_0= 'container' )
                            {
                            // InternalKim.g:9720:7: (lv_name_18_0= 'container' )
                            // InternalKim.g:9721:8: lv_name_18_0= 'container'
                            {
                            lv_name_18_0=(Token)match(input,142,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_18_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_3_1_4_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_18_0, "container");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:9735:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
                            {
                            // InternalKim.g:9735:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
                            // InternalKim.g:9736:6: ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) )
                            {
                            // InternalKim.g:9736:6: ( (lv_extends_19_0= ruleConcept ) )
                            // InternalKim.g:9737:7: (lv_extends_19_0= ruleConcept )
                            {
                            // InternalKim.g:9737:7: (lv_extends_19_0= ruleConcept )
                            // InternalKim.g:9738:8: lv_extends_19_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_5_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_19_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_19_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_20=(Token)match(input,110,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_20, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_5_1());
                              					
                            }
                            // InternalKim.g:9759:6: ( (lv_name_21_0= 'contained' ) )
                            // InternalKim.g:9760:7: (lv_name_21_0= 'contained' )
                            {
                            // InternalKim.g:9760:7: (lv_name_21_0= 'contained' )
                            // InternalKim.g:9761:8: lv_name_21_0= 'contained'
                            {
                            lv_name_21_0=(Token)match(input,132,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_21_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_3_1_5_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_21_0, "contained");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:9775:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
                            {
                            // InternalKim.g:9775:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
                            // InternalKim.g:9776:6: ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) )
                            {
                            // InternalKim.g:9776:6: ( (lv_extends_22_0= ruleConcept ) )
                            // InternalKim.g:9777:7: (lv_extends_22_0= ruleConcept )
                            {
                            // InternalKim.g:9777:7: (lv_extends_22_0= ruleConcept )
                            // InternalKim.g:9778:8: lv_extends_22_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_6_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_22_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_22_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_23=(Token)match(input,110,FOLLOW_133); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_23, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_6_1());
                              					
                            }
                            // InternalKim.g:9799:6: ( (lv_name_24_0= 'purpose' ) )
                            // InternalKim.g:9800:7: (lv_name_24_0= 'purpose' )
                            {
                            // InternalKim.g:9800:7: (lv_name_24_0= 'purpose' )
                            // InternalKim.g:9801:8: lv_name_24_0= 'purpose'
                            {
                            lv_name_24_0=(Token)match(input,143,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_24_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_3_1_6_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_24_0, "purpose");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:9815:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
                            {
                            // InternalKim.g:9815:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
                            // InternalKim.g:9816:6: ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) )
                            {
                            // InternalKim.g:9816:6: ( (lv_extends_25_0= ruleConcept ) )
                            // InternalKim.g:9817:7: (lv_extends_25_0= ruleConcept )
                            {
                            // InternalKim.g:9817:7: (lv_extends_25_0= ruleConcept )
                            // InternalKim.g:9818:8: lv_extends_25_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_7_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_25_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_25_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_26=(Token)match(input,110,FOLLOW_134); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_7_1());
                              					
                            }
                            // InternalKim.g:9839:6: ( (lv_name_27_0= 'causant' ) )
                            // InternalKim.g:9840:7: (lv_name_27_0= 'causant' )
                            {
                            // InternalKim.g:9840:7: (lv_name_27_0= 'causant' )
                            // InternalKim.g:9841:8: lv_name_27_0= 'causant'
                            {
                            lv_name_27_0=(Token)match(input,144,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_3_1_7_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "causant");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:9855:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
                            {
                            // InternalKim.g:9855:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
                            // InternalKim.g:9856:6: ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) )
                            {
                            // InternalKim.g:9856:6: ( (lv_extends_28_0= ruleConcept ) )
                            // InternalKim.g:9857:7: (lv_extends_28_0= ruleConcept )
                            {
                            // InternalKim.g:9857:7: (lv_extends_28_0= ruleConcept )
                            // InternalKim.g:9858:8: lv_extends_28_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_8_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_28_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_28_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_29=(Token)match(input,110,FOLLOW_135); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_8_1());
                              					
                            }
                            // InternalKim.g:9879:6: ( (lv_name_30_0= 'caused' ) )
                            // InternalKim.g:9880:7: (lv_name_30_0= 'caused' )
                            {
                            // InternalKim.g:9880:7: (lv_name_30_0= 'caused' )
                            // InternalKim.g:9881:8: lv_name_30_0= 'caused'
                            {
                            lv_name_30_0=(Token)match(input,130,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_30_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_3_1_8_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_30_0, "caused");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:9895:5: ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) )
                            {
                            // InternalKim.g:9895:5: ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) )
                            // InternalKim.g:9896:6: ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) )
                            {
                            // InternalKim.g:9896:6: ( (lv_extends_31_0= ruleConcept ) )
                            // InternalKim.g:9897:7: (lv_extends_31_0= ruleConcept )
                            {
                            // InternalKim.g:9897:7: (lv_extends_31_0= ruleConcept )
                            // InternalKim.g:9898:8: lv_extends_31_0= ruleConcept
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_9_0_0());
                              							
                            }
                            pushFollow(FOLLOW_88);
                            lv_extends_31_0=ruleConcept();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                              								}
                              								set(
                              									current,
                              									"extends",
                              									lv_extends_31_0,
                              									"org.integratedmodelling.kim.Kim.Concept");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            otherlv_32=(Token)match(input,110,FOLLOW_136); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_32, grammarAccess.getConceptReferenceAccess().getColonKeyword_3_1_9_1());
                              					
                            }
                            // InternalKim.g:9919:6: ( (lv_name_33_0= 'cooccurrent' ) )
                            // InternalKim.g:9920:7: (lv_name_33_0= 'cooccurrent' )
                            {
                            // InternalKim.g:9920:7: (lv_name_33_0= 'cooccurrent' )
                            // InternalKim.g:9921:8: lv_name_33_0= 'cooccurrent'
                            {
                            lv_name_33_0=(Token)match(input,145,FOLLOW_127); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_33_0, grammarAccess.getConceptReferenceAccess().getNameCooccurrentKeyword_3_1_9_2_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_33_0, "cooccurrent");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:9935:4: ( (lv_template_34_0= '}' ) )
                    // InternalKim.g:9936:5: (lv_template_34_0= '}' )
                    {
                    // InternalKim.g:9936:5: (lv_template_34_0= '}' )
                    // InternalKim.g:9937:6: lv_template_34_0= '}'
                    {
                    lv_template_34_0=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_34_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_3_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", lv_template_34_0 != null, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:9954:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:9954:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:9955:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:9961:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:9967:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' ) )
            // InternalKim.g:9968:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            {
            // InternalKim.g:9968:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' | kw= 'cooccurrent' )
            int alt217=10;
            switch ( input.LA(1) ) {
            case 65:
                {
                alt217=1;
                }
                break;
            case 140:
                {
                alt217=2;
                }
                break;
            case 141:
                {
                alt217=3;
                }
                break;
            case 131:
                {
                alt217=4;
                }
                break;
            case 142:
                {
                alt217=5;
                }
                break;
            case 132:
                {
                alt217=6;
                }
                break;
            case 143:
                {
                alt217=7;
                }
                break;
            case 144:
                {
                alt217=8;
                }
                break;
            case 130:
                {
                alt217=9;
                }
                break;
            case 145:
                {
                alt217=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 217, 0, input);

                throw nvae;
            }

            switch (alt217) {
                case 1 :
                    // InternalKim.g:9969:3: kw= 'context'
                    {
                    kw=(Token)match(input,65,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:9975:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,140,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:9981:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,141,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:9987:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,131,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:9993:3: kw= 'container'
                    {
                    kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:9999:3: kw= 'contained'
                    {
                    kw=(Token)match(input,132,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:10005:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:10011:3: kw= 'causant'
                    {
                    kw=(Token)match(input,144,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:10017:3: kw= 'caused'
                    {
                    kw=(Token)match(input,130,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:10023:3: kw= 'cooccurrent'
                    {
                    kw=(Token)match(input,145,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCooccurrentKeyword_9());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:10032:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:10032:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:10033:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:10039:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token lv_authConcept_2_0=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_stringIdentifier_4_3=null;
        Token lv_stringIdentifier_4_4=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        Token lv_change_25_0=null;
        Token lv_rate_26_0=null;
        Token otherlv_27=null;
        Token lv_changed_28_0=null;
        Token lv_uncertainty_30_0=null;
        Token otherlv_31=null;
        Token lv_magnitude_33_0=null;
        Token otherlv_34=null;
        Token lv_level_36_0=null;
        Token otherlv_37=null;
        Token lv_type_39_0=null;
        Token otherlv_40=null;
        Token lv_observability_42_0=null;
        Token otherlv_43=null;
        Token lv_proportion_45_0=null;
        Token otherlv_46=null;
        Token otherlv_48=null;
        Token lv_percentage_50_0=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token lv_ratio_55_0=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token lv_monetary_60_0=null;
        Token lv_value_61_0=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token lv_occurrence_66_0=null;
        Token otherlv_67=null;
        Token otherlv_69=null;
        Token otherlv_71=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_concept_38_0 = null;

        EObject lv_concept_41_0 = null;

        EObject lv_concept_44_0 = null;

        EObject lv_concept_47_0 = null;

        EObject lv_other_49_0 = null;

        EObject lv_concept_52_0 = null;

        EObject lv_other_54_0 = null;

        EObject lv_concept_57_0 = null;

        EObject lv_other_59_0 = null;

        EObject lv_concept_63_0 = null;

        EObject lv_other_65_0 = null;

        EObject lv_concept_68_0 = null;

        EObject lv_declaration_70_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10045:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')' ) ) )
            // InternalKim.g:10046:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')' ) )
            {
            // InternalKim.g:10046:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')' ) )
            int alt231=18;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_UPPERCASE_PATH:
            case 138:
            case 139:
            case 147:
            case 148:
                {
                alt231=1;
                }
                break;
            case 150:
                {
                alt231=2;
                }
                break;
            case 151:
                {
                alt231=3;
                }
                break;
            case 152:
                {
                alt231=4;
                }
                break;
            case 153:
                {
                alt231=5;
                }
                break;
            case 154:
                {
                alt231=6;
                }
                break;
            case 155:
            case 157:
                {
                alt231=7;
                }
                break;
            case 158:
                {
                alt231=8;
                }
                break;
            case 159:
                {
                alt231=9;
                }
                break;
            case 160:
                {
                alt231=10;
                }
                break;
            case 161:
                {
                alt231=11;
                }
                break;
            case 162:
                {
                alt231=12;
                }
                break;
            case 163:
                {
                alt231=13;
                }
                break;
            case 164:
                {
                alt231=14;
                }
                break;
            case 165:
                {
                alt231=15;
                }
                break;
            case 166:
            case 167:
                {
                alt231=16;
                }
                break;
            case 168:
                {
                alt231=17;
                }
                break;
            case 39:
                {
                alt231=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }

            switch (alt231) {
                case 1 :
                    // InternalKim.g:10047:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:10047:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:10048:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:10048:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt219=2;
                    int LA219_0 = input.LA(1);

                    if ( ((LA219_0>=147 && LA219_0<=148)) ) {
                        alt219=1;
                    }
                    switch (alt219) {
                        case 1 :
                            // InternalKim.g:10049:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:10049:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:10050:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:10050:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt218=2;
                            int LA218_0 = input.LA(1);

                            if ( (LA218_0==147) ) {
                                alt218=1;
                            }
                            else if ( (LA218_0==148) ) {
                                alt218=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 218, 0, input);

                                throw nvae;
                            }
                            switch (alt218) {
                                case 1 :
                                    // InternalKim.g:10051:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,147,FOLLOW_137); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", lv_negated_0_1 != null, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10062:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,148,FOLLOW_137); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", lv_negated_0_2 != null, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:10075:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:10076:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:10076:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:10077:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_138);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10094:4: ( ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==149) ) {
                        alt223=1;
                    }
                    switch (alt223) {
                        case 1 :
                            // InternalKim.g:10095:5: ( (lv_authConcept_2_0= 'identified' ) ) otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            // InternalKim.g:10095:5: ( (lv_authConcept_2_0= 'identified' ) )
                            // InternalKim.g:10096:6: (lv_authConcept_2_0= 'identified' )
                            {
                            // InternalKim.g:10096:6: (lv_authConcept_2_0= 'identified' )
                            // InternalKim.g:10097:7: lv_authConcept_2_0= 'identified'
                            {
                            lv_authConcept_2_0=(Token)match(input,149,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authConcept_2_0, grammarAccess.getConceptAccess().getAuthConceptIdentifiedKeyword_0_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "authConcept", lv_authConcept_2_0 != null, "identified");
                              						
                            }

                            }


                            }

                            otherlv_3=(Token)match(input,26,FOLLOW_139); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:10113:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt221=2;
                            int LA221_0 = input.LA(1);

                            if ( ((LA221_0>=RULE_UPPERCASE_ID && LA221_0<=RULE_STRING)||LA221_0==RULE_CAMELCASE_ID||LA221_0==RULE_ID) ) {
                                alt221=1;
                            }
                            else if ( (LA221_0==RULE_INT) ) {
                                alt221=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 221, 0, input);

                                throw nvae;
                            }
                            switch (alt221) {
                                case 1 :
                                    // InternalKim.g:10114:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    {
                                    // InternalKim.g:10114:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) ) )
                                    // InternalKim.g:10115:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    {
                                    // InternalKim.g:10115:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID ) )
                                    // InternalKim.g:10116:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    {
                                    // InternalKim.g:10116:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING | lv_stringIdentifier_4_3= RULE_UPPERCASE_ID | lv_stringIdentifier_4_4= RULE_CAMELCASE_ID )
                                    int alt220=4;
                                    switch ( input.LA(1) ) {
                                    case RULE_ID:
                                        {
                                        alt220=1;
                                        }
                                        break;
                                    case RULE_STRING:
                                        {
                                        alt220=2;
                                        }
                                        break;
                                    case RULE_UPPERCASE_ID:
                                        {
                                        alt220=3;
                                        }
                                        break;
                                    case RULE_CAMELCASE_ID:
                                        {
                                        alt220=4;
                                        }
                                        break;
                                    default:
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 220, 0, input);

                                        throw nvae;
                                    }

                                    switch (alt220) {
                                        case 1 :
                                            // InternalKim.g:10117:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:10132:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_124); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;
                                        case 3 :
                                            // InternalKim.g:10147:9: lv_stringIdentifier_4_3= RULE_UPPERCASE_ID
                                            {
                                            lv_stringIdentifier_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_124); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_3, grammarAccess.getConceptAccess().getStringIdentifierUPPERCASE_IDTerminalRuleCall_0_2_2_0_0_2());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_3,
                                              										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 4 :
                                            // InternalKim.g:10162:9: lv_stringIdentifier_4_4= RULE_CAMELCASE_ID
                                            {
                                            lv_stringIdentifier_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_124); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_4, grammarAccess.getConceptAccess().getStringIdentifierCAMELCASE_IDTerminalRuleCall_0_2_2_0_0_3());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_4,
                                              										"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10180:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:10180:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:10181:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:10181:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:10182:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_124); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,93,FOLLOW_140); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:10203:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:10204:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:10204:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:10205:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:10205:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt222=2;
                            int LA222_0 = input.LA(1);

                            if ( (LA222_0==RULE_UPPERCASE_ID) ) {
                                alt222=1;
                            }
                            else if ( (LA222_0==RULE_UPPERCASE_PATH) ) {
                                alt222=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 222, 0, input);

                                throw nvae;
                            }
                            switch (alt222) {
                                case 1 :
                                    // InternalKim.g:10206:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10221:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10241:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10241:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10242:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10242:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:10243:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:10243:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:10244:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,150,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", lv_presence_8_0 != null, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:10260:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10261:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10261:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10262:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:10281:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10281:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10282:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10282:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:10283:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:10283:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:10284:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,151,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", lv_count_11_0 != null, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:10300:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10301:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10301:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10302:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:10321:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10321:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10322:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10322:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:10323:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:10323:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:10324:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,152,FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", lv_distance_14_0 != null, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:10336:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt224=2;
                    int LA224_0 = input.LA(1);

                    if ( (LA224_0==37) ) {
                        alt224=1;
                    }
                    else if ( (LA224_0==106) ) {
                        alt224=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 224, 0, input);

                        throw nvae;
                    }
                    switch (alt224) {
                        case 1 :
                            // InternalKim.g:10337:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,37,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10342:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,106,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:10347:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10348:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10348:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10349:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:10368:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10368:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10369:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10369:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:10370:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:10370:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:10371:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,153,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", lv_probability_18_0 != null, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:10387:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10388:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10388:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10389:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:10408:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10408:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10409:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10409:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:10410:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:10410:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:10411:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,154,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", lv_assessment_21_0 != null, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:10427:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10428:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10428:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10429:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:10448:3: ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10448:3: ( ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10449:4: ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) ) ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10449:4: ( (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) ) | ( (lv_changed_28_0= 'changed' ) ) )
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==155) ) {
                        alt226=1;
                    }
                    else if ( (LA226_0==157) ) {
                        alt226=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 226, 0, input);

                        throw nvae;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalKim.g:10450:5: (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) )
                            {
                            // InternalKim.g:10450:5: (otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) ) )
                            // InternalKim.g:10451:6: otherlv_24= 'change' ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) )
                            {
                            otherlv_24=(Token)match(input,155,FOLLOW_143); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getConceptAccess().getChangeKeyword_6_0_0_0());
                              					
                            }
                            // InternalKim.g:10455:6: ( ( (lv_change_25_0= 'in' ) ) | ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' ) )
                            int alt225=2;
                            int LA225_0 = input.LA(1);

                            if ( (LA225_0==53) ) {
                                alt225=1;
                            }
                            else if ( (LA225_0==156) ) {
                                alt225=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 225, 0, input);

                                throw nvae;
                            }
                            switch (alt225) {
                                case 1 :
                                    // InternalKim.g:10456:7: ( (lv_change_25_0= 'in' ) )
                                    {
                                    // InternalKim.g:10456:7: ( (lv_change_25_0= 'in' ) )
                                    // InternalKim.g:10457:8: (lv_change_25_0= 'in' )
                                    {
                                    // InternalKim.g:10457:8: (lv_change_25_0= 'in' )
                                    // InternalKim.g:10458:9: lv_change_25_0= 'in'
                                    {
                                    lv_change_25_0=(Token)match(input,53,FOLLOW_122); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_change_25_0, grammarAccess.getConceptAccess().getChangeInKeyword_6_0_0_1_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptRule());
                                      									}
                                      									setWithLastConsumed(current, "change", lv_change_25_0 != null, "in");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:10471:7: ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' )
                                    {
                                    // InternalKim.g:10471:7: ( ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of' )
                                    // InternalKim.g:10472:8: ( (lv_rate_26_0= 'rate' ) ) otherlv_27= 'of'
                                    {
                                    // InternalKim.g:10472:8: ( (lv_rate_26_0= 'rate' ) )
                                    // InternalKim.g:10473:9: (lv_rate_26_0= 'rate' )
                                    {
                                    // InternalKim.g:10473:9: (lv_rate_26_0= 'rate' )
                                    // InternalKim.g:10474:10: lv_rate_26_0= 'rate'
                                    {
                                    lv_rate_26_0=(Token)match(input,156,FOLLOW_141); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_rate_26_0, grammarAccess.getConceptAccess().getRateRateKeyword_6_0_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getConceptRule());
                                      										}
                                      										setWithLastConsumed(current, "rate", lv_rate_26_0 != null, "rate");
                                      									
                                    }

                                    }


                                    }

                                    otherlv_27=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_27, grammarAccess.getConceptAccess().getOfKeyword_6_0_0_1_1_1());
                                      							
                                    }

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:10494:5: ( (lv_changed_28_0= 'changed' ) )
                            {
                            // InternalKim.g:10494:5: ( (lv_changed_28_0= 'changed' ) )
                            // InternalKim.g:10495:6: (lv_changed_28_0= 'changed' )
                            {
                            // InternalKim.g:10495:6: (lv_changed_28_0= 'changed' )
                            // InternalKim.g:10496:7: lv_changed_28_0= 'changed'
                            {
                            lv_changed_28_0=(Token)match(input,157,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_changed_28_0, grammarAccess.getConceptAccess().getChangedChangedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptRule());
                              							}
                              							setWithLastConsumed(current, "changed", lv_changed_28_0 != null, "changed");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:10509:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10510:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10510:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10511:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:10530:3: ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10530:3: ( ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10531:4: ( (lv_uncertainty_30_0= 'uncertainty' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10531:4: ( (lv_uncertainty_30_0= 'uncertainty' ) )
                    // InternalKim.g:10532:5: (lv_uncertainty_30_0= 'uncertainty' )
                    {
                    // InternalKim.g:10532:5: (lv_uncertainty_30_0= 'uncertainty' )
                    // InternalKim.g:10533:6: lv_uncertainty_30_0= 'uncertainty'
                    {
                    lv_uncertainty_30_0=(Token)match(input,158,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_30_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", lv_uncertainty_30_0 != null, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:10549:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10550:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10550:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10551:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:10570:3: ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10570:3: ( ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10571:4: ( (lv_magnitude_33_0= 'magnitude' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10571:4: ( (lv_magnitude_33_0= 'magnitude' ) )
                    // InternalKim.g:10572:5: (lv_magnitude_33_0= 'magnitude' )
                    {
                    // InternalKim.g:10572:5: (lv_magnitude_33_0= 'magnitude' )
                    // InternalKim.g:10573:6: lv_magnitude_33_0= 'magnitude'
                    {
                    lv_magnitude_33_0=(Token)match(input,159,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_33_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", lv_magnitude_33_0 != null, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:10589:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10590:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10590:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10591:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:10610:3: ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10610:3: ( ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10611:4: ( (lv_level_36_0= 'level' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10611:4: ( (lv_level_36_0= 'level' ) )
                    // InternalKim.g:10612:5: (lv_level_36_0= 'level' )
                    {
                    // InternalKim.g:10612:5: (lv_level_36_0= 'level' )
                    // InternalKim.g:10613:6: lv_level_36_0= 'level'
                    {
                    lv_level_36_0=(Token)match(input,160,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_level_36_0, grammarAccess.getConceptAccess().getLevelLevelKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "level", lv_level_36_0 != null, "level");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:10629:4: ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10630:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10630:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10631:6: lv_concept_38_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_38_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_38_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:10650:3: ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10650:3: ( ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10651:4: ( (lv_type_39_0= 'type' ) ) otherlv_40= 'of' ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10651:4: ( (lv_type_39_0= 'type' ) )
                    // InternalKim.g:10652:5: (lv_type_39_0= 'type' )
                    {
                    // InternalKim.g:10652:5: (lv_type_39_0= 'type' )
                    // InternalKim.g:10653:6: lv_type_39_0= 'type'
                    {
                    lv_type_39_0=(Token)match(input,161,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_39_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", lv_type_39_0 != null, "type");
                      					
                    }

                    }


                    }

                    otherlv_40=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:10669:4: ( (lv_concept_41_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10670:5: (lv_concept_41_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10670:5: (lv_concept_41_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10671:6: lv_concept_41_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_41_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_41_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:10690:3: ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10690:3: ( ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10691:4: ( (lv_observability_42_0= 'observability' ) ) otherlv_43= 'of' ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10691:4: ( (lv_observability_42_0= 'observability' ) )
                    // InternalKim.g:10692:5: (lv_observability_42_0= 'observability' )
                    {
                    // InternalKim.g:10692:5: (lv_observability_42_0= 'observability' )
                    // InternalKim.g:10693:6: lv_observability_42_0= 'observability'
                    {
                    lv_observability_42_0=(Token)match(input,162,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_42_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", lv_observability_42_0 != null, "observability");
                      					
                    }

                    }


                    }

                    otherlv_43=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:10709:4: ( (lv_concept_44_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10710:5: (lv_concept_44_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10710:5: (lv_concept_44_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10711:6: lv_concept_44_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_44_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_44_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:10730:3: ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10730:3: ( ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10731:4: ( (lv_proportion_45_0= 'proportion' ) ) otherlv_46= 'of' ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10731:4: ( (lv_proportion_45_0= 'proportion' ) )
                    // InternalKim.g:10732:5: (lv_proportion_45_0= 'proportion' )
                    {
                    // InternalKim.g:10732:5: (lv_proportion_45_0= 'proportion' )
                    // InternalKim.g:10733:6: lv_proportion_45_0= 'proportion'
                    {
                    lv_proportion_45_0=(Token)match(input,163,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_45_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", lv_proportion_45_0 != null, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_46=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_46, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:10749:4: ( (lv_concept_47_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10750:5: (lv_concept_47_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10750:5: (lv_concept_47_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10751:6: lv_concept_47_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_concept_47_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_47_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10768:4: ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt227=2;
                    int LA227_0 = input.LA(1);

                    if ( (LA227_0==53) ) {
                        int LA227_1 = input.LA(2);

                        if ( (synpred413_InternalKim()) ) {
                            alt227=1;
                        }
                    }
                    switch (alt227) {
                        case 1 :
                            // InternalKim.g:10769:5: ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10769:5: ( ( 'in' )=>otherlv_48= 'in' )
                            // InternalKim.g:10770:6: ( 'in' )=>otherlv_48= 'in'
                            {
                            otherlv_48=(Token)match(input,53,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_48, grammarAccess.getConceptAccess().getInKeyword_12_3_0());
                              					
                            }

                            }

                            // InternalKim.g:10776:5: ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10777:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10777:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10778:7: lv_other_49_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_49_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_49_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:10798:3: ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10798:3: ( ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10799:4: ( (lv_percentage_50_0= 'percentage' ) ) otherlv_51= 'of' ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10799:4: ( (lv_percentage_50_0= 'percentage' ) )
                    // InternalKim.g:10800:5: (lv_percentage_50_0= 'percentage' )
                    {
                    // InternalKim.g:10800:5: (lv_percentage_50_0= 'percentage' )
                    // InternalKim.g:10801:6: lv_percentage_50_0= 'percentage'
                    {
                    lv_percentage_50_0=(Token)match(input,164,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_percentage_50_0, grammarAccess.getConceptAccess().getPercentagePercentageKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "percentage", lv_percentage_50_0 != null, "percentage");
                      					
                    }

                    }


                    }

                    otherlv_51=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:10817:4: ( (lv_concept_52_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10818:5: (lv_concept_52_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10818:5: (lv_concept_52_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10819:6: lv_concept_52_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_65);
                    lv_concept_52_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_52_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10836:4: ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt228=2;
                    int LA228_0 = input.LA(1);

                    if ( (LA228_0==53) ) {
                        int LA228_1 = input.LA(2);

                        if ( (synpred416_InternalKim()) ) {
                            alt228=1;
                        }
                    }
                    switch (alt228) {
                        case 1 :
                            // InternalKim.g:10837:5: ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10837:5: ( ( 'in' )=>otherlv_53= 'in' )
                            // InternalKim.g:10838:6: ( 'in' )=>otherlv_53= 'in'
                            {
                            otherlv_53=(Token)match(input,53,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getInKeyword_13_3_0());
                              					
                            }

                            }

                            // InternalKim.g:10844:5: ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10845:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10845:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10846:7: lv_other_54_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_54_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_54_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:10866:3: ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:10866:3: ( ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:10867:4: ( (lv_ratio_55_0= 'ratio' ) ) otherlv_56= 'of' ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_58= 'to' ) ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:10867:4: ( (lv_ratio_55_0= 'ratio' ) )
                    // InternalKim.g:10868:5: (lv_ratio_55_0= 'ratio' )
                    {
                    // InternalKim.g:10868:5: (lv_ratio_55_0= 'ratio' )
                    // InternalKim.g:10869:6: lv_ratio_55_0= 'ratio'
                    {
                    lv_ratio_55_0=(Token)match(input,165,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_55_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_14_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", lv_ratio_55_0 != null, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getOfKeyword_14_1());
                      			
                    }
                    // InternalKim.g:10885:4: ( (lv_concept_57_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10886:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10886:5: (lv_concept_57_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10887:6: lv_concept_57_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_14_2_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_concept_57_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_57_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10904:4: ( ( 'to' )=>otherlv_58= 'to' )
                    // InternalKim.g:10905:5: ( 'to' )=>otherlv_58= 'to'
                    {
                    otherlv_58=(Token)match(input,37,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_58, grammarAccess.getConceptAccess().getToKeyword_14_3());
                      				
                    }

                    }

                    // InternalKim.g:10911:4: ( (lv_other_59_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10912:5: (lv_other_59_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10912:5: (lv_other_59_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10913:6: lv_other_59_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_14_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_59_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_59_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 16 :
                    // InternalKim.g:10932:3: ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:10932:3: ( ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:10933:4: ( (lv_monetary_60_0= 'monetary' ) )? ( (lv_value_61_0= 'value' ) ) otherlv_62= 'of' ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:10933:4: ( (lv_monetary_60_0= 'monetary' ) )?
                    int alt229=2;
                    int LA229_0 = input.LA(1);

                    if ( (LA229_0==166) ) {
                        alt229=1;
                    }
                    switch (alt229) {
                        case 1 :
                            // InternalKim.g:10934:5: (lv_monetary_60_0= 'monetary' )
                            {
                            // InternalKim.g:10934:5: (lv_monetary_60_0= 'monetary' )
                            // InternalKim.g:10935:6: lv_monetary_60_0= 'monetary'
                            {
                            lv_monetary_60_0=(Token)match(input,166,FOLLOW_144); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_monetary_60_0, grammarAccess.getConceptAccess().getMonetaryMonetaryKeyword_15_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getConceptRule());
                              						}
                              						setWithLastConsumed(current, "monetary", lv_monetary_60_0 != null, "monetary");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10947:4: ( (lv_value_61_0= 'value' ) )
                    // InternalKim.g:10948:5: (lv_value_61_0= 'value' )
                    {
                    // InternalKim.g:10948:5: (lv_value_61_0= 'value' )
                    // InternalKim.g:10949:6: lv_value_61_0= 'value'
                    {
                    lv_value_61_0=(Token)match(input,167,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_61_0, grammarAccess.getConceptAccess().getValueValueKeyword_15_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", lv_value_61_0 != null, "value");
                      					
                    }

                    }


                    }

                    otherlv_62=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_62, grammarAccess.getConceptAccess().getOfKeyword_15_2());
                      			
                    }
                    // InternalKim.g:10965:4: ( (lv_concept_63_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:10966:5: (lv_concept_63_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:10966:5: (lv_concept_63_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:10967:6: lv_concept_63_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_15_3_0());
                      					
                    }
                    pushFollow(FOLLOW_145);
                    lv_concept_63_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_63_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10984:4: ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( (LA230_0==60) ) {
                        int LA230_1 = input.LA(2);

                        if ( (synpred422_InternalKim()) ) {
                            alt230=1;
                        }
                    }
                    switch (alt230) {
                        case 1 :
                            // InternalKim.g:10985:5: ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:10985:5: ( ( 'over' )=>otherlv_64= 'over' )
                            // InternalKim.g:10986:6: ( 'over' )=>otherlv_64= 'over'
                            {
                            otherlv_64=(Token)match(input,60,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_64, grammarAccess.getConceptAccess().getOverKeyword_15_4_0());
                              					
                            }

                            }

                            // InternalKim.g:10992:5: ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:10993:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:10993:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:10994:7: lv_other_65_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_65_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_65_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 17 :
                    // InternalKim.g:11014:3: ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:11014:3: ( ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:11015:4: ( (lv_occurrence_66_0= 'occurrence' ) ) otherlv_67= 'of' ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:11015:4: ( (lv_occurrence_66_0= 'occurrence' ) )
                    // InternalKim.g:11016:5: (lv_occurrence_66_0= 'occurrence' )
                    {
                    // InternalKim.g:11016:5: (lv_occurrence_66_0= 'occurrence' )
                    // InternalKim.g:11017:6: lv_occurrence_66_0= 'occurrence'
                    {
                    lv_occurrence_66_0=(Token)match(input,168,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_66_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_16_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", lv_occurrence_66_0 != null, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_67=(Token)match(input,129,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_67, grammarAccess.getConceptAccess().getOfKeyword_16_1());
                      			
                    }
                    // InternalKim.g:11033:4: ( (lv_concept_68_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:11034:5: (lv_concept_68_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:11034:5: (lv_concept_68_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:11035:6: lv_concept_68_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_16_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_68_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_68_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 18 :
                    // InternalKim.g:11054:3: (otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')' )
                    {
                    // InternalKim.g:11054:3: (otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')' )
                    // InternalKim.g:11055:4: otherlv_69= '(' ( (lv_declaration_70_0= ruleExpression ) ) otherlv_71= ')'
                    {
                    otherlv_69=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_69, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_17_0());
                      			
                    }
                    // InternalKim.g:11059:4: ( (lv_declaration_70_0= ruleExpression ) )
                    // InternalKim.g:11060:5: (lv_declaration_70_0= ruleExpression )
                    {
                    // InternalKim.g:11060:5: (lv_declaration_70_0= ruleExpression )
                    // InternalKim.g:11061:6: lv_declaration_70_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_17_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_declaration_70_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_70_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_71=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_71, grammarAccess.getConceptAccess().getRightParenthesisKeyword_17_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:11087:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:11087:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:11088:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:11094:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11100:2: (this_Term_0= ruleTerm )
            // InternalKim.g:11101:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:11115:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:11115:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:11116:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:11122:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11128:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:11129:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:11129:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:11130:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_146);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:11141:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop232:
            do {
                int alt232=2;
                int LA232_0 = input.LA(1);

                if ( (LA232_0==169) ) {
                    int LA232_2 = input.LA(2);

                    if ( (synpred425_InternalKim()) ) {
                        alt232=1;
                    }


                }


                switch (alt232) {
            	case 1 :
            	    // InternalKim.g:11142:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:11142:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:11143:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:11143:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:11144:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,169,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:11156:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:11157:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:11157:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:11158:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_146);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop232;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:11180:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:11180:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:11181:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:11187:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11193:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:11194:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:11194:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:11195:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_147);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:11206:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop234:
            do {
                int alt234=2;
                int LA234_0 = input.LA(1);

                if ( (LA234_0==170) ) {
                    int LA234_2 = input.LA(2);

                    if ( (synpred427_InternalKim()) ) {
                        alt234=1;
                    }


                }
                else if ( (LA234_0==171) ) {
                    int LA234_3 = input.LA(2);

                    if ( (synpred427_InternalKim()) ) {
                        alt234=1;
                    }


                }


                switch (alt234) {
            	case 1 :
            	    // InternalKim.g:11207:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:11207:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:11208:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:11208:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:11209:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:11209:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt233=2;
            	    int LA233_0 = input.LA(1);

            	    if ( (LA233_0==170) ) {
            	        alt233=1;
            	    }
            	    else if ( (LA233_0==171) ) {
            	        alt233=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 233, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt233) {
            	        case 1 :
            	            // InternalKim.g:11210:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,170,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11221:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,171,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:11234:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:11235:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:11235:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:11236:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_147);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop234;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:11258:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:11258:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:11259:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:11265:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11271:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:11272:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:11272:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:11273:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:11273:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt235=2;
            int LA235_0 = input.LA(1);

            if ( (LA235_0==RULE_STRING) ) {
                alt235=1;
            }
            switch (alt235) {
                case 1 :
                    // InternalKim.g:11274:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:11274:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:11275:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:11291:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt236=0;
            loop236:
            do {
                int alt236=2;
                alt236 = dfa236.predict(input);
                switch (alt236) {
            	case 1 :
            	    // InternalKim.g:11292:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:11292:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:11293:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_148);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt236 >= 1 ) break loop236;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(236, input);
                        throw eee;
                }
                cnt236++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:11314:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:11314:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:11315:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:11321:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:11327:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:11328:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:11328:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:11329:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,75,FOLLOW_149); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:11333:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt243=2;
            int LA243_0 = input.LA(1);

            if ( (LA243_0==32||(LA243_0>=172 && LA243_0<=174)||(LA243_0>=252 && LA243_0<=253)) ) {
                alt243=1;
            }
            else if ( (LA243_0==65||(LA243_0>=130 && LA243_0<=132)||(LA243_0>=140 && LA243_0<=145)) ) {
                alt243=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 243, 0, input);

                throw nvae;
            }
            switch (alt243) {
                case 1 :
                    // InternalKim.g:11334:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:11334:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:11335:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:11335:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt240=2;
                    int LA240_0 = input.LA(1);

                    if ( ((LA240_0>=172 && LA240_0<=174)) ) {
                        alt240=1;
                    }
                    else if ( (LA240_0==32||(LA240_0>=252 && LA240_0<=253)) ) {
                        alt240=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 240, 0, input);

                        throw nvae;
                    }
                    switch (alt240) {
                        case 1 :
                            // InternalKim.g:11336:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:11336:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:11337:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:11337:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:11338:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:11338:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:11339:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:11339:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt237=3;
                            switch ( input.LA(1) ) {
                            case 172:
                                {
                                alt237=1;
                                }
                                break;
                            case 173:
                                {
                                alt237=2;
                                }
                                break;
                            case 174:
                                {
                                alt237=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 237, 0, input);

                                throw nvae;
                            }

                            switch (alt237) {
                                case 1 :
                                    // InternalKim.g:11340:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,172,FOLLOW_150); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11351:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,173,FOLLOW_150); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:11362:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,174,FOLLOW_150); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:11375:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:11376:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:11376:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:11377:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,175,FOLLOW_151); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11391:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:11391:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt239=2;
                            int LA239_0 = input.LA(1);

                            if ( ((LA239_0>=252 && LA239_0<=253)) ) {
                                alt239=1;
                            }
                            switch (alt239) {
                                case 1 :
                                    // InternalKim.g:11392:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:11392:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:11393:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:11393:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:11394:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_152);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:11411:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop238:
                                    do {
                                        int alt238=2;
                                        int LA238_0 = input.LA(1);

                                        if ( ((LA238_0>=252 && LA238_0<=253)) ) {
                                            alt238=1;
                                        }


                                        switch (alt238) {
                                    	case 1 :
                                    	    // InternalKim.g:11412:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:11412:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:11413:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_152);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop238;
                                        }
                                    } while (true);

                                    // InternalKim.g:11430:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:11431:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:11431:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:11432:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,176,FOLLOW_151); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,32,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:11450:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:11451:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:11451:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:11452:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:11452:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt241=2;
                    alt241 = dfa241.predict(input);
                    switch (alt241) {
                        case 1 :
                            // InternalKim.g:11453:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11469:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11489:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:11489:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:11490:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:11490:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:11491:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:11491:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:11492:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_151);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,32,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:11513:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:11514:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:11514:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:11515:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:11515:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt242=2;
                    alt242 = dfa242.predict(input);
                    switch (alt242) {
                        case 1 :
                            // InternalKim.g:11516:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11532:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:11556:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:11560:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:11561:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:11570:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        Token otherlv_11=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_9_0 = null;

        EObject lv_body_10_0 = null;

        AntlrDatatypeRuleToken lv_name_12_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:11579:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:11580:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:11580:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:11581:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) ) ( (lv_concept_9_0= ruleCONCEPT_TYPE ) ) ( (lv_body_10_0= ruleConceptStatementBody ) ) (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:11581:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop244:
            do {
                int alt244=2;
                int LA244_0 = input.LA(1);

                if ( (LA244_0==RULE_ANNOTATION_ID) ) {
                    alt244=1;
                }


                switch (alt244) {
            	case 1 :
            	    // InternalKim.g:11582:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:11582:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:11583:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop244;
                }
            } while (true);

            // InternalKim.g:11600:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:11601:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:11601:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* ) )
            // InternalKim.g:11602:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:11605:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )* )
            // InternalKim.g:11606:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            {
            // InternalKim.g:11606:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*
            loop248:
            do {
                int alt248=5;
                alt248 = dfa248.predict(input);
                switch (alt248) {
            	case 1 :
            	    // InternalKim.g:11607:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:11607:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:11608:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:11608:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:11609:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:11612:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:11612:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11612:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:11612:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:11612:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:11613:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,177,FOLLOW_153); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", lv_abstract_2_0 != null, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:11630:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:11630:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:11631:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:11631:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:11632:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:11635:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:11635:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11635:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:11635:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:11635:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:11636:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,178,FOLLOW_153); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", lv_deniable_3_0 != null, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:11653:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:11653:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:11654:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:11654:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:11655:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:11658:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:11658:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11658:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:11658:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:11658:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:11659:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,179,FOLLOW_153); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", lv_subjective_4_0 != null, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:11676:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    {
            	    // InternalKim.g:11676:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
            	    // InternalKim.g:11677:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:11677:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
            	    // InternalKim.g:11678:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:11681:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
            	    // InternalKim.g:11681:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:11681:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
            	    int alt247=3;
            	    switch ( input.LA(1) ) {
            	    case 172:
            	    case 173:
            	    case 174:
            	        {
            	        alt247=1;
            	        }
            	        break;
            	    case 252:
            	    case 253:
            	        {
            	        alt247=2;
            	        }
            	        break;
            	    case 180:
            	        {
            	        alt247=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 247, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt247) {
            	        case 1 :
            	            // InternalKim.g:11681:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:11681:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:11682:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:11682:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:11683:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:11683:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt245=3;
            	            switch ( input.LA(1) ) {
            	            case 172:
            	                {
            	                alt245=1;
            	                }
            	                break;
            	            case 173:
            	                {
            	                alt245=2;
            	                }
            	                break;
            	            case 174:
            	                {
            	                alt245=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 245, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt245) {
            	                case 1 :
            	                    // InternalKim.g:11684:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,172,FOLLOW_153); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:11695:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,173,FOLLOW_153); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:11706:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,174,FOLLOW_153); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11720:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:11720:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:11721:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:11721:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:11722:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:11722:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:11723:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_153);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:11740:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop246:
            	            do {
            	                int alt246=2;
            	                int LA246_0 = input.LA(1);

            	                if ( (LA246_0==252) ) {
            	                    int LA246_2 = input.LA(2);

            	                    if ( (synpred445_InternalKim()) ) {
            	                        alt246=1;
            	                    }


            	                }
            	                else if ( (LA246_0==253) ) {
            	                    int LA246_3 = input.LA(2);

            	                    if ( (synpred445_InternalKim()) ) {
            	                        alt246=1;
            	                    }


            	                }


            	                switch (alt246) {
            	            	case 1 :
            	            	    // InternalKim.g:11741:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:11741:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:11742:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_153);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop246;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11761:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            {
            	            // InternalKim.g:11761:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
            	            // InternalKim.g:11762:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            {
            	            // InternalKim.g:11762:10: (lv_attributeSpecifier_8_0= 'rescaling' )
            	            // InternalKim.g:11763:11: lv_attributeSpecifier_8_0= 'rescaling'
            	            {
            	            lv_attributeSpecifier_8_0=(Token)match(input,180,FOLLOW_153); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_attributeSpecifier_8_0, grammarAccess.getConceptStatementAccess().getAttributeSpecifierRescalingKeyword_1_3_2_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementRule());
            	              											}
            	              											setWithLastConsumed(current, "attributeSpecifier", lv_attributeSpecifier_8_0, "rescaling");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:11788:3: ( (lv_concept_9_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:11789:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:11789:4: (lv_concept_9_0= ruleCONCEPT_TYPE )
            // InternalKim.g:11790:5: lv_concept_9_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_154);
            lv_concept_9_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_9_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11807:3: ( (lv_body_10_0= ruleConceptStatementBody ) )
            // InternalKim.g:11808:4: (lv_body_10_0= ruleConceptStatementBody )
            {
            // InternalKim.g:11808:4: (lv_body_10_0= ruleConceptStatementBody )
            // InternalKim.g:11809:5: lv_body_10_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_155);
            lv_body_10_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_10_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:11826:3: (otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) ) )?
            int alt249=2;
            int LA249_0 = input.LA(1);

            if ( (LA249_0==123) ) {
                alt249=1;
            }
            switch (alt249) {
                case 1 :
                    // InternalKim.g:11827:4: otherlv_11= 'named' ( (lv_name_12_0= ruleNamespaceId ) )
                    {
                    otherlv_11=(Token)match(input,123,FOLLOW_26); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:11831:4: ( (lv_name_12_0= ruleNamespaceId ) )
                    // InternalKim.g:11832:5: (lv_name_12_0= ruleNamespaceId )
                    {
                    // InternalKim.g:11832:5: (lv_name_12_0= ruleNamespaceId )
                    // InternalKim.g:11833:6: lv_name_12_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_12_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_12_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:11858:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:11862:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:11863:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:11872:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_definedAuthority_21_1=null;
        Token lv_definedAuthority_21_2=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_71=null;
        Token otherlv_73=null;
        Token otherlv_75=null;
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token otherlv_80=null;
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token lv_disjoint_95_0=null;
        Token otherlv_96=null;
        Token otherlv_98=null;
        Token otherlv_100=null;
        Token otherlv_102=null;
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token lv_authorities_106_1=null;
        Token lv_authorities_106_2=null;
        Token otherlv_107=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_upperConcept_22_0 = null;

        EObject lv_requirements_24_0 = null;

        EObject lv_requirements_26_0 = null;

        EObject lv_describedQuality_28_0 = null;

        EObject lv_descriptionConstraints_30_0 = null;

        EObject lv_describedProportionality_33_0 = null;

        EObject lv_describedInverseProportionalityQuality_36_0 = null;

        EObject lv_describedNonzeroQuality_38_0 = null;

        EObject lv_classifiesQuality_40_0 = null;

        EObject lv_discretizesQuality_42_0 = null;

        EObject lv_actuallyInheritedTraits_44_0 = null;

        EObject lv_actuallyInheritedTraits_46_0 = null;

        EObject lv_roles_49_0 = null;

        EObject lv_roles_51_0 = null;

        EObject lv_targetObservables_53_0 = null;

        EObject lv_targetObservables_55_0 = null;

        EObject lv_restrictedObservables_57_0 = null;

        EObject lv_restrictedObservables_59_0 = null;

        EObject lv_conferredTraits_61_0 = null;

        EObject lv_conferredTraits_63_0 = null;

        EObject lv_conferredTargets_65_0 = null;

        EObject lv_conferredTargets_67_0 = null;

        EObject lv_emergenceTriggers_70_0 = null;

        EObject lv_emergenceTriggers_72_0 = null;

        EObject lv_creates_74_0 = null;

        EObject lv_creates_76_0 = null;

        EObject lv_traitTargets_79_0 = null;

        EObject lv_traitTargets_81_0 = null;

        EObject lv_domains_83_0 = null;

        EObject lv_ranges_85_0 = null;

        EObject lv_domains_87_0 = null;

        EObject lv_ranges_89_0 = null;

        EObject lv_qualitiesAffected_91_0 = null;

        EObject lv_qualitiesAffected_93_0 = null;

        EObject lv_children_97_0 = null;

        EObject lv_children_99_0 = null;

        EObject lv_implications_101_0 = null;

        EObject lv_implications_103_0 = null;

        EObject lv_metadata_108_0 = null;

        EObject lv_properties_109_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:11881:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) ) )
            // InternalKim.g:11882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            {
            // InternalKim.g:11882:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) ) )
            // InternalKim.g:11883:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            {
            // InternalKim.g:11883:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop250:
            do {
                int alt250=2;
                int LA250_0 = input.LA(1);

                if ( (LA250_0==RULE_ANNOTATION_ID) ) {
                    alt250=1;
                }


                switch (alt250) {
            	case 1 :
            	    // InternalKim.g:11884:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:11884:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:11885:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_154);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop250;
                }
            } while (true);

            // InternalKim.g:11902:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt251=2;
            int LA251_0 = input.LA(1);

            if ( (LA251_0==177) ) {
                alt251=1;
            }
            switch (alt251) {
                case 1 :
                    // InternalKim.g:11903:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:11903:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:11904:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,177,FOLLOW_156); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", lv_abstract_1_0 != null, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:11916:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt256=2;
            int LA256_0 = input.LA(1);

            if ( (LA256_0==101) ) {
                alt256=1;
            }
            else if ( (LA256_0==RULE_CAMELCASE_ID) ) {
                alt256=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 256, 0, input);

                throw nvae;
            }
            switch (alt256) {
                case 1 :
                    // InternalKim.g:11917:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:11917:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:11918:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:11918:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:11919:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,101,FOLLOW_157); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", lv_root_2_0 != null, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11932:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:11932:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:11933:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:11933:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:11934:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:11934:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:11935:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:11951:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt255=2;
                    int LA255_0 = input.LA(1);

                    if ( (LA255_0==149) ) {
                        alt255=1;
                    }
                    switch (alt255) {
                        case 1 :
                            // InternalKim.g:11952:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,149,FOLLOW_11); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,26,FOLLOW_159); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:11960:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt253=2;
                            int LA253_0 = input.LA(1);

                            if ( (LA253_0==RULE_STRING||LA253_0==RULE_ID) ) {
                                alt253=1;
                            }
                            else if ( (LA253_0==RULE_INT) ) {
                                alt253=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 253, 0, input);

                                throw nvae;
                            }
                            switch (alt253) {
                                case 1 :
                                    // InternalKim.g:11961:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:11961:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:11962:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:11962:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:11963:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:11963:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt252=2;
                                    int LA252_0 = input.LA(1);

                                    if ( (LA252_0==RULE_ID) ) {
                                        alt252=1;
                                    }
                                    else if ( (LA252_0==RULE_STRING) ) {
                                        alt252=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 252, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt252) {
                                        case 1 :
                                            // InternalKim.g:11964:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_124); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:11979:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_124); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11997:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:11997:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:11998:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:11998:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:11999:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_124); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,93,FOLLOW_140); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:12020:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:12021:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:12021:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:12022:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:12022:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt254=2;
                            int LA254_0 = input.LA(1);

                            if ( (LA254_0==RULE_UPPERCASE_ID) ) {
                                alt254=1;
                            }
                            else if ( (LA254_0==RULE_UPPERCASE_PATH) ) {
                                alt254=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 254, 0, input);

                                throw nvae;
                            }
                            switch (alt254) {
                                case 1 :
                                    // InternalKim.g:12023:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_157); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:12038:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_157); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:12058:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) ) )
            // InternalKim.g:12059:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            {
            // InternalKim.g:12059:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* ) )
            // InternalKim.g:12060:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:12063:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )* )
            // InternalKim.g:12064:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )*
            {
            // InternalKim.g:12064:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )*
            loop284:
            do {
                int alt284=24;
                alt284 = dfa284.predict(input);
                switch (alt284) {
            	case 1 :
            	    // InternalKim.g:12065:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:12065:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:12066:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:12066:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:12067:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:12070:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:12070:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12070:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:12070:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:12070:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:12071:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_157); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:12092:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12092:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:12093:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:12093:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:12094:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:12097:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12097:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12097:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12097:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:12097:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
            	    // InternalKim.g:12098:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
            	    {
            	    // InternalKim.g:12098:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
            	    int alt257=2;
            	    int LA257_0 = input.LA(1);

            	    if ( (LA257_0==181) ) {
            	        alt257=1;
            	    }
            	    else if ( (LA257_0==182) ) {
            	        alt257=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 257, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt257) {
            	        case 1 :
            	            // InternalKim.g:12099:11: otherlv_12= 'is'
            	            {
            	            otherlv_12=(Token)match(input,181,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12104:11: ( (lv_alias_13_0= 'equals' ) )
            	            {
            	            // InternalKim.g:12104:11: ( (lv_alias_13_0= 'equals' ) )
            	            // InternalKim.g:12105:12: (lv_alias_13_0= 'equals' )
            	            {
            	            // InternalKim.g:12105:12: (lv_alias_13_0= 'equals' )
            	            // InternalKim.g:12106:13: lv_alias_13_0= 'equals'
            	            {
            	            lv_alias_13_0=(Token)match(input,182,FOLLOW_160); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_alias_13_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(current, "alias", lv_alias_13_0 != null, "equals");
            	              												
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:12119:10: ( (lv_coreConcept_14_0= 'core' ) )?
            	    int alt258=2;
            	    int LA258_0 = input.LA(1);

            	    if ( (LA258_0==183) ) {
            	        alt258=1;
            	    }
            	    switch (alt258) {
            	        case 1 :
            	            // InternalKim.g:12120:11: (lv_coreConcept_14_0= 'core' )
            	            {
            	            // InternalKim.g:12120:11: (lv_coreConcept_14_0= 'core' )
            	            // InternalKim.g:12121:12: lv_coreConcept_14_0= 'core'
            	            {
            	            lv_coreConcept_14_0=(Token)match(input,183,FOLLOW_161); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_coreConcept_14_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "coreConcept", lv_coreConcept_14_0 != null, "core");
            	              											
            	            }

            	            }


            	            }
            	            break;

            	    }


            	    }

            	    // InternalKim.g:12134:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt261=2;
            	    int LA261_0 = input.LA(1);

            	    if ( (LA261_0==184) ) {
            	        alt261=1;
            	    }
            	    else if ( ((LA261_0>=RULE_LOWERCASE_ID && LA261_0<=RULE_UPPERCASE_ID)||LA261_0==RULE_CAMELCASE_ID||LA261_0==RULE_LOWERCASE_DASHID||LA261_0==RULE_UPPERCASE_PATH||LA261_0==39||(LA261_0>=138 && LA261_0<=139)||(LA261_0>=147 && LA261_0<=148)||(LA261_0>=150 && LA261_0<=155)||(LA261_0>=157 && LA261_0<=168)) ) {
            	        alt261=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 261, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt261) {
            	        case 1 :
            	            // InternalKim.g:12135:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:12135:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:12136:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:12136:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:12137:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,184,FOLLOW_157); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", lv_nothing_15_0 != null, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12150:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:12150:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:12151:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:12151:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12152:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12152:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:12153:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_162);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:12170:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop260:
            	            do {
            	                int alt260=2;
            	                int LA260_0 = input.LA(1);

            	                if ( (LA260_0==28||(LA260_0>=169 && LA260_0<=170)) ) {
            	                    alt260=1;
            	                }


            	                switch (alt260) {
            	            	case 1 :
            	            	    // InternalKim.g:12171:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:12171:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:12172:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:12172:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:12173:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:12173:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt259=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 28:
            	            	        {
            	            	        alt259=1;
            	            	        }
            	            	        break;
            	            	    case 169:
            	            	        {
            	            	        alt259=2;
            	            	        }
            	            	        break;
            	            	    case 170:
            	            	        {
            	            	        alt259=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 259, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt259) {
            	            	        case 1 :
            	            	            // InternalKim.g:12174:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:12185:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,169,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:12196:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,170,FOLLOW_23); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:12209:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12210:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12210:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12211:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_162);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop260;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:12237:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12237:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:12238:5: {...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:12238:117: ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:12239:6: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:12242:9: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:12242:10: {...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12242:19: (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
            	    // InternalKim.g:12242:20: otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
            	    {
            	    otherlv_19=(Token)match(input,185,FOLLOW_163); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_2_0());
            	      								
            	    }
            	    // InternalKim.g:12246:9: ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
            	    int alt263=2;
            	    int LA263_0 = input.LA(1);

            	    if ( (LA263_0==186) ) {
            	        alt263=1;
            	    }
            	    else if ( ((LA263_0>=RULE_LOWERCASE_ID && LA263_0<=RULE_UPPERCASE_ID)||LA263_0==RULE_CAMELCASE_ID||LA263_0==RULE_LOWERCASE_DASHID||LA263_0==RULE_UPPERCASE_PATH||LA263_0==39||(LA263_0>=138 && LA263_0<=139)||(LA263_0>=147 && LA263_0<=148)||(LA263_0>=150 && LA263_0<=155)||(LA263_0>=157 && LA263_0<=168)) ) {
            	        alt263=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 263, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt263) {
            	        case 1 :
            	            // InternalKim.g:12247:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
            	            {
            	            // InternalKim.g:12247:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
            	            // InternalKim.g:12248:11: otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            otherlv_20=(Token)match(input,186,FOLLOW_140); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_20, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_2_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:12252:11: ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:12253:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
            	            {
            	            // InternalKim.g:12253:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:12254:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:12254:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
            	            int alt262=2;
            	            int LA262_0 = input.LA(1);

            	            if ( (LA262_0==RULE_UPPERCASE_ID) ) {
            	                alt262=1;
            	            }
            	            else if ( (LA262_0==RULE_UPPERCASE_PATH) ) {
            	                alt262=2;
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 262, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt262) {
            	                case 1 :
            	                    // InternalKim.g:12255:14: lv_definedAuthority_21_1= RULE_UPPERCASE_ID
            	                    {
            	                    lv_definedAuthority_21_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_157); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      														newLeafNode(lv_definedAuthority_21_1, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_IDTerminalRuleCall_3_2_1_0_1_0_0());
            	                      													
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      														if (current==null) {
            	                      															current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      														}
            	                      														setWithLastConsumed(
            	                      															current,
            	                      															"definedAuthority",
            	                      															lv_definedAuthority_21_1,
            	                      															"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	                      													
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:12270:14: lv_definedAuthority_21_2= RULE_UPPERCASE_PATH
            	                    {
            	                    lv_definedAuthority_21_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_157); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      														newLeafNode(lv_definedAuthority_21_2, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_2_1_0_1_0_1());
            	                      													
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      														if (current==null) {
            	                      															current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      														}
            	                      														setWithLastConsumed(
            	                      															current,
            	                      															"definedAuthority",
            	                      															lv_definedAuthority_21_2,
            	                      															"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	                      													
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12289:10: ( (lv_upperConcept_22_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:12289:10: ( (lv_upperConcept_22_0= ruleConcept ) )
            	            // InternalKim.g:12290:11: (lv_upperConcept_22_0= ruleConcept )
            	            {
            	            // InternalKim.g:12290:11: (lv_upperConcept_22_0= ruleConcept )
            	            // InternalKim.g:12291:12: lv_upperConcept_22_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_157);
            	            lv_upperConcept_22_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_22_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:12315:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12315:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:12316:5: {...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:12316:117: ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:12317:6: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:12320:9: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:12320:10: {...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12320:19: (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:12320:20: otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_23=(Token)match(input,187,FOLLOW_164); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:12324:9: ( (lv_requirements_24_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:12325:10: (lv_requirements_24_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:12325:10: (lv_requirements_24_0= ruleIdentityRequirement )
            	    // InternalKim.g:12326:11: lv_requirements_24_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_requirements_24_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_24_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12343:9: (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
            	    loop264:
            	    do {
            	        int alt264=2;
            	        int LA264_0 = input.LA(1);

            	        if ( (LA264_0==28) ) {
            	            alt264=1;
            	        }


            	        switch (alt264) {
            	    	case 1 :
            	    	    // InternalKim.g:12344:10: otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_25=(Token)match(input,28,FOLLOW_164); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_3_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12348:10: ( (lv_requirements_26_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:12349:11: (lv_requirements_26_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:12349:11: (lv_requirements_26_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:12350:12: lv_requirements_26_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_requirements_26_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_26_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop264;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:12374:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
            	    {
            	    // InternalKim.g:12374:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
            	    // InternalKim.g:12375:5: {...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:12375:117: ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
            	    // InternalKim.g:12376:6: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:12379:9: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
            	    // InternalKim.g:12379:10: {...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12379:19: (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
            	    // InternalKim.g:12379:20: otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
            	    {
            	    otherlv_27=(Token)match(input,188,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:12383:9: ( (lv_describedQuality_28_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12384:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12384:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
            	    // InternalKim.g:12385:11: lv_describedQuality_28_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_166);
            	    lv_describedQuality_28_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_28_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12402:9: (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
            	    int alt265=2;
            	    int LA265_0 = input.LA(1);

            	    if ( (LA265_0==26) ) {
            	        alt265=1;
            	    }
            	    switch (alt265) {
            	        case 1 :
            	            // InternalKim.g:12403:10: otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
            	            {
            	            otherlv_29=(Token)match(input,26,FOLLOW_167); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_29, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_3_4_2_0());
            	              									
            	            }
            	            // InternalKim.g:12407:10: ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
            	            // InternalKim.g:12408:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
            	            {
            	            // InternalKim.g:12408:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
            	            // InternalKim.g:12409:12: lv_descriptionConstraints_30_0= ruleDescriptionConstraints
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescriptionConstraintsDescriptionConstraintsParserRuleCall_3_4_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_157);
            	            lv_descriptionConstraints_30_0=ruleDescriptionConstraints();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"descriptionConstraints",
            	              													lv_descriptionConstraints_30_0,
            	              													"org.integratedmodelling.kim.Kim.DescriptionConstraints");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:12433:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12433:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12434:5: {...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:12434:117: ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12435:6: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:12438:9: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12438:10: {...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12438:19: (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12438:20: otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_31=(Token)match(input,189,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_5_0());
            	      								
            	    }
            	    otherlv_32=(Token)match(input,103,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_32, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_5_1());
            	      								
            	    }
            	    // InternalKim.g:12446:9: ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12447:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12447:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
            	    // InternalKim.g:12448:11: lv_describedProportionality_33_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_describedProportionality_33_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_33_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:12471:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12471:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12472:5: {...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:12472:117: ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12473:6: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:12476:9: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12476:10: {...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12476:19: (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12476:20: otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_34=(Token)match(input,190,FOLLOW_81); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_34, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_35=(Token)match(input,103,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:12484:9: ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12485:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12485:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:12486:11: lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_describedInverseProportionalityQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:12509:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12509:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12510:5: {...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:12510:117: ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12511:6: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:12514:9: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12514:10: {...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12514:19: (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12514:20: otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,191,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_7_0());
            	      								
            	    }
            	    // InternalKim.g:12518:9: ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12519:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12519:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
            	    // InternalKim.g:12520:11: lv_describedNonzeroQuality_38_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_describedNonzeroQuality_38_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_38_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:12543:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12543:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12544:5: {...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:12544:117: ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12545:6: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:12548:9: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12548:10: {...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12548:19: (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12548:20: otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_39=(Token)match(input,192,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_39, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:12552:9: ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12553:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12553:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
            	    // InternalKim.g:12554:11: lv_classifiesQuality_40_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_classifiesQuality_40_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_40_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:12577:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:12577:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:12578:5: {...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:12578:117: ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:12579:6: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:12582:9: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:12582:10: {...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12582:19: (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:12582:20: otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_41=(Token)match(input,193,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:12586:9: ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12587:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12587:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:12588:11: lv_discretizesQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_discretizesQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:12611:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12611:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12612:5: {...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:12612:118: ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12613:6: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:12616:9: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12616:10: {...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12616:19: (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12616:20: otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_43=(Token)match(input,194,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:12620:9: ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12621:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12621:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:12622:11: lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_actuallyInheritedTraits_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12639:9: (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
            	    loop266:
            	    do {
            	        int alt266=2;
            	        int LA266_0 = input.LA(1);

            	        if ( (LA266_0==28) ) {
            	            alt266=1;
            	        }


            	        switch (alt266) {
            	    	case 1 :
            	    	    // InternalKim.g:12640:10: otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_45=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_10_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12644:10: ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12645:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12645:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12646:12: lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_actuallyInheritedTraits_46_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_46_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop266;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:12670:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:12670:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:12671:5: {...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:12671:118: ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12672:6: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:12675:9: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12675:10: {...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12675:19: (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12675:20: otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_47=(Token)match(input,195,FOLLOW_168); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_11_0());
            	      								
            	    }
            	    otherlv_48=(Token)match(input,196,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_48, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_11_1());
            	      								
            	    }
            	    // InternalKim.g:12683:9: ( (lv_roles_49_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12684:10: (lv_roles_49_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12684:10: (lv_roles_49_0= ruleConceptDeclaration )
            	    // InternalKim.g:12685:11: lv_roles_49_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_169);
            	    lv_roles_49_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_49_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12702:9: (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )*
            	    loop267:
            	    do {
            	        int alt267=2;
            	        int LA267_0 = input.LA(1);

            	        if ( (LA267_0==28) ) {
            	            alt267=1;
            	        }


            	        switch (alt267) {
            	    	case 1 :
            	    	    // InternalKim.g:12703:10: otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_50=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_50, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12707:10: ( (lv_roles_51_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12708:11: (lv_roles_51_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12708:11: (lv_roles_51_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12709:12: lv_roles_51_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_169);
            	    	    lv_roles_51_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_51_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop267;
            	        }
            	    } while (true);

            	    // InternalKim.g:12727:9: (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )?
            	    int alt269=2;
            	    int LA269_0 = input.LA(1);

            	    if ( (LA269_0==197) ) {
            	        alt269=1;
            	    }
            	    switch (alt269) {
            	        case 1 :
            	            // InternalKim.g:12728:10: otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_52=(Token)match(input,197,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_52, grammarAccess.getConceptStatementBodyAccess().getTargetingKeyword_3_11_4_0());
            	              									
            	            }
            	            // InternalKim.g:12732:10: ( (lv_targetObservables_53_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12733:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12733:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
            	            // InternalKim.g:12734:12: lv_targetObservables_53_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_170);
            	            lv_targetObservables_53_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_53_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:12751:10: (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
            	            loop268:
            	            do {
            	                int alt268=2;
            	                int LA268_0 = input.LA(1);

            	                if ( (LA268_0==28) ) {
            	                    alt268=1;
            	                }


            	                switch (alt268) {
            	            	case 1 :
            	            	    // InternalKim.g:12752:11: otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_54=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:12756:11: ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12757:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12757:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12758:13: lv_targetObservables_55_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_170);
            	            	    lv_targetObservables_55_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_55_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop268;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:12777:9: (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12778:10: otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_56=(Token)match(input,53,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_11_5_0());
            	      									
            	    }
            	    // InternalKim.g:12782:10: ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12783:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12783:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
            	    // InternalKim.g:12784:12: lv_restrictedObservables_57_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_restrictedObservables_57_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_57_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:12801:10: (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
            	    loop270:
            	    do {
            	        int alt270=2;
            	        int LA270_0 = input.LA(1);

            	        if ( (LA270_0==28) ) {
            	            alt270=1;
            	        }


            	        switch (alt270) {
            	    	case 1 :
            	    	    // InternalKim.g:12802:11: otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_58=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:12806:11: ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12807:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12807:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12808:13: lv_restrictedObservables_59_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_restrictedObservables_59_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_59_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop270;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:12833:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:12833:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:12834:5: {...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:12834:118: ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:12835:6: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:12838:9: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:12838:10: {...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12838:19: (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:12838:20: otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_60=(Token)match(input,198,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_12_0());
            	      								
            	    }
            	    // InternalKim.g:12842:9: ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12843:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12843:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
            	    // InternalKim.g:12844:11: lv_conferredTraits_61_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_171);
            	    lv_conferredTraits_61_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_61_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12861:9: (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )*
            	    loop271:
            	    do {
            	        int alt271=2;
            	        int LA271_0 = input.LA(1);

            	        if ( (LA271_0==28) ) {
            	            alt271=1;
            	        }


            	        switch (alt271) {
            	    	case 1 :
            	    	    // InternalKim.g:12862:10: otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_62=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12866:10: ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12867:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12867:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12868:12: lv_conferredTraits_63_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_171);
            	    	    lv_conferredTraits_63_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_63_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop271;
            	        }
            	    } while (true);

            	    // InternalKim.g:12886:9: (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
            	    int alt273=2;
            	    int LA273_0 = input.LA(1);

            	    if ( (LA273_0==37) ) {
            	        alt273=1;
            	    }
            	    switch (alt273) {
            	        case 1 :
            	            // InternalKim.g:12887:10: otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_64=(Token)match(input,37,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_12_3_0());
            	              									
            	            }
            	            // InternalKim.g:12891:10: ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:12892:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:12892:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
            	            // InternalKim.g:12893:12: lv_conferredTargets_65_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_165);
            	            lv_conferredTargets_65_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_65_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:12910:10: (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
            	            loop272:
            	            do {
            	                int alt272=2;
            	                int LA272_0 = input.LA(1);

            	                if ( (LA272_0==28) ) {
            	                    alt272=1;
            	                }


            	                switch (alt272) {
            	            	case 1 :
            	            	    // InternalKim.g:12911:11: otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_66=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:12915:11: ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:12916:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:12916:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:12917:13: lv_conferredTargets_67_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_165);
            	            	    lv_conferredTargets_67_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_67_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop272;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:12942:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:12942:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:12943:5: {...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:12943:118: ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:12944:6: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:12947:9: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:12947:10: {...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:12947:19: (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:12947:20: otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_68=(Token)match(input,199,FOLLOW_86); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getEmergesKeyword_3_13_0());
            	      								
            	    }
            	    otherlv_69=(Token)match(input,106,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_69, grammarAccess.getConceptStatementBodyAccess().getFromKeyword_3_13_1());
            	      								
            	    }
            	    // InternalKim.g:12955:9: ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:12956:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:12956:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
            	    // InternalKim.g:12957:11: lv_emergenceTriggers_70_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_emergenceTriggers_70_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"emergenceTriggers",
            	      												lv_emergenceTriggers_70_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:12974:9: (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
            	    loop274:
            	    do {
            	        int alt274=2;
            	        int LA274_0 = input.LA(1);

            	        if ( (LA274_0==28) ) {
            	            alt274=1;
            	        }


            	        switch (alt274) {
            	    	case 1 :
            	    	    // InternalKim.g:12975:10: otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_71=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_71, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:12979:10: ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:12980:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:12980:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:12981:12: lv_emergenceTriggers_72_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_emergenceTriggers_72_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"emergenceTriggers",
            	    	      													lv_emergenceTriggers_72_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop274;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:13005:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13005:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:13006:5: {...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:13006:118: ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:13007:6: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:13010:9: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:13010:10: {...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13010:19: (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:13010:20: otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_73=(Token)match(input,200,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_73, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_14_0());
            	      								
            	    }
            	    // InternalKim.g:13014:9: ( (lv_creates_74_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:13015:10: (lv_creates_74_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:13015:10: (lv_creates_74_0= ruleConceptDeclaration )
            	    // InternalKim.g:13016:11: lv_creates_74_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_creates_74_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_74_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13033:9: (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
            	    loop275:
            	    do {
            	        int alt275=2;
            	        int LA275_0 = input.LA(1);

            	        if ( (LA275_0==28) ) {
            	            alt275=1;
            	        }


            	        switch (alt275) {
            	    	case 1 :
            	    	    // InternalKim.g:13034:10: otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_75=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_75, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_14_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13038:10: ( (lv_creates_76_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:13039:11: (lv_creates_76_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:13039:11: (lv_creates_76_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:13040:12: lv_creates_76_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_creates_76_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_76_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop275;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:13064:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13064:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:13065:5: {...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:13065:118: ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:13066:6: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:13069:9: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:13069:10: {...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13069:19: (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:13069:20: otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_77=(Token)match(input,201,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_77, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_15_0());
            	      								
            	    }
            	    otherlv_78=(Token)match(input,37,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_78, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_15_1());
            	      								
            	    }
            	    // InternalKim.g:13077:9: ( (lv_traitTargets_79_0= ruleApplicableTarget ) )
            	    // InternalKim.g:13078:10: (lv_traitTargets_79_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:13078:10: (lv_traitTargets_79_0= ruleApplicableTarget )
            	    // InternalKim.g:13079:11: lv_traitTargets_79_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_traitTargets_79_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_79_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13096:9: (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
            	    loop276:
            	    do {
            	        int alt276=2;
            	        int LA276_0 = input.LA(1);

            	        if ( (LA276_0==28) ) {
            	            alt276=1;
            	        }


            	        switch (alt276) {
            	    	case 1 :
            	    	    // InternalKim.g:13097:10: otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_80=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_80, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13101:10: ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:13102:11: (lv_traitTargets_81_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:13102:11: (lv_traitTargets_81_0= ruleApplicableTarget )
            	    	    // InternalKim.g:13103:12: lv_traitTargets_81_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_traitTargets_81_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_81_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop276;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:13127:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13127:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:13128:5: {...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:13128:118: ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:13129:6: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:13132:9: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:13132:10: {...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13132:19: (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:13132:20: otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_82=(Token)match(input,202,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_82, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_16_0());
            	      								
            	    }
            	    // InternalKim.g:13136:9: ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:13137:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:13137:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:13138:11: lv_domains_83_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_domains_83_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_83_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13155:9: ( ( 'to' )=>otherlv_84= 'to' )
            	    // InternalKim.g:13156:10: ( 'to' )=>otherlv_84= 'to'
            	    {
            	    otherlv_84=(Token)match(input,37,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:13162:9: ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:13163:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:13163:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:13164:11: lv_ranges_85_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_ranges_85_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_85_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13181:9: (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop277:
            	    do {
            	        int alt277=2;
            	        int LA277_0 = input.LA(1);

            	        if ( (LA277_0==28) ) {
            	            alt277=1;
            	        }


            	        switch (alt277) {
            	    	case 1 :
            	    	    // InternalKim.g:13182:10: otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,28,FOLLOW_122); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13186:10: ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:13187:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:13187:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:13188:12: lv_domains_87_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_25);
            	    	    lv_domains_87_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:13205:10: ( ( 'to' )=>otherlv_88= 'to' )
            	    	    // InternalKim.g:13206:11: ( 'to' )=>otherlv_88= 'to'
            	    	    {
            	    	    otherlv_88=(Token)match(input,37,FOLLOW_122); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:13212:10: ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:13213:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:13213:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:13214:12: lv_ranges_89_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_ranges_89_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_89_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop277;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:13238:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13238:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:13239:5: {...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:13239:118: ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:13240:6: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:13243:9: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:13243:10: {...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13243:19: (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:13243:20: otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_90=(Token)match(input,203,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:13247:9: ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:13248:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:13248:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
            	    // InternalKim.g:13249:11: lv_qualitiesAffected_91_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_qualitiesAffected_91_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_91_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13266:9: (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
            	    loop278:
            	    do {
            	        int alt278=2;
            	        int LA278_0 = input.LA(1);

            	        if ( (LA278_0==28) ) {
            	            alt278=1;
            	        }


            	        switch (alt278) {
            	    	case 1 :
            	    	    // InternalKim.g:13267:10: otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13271:10: ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:13272:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:13272:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:13273:12: lv_qualitiesAffected_93_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_qualitiesAffected_93_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop278;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:13297:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13297:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:13298:5: {...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:13298:118: ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:13299:6: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:13302:9: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:13302:10: {...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13302:19: (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:13302:20: otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_94=(Token)match(input,195,FOLLOW_172); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_18_0());
            	      								
            	    }
            	    // InternalKim.g:13306:9: ( (lv_disjoint_95_0= 'disjoint' ) )?
            	    int alt279=2;
            	    int LA279_0 = input.LA(1);

            	    if ( (LA279_0==102) ) {
            	        alt279=1;
            	    }
            	    switch (alt279) {
            	        case 1 :
            	            // InternalKim.g:13307:10: (lv_disjoint_95_0= 'disjoint' )
            	            {
            	            // InternalKim.g:13307:10: (lv_disjoint_95_0= 'disjoint' )
            	            // InternalKim.g:13308:11: lv_disjoint_95_0= 'disjoint'
            	            {
            	            lv_disjoint_95_0=(Token)match(input,102,FOLLOW_173); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_95_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_18_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", lv_disjoint_95_0 != null, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_96=(Token)match(input,116,FOLLOW_174); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_18_2());
            	      								
            	    }
            	    // InternalKim.g:13324:9: ( (lv_children_97_0= ruleChildConcept ) )
            	    // InternalKim.g:13325:10: (lv_children_97_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:13325:10: (lv_children_97_0= ruleChildConcept )
            	    // InternalKim.g:13326:11: lv_children_97_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_children_97_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_97_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13343:9: (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
            	    loop280:
            	    do {
            	        int alt280=2;
            	        int LA280_0 = input.LA(1);

            	        if ( (LA280_0==28) ) {
            	            alt280=1;
            	        }


            	        switch (alt280) {
            	    	case 1 :
            	    	    // InternalKim.g:13344:10: otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_98=(Token)match(input,28,FOLLOW_174); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_98, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_18_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13348:10: ( (lv_children_99_0= ruleChildConcept ) )
            	    	    // InternalKim.g:13349:11: (lv_children_99_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:13349:11: (lv_children_99_0= ruleChildConcept )
            	    	    // InternalKim.g:13350:12: lv_children_99_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_children_99_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_99_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop280;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:13374:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:13374:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
            	    // InternalKim.g:13375:5: {...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:13375:118: ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
            	    // InternalKim.g:13376:6: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:13379:9: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
            	    // InternalKim.g:13379:10: {...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13379:19: (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
            	    // InternalKim.g:13379:20: otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
            	    {
            	    otherlv_100=(Token)match(input,204,FOLLOW_175); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_100, grammarAccess.getConceptStatementBodyAccess().getImpliesKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:13383:9: ( (lv_implications_101_0= ruleImplication ) )
            	    // InternalKim.g:13384:10: (lv_implications_101_0= ruleImplication )
            	    {
            	    // InternalKim.g:13384:10: (lv_implications_101_0= ruleImplication )
            	    // InternalKim.g:13385:11: lv_implications_101_0= ruleImplication
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_165);
            	    lv_implications_101_0=ruleImplication();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"implications",
            	      												lv_implications_101_0,
            	      												"org.integratedmodelling.kim.Kim.Implication");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:13402:9: (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
            	    loop281:
            	    do {
            	        int alt281=2;
            	        int LA281_0 = input.LA(1);

            	        if ( (LA281_0==28) ) {
            	            alt281=1;
            	        }


            	        switch (alt281) {
            	    	case 1 :
            	    	    // InternalKim.g:13403:10: otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) )
            	    	    {
            	    	    otherlv_102=(Token)match(input,28,FOLLOW_175); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_102, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:13407:10: ( (lv_implications_103_0= ruleImplication ) )
            	    	    // InternalKim.g:13408:11: (lv_implications_103_0= ruleImplication )
            	    	    {
            	    	    // InternalKim.g:13408:11: (lv_implications_103_0= ruleImplication )
            	    	    // InternalKim.g:13409:12: lv_implications_103_0= ruleImplication
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_165);
            	    	    lv_implications_103_0=ruleImplication();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"implications",
            	    	      													lv_implications_103_0,
            	    	      													"org.integratedmodelling.kim.Kim.Implication");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop281;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:13433:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13433:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
            	    // InternalKim.g:13434:5: {...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:13434:118: ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            	    // InternalKim.g:13435:6: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:13438:9: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
            	    // InternalKim.g:13438:10: {...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13438:19: (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
            	    // InternalKim.g:13438:20: otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
            	    {
            	    otherlv_104=(Token)match(input,205,FOLLOW_176); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_104, grammarAccess.getConceptStatementBodyAccess().getUsesKeyword_3_20_0());
            	      								
            	    }
            	    otherlv_105=(Token)match(input,186,FOLLOW_140); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_20_1());
            	      								
            	    }
            	    // InternalKim.g:13446:9: ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
            	    // InternalKim.g:13447:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
            	    {
            	    // InternalKim.g:13447:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
            	    // InternalKim.g:13448:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
            	    {
            	    // InternalKim.g:13448:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
            	    int alt282=2;
            	    int LA282_0 = input.LA(1);

            	    if ( (LA282_0==RULE_UPPERCASE_ID) ) {
            	        alt282=1;
            	    }
            	    else if ( (LA282_0==RULE_UPPERCASE_PATH) ) {
            	        alt282=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 282, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt282) {
            	        case 1 :
            	            // InternalKim.g:13449:12: lv_authorities_106_1= RULE_UPPERCASE_ID
            	            {
            	            lv_authorities_106_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_157); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_106_1, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_3_20_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_106_1,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13464:12: lv_authorities_106_2= RULE_UPPERCASE_PATH
            	            {
            	            lv_authorities_106_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_157); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_authorities_106_2, grammarAccess.getConceptStatementBodyAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_3_20_2_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												addWithLastConsumed(
            	              													current,
            	              													"authorities",
            	              													lv_authorities_106_2,
            	              													"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:13487:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13487:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
            	    // InternalKim.g:13488:5: {...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:13488:118: ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
            	    // InternalKim.g:13489:6: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:13492:9: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
            	    // InternalKim.g:13492:10: {...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:13492:19: (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
            	    // InternalKim.g:13492:20: otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) )
            	    {
            	    otherlv_107=(Token)match(input,42,FOLLOW_37); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_21_0());
            	      								
            	    }
            	    // InternalKim.g:13496:9: ( (lv_metadata_108_0= ruleMap ) )
            	    // InternalKim.g:13497:10: (lv_metadata_108_0= ruleMap )
            	    {
            	    // InternalKim.g:13497:10: (lv_metadata_108_0= ruleMap )
            	    // InternalKim.g:13498:11: lv_metadata_108_0= ruleMap
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_21_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_metadata_108_0=ruleMap();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_108_0,
            	      												"org.integratedmodelling.kim.Kim.Map");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:13521:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:13521:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
            	    // InternalKim.g:13522:5: {...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:13522:118: ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
            	    // InternalKim.g:13523:6: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:13526:9: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
            	    int cnt283=0;
            	    loop283:
            	    do {
            	        int alt283=2;
            	        alt283 = dfa283.predict(input);
            	        switch (alt283) {
            	    	case 1 :
            	    	    // InternalKim.g:13526:10: {...}? => ( (lv_properties_109_0= rulePropertyStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:13526:19: ( (lv_properties_109_0= rulePropertyStatement ) )
            	    	    // InternalKim.g:13526:20: (lv_properties_109_0= rulePropertyStatement )
            	    	    {
            	    	    // InternalKim.g:13526:20: (lv_properties_109_0= rulePropertyStatement )
            	    	    // InternalKim.g:13527:10: lv_properties_109_0= rulePropertyStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_157);
            	    	    lv_properties_109_0=rulePropertyStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"properties",
            	    	      											lv_properties_109_0,
            	    	      											"org.integratedmodelling.kim.Kim.PropertyStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt283 >= 1 ) break loop283;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(283, input);
            	                throw eee;
            	        }
            	        cnt283++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop284;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleDescriptionConstraints"
    // InternalKim.g:13563:1: entryRuleDescriptionConstraints returns [EObject current=null] : iv_ruleDescriptionConstraints= ruleDescriptionConstraints EOF ;
    public final EObject entryRuleDescriptionConstraints() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDescriptionConstraints = null;


        try {
            // InternalKim.g:13563:63: (iv_ruleDescriptionConstraints= ruleDescriptionConstraints EOF )
            // InternalKim.g:13564:2: iv_ruleDescriptionConstraints= ruleDescriptionConstraints EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDescriptionConstraintsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDescriptionConstraints=ruleDescriptionConstraints();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDescriptionConstraints; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDescriptionConstraints"


    // $ANTLR start "ruleDescriptionConstraints"
    // InternalKim.g:13570:1: ruleDescriptionConstraints returns [EObject current=null] : ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject ruleDescriptionConstraints() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_lower_0_0 = null;

        EObject lv_higher_2_0 = null;

        EObject lv_currency_4_0 = null;

        EObject lv_unit_5_0 = null;

        EObject lv_concept_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13576:2: ( ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:13577:2: ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:13577:2: ( ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? ) | ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) ) )
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==RULE_INT||(LA288_0>=255 && LA288_0<=256)) ) {
                alt288=1;
            }
            else if ( ((LA288_0>=RULE_LOWERCASE_ID && LA288_0<=RULE_STRING)||LA288_0==RULE_CAMELCASE_ID||LA288_0==RULE_LOWERCASE_DASHID||LA288_0==RULE_UPPERCASE_PATH||LA288_0==39||(LA288_0>=138 && LA288_0<=139)||(LA288_0>=147 && LA288_0<=148)||(LA288_0>=150 && LA288_0<=155)||(LA288_0>=157 && LA288_0<=168)) ) {
                alt288=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;
            }
            switch (alt288) {
                case 1 :
                    // InternalKim.g:13578:3: ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? )
                    {
                    // InternalKim.g:13578:3: ( ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )? )
                    // InternalKim.g:13579:4: ( (lv_lower_0_0= ruleNumber ) ) (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )? (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )?
                    {
                    // InternalKim.g:13579:4: ( (lv_lower_0_0= ruleNumber ) )
                    // InternalKim.g:13580:5: (lv_lower_0_0= ruleNumber )
                    {
                    // InternalKim.g:13580:5: (lv_lower_0_0= ruleNumber )
                    // InternalKim.g:13581:6: lv_lower_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getLowerNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_177);
                    lv_lower_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                      						}
                      						set(
                      							current,
                      							"lower",
                      							lv_lower_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:13598:4: (otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) ) )?
                    int alt285=2;
                    int LA285_0 = input.LA(1);

                    if ( (LA285_0==37) ) {
                        alt285=1;
                    }
                    switch (alt285) {
                        case 1 :
                            // InternalKim.g:13599:5: otherlv_1= 'to' ( (lv_higher_2_0= ruleNumber ) )
                            {
                            otherlv_1=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getDescriptionConstraintsAccess().getToKeyword_0_1_0());
                              				
                            }
                            // InternalKim.g:13603:5: ( (lv_higher_2_0= ruleNumber ) )
                            // InternalKim.g:13604:6: (lv_higher_2_0= ruleNumber )
                            {
                            // InternalKim.g:13604:6: (lv_higher_2_0= ruleNumber )
                            // InternalKim.g:13605:7: lv_higher_2_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getHigherNumberParserRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_65);
                            lv_higher_2_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                              							}
                              							set(
                              								current,
                              								"higher",
                              								lv_higher_2_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13623:4: (otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) ) )?
                    int alt287=2;
                    int LA287_0 = input.LA(1);

                    if ( (LA287_0==53) ) {
                        alt287=1;
                    }
                    switch (alt287) {
                        case 1 :
                            // InternalKim.g:13624:5: otherlv_3= 'in' ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) )
                            {
                            otherlv_3=(Token)match(input,53,FOLLOW_108); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getDescriptionConstraintsAccess().getInKeyword_0_2_0());
                              				
                            }
                            // InternalKim.g:13628:5: ( ( (lv_currency_4_0= ruleCurrency ) ) | ( (lv_unit_5_0= ruleUnit ) ) )
                            int alt286=2;
                            int LA286_0 = input.LA(1);

                            if ( (LA286_0==RULE_UPPERCASE_ID) ) {
                                int LA286_1 = input.LA(2);

                                if ( (LA286_1==254) ) {
                                    alt286=1;
                                }
                                else if ( (LA286_1==EOF||(LA286_1>=RULE_LOWERCASE_ID && LA286_1<=RULE_STRING)||LA286_1==RULE_LOWERCASE_DASHID||LA286_1==RULE_BACKCASE_ID||LA286_1==21||LA286_1==40||LA286_1==42||LA286_1==44||LA286_1==110||(LA286_1>=112 && LA286_1<=113)||LA286_1==123||(LA286_1>=181 && LA286_1<=182)||LA286_1==185||(LA286_1>=187 && LA286_1<=195)||(LA286_1>=198 && LA286_1<=205)||LA286_1==211||LA286_1==263) ) {
                                    alt286=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 286, 1, input);

                                    throw nvae;
                                }
                            }
                            else if ( (LA286_0==EOF||LA286_0==RULE_LOWERCASE_ID||LA286_0==RULE_STRING||LA286_0==RULE_CAMELCASE_ID||LA286_0==RULE_LOWERCASE_DASHID||LA286_0==RULE_BACKCASE_ID||LA286_0==21||(LA286_0>=39 && LA286_0<=40)||LA286_0==42||LA286_0==44||LA286_0==112||LA286_0==123||(LA286_0>=181 && LA286_0<=182)||LA286_0==185||(LA286_0>=187 && LA286_0<=195)||(LA286_0>=198 && LA286_0<=205)||LA286_0==211||LA286_0==263) ) {
                                alt286=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 286, 0, input);

                                throw nvae;
                            }
                            switch (alt286) {
                                case 1 :
                                    // InternalKim.g:13629:6: ( (lv_currency_4_0= ruleCurrency ) )
                                    {
                                    // InternalKim.g:13629:6: ( (lv_currency_4_0= ruleCurrency ) )
                                    // InternalKim.g:13630:7: (lv_currency_4_0= ruleCurrency )
                                    {
                                    // InternalKim.g:13630:7: (lv_currency_4_0= ruleCurrency )
                                    // InternalKim.g:13631:8: lv_currency_4_0= ruleCurrency
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getCurrencyCurrencyParserRuleCall_0_2_1_0_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_currency_4_0=ruleCurrency();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                                      								}
                                      								set(
                                      									current,
                                      									"currency",
                                      									lv_currency_4_0,
                                      									"org.integratedmodelling.kim.Kim.Currency");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13649:6: ( (lv_unit_5_0= ruleUnit ) )
                                    {
                                    // InternalKim.g:13649:6: ( (lv_unit_5_0= ruleUnit ) )
                                    // InternalKim.g:13650:7: (lv_unit_5_0= ruleUnit )
                                    {
                                    // InternalKim.g:13650:7: (lv_unit_5_0= ruleUnit )
                                    // InternalKim.g:13651:8: lv_unit_5_0= ruleUnit
                                    {
                                    if ( state.backtracking==0 ) {

                                      								newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getUnitUnitParserRuleCall_0_2_1_1_0());
                                      							
                                    }
                                    pushFollow(FOLLOW_2);
                                    lv_unit_5_0=ruleUnit();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                                      								}
                                      								set(
                                      									current,
                                      									"unit",
                                      									lv_unit_5_0,
                                      									"org.integratedmodelling.kim.Kim.Unit");
                                      								afterParserOrEnumRuleCall();
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13672:3: ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:13672:3: ( (lv_concept_6_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:13673:4: (lv_concept_6_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:13673:4: (lv_concept_6_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:13674:5: lv_concept_6_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDescriptionConstraintsAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_6_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDescriptionConstraintsRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_6_0,
                      						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDescriptionConstraints"


    // $ANTLR start "entryRuleImplication"
    // InternalKim.g:13695:1: entryRuleImplication returns [EObject current=null] : iv_ruleImplication= ruleImplication EOF ;
    public final EObject entryRuleImplication() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImplication = null;


        try {
            // InternalKim.g:13695:52: (iv_ruleImplication= ruleImplication EOF )
            // InternalKim.g:13696:2: iv_ruleImplication= ruleImplication EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImplicationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImplication=ruleImplication();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImplication; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImplication"


    // $ANTLR start "ruleImplication"
    // InternalKim.g:13702:1: ruleImplication returns [EObject current=null] : ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleImplication() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_quantifier_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_target_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13708:2: ( ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:13709:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:13709:2: ( ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:13710:3: ( (lv_quantifier_0_0= ruleQuantification ) )? ( (lv_concept_1_0= ruleConceptDeclaration ) ) (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:13710:3: ( (lv_quantifier_0_0= ruleQuantification ) )?
            int alt289=2;
            alt289 = dfa289.predict(input);
            switch (alt289) {
                case 1 :
                    // InternalKim.g:13711:4: (lv_quantifier_0_0= ruleQuantification )
                    {
                    // InternalKim.g:13711:4: (lv_quantifier_0_0= ruleQuantification )
                    // InternalKim.g:13712:5: lv_quantifier_0_0= ruleQuantification
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_23);
                    lv_quantifier_0_0=ruleQuantification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getImplicationRule());
                      					}
                      					set(
                      						current,
                      						"quantifier",
                      						lv_quantifier_0_0,
                      						"org.integratedmodelling.kim.Kim.Quantification");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:13729:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
            // InternalKim.g:13730:4: (lv_concept_1_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13730:4: (lv_concept_1_0= ruleConceptDeclaration )
            // InternalKim.g:13731:5: lv_concept_1_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImplicationAccess().getConceptConceptDeclarationParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_178);
            lv_concept_1_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImplicationRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_1_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13748:3: (otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) ) )?
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==26) ) {
                alt290=1;
            }
            switch (alt290) {
                case 1 :
                    // InternalKim.g:13749:4: otherlv_2= 'as' ( (lv_target_3_0= ruleConceptDeclaration ) )
                    {
                    otherlv_2=(Token)match(input,26,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImplicationAccess().getAsKeyword_2_0());
                      			
                    }
                    // InternalKim.g:13753:4: ( (lv_target_3_0= ruleConceptDeclaration ) )
                    // InternalKim.g:13754:5: (lv_target_3_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:13754:5: (lv_target_3_0= ruleConceptDeclaration )
                    // InternalKim.g:13755:6: lv_target_3_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getImplicationAccess().getTargetConceptDeclarationParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_target_3_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getImplicationRule());
                      						}
                      						set(
                      							current,
                      							"target",
                      							lv_target_3_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImplication"


    // $ANTLR start "entryRuleQuantification"
    // InternalKim.g:13777:1: entryRuleQuantification returns [EObject current=null] : iv_ruleQuantification= ruleQuantification EOF ;
    public final EObject entryRuleQuantification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantification = null;


        try {
            // InternalKim.g:13777:55: (iv_ruleQuantification= ruleQuantification EOF )
            // InternalKim.g:13778:2: iv_ruleQuantification= ruleQuantification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantification=ruleQuantification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantification"


    // $ANTLR start "ruleQuantification"
    // InternalKim.g:13784:1: ruleQuantification returns [EObject current=null] : ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) ;
    public final EObject ruleQuantification() throws RecognitionException {
        EObject current = null;

        Token lv_only_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token lv_atMost_5_0=null;
        Token lv_cardinality_6_0=null;
        Token otherlv_7=null;
        Token lv_orMore_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:13790:2: ( ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? ) )
            // InternalKim.g:13791:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            {
            // InternalKim.g:13791:2: ( () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )? )
            // InternalKim.g:13792:3: () ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            {
            // InternalKim.g:13792:3: ()
            // InternalKim.g:13793:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getQuantificationAccess().getQuantificationAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:13802:3: ( ( (lv_only_1_0= 'only' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? ) )?
            int alt294=3;
            int LA294_0 = input.LA(1);

            if ( (LA294_0==87) ) {
                alt294=1;
            }
            else if ( (LA294_0==RULE_INT||(LA294_0>=206 && LA294_0<=207)) ) {
                alt294=2;
            }
            switch (alt294) {
                case 1 :
                    // InternalKim.g:13803:4: ( (lv_only_1_0= 'only' ) )
                    {
                    // InternalKim.g:13803:4: ( (lv_only_1_0= 'only' ) )
                    // InternalKim.g:13804:5: (lv_only_1_0= 'only' )
                    {
                    // InternalKim.g:13804:5: (lv_only_1_0= 'only' )
                    // InternalKim.g:13805:6: lv_only_1_0= 'only'
                    {
                    lv_only_1_0=(Token)match(input,87,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_1_0, grammarAccess.getQuantificationAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantificationRule());
                      						}
                      						setWithLastConsumed(current, "only", lv_only_1_0 != null, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13818:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:13818:4: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )? )
                    // InternalKim.g:13819:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )? ( (lv_cardinality_6_0= RULE_INT ) ) (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    {
                    // InternalKim.g:13819:5: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) ) )?
                    int alt292=3;
                    int LA292_0 = input.LA(1);

                    if ( (LA292_0==206) ) {
                        alt292=1;
                    }
                    else if ( (LA292_0==207) ) {
                        alt292=2;
                    }
                    switch (alt292) {
                        case 1 :
                            // InternalKim.g:13820:6: ( (lv_exactly_2_0= 'exactly' ) )
                            {
                            // InternalKim.g:13820:6: ( (lv_exactly_2_0= 'exactly' ) )
                            // InternalKim.g:13821:7: (lv_exactly_2_0= 'exactly' )
                            {
                            // InternalKim.g:13821:7: (lv_exactly_2_0= 'exactly' )
                            // InternalKim.g:13822:8: lv_exactly_2_0= 'exactly'
                            {
                            lv_exactly_2_0=(Token)match(input,206,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_2_0, grammarAccess.getQuantificationAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "exactly", lv_exactly_2_0 != null, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:13835:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:13835:6: (otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) ) )
                            // InternalKim.g:13836:7: otherlv_3= 'at' ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            {
                            otherlv_3=(Token)match(input,207,FOLLOW_179); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_3, grammarAccess.getQuantificationAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:13840:7: ( ( (lv_atLeast_4_0= 'least' ) ) | ( (lv_atMost_5_0= 'most' ) ) )
                            int alt291=2;
                            int LA291_0 = input.LA(1);

                            if ( (LA291_0==208) ) {
                                alt291=1;
                            }
                            else if ( (LA291_0==209) ) {
                                alt291=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 291, 0, input);

                                throw nvae;
                            }
                            switch (alt291) {
                                case 1 :
                                    // InternalKim.g:13841:8: ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    // InternalKim.g:13841:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:13842:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:13842:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:13843:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,208,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getQuantificationAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", lv_atLeast_4_0 != null, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:13856:8: ( (lv_atMost_5_0= 'most' ) )
                                    {
                                    // InternalKim.g:13856:8: ( (lv_atMost_5_0= 'most' ) )
                                    // InternalKim.g:13857:9: (lv_atMost_5_0= 'most' )
                                    {
                                    // InternalKim.g:13857:9: (lv_atMost_5_0= 'most' )
                                    // InternalKim.g:13858:10: lv_atMost_5_0= 'most'
                                    {
                                    lv_atMost_5_0=(Token)match(input,209,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_5_0, grammarAccess.getQuantificationAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getQuantificationRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", lv_atMost_5_0 != null, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:13873:5: ( (lv_cardinality_6_0= RULE_INT ) )
                    // InternalKim.g:13874:6: (lv_cardinality_6_0= RULE_INT )
                    {
                    // InternalKim.g:13874:6: (lv_cardinality_6_0= RULE_INT )
                    // InternalKim.g:13875:7: lv_cardinality_6_0= RULE_INT
                    {
                    lv_cardinality_6_0=(Token)match(input,RULE_INT,FOLLOW_146); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_6_0, grammarAccess.getQuantificationAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getQuantificationRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_6_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:13891:5: (otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) ) )?
                    int alt293=2;
                    int LA293_0 = input.LA(1);

                    if ( (LA293_0==169) ) {
                        alt293=1;
                    }
                    switch (alt293) {
                        case 1 :
                            // InternalKim.g:13892:6: otherlv_7= 'or' ( (lv_orMore_8_0= 'more' ) )
                            {
                            otherlv_7=(Token)match(input,169,FOLLOW_180); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getQuantificationAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:13896:6: ( (lv_orMore_8_0= 'more' ) )
                            // InternalKim.g:13897:7: (lv_orMore_8_0= 'more' )
                            {
                            // InternalKim.g:13897:7: (lv_orMore_8_0= 'more' )
                            // InternalKim.g:13898:8: lv_orMore_8_0= 'more'
                            {
                            lv_orMore_8_0=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_8_0, grammarAccess.getQuantificationAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getQuantificationRule());
                              								}
                              								setWithLastConsumed(current, "orMore", lv_orMore_8_0 != null, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantification"


    // $ANTLR start "entryRulePropertyStatement"
    // InternalKim.g:13917:1: entryRulePropertyStatement returns [EObject current=null] : iv_rulePropertyStatement= rulePropertyStatement EOF ;
    public final EObject entryRulePropertyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_rulePropertyStatement = null;


        try {
            // InternalKim.g:13917:58: (iv_rulePropertyStatement= rulePropertyStatement EOF )
            // InternalKim.g:13918:2: iv_rulePropertyStatement= rulePropertyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyStatement=rulePropertyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyStatement"


    // $ANTLR start "rulePropertyStatement"
    // InternalKim.g:13924:1: rulePropertyStatement returns [EObject current=null] : ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) ;
    public final EObject rulePropertyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_property_0_2=null;
        Token lv_has_1_0=null;
        Token lv_contains_2_0=null;
        Token lv_uses_3_0=null;
        Token lv_only_4_0=null;
        Token lv_exactly_5_0=null;
        Token otherlv_6=null;
        Token lv_atLeast_7_0=null;
        Token lv_atMost_8_0=null;
        Token lv_cardinality_9_0=null;
        Token otherlv_10=null;
        Token lv_orMore_11_0=null;
        AntlrDatatypeRuleToken lv_property_0_1 = null;

        EObject lv_propertyTarget_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13930:2: ( ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) ) )
            // InternalKim.g:13931:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            {
            // InternalKim.g:13931:2: ( ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) ) )
            // InternalKim.g:13932:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) ) ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )? ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            {
            // InternalKim.g:13932:3: ( ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) ) | ( (lv_has_1_0= 'has' ) ) | ( (lv_contains_2_0= 'contains' ) ) | ( (lv_uses_3_0= 'uses' ) ) )
            int alt296=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case RULE_BACKCASE_ID:
                {
                alt296=1;
                }
                break;
            case 195:
                {
                alt296=2;
                }
                break;
            case 211:
                {
                alt296=3;
                }
                break;
            case 205:
                {
                alt296=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }

            switch (alt296) {
                case 1 :
                    // InternalKim.g:13933:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:13933:4: ( ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:13934:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:13934:5: ( (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID ) )
                    // InternalKim.g:13935:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:13935:6: (lv_property_0_1= rulePropertyId | lv_property_0_2= RULE_BACKCASE_ID )
                    int alt295=2;
                    int LA295_0 = input.LA(1);

                    if ( ((LA295_0>=RULE_LOWERCASE_ID && LA295_0<=RULE_UPPERCASE_ID)||LA295_0==RULE_LOWERCASE_DASHID) ) {
                        alt295=1;
                    }
                    else if ( (LA295_0==RULE_BACKCASE_ID) ) {
                        alt295=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 295, 0, input);

                        throw nvae;
                    }
                    switch (alt295) {
                        case 1 :
                            // InternalKim.g:13936:7: lv_property_0_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyPropertyIdParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_181);
                            lv_property_0_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
                              							}
                              							set(
                              								current,
                              								"property",
                              								lv_property_0_1,
                              								"org.integratedmodelling.kim.Kim.PropertyId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13952:7: lv_property_0_2= RULE_BACKCASE_ID
                            {
                            lv_property_0_2=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_181); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_property_0_2, grammarAccess.getPropertyStatementAccess().getPropertyBACKCASE_IDTerminalRuleCall_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getPropertyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"property",
                              								lv_property_0_2,
                              								"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13970:4: ( (lv_has_1_0= 'has' ) )
                    {
                    // InternalKim.g:13970:4: ( (lv_has_1_0= 'has' ) )
                    // InternalKim.g:13971:5: (lv_has_1_0= 'has' )
                    {
                    // InternalKim.g:13971:5: (lv_has_1_0= 'has' )
                    // InternalKim.g:13972:6: lv_has_1_0= 'has'
                    {
                    lv_has_1_0=(Token)match(input,195,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_has_1_0, grammarAccess.getPropertyStatementAccess().getHasHasKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "has", lv_has_1_0 != null, "has");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13985:4: ( (lv_contains_2_0= 'contains' ) )
                    {
                    // InternalKim.g:13985:4: ( (lv_contains_2_0= 'contains' ) )
                    // InternalKim.g:13986:5: (lv_contains_2_0= 'contains' )
                    {
                    // InternalKim.g:13986:5: (lv_contains_2_0= 'contains' )
                    // InternalKim.g:13987:6: lv_contains_2_0= 'contains'
                    {
                    lv_contains_2_0=(Token)match(input,211,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_contains_2_0, grammarAccess.getPropertyStatementAccess().getContainsContainsKeyword_0_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "contains", lv_contains_2_0 != null, "contains");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14000:4: ( (lv_uses_3_0= 'uses' ) )
                    {
                    // InternalKim.g:14000:4: ( (lv_uses_3_0= 'uses' ) )
                    // InternalKim.g:14001:5: (lv_uses_3_0= 'uses' )
                    {
                    // InternalKim.g:14001:5: (lv_uses_3_0= 'uses' )
                    // InternalKim.g:14002:6: lv_uses_3_0= 'uses'
                    {
                    lv_uses_3_0=(Token)match(input,205,FOLLOW_181); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uses_3_0, grammarAccess.getPropertyStatementAccess().getUsesUsesKeyword_0_3_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "uses", lv_uses_3_0 != null, "uses");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14015:3: ( ( (lv_only_4_0= 'only' ) ) | ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? ) )?
            int alt300=3;
            int LA300_0 = input.LA(1);

            if ( (LA300_0==87) ) {
                alt300=1;
            }
            else if ( (LA300_0==RULE_INT||(LA300_0>=206 && LA300_0<=207)) ) {
                alt300=2;
            }
            switch (alt300) {
                case 1 :
                    // InternalKim.g:14016:4: ( (lv_only_4_0= 'only' ) )
                    {
                    // InternalKim.g:14016:4: ( (lv_only_4_0= 'only' ) )
                    // InternalKim.g:14017:5: (lv_only_4_0= 'only' )
                    {
                    // InternalKim.g:14017:5: (lv_only_4_0= 'only' )
                    // InternalKim.g:14018:6: lv_only_4_0= 'only'
                    {
                    lv_only_4_0=(Token)match(input,87,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_only_4_0, grammarAccess.getPropertyStatementAccess().getOnlyOnlyKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getPropertyStatementRule());
                      						}
                      						setWithLastConsumed(current, "only", lv_only_4_0 != null, "only");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14031:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    {
                    // InternalKim.g:14031:4: ( ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )? )
                    // InternalKim.g:14032:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )? ( (lv_cardinality_9_0= RULE_INT ) ) (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    {
                    // InternalKim.g:14032:5: ( ( (lv_exactly_5_0= 'exactly' ) ) | (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) ) )?
                    int alt298=3;
                    int LA298_0 = input.LA(1);

                    if ( (LA298_0==206) ) {
                        alt298=1;
                    }
                    else if ( (LA298_0==207) ) {
                        alt298=2;
                    }
                    switch (alt298) {
                        case 1 :
                            // InternalKim.g:14033:6: ( (lv_exactly_5_0= 'exactly' ) )
                            {
                            // InternalKim.g:14033:6: ( (lv_exactly_5_0= 'exactly' ) )
                            // InternalKim.g:14034:7: (lv_exactly_5_0= 'exactly' )
                            {
                            // InternalKim.g:14034:7: (lv_exactly_5_0= 'exactly' )
                            // InternalKim.g:14035:8: lv_exactly_5_0= 'exactly'
                            {
                            lv_exactly_5_0=(Token)match(input,206,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exactly_5_0, grammarAccess.getPropertyStatementAccess().getExactlyExactlyKeyword_1_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "exactly", lv_exactly_5_0 != null, "exactly");
                              							
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:14048:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            {
                            // InternalKim.g:14048:6: (otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) ) )
                            // InternalKim.g:14049:7: otherlv_6= 'at' ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            {
                            otherlv_6=(Token)match(input,207,FOLLOW_179); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(otherlv_6, grammarAccess.getPropertyStatementAccess().getAtKeyword_1_1_0_1_0());
                              						
                            }
                            // InternalKim.g:14053:7: ( ( (lv_atLeast_7_0= 'least' ) ) | ( (lv_atMost_8_0= 'most' ) ) )
                            int alt297=2;
                            int LA297_0 = input.LA(1);

                            if ( (LA297_0==208) ) {
                                alt297=1;
                            }
                            else if ( (LA297_0==209) ) {
                                alt297=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 297, 0, input);

                                throw nvae;
                            }
                            switch (alt297) {
                                case 1 :
                                    // InternalKim.g:14054:8: ( (lv_atLeast_7_0= 'least' ) )
                                    {
                                    // InternalKim.g:14054:8: ( (lv_atLeast_7_0= 'least' ) )
                                    // InternalKim.g:14055:9: (lv_atLeast_7_0= 'least' )
                                    {
                                    // InternalKim.g:14055:9: (lv_atLeast_7_0= 'least' )
                                    // InternalKim.g:14056:10: lv_atLeast_7_0= 'least'
                                    {
                                    lv_atLeast_7_0=(Token)match(input,208,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_7_0, grammarAccess.getPropertyStatementAccess().getAtLeastLeastKeyword_1_1_0_1_1_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", lv_atLeast_7_0 != null, "least");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:14069:8: ( (lv_atMost_8_0= 'most' ) )
                                    {
                                    // InternalKim.g:14069:8: ( (lv_atMost_8_0= 'most' ) )
                                    // InternalKim.g:14070:9: (lv_atMost_8_0= 'most' )
                                    {
                                    // InternalKim.g:14070:9: (lv_atMost_8_0= 'most' )
                                    // InternalKim.g:14071:10: lv_atMost_8_0= 'most'
                                    {
                                    lv_atMost_8_0=(Token)match(input,209,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_8_0, grammarAccess.getPropertyStatementAccess().getAtMostMostKeyword_1_1_0_1_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getPropertyStatementRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", lv_atMost_8_0 != null, "most");
                                      									
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:14086:5: ( (lv_cardinality_9_0= RULE_INT ) )
                    // InternalKim.g:14087:6: (lv_cardinality_9_0= RULE_INT )
                    {
                    // InternalKim.g:14087:6: (lv_cardinality_9_0= RULE_INT )
                    // InternalKim.g:14088:7: lv_cardinality_9_0= RULE_INT
                    {
                    lv_cardinality_9_0=(Token)match(input,RULE_INT,FOLLOW_182); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_cardinality_9_0, grammarAccess.getPropertyStatementAccess().getCardinalityINTTerminalRuleCall_1_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getPropertyStatementRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"cardinality",
                      								lv_cardinality_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }

                    // InternalKim.g:14104:5: (otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) ) )?
                    int alt299=2;
                    int LA299_0 = input.LA(1);

                    if ( (LA299_0==169) ) {
                        alt299=1;
                    }
                    switch (alt299) {
                        case 1 :
                            // InternalKim.g:14105:6: otherlv_10= 'or' ( (lv_orMore_11_0= 'more' ) )
                            {
                            otherlv_10=(Token)match(input,169,FOLLOW_180); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_10, grammarAccess.getPropertyStatementAccess().getOrKeyword_1_1_2_0());
                              					
                            }
                            // InternalKim.g:14109:6: ( (lv_orMore_11_0= 'more' ) )
                            // InternalKim.g:14110:7: (lv_orMore_11_0= 'more' )
                            {
                            // InternalKim.g:14110:7: (lv_orMore_11_0= 'more' )
                            // InternalKim.g:14111:8: lv_orMore_11_0= 'more'
                            {
                            lv_orMore_11_0=(Token)match(input,210,FOLLOW_122); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_orMore_11_0, grammarAccess.getPropertyStatementAccess().getOrMoreMoreKeyword_1_1_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getPropertyStatementRule());
                              								}
                              								setWithLastConsumed(current, "orMore", lv_orMore_11_0 != null, "more");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14126:3: ( (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration ) )
            // InternalKim.g:14127:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            {
            // InternalKim.g:14127:4: (lv_propertyTarget_12_0= ruleSimpleConceptDeclaration )
            // InternalKim.g:14128:5: lv_propertyTarget_12_0= ruleSimpleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getPropertyStatementAccess().getPropertyTargetSimpleConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_propertyTarget_12_0=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getPropertyStatementRule());
              					}
              					set(
              						current,
              						"propertyTarget",
              						lv_propertyTarget_12_0,
              						"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyStatement"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:14149:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:14149:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:14150:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:14156:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14162:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:14163:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:14163:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:14164:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:14164:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:14165:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:14165:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:14166:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_183);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:14183:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt301=2;
            int LA301_0 = input.LA(1);

            if ( (LA301_0==212) ) {
                alt301=1;
            }
            switch (alt301) {
                case 1 :
                    // InternalKim.g:14184:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,212,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:14188:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14189:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14189:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:14190:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_184);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,170,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:14211:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14212:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14212:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:14213:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:14235:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:14235:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:14236:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:14242:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:14248:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:14249:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:14249:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==RULE_CAMELCASE_ID||LA303_0==177) ) {
                alt303=1;
            }
            else if ( (LA303_0==39) ) {
                alt303=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 303, 0, input);

                throw nvae;
            }
            switch (alt303) {
                case 1 :
                    // InternalKim.g:14250:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:14250:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:14251:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:14251:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt302=2;
                    int LA302_0 = input.LA(1);

                    if ( (LA302_0==177) ) {
                        alt302=1;
                    }
                    switch (alt302) {
                        case 1 :
                            // InternalKim.g:14252:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:14252:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:14253:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,177,FOLLOW_185); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", lv_abstract_0_0 != null, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:14265:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:14266:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:14266:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:14267:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14285:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:14285:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:14286:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,39,FOLLOW_154); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_36);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:14310:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:14310:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:14311:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:14317:1: ruleIdentityRequirement returns [EObject current=null] : ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token lv_type_0_1=null;
        Token lv_type_0_2=null;
        Token lv_type_0_3=null;
        Token lv_type_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token lv_authority_5_1=null;
        Token lv_authority_5_2=null;
        EObject lv_identities_1_0 = null;

        EObject lv_identities_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14323:2: ( ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:14324:2: ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:14324:2: ( ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* ) | (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( ((LA307_0>=213 && LA307_0<=216)) ) {
                alt307=1;
            }
            else if ( (LA307_0==186) ) {
                alt307=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 307, 0, input);

                throw nvae;
            }
            switch (alt307) {
                case 1 :
                    // InternalKim.g:14325:3: ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:14325:3: ( ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:14326:4: ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) ) ( (lv_identities_1_0= ruleConceptDeclaration ) ) (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:14326:4: ( ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) ) )
                    // InternalKim.g:14327:5: ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) )
                    {
                    // InternalKim.g:14327:5: ( (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' ) )
                    // InternalKim.g:14328:6: (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' )
                    {
                    // InternalKim.g:14328:6: (lv_type_0_1= 'identity' | lv_type_0_2= 'attribute' | lv_type_0_3= 'realm' | lv_type_0_4= 'extent' )
                    int alt304=4;
                    switch ( input.LA(1) ) {
                    case 213:
                        {
                        alt304=1;
                        }
                        break;
                    case 214:
                        {
                        alt304=2;
                        }
                        break;
                    case 215:
                        {
                        alt304=3;
                        }
                        break;
                    case 216:
                        {
                        alt304=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 304, 0, input);

                        throw nvae;
                    }

                    switch (alt304) {
                        case 1 :
                            // InternalKim.g:14329:7: lv_type_0_1= 'identity'
                            {
                            lv_type_0_1=(Token)match(input,213,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_1, grammarAccess.getIdentityRequirementAccess().getTypeIdentityKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14340:7: lv_type_0_2= 'attribute'
                            {
                            lv_type_0_2=(Token)match(input,214,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_2, grammarAccess.getIdentityRequirementAccess().getTypeAttributeKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:14351:7: lv_type_0_3= 'realm'
                            {
                            lv_type_0_3=(Token)match(input,215,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_3, grammarAccess.getIdentityRequirementAccess().getTypeRealmKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:14362:7: lv_type_0_4= 'extent'
                            {
                            lv_type_0_4=(Token)match(input,216,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_type_0_4, grammarAccess.getIdentityRequirementAccess().getTypeExtentKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(current, "type", lv_type_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:14375:4: ( (lv_identities_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:14376:5: (lv_identities_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:14376:5: (lv_identities_1_0= ruleConceptDeclaration )
                    // InternalKim.g:14377:6: lv_identities_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_identities_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14394:4: (otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) ) )*
                    loop305:
                    do {
                        int alt305=2;
                        int LA305_0 = input.LA(1);

                        if ( (LA305_0==28) ) {
                            int LA305_1 = input.LA(2);

                            if ( ((LA305_1>=RULE_LOWERCASE_ID && LA305_1<=RULE_UPPERCASE_ID)||LA305_1==RULE_CAMELCASE_ID||LA305_1==RULE_LOWERCASE_DASHID||LA305_1==RULE_UPPERCASE_PATH||LA305_1==39||(LA305_1>=138 && LA305_1<=139)||(LA305_1>=147 && LA305_1<=148)||(LA305_1>=150 && LA305_1<=155)||(LA305_1>=157 && LA305_1<=168)) ) {
                                alt305=1;
                            }


                        }


                        switch (alt305) {
                    	case 1 :
                    	    // InternalKim.g:14395:5: otherlv_2= ',' ( (lv_identities_3_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_2=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:14399:5: ( (lv_identities_3_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:14400:6: (lv_identities_3_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:14400:6: (lv_identities_3_0= ruleConceptDeclaration )
                    	    // InternalKim.g:14401:7: lv_identities_3_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_identities_3_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_3_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop305;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14421:3: (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:14421:3: (otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:14422:4: otherlv_4= 'authority' ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_4=(Token)match(input,186,FOLLOW_140); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:14426:4: ( ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:14427:5: ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:14427:5: ( (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:14428:6: (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:14428:6: (lv_authority_5_1= RULE_UPPERCASE_ID | lv_authority_5_2= RULE_UPPERCASE_PATH )
                    int alt306=2;
                    int LA306_0 = input.LA(1);

                    if ( (LA306_0==RULE_UPPERCASE_ID) ) {
                        alt306=1;
                    }
                    else if ( (LA306_0==RULE_UPPERCASE_PATH) ) {
                        alt306=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 306, 0, input);

                        throw nvae;
                    }
                    switch (alt306) {
                        case 1 :
                            // InternalKim.g:14429:7: lv_authority_5_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_5_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_5_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_5_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14444:7: lv_authority_5_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_5_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_5_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_5_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:14466:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:14466:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:14467:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:14473:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14479:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:14480:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:14480:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:14481:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:14481:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:14482:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:14482:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:14483:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_186); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:14499:3: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt309=2;
            alt309 = dfa309.predict(input);
            switch (alt309) {
                case 1 :
                    // InternalKim.g:14500:4: ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    // InternalKim.g:14500:4: ( ( '(' )=>otherlv_1= '(' )
                    // InternalKim.g:14501:5: ( '(' )=>otherlv_1= '('
                    {
                    otherlv_1=(Token)match(input,39,FOLLOW_187); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      				
                    }

                    }

                    // InternalKim.g:14507:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt308=2;
                    int LA308_0 = input.LA(1);

                    if ( ((LA308_0>=RULE_LOWERCASE_ID && LA308_0<=RULE_STRING)||(LA308_0>=RULE_EXPR && LA308_0<=RULE_LOWERCASE_DASHID)||LA308_0==RULE_UPPERCASE_PATH||LA308_0==RULE_TEMPLATE_VAR||(LA308_0>=29 && LA308_0<=30)||LA308_0==39||LA308_0==47||(LA308_0>=54 && LA308_0<=55)||(LA308_0>=81 && LA308_0<=84)||LA308_0==87||LA308_0==89||LA308_0==117||LA308_0==124||(LA308_0>=138 && LA308_0<=139)||(LA308_0>=147 && LA308_0<=148)||(LA308_0>=150 && LA308_0<=155)||(LA308_0>=157 && LA308_0<=168)||LA308_0==217||(LA308_0>=255 && LA308_0<=256)) ) {
                        alt308=1;
                    }
                    switch (alt308) {
                        case 1 :
                            // InternalKim.g:14508:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:14508:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:14509:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_36);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:14535:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:14535:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:14536:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:14542:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_contents_2_0 = null;

        EObject lv_contents_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14548:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' ) )
            // InternalKim.g:14549:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' )
            {
            // InternalKim.g:14549:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')' )
            // InternalKim.g:14550:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )? ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )* otherlv_5= ')'
            {
            // InternalKim.g:14550:3: ()
            // InternalKim.g:14551:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,39,FOLLOW_188); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:14564:3: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )?
            int alt310=2;
            alt310 = dfa310.predict(input);
            switch (alt310) {
                case 1 :
                    // InternalKim.g:14565:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:14565:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:14566:5: lv_contents_2_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_188);
                    lv_contents_2_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getListRule());
                      					}
                      					add(
                      						current,
                      						"contents",
                      						lv_contents_2_0,
                      						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:14583:3: ( (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) ) )*
            loop312:
            do {
                int alt312=2;
                int LA312_0 = input.LA(1);

                if ( ((LA312_0>=RULE_LOWERCASE_ID && LA312_0<=RULE_STRING)||(LA312_0>=RULE_EXPR && LA312_0<=RULE_LOWERCASE_DASHID)||LA312_0==RULE_UPPERCASE_PATH||LA312_0==RULE_TEMPLATE_VAR||(LA312_0>=28 && LA312_0<=30)||LA312_0==39||LA312_0==47||(LA312_0>=54 && LA312_0<=55)||(LA312_0>=81 && LA312_0<=84)||LA312_0==87||LA312_0==89||LA312_0==117||LA312_0==124||(LA312_0>=138 && LA312_0<=139)||(LA312_0>=147 && LA312_0<=148)||(LA312_0>=150 && LA312_0<=155)||(LA312_0>=157 && LA312_0<=168)||LA312_0==217||(LA312_0>=255 && LA312_0<=256)) ) {
                    alt312=1;
                }


                switch (alt312) {
            	case 1 :
            	    // InternalKim.g:14584:4: (otherlv_3= ',' )? ( (lv_contents_4_0= ruleValueWithIdAndConcept ) )
            	    {
            	    // InternalKim.g:14584:4: (otherlv_3= ',' )?
            	    int alt311=2;
            	    int LA311_0 = input.LA(1);

            	    if ( (LA311_0==28) ) {
            	        alt311=1;
            	    }
            	    switch (alt311) {
            	        case 1 :
            	            // InternalKim.g:14585:5: otherlv_3= ','
            	            {
            	            otherlv_3=(Token)match(input,28,FOLLOW_189); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(otherlv_3, grammarAccess.getListAccess().getCommaKeyword_3_0());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:14590:4: ( (lv_contents_4_0= ruleValueWithIdAndConcept ) )
            	    // InternalKim.g:14591:5: (lv_contents_4_0= ruleValueWithIdAndConcept )
            	    {
            	    // InternalKim.g:14591:5: (lv_contents_4_0= ruleValueWithIdAndConcept )
            	    // InternalKim.g:14592:6: lv_contents_4_0= ruleValueWithIdAndConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_3_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_188);
            	    lv_contents_4_0=ruleValueWithIdAndConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getListRule());
            	      						}
            	      						add(
            	      							current,
            	      							"contents",
            	      							lv_contents_4_0,
            	      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop312;
                }
            } while (true);

            otherlv_5=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getListAccess().getRightParenthesisKeyword_4());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:14618:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:14618:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:14619:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:14625:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14631:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:14632:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:14632:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt314=4;
            alt314 = dfa314.predict(input);
            switch (alt314) {
                case 1 :
                    // InternalKim.g:14633:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14633:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:14634:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:14634:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:14635:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:14635:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:14636:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14653:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:14654:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:14660:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:14661:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:14665:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:14666:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14685:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:14685:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:14686:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:14686:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:14687:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14705:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:14705:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:14706:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:14706:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:14707:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14724:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:14724:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:14725:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:14725:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:14726:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:14726:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt313=2;
                    int LA313_0 = input.LA(1);

                    if ( (LA313_0==29) ) {
                        alt313=1;
                    }
                    else if ( (LA313_0==30) ) {
                        alt313=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 313, 0, input);

                        throw nvae;
                    }
                    switch (alt313) {
                        case 1 :
                            // InternalKim.g:14727:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14738:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:14755:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:14755:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:14756:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:14762:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14768:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:14769:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:14769:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt316=6;
            alt316 = dfa316.predict(input);
            switch (alt316) {
                case 1 :
                    // InternalKim.g:14770:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:14770:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:14771:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:14771:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:14772:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:14772:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:14773:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_25);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14790:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:14791:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:14797:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:14798:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:14802:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:14803:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14822:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:14822:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:14823:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:14823:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:14824:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14842:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:14842:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:14843:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:14843:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:14844:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14861:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:14861:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:14862:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:14862:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:14863:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:14863:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt315=2;
                    int LA315_0 = input.LA(1);

                    if ( (LA315_0==29) ) {
                        alt315=1;
                    }
                    else if ( (LA315_0==30) ) {
                        alt315=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 315, 0, input);

                        throw nvae;
                    }
                    switch (alt315) {
                        case 1 :
                            // InternalKim.g:14864:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,29,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14875:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,30,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14889:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:14889:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:14890:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:14890:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:14891:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14908:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:14908:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:14909:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:14909:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:14910:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,28,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", lv_comma_7_0 != null, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:14926:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:14926:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:14927:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:14933:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14939:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:14940:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:14940:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:14941:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:14941:3: ()
            // InternalKim.g:14942:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,217,FOLLOW_190); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:14955:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt319=2;
            int LA319_0 = input.LA(1);

            if ( ((LA319_0>=RULE_LOWERCASE_ID && LA319_0<=RULE_STRING)||(LA319_0>=RULE_CAMELCASE_ID && LA319_0<=RULE_LOWERCASE_DASHID)||LA319_0==RULE_UPPERCASE_PATH||(LA319_0>=29 && LA319_0<=30)||LA319_0==39||LA319_0==44||LA319_0==47||LA319_0==54||(LA319_0>=81 && LA319_0<=84)||LA319_0==89||(LA319_0>=138 && LA319_0<=139)||(LA319_0>=147 && LA319_0<=148)||(LA319_0>=150 && LA319_0<=155)||(LA319_0>=157 && LA319_0<=168)||(LA319_0>=255 && LA319_0<=256)) ) {
                alt319=1;
            }
            switch (alt319) {
                case 1 :
                    // InternalKim.g:14956:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:14956:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:14957:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:14957:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:14958:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_191);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:14975:4: ( ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop318:
                    do {
                        int alt318=2;
                        int LA318_0 = input.LA(1);

                        if ( ((LA318_0>=RULE_LOWERCASE_ID && LA318_0<=RULE_STRING)||(LA318_0>=RULE_CAMELCASE_ID && LA318_0<=RULE_LOWERCASE_DASHID)||LA318_0==RULE_UPPERCASE_PATH||(LA318_0>=28 && LA318_0<=30)||LA318_0==39||LA318_0==44||LA318_0==47||LA318_0==54||(LA318_0>=81 && LA318_0<=84)||LA318_0==89||(LA318_0>=138 && LA318_0<=139)||(LA318_0>=147 && LA318_0<=148)||(LA318_0>=150 && LA318_0<=155)||(LA318_0>=157 && LA318_0<=168)||(LA318_0>=255 && LA318_0<=256)) ) {
                            alt318=1;
                        }


                        switch (alt318) {
                    	case 1 :
                    	    // InternalKim.g:14976:5: ( ( ',' )=>otherlv_3= ',' )? ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:14976:5: ( ( ',' )=>otherlv_3= ',' )?
                    	    int alt317=2;
                    	    int LA317_0 = input.LA(1);

                    	    if ( (LA317_0==28) && (synpred560_InternalKim())) {
                    	        alt317=1;
                    	    }
                    	    switch (alt317) {
                    	        case 1 :
                    	            // InternalKim.g:14977:6: ( ',' )=>otherlv_3= ','
                    	            {
                    	            otherlv_3=(Token)match(input,28,FOLLOW_192); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }

                    	    // InternalKim.g:14984:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:14985:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:14985:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:14986:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_191);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop318;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,146,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:15013:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:15013:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:15014:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:15020:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15026:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:15027:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:15027:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:15028:3: ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:15028:3: ( (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet ) )
            // InternalKim.g:15029:4: (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet )
            {
            // InternalKim.g:15029:4: (lv_classifier_0_0= ruleClassifierRHSWithIdNoSet )
            // InternalKim.g:15030:5: lv_classifier_0_0= ruleClassifierRHSWithIdNoSet
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdNoSetParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_88);
            lv_classifier_0_0=ruleClassifierRHSWithIdNoSet();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithIdNoSet");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,110,FOLLOW_189); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:15051:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:15052:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:15052:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:15053:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:15074:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:15074:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:15075:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:15081:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_name_0_3=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15087:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:15088:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:15088:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:15089:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:15089:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) ) )
            // InternalKim.g:15090:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            {
            // InternalKim.g:15090:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' ) )
            // InternalKim.g:15091:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            {
            // InternalKim.g:15091:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID | lv_name_0_3= 'value' )
            int alt320=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                int LA320_1 = input.LA(2);

                if ( (synpred563_InternalKim()) ) {
                    alt320=1;
                }
                else if ( (synpred564_InternalKim()) ) {
                    alt320=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 320, 1, input);

                    throw nvae;
                }
                }
                break;
            case RULE_UPPERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt320=1;
                }
                break;
            case 167:
                {
                alt320=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 320, 0, input);

                throw nvae;
            }

            switch (alt320) {
                case 1 :
                    // InternalKim.g:15092:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_193);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15108:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_193); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:15123:6: lv_name_0_3= 'value'
                    {
                    lv_name_0_3=(Token)match(input,167,FOLLOW_193); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_3, grammarAccess.getKeyValuePairAccess().getNameValueKeyword_0_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "name", lv_name_0_3, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:15136:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt321=2;
            int LA321_0 = input.LA(1);

            if ( (LA321_0==218) ) {
                alt321=1;
            }
            else if ( (LA321_0==47) ) {
                alt321=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 321, 0, input);

                throw nvae;
            }
            switch (alt321) {
                case 1 :
                    // InternalKim.g:15137:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:15137:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:15138:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:15138:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:15139:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,218,FOLLOW_189); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", lv_interactive_1_0 != null, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15152:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,47,FOLLOW_189); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15157:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:15158:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:15158:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:15159:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:15180:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:15180:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:15181:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:15187:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;

        EObject lv_singleValue_5_0 = null;

        EObject lv_pairs_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15193:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) ) )
            // InternalKim.g:15194:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )
            {
            // InternalKim.g:15194:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )
            int alt325=2;
            alt325 = dfa325.predict(input);
            switch (alt325) {
                case 1 :
                    // InternalKim.g:15195:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:15195:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:15196:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:15196:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:15197:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:15197:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:15198:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:15215:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop322:
                    do {
                        int alt322=2;
                        int LA322_0 = input.LA(1);

                        if ( (LA322_0==28) ) {
                            alt322=1;
                        }


                        switch (alt322) {
                    	case 1 :
                    	    // InternalKim.g:15216:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:15216:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:15217:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,28,FOLLOW_194); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:15223:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:15224:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:15224:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:15225:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop322;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15245:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* )
                    {
                    // InternalKim.g:15245:3: ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* )
                    // InternalKim.g:15246:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )*
                    {
                    // InternalKim.g:15246:4: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:15247:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:15247:5: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:15248:6: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"singleValue",
                      							lv_singleValue_3_0,
                      							"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:15265:4: ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )*
                    loop324:
                    do {
                        int alt324=2;
                        int LA324_0 = input.LA(1);

                        if ( (LA324_0==28) ) {
                            alt324=1;
                        }


                        switch (alt324) {
                    	case 1 :
                    	    // InternalKim.g:15266:5: ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )
                    	    {
                    	    // InternalKim.g:15266:5: ( ( ',' )=>otherlv_4= ',' )
                    	    // InternalKim.g:15267:6: ( ',' )=>otherlv_4= ','
                    	    {
                    	    otherlv_4=(Token)match(input,28,FOLLOW_189); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_4, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:15273:5: ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )
                    	    int alt323=2;
                    	    alt323 = dfa323.predict(input);
                    	    switch (alt323) {
                    	        case 1 :
                    	            // InternalKim.g:15274:6: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	            {
                    	            // InternalKim.g:15274:6: ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) )
                    	            // InternalKim.g:15275:7: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	            {
                    	            // InternalKim.g:15275:7: (lv_singleValue_5_0= ruleValueWithIdAndConcept )
                    	            // InternalKim.g:15276:8: lv_singleValue_5_0= ruleValueWithIdAndConcept
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_1_1_0_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_40);
                    	            lv_singleValue_5_0=ruleValueWithIdAndConcept();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"singleValue",
                    	              									lv_singleValue_5_0,
                    	              									"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:15294:6: ( (lv_pairs_6_0= ruleKeyValuePair ) )
                    	            {
                    	            // InternalKim.g:15294:6: ( (lv_pairs_6_0= ruleKeyValuePair ) )
                    	            // InternalKim.g:15295:7: (lv_pairs_6_0= ruleKeyValuePair )
                    	            {
                    	            // InternalKim.g:15295:7: (lv_pairs_6_0= ruleKeyValuePair )
                    	            // InternalKim.g:15296:8: lv_pairs_6_0= ruleKeyValuePair
                    	            {
                    	            if ( state.backtracking==0 ) {

                    	              								newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_1_1_0());
                    	              							
                    	            }
                    	            pushFollow(FOLLOW_40);
                    	            lv_pairs_6_0=ruleKeyValuePair();

                    	            state._fsp--;
                    	            if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	              								}
                    	              								add(
                    	              									current,
                    	              									"pairs",
                    	              									lv_pairs_6_0,
                    	              									"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	              								afterParserOrEnumRuleCall();
                    	              							
                    	            }

                    	            }


                    	            }


                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop324;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:15320:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:15320:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:15321:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:15327:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_5_0=null;
        Token lv_templatevar_6_0=null;
        Token lv_id_7_2=null;
        Token lv_id_7_3=null;
        Token lv_id_7_4=null;
        Token lv_null_13_0=null;
        EObject lv_map_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_date_3_0 = null;

        EObject lv_literal_4_0 = null;

        AntlrDatatypeRuleToken lv_id_7_1 = null;

        EObject lv_table_8_0 = null;

        EObject lv_list_9_0 = null;

        EObject lv_quantity_10_0 = null;

        EObject lv_op_11_0 = null;

        EObject lv_expression_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15333:2: ( ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) ) )
            // InternalKim.g:15334:2: ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) )
            {
            // InternalKim.g:15334:2: ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) )
            int alt327=13;
            alt327 = dfa327.predict(input);
            switch (alt327) {
                case 1 :
                    // InternalKim.g:15335:3: ( (lv_map_0_0= ruleMap ) )
                    {
                    // InternalKim.g:15335:3: ( (lv_map_0_0= ruleMap ) )
                    // InternalKim.g:15336:4: (lv_map_0_0= ruleMap )
                    {
                    // InternalKim.g:15336:4: (lv_map_0_0= ruleMap )
                    // InternalKim.g:15337:5: lv_map_0_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_0_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_0_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15355:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
                    {
                    // InternalKim.g:15355:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
                    // InternalKim.g:15356:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
                    {
                    // InternalKim.g:15356:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
                    // InternalKim.g:15357:5: lv_concept_1_0= ruleSimpleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleSimpleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15375:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:15375:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:15376:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:15376:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:15377:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15395:3: ( (lv_date_3_0= ruleDate ) )
                    {
                    // InternalKim.g:15395:3: ( (lv_date_3_0= ruleDate ) )
                    // InternalKim.g:15396:4: (lv_date_3_0= ruleDate )
                    {
                    // InternalKim.g:15396:4: (lv_date_3_0= ruleDate )
                    // InternalKim.g:15397:5: lv_date_3_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_3_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_3_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15415:3: ( (lv_literal_4_0= ruleLiteral ) )
                    {
                    // InternalKim.g:15415:3: ( (lv_literal_4_0= ruleLiteral ) )
                    // InternalKim.g:15416:4: (lv_literal_4_0= ruleLiteral )
                    {
                    // InternalKim.g:15416:4: (lv_literal_4_0= ruleLiteral )
                    // InternalKim.g:15417:5: lv_literal_4_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_4_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_4_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15435:3: ( (lv_expr_5_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:15435:3: ( (lv_expr_5_0= RULE_EXPR ) )
                    // InternalKim.g:15436:4: (lv_expr_5_0= RULE_EXPR )
                    {
                    // InternalKim.g:15436:4: (lv_expr_5_0= RULE_EXPR )
                    // InternalKim.g:15437:5: lv_expr_5_0= RULE_EXPR
                    {
                    lv_expr_5_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_5_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_5_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15454:3: ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) )
                    {
                    // InternalKim.g:15454:3: ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) )
                    // InternalKim.g:15455:4: (lv_templatevar_6_0= RULE_TEMPLATE_VAR )
                    {
                    // InternalKim.g:15455:4: (lv_templatevar_6_0= RULE_TEMPLATE_VAR )
                    // InternalKim.g:15456:5: lv_templatevar_6_0= RULE_TEMPLATE_VAR
                    {
                    lv_templatevar_6_0=(Token)match(input,RULE_TEMPLATE_VAR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_templatevar_6_0, grammarAccess.getValueWithIdAndConceptAccess().getTemplatevarTEMPLATE_VARTerminalRuleCall_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"templatevar",
                      						lv_templatevar_6_0,
                      						"org.integratedmodelling.kim.Kim.TEMPLATE_VAR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:15473:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15473:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15474:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15474:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15475:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15475:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
                    int alt326=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA326_1 = input.LA(2);

                        if ( (synpred579_InternalKim()) ) {
                            alt326=1;
                        }
                        else if ( (synpred580_InternalKim()) ) {
                            alt326=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 326, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        int LA326_2 = input.LA(2);

                        if ( (synpred579_InternalKim()) ) {
                            alt326=1;
                        }
                        else if ( (synpred581_InternalKim()) ) {
                            alt326=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 326, 2, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt326=1;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt326=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 326, 0, input);

                        throw nvae;
                    }

                    switch (alt326) {
                        case 1 :
                            // InternalKim.g:15476:6: lv_id_7_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_7_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_7_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15492:6: lv_id_7_2= RULE_LOWERCASE_ID
                            {
                            lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_7_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15507:6: lv_id_7_3= RULE_UPPERCASE_ID
                            {
                            lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_7_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:15522:6: lv_id_7_4= RULE_CAMELCASE_ID
                            {
                            lv_id_7_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_7_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_7_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_7_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:15540:3: ( (lv_table_8_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:15540:3: ( (lv_table_8_0= ruleLookupTable ) )
                    // InternalKim.g:15541:4: (lv_table_8_0= ruleLookupTable )
                    {
                    // InternalKim.g:15541:4: (lv_table_8_0= ruleLookupTable )
                    // InternalKim.g:15542:5: lv_table_8_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_8_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_8_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:15560:3: ( (lv_list_9_0= ruleList ) )
                    {
                    // InternalKim.g:15560:3: ( (lv_list_9_0= ruleList ) )
                    // InternalKim.g:15561:4: (lv_list_9_0= ruleList )
                    {
                    // InternalKim.g:15561:4: (lv_list_9_0= ruleList )
                    // InternalKim.g:15562:5: lv_list_9_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_9_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_9_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_9_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:15580:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15580:3: ( (lv_quantity_10_0= ruleQuantity ) )
                    // InternalKim.g:15581:4: (lv_quantity_10_0= ruleQuantity )
                    {
                    // InternalKim.g:15581:4: (lv_quantity_10_0= ruleQuantity )
                    // InternalKim.g:15582:5: lv_quantity_10_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_10_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_10_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_10_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:15600:3: ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:15600:3: ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) )
                    // InternalKim.g:15601:4: ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) )
                    {
                    // InternalKim.g:15601:4: ( (lv_op_11_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:15602:5: (lv_op_11_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:15602:5: (lv_op_11_0= ruleREL_OPERATOR )
                    // InternalKim.g:15603:6: lv_op_11_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getOpREL_OPERATORParserRuleCall_11_0_0());
                      					
                    }
                    pushFollow(FOLLOW_44);
                    lv_op_11_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_11_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:15620:4: ( (lv_expression_12_0= ruleNumber ) )
                    // InternalKim.g:15621:5: (lv_expression_12_0= ruleNumber )
                    {
                    // InternalKim.g:15621:5: (lv_expression_12_0= ruleNumber )
                    // InternalKim.g:15622:6: lv_expression_12_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getExpressionNumberParserRuleCall_11_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_12_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_12_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:15641:3: ( (lv_null_13_0= 'unknown' ) )
                    {
                    // InternalKim.g:15641:3: ( (lv_null_13_0= 'unknown' ) )
                    // InternalKim.g:15642:4: (lv_null_13_0= 'unknown' )
                    {
                    // InternalKim.g:15642:4: (lv_null_13_0= 'unknown' )
                    // InternalKim.g:15643:5: lv_null_13_0= 'unknown'
                    {
                    lv_null_13_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_13_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_12_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", lv_null_13_0 != null, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:15659:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:15659:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:15660:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:15666:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_0=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_11_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;

        EObject lv_table_7_0 = null;

        EObject lv_quantity_8_0 = null;

        EObject lv_date_9_0 = null;

        EObject lv_map_10_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15672:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) ) )
            // InternalKim.g:15673:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            {
            // InternalKim.g:15673:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )
            int alt330=10;
            alt330 = dfa330.predict(input);
            switch (alt330) {
                case 1 :
                    // InternalKim.g:15674:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:15674:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:15675:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:15675:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:15676:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15694:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:15694:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:15695:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:15695:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:15696:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15714:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    {
                    // InternalKim.g:15714:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? )
                    // InternalKim.g:15715:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    {
                    // InternalKim.g:15715:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:15716:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:15716:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:15717:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:15733:4: (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )?
                    int alt328=2;
                    int LA328_0 = input.LA(1);

                    if ( (LA328_0==53) ) {
                        alt328=1;
                    }
                    switch (alt328) {
                        case 1 :
                            // InternalKim.g:15734:5: otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            {
                            otherlv_3=(Token)match(input,53,FOLLOW_75); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:15738:5: ( (lv_language_4_0= RULE_UPPERCASE_ID ) )
                            // InternalKim.g:15739:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            {
                            // InternalKim.g:15739:6: (lv_language_4_0= RULE_UPPERCASE_ID )
                            // InternalKim.g:15740:7: lv_language_4_0= RULE_UPPERCASE_ID
                            {
                            lv_language_4_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_language_4_0, grammarAccess.getValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getValueRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"language",
                              								lv_language_4_0,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15759:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:15759:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:15760:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:15760:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:15761:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:15761:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt329=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt329=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt329=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt329=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 329, 0, input);

                        throw nvae;
                    }

                    switch (alt329) {
                        case 1 :
                            // InternalKim.g:15762:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:15777:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:15792:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15810:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:15810:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:15811:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:15811:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:15812:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:15830:3: ( (lv_table_7_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:15830:3: ( (lv_table_7_0= ruleLookupTable ) )
                    // InternalKim.g:15831:4: (lv_table_7_0= ruleLookupTable )
                    {
                    // InternalKim.g:15831:4: (lv_table_7_0= ruleLookupTable )
                    // InternalKim.g:15832:5: lv_table_7_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_7_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_7_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:15850:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    {
                    // InternalKim.g:15850:3: ( (lv_quantity_8_0= ruleQuantity ) )
                    // InternalKim.g:15851:4: (lv_quantity_8_0= ruleQuantity )
                    {
                    // InternalKim.g:15851:4: (lv_quantity_8_0= ruleQuantity )
                    // InternalKim.g:15852:5: lv_quantity_8_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_8_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_8_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:15870:3: ( (lv_date_9_0= ruleDate ) )
                    {
                    // InternalKim.g:15870:3: ( (lv_date_9_0= ruleDate ) )
                    // InternalKim.g:15871:4: (lv_date_9_0= ruleDate )
                    {
                    // InternalKim.g:15871:4: (lv_date_9_0= ruleDate )
                    // InternalKim.g:15872:5: lv_date_9_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_9_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_9_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:15890:3: ( (lv_map_10_0= ruleMap ) )
                    {
                    // InternalKim.g:15890:3: ( (lv_map_10_0= ruleMap ) )
                    // InternalKim.g:15891:4: (lv_map_10_0= ruleMap )
                    {
                    // InternalKim.g:15891:4: (lv_map_10_0= ruleMap )
                    // InternalKim.g:15892:5: lv_map_10_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_8_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_10_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_10_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:15910:3: ( (lv_null_11_0= 'unknown' ) )
                    {
                    // InternalKim.g:15910:3: ( (lv_null_11_0= 'unknown' ) )
                    // InternalKim.g:15911:4: (lv_null_11_0= 'unknown' )
                    {
                    // InternalKim.g:15911:4: (lv_null_11_0= 'unknown' )
                    // InternalKim.g:15912:5: lv_null_11_0= 'unknown'
                    {
                    lv_null_11_0=(Token)match(input,54,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_11_0, grammarAccess.getValueAccess().getNullUnknownKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", lv_null_11_0 != null, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleLiteralValueWithConcept"
    // InternalKim.g:15928:1: entryRuleLiteralValueWithConcept returns [EObject current=null] : iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF ;
    public final EObject entryRuleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralValueWithConcept = null;


        try {
            // InternalKim.g:15928:64: (iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF )
            // InternalKim.g:15929:2: iv_ruleLiteralValueWithConcept= ruleLiteralValueWithConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralValueWithConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralValueWithConcept=ruleLiteralValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralValueWithConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralValueWithConcept"


    // $ANTLR start "ruleLiteralValueWithConcept"
    // InternalKim.g:15935:1: ruleLiteralValueWithConcept returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) ;
    public final EObject ruleLiteralValueWithConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_6_1=null;
        Token lv_id_6_2=null;
        Token lv_id_6_3=null;
        EObject lv_literal_0_0 = null;

        EObject lv_concept_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_quantity_4_0 = null;

        EObject lv_date_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15941:2: ( ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) ) )
            // InternalKim.g:15942:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            {
            // InternalKim.g:15942:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )
            int alt332=7;
            alt332 = dfa332.predict(input);
            switch (alt332) {
                case 1 :
                    // InternalKim.g:15943:3: ( (lv_literal_0_0= ruleLiteral ) )
                    {
                    // InternalKim.g:15943:3: ( (lv_literal_0_0= ruleLiteral ) )
                    // InternalKim.g:15944:4: (lv_literal_0_0= ruleLiteral )
                    {
                    // InternalKim.g:15944:4: (lv_literal_0_0= ruleLiteral )
                    // InternalKim.g:15945:5: lv_literal_0_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getLiteralLiteralParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15963:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:15963:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
                    // InternalKim.g:15964:4: (lv_concept_1_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:15964:4: (lv_concept_1_0= ruleConceptDeclaration )
                    // InternalKim.g:15965:5: lv_concept_1_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_1_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_1_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15983:3: ( (lv_function_2_0= ruleFunction ) )
                    {
                    // InternalKim.g:15983:3: ( (lv_function_2_0= ruleFunction ) )
                    // InternalKim.g:15984:4: (lv_function_2_0= ruleFunction )
                    {
                    // InternalKim.g:15984:4: (lv_function_2_0= ruleFunction )
                    // InternalKim.g:15985:5: lv_function_2_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getFunctionFunctionParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_2_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_2_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:16003:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:16003:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:16004:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:16004:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:16005:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getLiteralValueWithConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:16022:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    {
                    // InternalKim.g:16022:3: ( (lv_quantity_4_0= ruleQuantity ) )
                    // InternalKim.g:16023:4: (lv_quantity_4_0= ruleQuantity )
                    {
                    // InternalKim.g:16023:4: (lv_quantity_4_0= ruleQuantity )
                    // InternalKim.g:16024:5: lv_quantity_4_0= ruleQuantity
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getQuantityQuantityParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_quantity_4_0=ruleQuantity();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"quantity",
                      						lv_quantity_4_0,
                      						"org.integratedmodelling.kim.Kim.Quantity");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:16042:3: ( (lv_date_5_0= ruleDate ) )
                    {
                    // InternalKim.g:16042:3: ( (lv_date_5_0= ruleDate ) )
                    // InternalKim.g:16043:4: (lv_date_5_0= ruleDate )
                    {
                    // InternalKim.g:16043:4: (lv_date_5_0= ruleDate )
                    // InternalKim.g:16044:5: lv_date_5_0= ruleDate
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getDateDateParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_date_5_0=ruleDate();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"date",
                      						lv_date_5_0,
                      						"org.integratedmodelling.kim.Kim.Date");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:16062:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:16062:3: ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:16063:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:16063:4: ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:16064:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:16064:5: (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID )
                    int alt331=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt331=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt331=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt331=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 331, 0, input);

                        throw nvae;
                    }

                    switch (alt331) {
                        case 1 :
                            // InternalKim.g:16065:6: lv_id_6_1= RULE_LOWERCASE_ID
                            {
                            lv_id_6_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_1, grammarAccess.getLiteralValueWithConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:16080:6: lv_id_6_2= RULE_UPPERCASE_ID
                            {
                            lv_id_6_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_2, grammarAccess.getLiteralValueWithConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_6_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:16095:6: lv_id_6_3= RULE_CAMELCASE_ID
                            {
                            lv_id_6_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_6_3, grammarAccess.getLiteralValueWithConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_6_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralValueWithConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_6_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralValueWithConcept"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:16116:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:16116:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:16117:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:16123:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:16129:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:16130:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:16130:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:16131:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:16131:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:16132:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:16132:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:16133:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_46);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,39,FOLLOW_187); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:16154:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( ((LA333_0>=RULE_LOWERCASE_ID && LA333_0<=RULE_STRING)||(LA333_0>=RULE_EXPR && LA333_0<=RULE_LOWERCASE_DASHID)||LA333_0==RULE_UPPERCASE_PATH||LA333_0==RULE_TEMPLATE_VAR||(LA333_0>=29 && LA333_0<=30)||LA333_0==39||LA333_0==47||(LA333_0>=54 && LA333_0<=55)||(LA333_0>=81 && LA333_0<=84)||LA333_0==87||LA333_0==89||LA333_0==117||LA333_0==124||(LA333_0>=138 && LA333_0<=139)||(LA333_0>=147 && LA333_0<=148)||(LA333_0>=150 && LA333_0<=155)||(LA333_0>=157 && LA333_0<=168)||LA333_0==217||(LA333_0>=255 && LA333_0<=256)) ) {
                alt333=1;
            }
            switch (alt333) {
                case 1 :
                    // InternalKim.g:16155:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:16155:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:16156:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_36);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleRESOLUTION_EXCEPTION"
    // InternalKim.g:16181:1: entryRuleRESOLUTION_EXCEPTION returns [String current=null] : iv_ruleRESOLUTION_EXCEPTION= ruleRESOLUTION_EXCEPTION EOF ;
    public final String entryRuleRESOLUTION_EXCEPTION() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleRESOLUTION_EXCEPTION = null;


        try {
            // InternalKim.g:16181:60: (iv_ruleRESOLUTION_EXCEPTION= ruleRESOLUTION_EXCEPTION EOF )
            // InternalKim.g:16182:2: iv_ruleRESOLUTION_EXCEPTION= ruleRESOLUTION_EXCEPTION EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRESOLUTION_EXCEPTIONRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRESOLUTION_EXCEPTION=ruleRESOLUTION_EXCEPTION();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRESOLUTION_EXCEPTION.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRESOLUTION_EXCEPTION"


    // $ANTLR start "ruleRESOLUTION_EXCEPTION"
    // InternalKim.g:16188:1: ruleRESOLUTION_EXCEPTION returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'error' | kw= 'nodata' | kw= 'missing' ) ;
    public final AntlrDatatypeRuleToken ruleRESOLUTION_EXCEPTION() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16194:2: ( (kw= 'error' | kw= 'nodata' | kw= 'missing' ) )
            // InternalKim.g:16195:2: (kw= 'error' | kw= 'nodata' | kw= 'missing' )
            {
            // InternalKim.g:16195:2: (kw= 'error' | kw= 'nodata' | kw= 'missing' )
            int alt334=3;
            switch ( input.LA(1) ) {
            case 219:
                {
                alt334=1;
                }
                break;
            case 220:
                {
                alt334=2;
                }
                break;
            case 221:
                {
                alt334=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 334, 0, input);

                throw nvae;
            }

            switch (alt334) {
                case 1 :
                    // InternalKim.g:16196:3: kw= 'error'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRESOLUTION_EXCEPTIONAccess().getErrorKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16202:3: kw= 'nodata'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRESOLUTION_EXCEPTIONAccess().getNodataKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16208:3: kw= 'missing'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getRESOLUTION_EXCEPTIONAccess().getMissingKeyword_2());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRESOLUTION_EXCEPTION"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:16217:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:16217:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:16218:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:16224:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:16230:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:16231:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:16231:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt335=2;
            int LA335_0 = input.LA(1);

            if ( (LA335_0==222) ) {
                alt335=1;
            }
            else if ( (LA335_0==100||(LA335_0>=175 && LA335_0<=176)||LA335_0==196||(LA335_0>=213 && LA335_0<=216)||(LA335_0>=223 && LA335_0<=251)) ) {
                alt335=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 335, 0, input);

                throw nvae;
            }
            switch (alt335) {
                case 1 :
                    // InternalKim.g:16232:3: kw= 'quality'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16238:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:16252:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:16252:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:16253:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:16259:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:16265:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:16266:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:16266:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt336=10;
            switch ( input.LA(1) ) {
            case 223:
                {
                alt336=1;
                }
                break;
            case 224:
                {
                alt336=2;
                }
                break;
            case 225:
                {
                alt336=3;
                }
                break;
            case 176:
                {
                alt336=4;
                }
                break;
            case 226:
                {
                alt336=5;
                }
                break;
            case 216:
                {
                alt336=6;
                }
                break;
            case 228:
            case 229:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
                {
                alt336=7;
                }
                break;
            case 236:
            case 237:
            case 238:
            case 239:
            case 240:
            case 241:
            case 242:
            case 243:
            case 244:
            case 245:
            case 246:
            case 247:
            case 248:
                {
                alt336=8;
                }
                break;
            case 175:
            case 249:
            case 250:
            case 251:
                {
                alt336=9;
                }
                break;
            case 100:
            case 196:
            case 213:
            case 214:
            case 215:
            case 227:
                {
                alt336=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 336, 0, input);

                throw nvae;
            }

            switch (alt336) {
                case 1 :
                    // InternalKim.g:16267:3: kw= 'class'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16273:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16279:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16285:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,176,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16291:3: kw= 'bond'
                    {
                    kw=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16297:3: kw= 'extent'
                    {
                    kw=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:16303:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:16314:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:16325:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:16336:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:16350:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:16350:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:16351:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:16357:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16363:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:16364:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:16364:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt337=6;
            switch ( input.LA(1) ) {
            case 227:
                {
                alt337=1;
                }
                break;
            case 214:
                {
                alt337=2;
                }
                break;
            case 213:
                {
                alt337=3;
                }
                break;
            case 196:
                {
                alt337=4;
                }
                break;
            case 215:
                {
                alt337=5;
                }
                break;
            case 100:
                {
                alt337=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 0, input);

                throw nvae;
            }

            switch (alt337) {
                case 1 :
                    // InternalKim.g:16365:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16371:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16377:3: kw= 'identity'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16383:3: kw= 'role'
                    {
                    kw=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16389:3: kw= 'realm'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16395:3: kw= 'domain'
                    {
                    kw=(Token)match(input,100,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:16404:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:16404:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:16405:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:16411:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16417:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:16418:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:16418:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt338=8;
            switch ( input.LA(1) ) {
            case 228:
                {
                alt338=1;
                }
                break;
            case 229:
                {
                alt338=2;
                }
                break;
            case 230:
                {
                alt338=3;
                }
                break;
            case 231:
                {
                alt338=4;
                }
                break;
            case 232:
                {
                alt338=5;
                }
                break;
            case 233:
                {
                alt338=6;
                }
                break;
            case 234:
                {
                alt338=7;
                }
                break;
            case 235:
                {
                alt338=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 338, 0, input);

                throw nvae;
            }

            switch (alt338) {
                case 1 :
                    // InternalKim.g:16419:3: kw= 'amount'
                    {
                    kw=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16425:3: kw= 'length'
                    {
                    kw=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16431:3: kw= 'mass'
                    {
                    kw=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16437:3: kw= 'volume'
                    {
                    kw=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16443:3: kw= 'weight'
                    {
                    kw=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16449:3: kw= 'money'
                    {
                    kw=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:16455:3: kw= 'duration'
                    {
                    kw=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:16461:3: kw= 'area'
                    {
                    kw=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:16470:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:16470:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:16471:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:16477:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16483:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:16484:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:16484:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt339=13;
            switch ( input.LA(1) ) {
            case 236:
                {
                alt339=1;
                }
                break;
            case 237:
                {
                alt339=2;
                }
                break;
            case 238:
                {
                alt339=3;
                }
                break;
            case 239:
                {
                alt339=4;
                }
                break;
            case 240:
                {
                alt339=5;
                }
                break;
            case 241:
                {
                alt339=6;
                }
                break;
            case 242:
                {
                alt339=7;
                }
                break;
            case 243:
                {
                alt339=8;
                }
                break;
            case 244:
                {
                alt339=9;
                }
                break;
            case 245:
                {
                alt339=10;
                }
                break;
            case 246:
                {
                alt339=11;
                }
                break;
            case 247:
                {
                alt339=12;
                }
                break;
            case 248:
                {
                alt339=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 339, 0, input);

                throw nvae;
            }

            switch (alt339) {
                case 1 :
                    // InternalKim.g:16485:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16491:3: kw= 'energy'
                    {
                    kw=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16497:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16503:3: kw= 'priority'
                    {
                    kw=(Token)match(input,239,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:16509:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,240,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:16515:3: kw= 'charge'
                    {
                    kw=(Token)match(input,241,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:16521:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,242,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:16527:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,243,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:16533:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,244,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:16539:3: kw= 'angle'
                    {
                    kw=(Token)match(input,245,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:16545:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,246,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:16551:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,247,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:16557:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,248,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:16566:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:16566:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:16567:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:16573:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16579:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:16580:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:16580:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt340=4;
            switch ( input.LA(1) ) {
            case 249:
                {
                alt340=1;
                }
                break;
            case 250:
                {
                alt340=2;
                }
                break;
            case 175:
                {
                alt340=3;
                }
                break;
            case 251:
                {
                alt340=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 340, 0, input);

                throw nvae;
            }

            switch (alt340) {
                case 1 :
                    // InternalKim.g:16581:3: kw= 'thing'
                    {
                    kw=(Token)match(input,249,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16587:3: kw= 'process'
                    {
                    kw=(Token)match(input,250,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:16593:3: kw= 'agent'
                    {
                    kw=(Token)match(input,175,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:16599:3: kw= 'event'
                    {
                    kw=(Token)match(input,251,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:16608:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:16608:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:16609:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:16615:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:16621:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:16622:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:16622:2: (kw= 'functional' | kw= 'structural' )
            int alt341=2;
            int LA341_0 = input.LA(1);

            if ( (LA341_0==252) ) {
                alt341=1;
            }
            else if ( (LA341_0==253) ) {
                alt341=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 341, 0, input);

                throw nvae;
            }
            switch (alt341) {
                case 1 :
                    // InternalKim.g:16623:3: kw= 'functional'
                    {
                    kw=(Token)match(input,252,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:16629:3: kw= 'structural'
                    {
                    kw=(Token)match(input,253,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleDependencyObservableSemantics"
    // InternalKim.g:16638:1: entryRuleDependencyObservableSemantics returns [EObject current=null] : iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF ;
    public final EObject entryRuleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16642:2: (iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF )
            // InternalKim.g:16643:2: iv_ruleDependencyObservableSemantics= ruleDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependencyObservableSemantics=ruleDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleDependencyObservableSemantics"


    // $ANTLR start "ruleDependencyObservableSemantics"
    // InternalKim.g:16652:1: ruleDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token lv_optional_18_0=null;
        Token otherlv_19=null;
        Token lv_default_20_0=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_28=null;
        Token lv_name_29_1=null;
        Token lv_name_29_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;

        EObject lv_defaultLiteral_22_0 = null;

        EObject lv_defaultConcept_23_0 = null;

        AntlrDatatypeRuleToken lv_causes_25_0 = null;

        AntlrDatatypeRuleToken lv_causes_27_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:16661:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:16662:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:16662:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:16663:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:16663:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt342=2;
            alt342 = dfa342.predict(input);
            switch (alt342) {
                case 1 :
                    // InternalKim.g:16664:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:16664:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:16665:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:16665:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:16666:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,26,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:16688:3: ( (lv_generic_2_0= 'any' ) )?
            int alt343=2;
            int LA343_0 = input.LA(1);

            if ( (LA343_0==117) ) {
                alt343=1;
            }
            switch (alt343) {
                case 1 :
                    // InternalKim.g:16689:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:16689:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:16690:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,117,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_2_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:16702:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:16703:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:16703:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:16704:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_107);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:16721:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:16722:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:16722:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* ) )
            // InternalKim.g:16723:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:16726:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )* )
            // InternalKim.g:16727:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )*
            {
            // InternalKim.g:16727:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )*
            loop352:
            do {
                int alt352=8;
                alt352 = dfa352.predict(input);
                switch (alt352) {
            	case 1 :
            	    // InternalKim.g:16728:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16728:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:16729:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:16729:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:16730:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:16733:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:16733:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16733:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:16733:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:16741:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:16742:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:16742:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:16743:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:16766:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16766:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:16767:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:16767:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:16768:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:16771:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:16771:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16771:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt345=2;
            	    int LA345_0 = input.LA(1);

            	    if ( (LA345_0==53) ) {
            	        alt345=1;
            	    }
            	    else if ( (LA345_0==118) ) {
            	        alt345=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 345, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt345) {
            	        case 1 :
            	            // InternalKim.g:16771:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:16771:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:16772:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,53,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:16776:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt344=2;
            	            int LA344_0 = input.LA(1);

            	            if ( (LA344_0==EOF||LA344_0==RULE_LOWERCASE_ID||(LA344_0>=RULE_CAMELCASE_ID && LA344_0<=RULE_INT)||LA344_0==RULE_BACKCASE_ID||LA344_0==21||LA344_0==28||(LA344_0>=32 && LA344_0<=34)||LA344_0==36||(LA344_0>=38 && LA344_0<=39)||(LA344_0>=41 && LA344_0<=42)||LA344_0==44||LA344_0==47||LA344_0==53||(LA344_0>=59 && LA344_0<=61)||(LA344_0>=67 && LA344_0<=72)||(LA344_0>=81 && LA344_0<=93)||LA344_0==112||(LA344_0>=118 && LA344_0<=121)||LA344_0==123||(LA344_0>=125 && LA344_0<=128)||(LA344_0>=255 && LA344_0<=256)||LA344_0==263) ) {
            	                alt344=1;
            	            }
            	            else if ( (LA344_0==RULE_UPPERCASE_ID) ) {
            	                int LA344_2 = input.LA(2);

            	                if ( (LA344_2==EOF||LA344_2==RULE_INT||LA344_2==21||LA344_2==28||(LA344_2>=32 && LA344_2<=34)||LA344_2==36||LA344_2==38||(LA344_2>=41 && LA344_2<=42)||LA344_2==44||LA344_2==47||LA344_2==53||(LA344_2>=59 && LA344_2<=61)||(LA344_2>=67 && LA344_2<=72)||(LA344_2>=81 && LA344_2<=93)||LA344_2==112||(LA344_2>=118 && LA344_2<=121)||LA344_2==123||(LA344_2>=125 && LA344_2<=128)||(LA344_2>=255 && LA344_2<=256)||LA344_2==263) ) {
            	                    alt344=1;
            	                }
            	                else if ( (LA344_2==254) ) {
            	                    alt344=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 344, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 344, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt344) {
            	                case 1 :
            	                    // InternalKim.g:16777:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:16777:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:16778:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:16778:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:16779:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:16797:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:16797:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:16798:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:16798:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:16799:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_107);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16819:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:16819:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:16820:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,118,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:16824:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:16825:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:16825:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:16826:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_107);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:16850:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:16850:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:16851:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:16851:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:16852:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:16855:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:16855:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16855:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:16855:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:16855:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:16856:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:16856:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:16857:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:16878:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:16879:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:16879:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:16880:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:16903:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:16903:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:16904:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:16904:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:16905:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:16908:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:16908:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16908:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:16908:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:16908:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:16909:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:16909:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:16910:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_107);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:16927:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop346:
            	    do {
            	        int alt346=2;
            	        alt346 = dfa346.predict(input);
            	        switch (alt346) {
            	    	case 1 :
            	    	    // InternalKim.g:16928:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:16928:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:16929:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_107);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop346;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:16952:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:16952:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
            	    // InternalKim.g:16953:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:16953:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
            	    // InternalKim.g:16954:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:16957:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
            	    // InternalKim.g:16957:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16957:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
            	    int alt347=2;
            	    int LA347_0 = input.LA(1);

            	    if ( (LA347_0==119) ) {
            	        alt347=1;
            	    }
            	    else if ( (LA347_0==120) ) {
            	        alt347=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 347, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt347) {
            	        case 1 :
            	            // InternalKim.g:16957:20: ( (lv_optional_18_0= 'optional' ) )
            	            {
            	            // InternalKim.g:16957:20: ( (lv_optional_18_0= 'optional' ) )
            	            // InternalKim.g:16958:10: (lv_optional_18_0= 'optional' )
            	            {
            	            // InternalKim.g:16958:10: (lv_optional_18_0= 'optional' )
            	            // InternalKim.g:16959:11: lv_optional_18_0= 'optional'
            	            {
            	            lv_optional_18_0=(Token)match(input,119,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_18_0, grammarAccess.getDependencyObservableSemanticsAccess().getOptionalOptionalKeyword_3_4_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", lv_optional_18_0 != null, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:16972:9: otherlv_19= 'required'
            	            {
            	            otherlv_19=(Token)match(input,120,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_19, grammarAccess.getDependencyObservableSemanticsAccess().getRequiredKeyword_3_4_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:16982:4: ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:16982:4: ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
            	    // InternalKim.g:16983:5: {...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:16983:126: ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
            	    // InternalKim.g:16984:6: ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:16987:9: ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
            	    // InternalKim.g:16987:10: {...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:16987:19: ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
            	    // InternalKim.g:16987:20: ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
            	    {
            	    // InternalKim.g:16987:20: ( (lv_default_20_0= 'default' ) )
            	    // InternalKim.g:16988:10: (lv_default_20_0= 'default' )
            	    {
            	    // InternalKim.g:16988:10: (lv_default_20_0= 'default' )
            	    // InternalKim.g:16989:11: lv_default_20_0= 'default'
            	    {
            	    lv_default_20_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_default_20_0, grammarAccess.getDependencyObservableSemanticsAccess().getDefaultDefaultKeyword_3_5_0_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(current, "default", lv_default_20_0 != null, "default");
            	      										
            	    }

            	    }


            	    }

            	    otherlv_21=(Token)match(input,37,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_21, grammarAccess.getDependencyObservableSemanticsAccess().getToKeyword_3_5_1());
            	      								
            	    }
            	    // InternalKim.g:17005:9: ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) )
            	    int alt348=2;
            	    int LA348_0 = input.LA(1);

            	    if ( (LA348_0==RULE_STRING||LA348_0==RULE_INT||(LA348_0>=29 && LA348_0<=30)||(LA348_0>=255 && LA348_0<=256)) ) {
            	        alt348=1;
            	    }
            	    else if ( ((LA348_0>=RULE_LOWERCASE_ID && LA348_0<=RULE_UPPERCASE_ID)||LA348_0==RULE_CAMELCASE_ID||LA348_0==RULE_LOWERCASE_DASHID||LA348_0==RULE_UPPERCASE_PATH||LA348_0==39||(LA348_0>=138 && LA348_0<=139)||(LA348_0>=147 && LA348_0<=148)||(LA348_0>=150 && LA348_0<=155)||(LA348_0>=157 && LA348_0<=168)) ) {
            	        alt348=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 348, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt348) {
            	        case 1 :
            	            // InternalKim.g:17006:10: ( (lv_defaultLiteral_22_0= ruleLiteral ) )
            	            {
            	            // InternalKim.g:17006:10: ( (lv_defaultLiteral_22_0= ruleLiteral ) )
            	            // InternalKim.g:17007:11: (lv_defaultLiteral_22_0= ruleLiteral )
            	            {
            	            // InternalKim.g:17007:11: (lv_defaultLiteral_22_0= ruleLiteral )
            	            // InternalKim.g:17008:12: lv_defaultLiteral_22_0= ruleLiteral
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDefaultLiteralLiteralParserRuleCall_3_5_2_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_110);
            	            lv_defaultLiteral_22_0=ruleLiteral();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultLiteral",
            	              													lv_defaultLiteral_22_0,
            	              													"org.integratedmodelling.kim.Kim.Literal");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17026:10: ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) )
            	            {
            	            // InternalKim.g:17026:10: ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:17027:11: (lv_defaultConcept_23_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:17027:11: (lv_defaultConcept_23_0= ruleConceptDeclaration )
            	            // InternalKim.g:17028:12: lv_defaultConcept_23_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDefaultConceptConceptDeclarationParserRuleCall_3_5_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_110);
            	            lv_defaultConcept_23_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"defaultConcept",
            	              													lv_defaultConcept_23_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:17046:9: (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
            	    int alt350=2;
            	    int LA350_0 = input.LA(1);

            	    if ( (LA350_0==122) ) {
            	        alt350=1;
            	    }
            	    switch (alt350) {
            	        case 1 :
            	            // InternalKim.g:17047:10: otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )*
            	            {
            	            otherlv_24=(Token)match(input,122,FOLLOW_111); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_24, grammarAccess.getDependencyObservableSemanticsAccess().getWhenKeyword_3_5_3_0());
            	              									
            	            }
            	            // InternalKim.g:17051:10: ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) )
            	            // InternalKim.g:17052:11: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
            	            {
            	            // InternalKim.g:17052:11: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
            	            // InternalKim.g:17053:12: lv_causes_25_0= ruleRESOLUTION_EXCEPTION
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_5_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_112);
            	            lv_causes_25_0=ruleRESOLUTION_EXCEPTION();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												add(
            	              													current,
            	              													"causes",
            	              													lv_causes_25_0,
            	              													"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:17070:10: (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )*
            	            loop349:
            	            do {
            	                int alt349=2;
            	                int LA349_0 = input.LA(1);

            	                if ( (LA349_0==28) ) {
            	                    int LA349_1 = input.LA(2);

            	                    if ( ((LA349_1>=219 && LA349_1<=221)) ) {
            	                        alt349=1;
            	                    }


            	                }


            	                switch (alt349) {
            	            	case 1 :
            	            	    // InternalKim.g:17071:11: otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) )
            	            	    {
            	            	    otherlv_26=(Token)match(input,28,FOLLOW_111); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_26, grammarAccess.getDependencyObservableSemanticsAccess().getCommaKeyword_3_5_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:17075:11: ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) )
            	            	    // InternalKim.g:17076:12: (lv_causes_27_0= ruleRESOLUTION_EXCEPTION )
            	            	    {
            	            	    // InternalKim.g:17076:12: (lv_causes_27_0= ruleRESOLUTION_EXCEPTION )
            	            	    // InternalKim.g:17077:13: lv_causes_27_0= ruleRESOLUTION_EXCEPTION
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_5_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_112);
            	            	    lv_causes_27_0=ruleRESOLUTION_EXCEPTION();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getDependencyObservableSemanticsRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"causes",
            	            	      														lv_causes_27_0,
            	            	      														"org.integratedmodelling.kim.Kim.RESOLUTION_EXCEPTION");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop349;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:17102:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:17102:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
            	    // InternalKim.g:17103:5: {...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:17103:126: ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
            	    // InternalKim.g:17104:6: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:17107:9: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:17107:10: {...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17107:19: (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
            	    // InternalKim.g:17107:20: otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
            	    {
            	    otherlv_28=(Token)match(input,123,FOLLOW_52); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_28, grammarAccess.getDependencyObservableSemanticsAccess().getNamedKeyword_3_6_0());
            	      								
            	    }
            	    // InternalKim.g:17111:9: ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
            	    // InternalKim.g:17112:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:17112:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
            	    // InternalKim.g:17113:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
            	    {
            	    // InternalKim.g:17113:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
            	    int alt351=2;
            	    int LA351_0 = input.LA(1);

            	    if ( (LA351_0==RULE_LOWERCASE_ID) ) {
            	        alt351=1;
            	    }
            	    else if ( (LA351_0==RULE_STRING) ) {
            	        alt351=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 351, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt351) {
            	        case 1 :
            	            // InternalKim.g:17114:12: lv_name_29_1= RULE_LOWERCASE_ID
            	            {
            	            lv_name_29_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_29_1, grammarAccess.getDependencyObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_6_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_29_1,
            	              													"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17129:12: lv_name_29_2= RULE_STRING
            	            {
            	            lv_name_29_2=(Token)match(input,RULE_STRING,FOLLOW_107); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_name_29_2, grammarAccess.getDependencyObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_3_6_1_0_1());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getDependencyObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"name",
            	              													lv_name_29_2,
            	              													"org.eclipse.xtext.common.Terminals.STRING");
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop352;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleDependencyObservableSemantics"


    // $ANTLR start "entryRuleAlternativeDependencyObservableSemantics"
    // InternalKim.g:17166:1: entryRuleAlternativeDependencyObservableSemantics returns [EObject current=null] : iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF ;
    public final EObject entryRuleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAlternativeDependencyObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:17170:2: (iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF )
            // InternalKim.g:17171:2: iv_ruleAlternativeDependencyObservableSemantics= ruleAlternativeDependencyObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAlternativeDependencyObservableSemantics=ruleAlternativeDependencyObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAlternativeDependencyObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleAlternativeDependencyObservableSemantics"


    // $ANTLR start "ruleAlternativeDependencyObservableSemantics"
    // InternalKim.g:17180:1: ruleAlternativeDependencyObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) ;
    public final EObject ruleAlternativeDependencyObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token otherlv_11=null;
        Token otherlv_14=null;
        Token otherlv_18=null;
        Token lv_condition_19_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;

        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;

        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;

        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:17189:2: ( ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? ) )
            // InternalKim.g:17190:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            {
            // InternalKim.g:17190:2: ( ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )? )
            // InternalKim.g:17191:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) ) (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            {
            // InternalKim.g:17191:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?
            int alt353=2;
            alt353 = dfa353.predict(input);
            switch (alt353) {
                case 1 :
                    // InternalKim.g:17192:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:17192:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
                    // InternalKim.g:17193:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    {
                    // InternalKim.g:17193:5: (lv_value_0_0= ruleLiteralValueWithConcept )
                    // InternalKim.g:17194:6: lv_value_0_0= ruleLiteralValueWithConcept
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_11);
                    lv_value_0_0=ruleLiteralValueWithConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.LiteralValueWithConcept");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,26,FOLLOW_106); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:17216:3: ( (lv_generic_2_0= 'any' ) )?
            int alt354=2;
            int LA354_0 = input.LA(1);

            if ( (LA354_0==117) ) {
                alt354=1;
            }
            switch (alt354) {
                case 1 :
                    // InternalKim.g:17217:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:17217:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:17218:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,117,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", lv_generic_2_0 != null, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17230:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:17231:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:17231:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:17232:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_195);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:17249:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) ) )
            // InternalKim.g:17250:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            {
            // InternalKim.g:17250:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* ) )
            // InternalKim.g:17251:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:17254:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )* )
            // InternalKim.g:17255:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            {
            // InternalKim.g:17255:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*
            loop358:
            do {
                int alt358=5;
                alt358 = dfa358.predict(input);
                switch (alt358) {
            	case 1 :
            	    // InternalKim.g:17256:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:17256:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:17257:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:17257:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:17258:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:17261:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:17261:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17261:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
            	    // InternalKim.g:17261:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    {
            	    otherlv_5=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingKeyword_3_0_0());
            	      								
            	    }
            	    otherlv_6=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_6, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_0_1());
            	      								
            	    }
            	    // InternalKim.g:17269:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
            	    // InternalKim.g:17270:10: (lv_accordingTo_7_0= rulePropertyId )
            	    {
            	    // InternalKim.g:17270:10: (lv_accordingTo_7_0= rulePropertyId )
            	    // InternalKim.g:17271:11: lv_accordingTo_7_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_195);
            	    lv_accordingTo_7_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_7_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:17294:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:17294:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:17295:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:17295:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:17296:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:17299:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:17299:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17299:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
            	    int alt356=2;
            	    int LA356_0 = input.LA(1);

            	    if ( (LA356_0==53) ) {
            	        alt356=1;
            	    }
            	    else if ( (LA356_0==118) ) {
            	        alt356=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 356, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt356) {
            	        case 1 :
            	            // InternalKim.g:17299:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:17299:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:17300:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            {
            	            otherlv_8=(Token)match(input,53,FOLLOW_196); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_8, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getInKeyword_3_1_0_0());
            	              									
            	            }
            	            // InternalKim.g:17304:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
            	            int alt355=2;
            	            int LA355_0 = input.LA(1);

            	            if ( (LA355_0==EOF||LA355_0==RULE_LOWERCASE_ID||(LA355_0>=RULE_CAMELCASE_ID && LA355_0<=RULE_INT)||LA355_0==RULE_BACKCASE_ID||LA355_0==28||LA355_0==36||(LA355_0>=39 && LA355_0<=40)||LA355_0==44||LA355_0==47||LA355_0==49||LA355_0==53||LA355_0==60||(LA355_0>=81 && LA355_0<=93)||LA355_0==112||LA355_0==118||(LA355_0>=125 && LA355_0<=128)||(LA355_0>=255 && LA355_0<=256)||LA355_0==263) ) {
            	                alt355=1;
            	            }
            	            else if ( (LA355_0==RULE_UPPERCASE_ID) ) {
            	                int LA355_2 = input.LA(2);

            	                if ( (LA355_2==254) ) {
            	                    alt355=2;
            	                }
            	                else if ( (LA355_2==EOF||LA355_2==RULE_INT||LA355_2==28||LA355_2==36||LA355_2==40||LA355_2==44||LA355_2==47||LA355_2==49||LA355_2==53||LA355_2==60||(LA355_2>=81 && LA355_2<=93)||LA355_2==112||LA355_2==118||(LA355_2>=125 && LA355_2<=128)||(LA355_2>=255 && LA355_2<=256)||LA355_2==263) ) {
            	                    alt355=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 355, 2, input);

            	                    throw nvae;
            	                }
            	            }
            	            else {
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 355, 0, input);

            	                throw nvae;
            	            }
            	            switch (alt355) {
            	                case 1 :
            	                    // InternalKim.g:17305:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:17305:11: ( (lv_unit_9_0= ruleUnit ) )
            	                    // InternalKim.g:17306:12: (lv_unit_9_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:17306:12: (lv_unit_9_0= ruleUnit )
            	                    // InternalKim.g:17307:13: lv_unit_9_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_195);
            	                    lv_unit_9_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_9_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:17325:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:17325:11: ( (lv_currency_10_0= ruleCurrency ) )
            	                    // InternalKim.g:17326:12: (lv_currency_10_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:17326:12: (lv_currency_10_0= ruleCurrency )
            	                    // InternalKim.g:17327:13: lv_currency_10_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_195);
            	                    lv_currency_10_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_10_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:17347:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:17347:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
            	            // InternalKim.g:17348:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
            	            {
            	            otherlv_11=(Token)match(input,118,FOLLOW_197); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_11, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getPerKeyword_3_1_1_0());
            	              									
            	            }
            	            // InternalKim.g:17352:10: ( (lv_unit_12_0= ruleUnit ) )
            	            // InternalKim.g:17353:11: (lv_unit_12_0= ruleUnit )
            	            {
            	            // InternalKim.g:17353:11: (lv_unit_12_0= ruleUnit )
            	            // InternalKim.g:17354:12: lv_unit_12_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_195);
            	            lv_unit_12_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_12_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:17378:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:17378:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:17379:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:17379:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:17380:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:17383:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
            	    // InternalKim.g:17383:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17383:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
            	    // InternalKim.g:17383:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:17383:20: ( (lv_from_13_0= ruleNumber ) )
            	    // InternalKim.g:17384:10: (lv_from_13_0= ruleNumber )
            	    {
            	    // InternalKim.g:17384:10: (lv_from_13_0= ruleNumber )
            	    // InternalKim.g:17385:11: lv_from_13_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_25);
            	    lv_from_13_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_13_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_14=(Token)match(input,37,FOLLOW_44); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToKeyword_3_2_1());
            	      								
            	    }
            	    // InternalKim.g:17406:9: ( (lv_to_15_0= ruleNumber ) )
            	    // InternalKim.g:17407:10: (lv_to_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:17407:10: (lv_to_15_0= ruleNumber )
            	    // InternalKim.g:17408:11: lv_to_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_195);
            	    lv_to_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:17431:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    {
            	    // InternalKim.g:17431:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
            	    // InternalKim.g:17432:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:17432:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
            	    // InternalKim.g:17433:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:17436:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
            	    // InternalKim.g:17436:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleAlternativeDependencyObservableSemantics", "true");
            	    }
            	    // InternalKim.g:17436:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
            	    // InternalKim.g:17436:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    {
            	    // InternalKim.g:17436:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
            	    // InternalKim.g:17437:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    {
            	    // InternalKim.g:17437:10: (lv_valueOperators_16_0= ruleValueOperator )
            	    // InternalKim.g:17438:11: lv_valueOperators_16_0= ruleValueOperator
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_195);
            	    lv_valueOperators_16_0=ruleValueOperator();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	      											}
            	      											add(
            	      												current,
            	      												"valueOperators",
            	      												lv_valueOperators_16_0,
            	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:17455:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
            	    loop357:
            	    do {
            	        int alt357=2;
            	        alt357 = dfa357.predict(input);
            	        switch (alt357) {
            	    	case 1 :
            	    	    // InternalKim.g:17456:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    {
            	    	    // InternalKim.g:17456:10: (lv_valueOperators_17_0= ruleValueOperator )
            	    	    // InternalKim.g:17457:11: lv_valueOperators_17_0= ruleValueOperator
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
            	    	      										
            	    	    }
            	    	    pushFollow(FOLLOW_195);
            	    	    lv_valueOperators_17_0=ruleValueOperator();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											if (current==null) {
            	    	      												current = createModelElementForParent(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
            	    	      											}
            	    	      											add(
            	    	      												current,
            	    	      												"valueOperators",
            	    	      												lv_valueOperators_17_0,
            	    	      												"org.integratedmodelling.kim.Kim.ValueOperator");
            	    	      											afterParserOrEnumRuleCall();
            	    	      										
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop357;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop358;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3());

            }

            // InternalKim.g:17487:3: (otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) ) )?
            int alt359=2;
            int LA359_0 = input.LA(1);

            if ( (LA359_0==49) ) {
                alt359=1;
            }
            switch (alt359) {
                case 1 :
                    // InternalKim.g:17488:4: otherlv_18= 'if' ( (lv_condition_19_0= RULE_EXPR ) )
                    {
                    otherlv_18=(Token)match(input,49,FOLLOW_198); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getIfKeyword_4_0());
                      			
                    }
                    // InternalKim.g:17492:4: ( (lv_condition_19_0= RULE_EXPR ) )
                    // InternalKim.g:17493:5: (lv_condition_19_0= RULE_EXPR )
                    {
                    // InternalKim.g:17493:5: (lv_condition_19_0= RULE_EXPR )
                    // InternalKim.g:17494:6: lv_condition_19_0= RULE_EXPR
                    {
                    lv_condition_19_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_condition_19_0, grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getConditionEXPRTerminalRuleCall_4_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getAlternativeDependencyObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"condition",
                      							lv_condition_19_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleAlternativeDependencyObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:17518:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:17518:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:17519:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:17525:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        Token lv_name_2_3=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17531:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) ) )
            // InternalKim.g:17532:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            {
            // InternalKim.g:17532:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) ) )
            // InternalKim.g:17533:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            {
            // InternalKim.g:17533:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:17534:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:17534:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:17535:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_199);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,123,FOLLOW_200); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:17556:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) ) )
            // InternalKim.g:17557:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            {
            // InternalKim.g:17557:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING ) )
            // InternalKim.g:17558:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            {
            // InternalKim.g:17558:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID | lv_name_2_3= RULE_STRING )
            int alt360=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt360=1;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt360=2;
                }
                break;
            case RULE_STRING:
                {
                alt360=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 360, 0, input);

                throw nvae;
            }

            switch (alt360) {
                case 1 :
                    // InternalKim.g:17559:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:17574:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:17589:6: lv_name_2_3= RULE_STRING
                    {
                    lv_name_2_3=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_3, grammarAccess.getNamedObservableSemanticsAccess().getNameSTRINGTerminalRuleCall_2_0_2());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_3,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:17610:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:17610:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:17611:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:17617:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:17623:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:17624:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:17624:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt361=6;
            switch ( input.LA(1) ) {
            case 81:
                {
                alt361=1;
                }
                break;
            case 84:
                {
                alt361=2;
                }
                break;
            case 47:
                {
                alt361=3;
                }
                break;
            case 89:
                {
                alt361=4;
                }
                break;
            case 83:
                {
                alt361=5;
                }
                break;
            case 82:
                {
                alt361=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 361, 0, input);

                throw nvae;
            }

            switch (alt361) {
                case 1 :
                    // InternalKim.g:17625:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:17625:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:17626:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:17626:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:17627:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", lv_gt_0_0 != null, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17640:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:17640:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:17641:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:17641:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:17642:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,84,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", lv_lt_1_0 != null, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:17655:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:17655:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:17656:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:17656:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:17657:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", lv_eq_2_0 != null, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:17670:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:17670:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:17671:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:17671:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:17672:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,89,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", lv_ne_3_0 != null, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:17685:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:17685:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:17686:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:17686:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:17687:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,83,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", lv_le_4_0 != null, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:17700:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:17700:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:17701:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:17701:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:17702:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", lv_ge_5_0 != null, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:17718:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:17718:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:17719:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:17725:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token lv_id_0_3=null;
        Token lv_id_0_4=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_unit_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17731:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) ) )
            // InternalKim.g:17732:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            {
            // InternalKim.g:17732:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) ) | (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' ) )
            int alt363=2;
            int LA363_0 = input.LA(1);

            if ( ((LA363_0>=RULE_LOWERCASE_ID && LA363_0<=RULE_UPPERCASE_ID)||LA363_0==RULE_CAMELCASE_ID||LA363_0==RULE_BACKCASE_ID) ) {
                alt363=1;
            }
            else if ( (LA363_0==39) ) {
                alt363=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 363, 0, input);

                throw nvae;
            }
            switch (alt363) {
                case 1 :
                    // InternalKim.g:17733:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    {
                    // InternalKim.g:17733:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) ) )
                    // InternalKim.g:17734:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    {
                    // InternalKim.g:17734:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID ) )
                    // InternalKim.g:17735:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    {
                    // InternalKim.g:17735:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID | lv_id_0_3= RULE_UPPERCASE_ID | lv_id_0_4= RULE_BACKCASE_ID )
                    int alt362=4;
                    switch ( input.LA(1) ) {
                    case RULE_CAMELCASE_ID:
                        {
                        alt362=1;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                        {
                        alt362=2;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt362=3;
                        }
                        break;
                    case RULE_BACKCASE_ID:
                        {
                        alt362=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 362, 0, input);

                        throw nvae;
                    }

                    switch (alt362) {
                        case 1 :
                            // InternalKim.g:17736:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:17751:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:17766:6: lv_id_0_3= RULE_UPPERCASE_ID
                            {
                            lv_id_0_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_3, grammarAccess.getUnitElementAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:17781:6: lv_id_0_4= RULE_BACKCASE_ID
                            {
                            lv_id_0_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_4, grammarAccess.getUnitElementAccess().getIdBACKCASE_IDTerminalRuleCall_0_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_4,
                              							"org.integratedmodelling.kim.Kim.BACKCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:17799:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    {
                    // InternalKim.g:17799:3: (otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')' )
                    // InternalKim.g:17800:4: otherlv_1= '(' ( (lv_unit_2_0= ruleUnit ) ) otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,39,FOLLOW_201); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:17804:4: ( (lv_unit_2_0= ruleUnit ) )
                    // InternalKim.g:17805:5: (lv_unit_2_0= ruleUnit )
                    {
                    // InternalKim.g:17805:5: (lv_unit_2_0= ruleUnit )
                    // InternalKim.g:17806:6: lv_unit_2_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_36);
                    lv_unit_2_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_2_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:17832:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:17832:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:17833:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:17839:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17845:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:17846:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:17846:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:17847:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:17847:3: ()
            // InternalKim.g:17848:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:17857:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt364=2;
            alt364 = dfa364.predict(input);
            switch (alt364) {
                case 1 :
                    // InternalKim.g:17858:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:17858:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:17859:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_202);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:17876:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop365:
            do {
                int alt365=2;
                int LA365_0 = input.LA(1);

                if ( (LA365_0==44) ) {
                    int LA365_2 = input.LA(2);

                    if ( ((LA365_2>=RULE_LOWERCASE_ID && LA365_2<=RULE_UPPERCASE_ID)||LA365_2==RULE_CAMELCASE_ID||LA365_2==RULE_BACKCASE_ID||LA365_2==39) ) {
                        alt365=1;
                    }


                }
                else if ( (LA365_0==112||LA365_0==263) ) {
                    alt365=1;
                }


                switch (alt365) {
            	case 1 :
            	    // InternalKim.g:17877:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17877:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:17878:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:17884:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:17885:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:17885:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:17886:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_203);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:17904:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:17905:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17905:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:17906:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_202);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop365;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:17928:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:17928:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:17929:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:17935:1: ruleCurrency returns [EObject current=null] : ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token otherlv_3=null;
        EObject lv_units_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:17941:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:17942:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:17942:2: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )* )
            // InternalKim.g:17943:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:17943:3: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:17944:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:17944:4: (lv_id_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:17945:5: lv_id_0_0= RULE_UPPERCASE_ID
            {
            lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_204); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getCurrencyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"id",
              						lv_id_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            // InternalKim.g:17961:3: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
            // InternalKim.g:17962:4: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
            {
            otherlv_1=(Token)match(input,254,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_1_0());
              			
            }
            // InternalKim.g:17966:4: ( (lv_year_2_0= RULE_INT ) )
            // InternalKim.g:17967:5: (lv_year_2_0= RULE_INT )
            {
            // InternalKim.g:17967:5: (lv_year_2_0= RULE_INT )
            // InternalKim.g:17968:6: lv_year_2_0= RULE_INT
            {
            lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_205); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getCurrencyRule());
              						}
              						setWithLastConsumed(
              							current,
              							"year",
              							lv_year_2_0,
              							"org.eclipse.xtext.common.Terminals.INT");
              					
            }

            }


            }


            }

            // InternalKim.g:17985:3: ( ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) ) )*
            loop366:
            do {
                int alt366=2;
                int LA366_0 = input.LA(1);

                if ( (LA366_0==112) ) {
                    alt366=1;
                }


                switch (alt366) {
            	case 1 :
            	    // InternalKim.g:17986:4: ( ( '/' )=>otherlv_3= '/' ) ( (lv_units_4_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:17986:4: ( ( '/' )=>otherlv_3= '/' )
            	    // InternalKim.g:17987:5: ( '/' )=>otherlv_3= '/'
            	    {
            	    otherlv_3=(Token)match(input,112,FOLLOW_203); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_3, grammarAccess.getCurrencyAccess().getSolidusKeyword_2_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:17993:4: ( (lv_units_4_0= ruleUnitElement ) )
            	    // InternalKim.g:17994:5: (lv_units_4_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:17994:5: (lv_units_4_0= ruleUnitElement )
            	    // InternalKim.g:17995:6: lv_units_4_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getCurrencyAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_205);
            	    lv_units_4_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getCurrencyRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_4_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop366;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:18017:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:18017:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:18018:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:18024:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_long_3_0=null;
        Token lv_decimal_4_0=null;
        Token lv_decimalPart_5_0=null;
        Token lv_exponential_6_1=null;
        Token lv_exponential_6_2=null;
        Token otherlv_7=null;
        Token lv_expNegative_8_0=null;
        Token lv_exp_9_0=null;


        	enterRule();

        try {
            // InternalKim.g:18030:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:18031:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:18031:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )? )
            // InternalKim.g:18032:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )? ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:18032:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt367=3;
            int LA367_0 = input.LA(1);

            if ( (LA367_0==255) ) {
                alt367=1;
            }
            else if ( (LA367_0==256) ) {
                alt367=2;
            }
            switch (alt367) {
                case 1 :
                    // InternalKim.g:18033:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,255,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18038:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:18038:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:18039:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:18039:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:18040:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,256,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", lv_negative_1_0 != null, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:18053:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:18054:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:18058:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:18059:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_206); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:18075:3: ( ( ( 'l' ) )=> (lv_long_3_0= 'l' ) )?
            int alt368=2;
            int LA368_0 = input.LA(1);

            if ( (LA368_0==257) && (synpred694_InternalKim())) {
                alt368=1;
            }
            switch (alt368) {
                case 1 :
                    // InternalKim.g:18076:4: ( ( 'l' ) )=> (lv_long_3_0= 'l' )
                    {
                    // InternalKim.g:18080:4: (lv_long_3_0= 'l' )
                    // InternalKim.g:18081:5: lv_long_3_0= 'l'
                    {
                    lv_long_3_0=(Token)match(input,257,FOLLOW_207); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_long_3_0, grammarAccess.getNumberAccess().getLongLKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNumberRule());
                      					}
                      					setWithLastConsumed(current, "long", lv_long_3_0 != null, "l");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:18093:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) ) )?
            int alt369=2;
            int LA369_0 = input.LA(1);

            if ( (LA369_0==113) ) {
                int LA369_1 = input.LA(2);

                if ( (LA369_1==RULE_INT) ) {
                    int LA369_3 = input.LA(3);

                    if ( (synpred695_InternalKim()) ) {
                        alt369=1;
                    }
                }
            }
            switch (alt369) {
                case 1 :
                    // InternalKim.g:18094:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:18107:4: ( ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) ) )
                    // InternalKim.g:18108:5: ( (lv_decimal_4_0= '.' ) ) ( (lv_decimalPart_5_0= RULE_INT ) )
                    {
                    // InternalKim.g:18108:5: ( (lv_decimal_4_0= '.' ) )
                    // InternalKim.g:18109:6: (lv_decimal_4_0= '.' )
                    {
                    // InternalKim.g:18109:6: (lv_decimal_4_0= '.' )
                    // InternalKim.g:18110:7: lv_decimal_4_0= '.'
                    {
                    lv_decimal_4_0=(Token)match(input,113,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_4_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_3_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", lv_decimal_4_0 != null, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:18122:5: ( (lv_decimalPart_5_0= RULE_INT ) )
                    // InternalKim.g:18123:6: (lv_decimalPart_5_0= RULE_INT )
                    {
                    // InternalKim.g:18123:6: (lv_decimalPart_5_0= RULE_INT )
                    // InternalKim.g:18124:7: lv_decimalPart_5_0= RULE_INT
                    {
                    lv_decimalPart_5_0=(Token)match(input,RULE_INT,FOLLOW_208); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_5_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_3_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_5_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:18142:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) ) )?
            int alt372=2;
            int LA372_0 = input.LA(1);

            if ( (LA372_0==258) && (synpred699_InternalKim())) {
                alt372=1;
            }
            else if ( (LA372_0==259) && (synpred699_InternalKim())) {
                alt372=1;
            }
            switch (alt372) {
                case 1 :
                    // InternalKim.g:18143:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:18169:4: ( ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) ) )
                    // InternalKim.g:18170:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) ) (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )? ( (lv_exp_9_0= RULE_INT ) )
                    {
                    // InternalKim.g:18170:5: ( ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) ) )
                    // InternalKim.g:18171:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    {
                    // InternalKim.g:18171:6: ( (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' ) )
                    // InternalKim.g:18172:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    {
                    // InternalKim.g:18172:7: (lv_exponential_6_1= 'e' | lv_exponential_6_2= 'E' )
                    int alt370=2;
                    int LA370_0 = input.LA(1);

                    if ( (LA370_0==258) ) {
                        alt370=1;
                    }
                    else if ( (LA370_0==259) ) {
                        alt370=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 370, 0, input);

                        throw nvae;
                    }
                    switch (alt370) {
                        case 1 :
                            // InternalKim.g:18173:8: lv_exponential_6_1= 'e'
                            {
                            lv_exponential_6_1=(Token)match(input,258,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_1, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", lv_exponential_6_1 != null, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:18184:8: lv_exponential_6_2= 'E'
                            {
                            lv_exponential_6_2=(Token)match(input,259,FOLLOW_44); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_6_2, grammarAccess.getNumberAccess().getExponentialEKeyword_4_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", lv_exponential_6_2 != null, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:18197:5: (otherlv_7= '+' | ( (lv_expNegative_8_0= '-' ) ) )?
                    int alt371=3;
                    int LA371_0 = input.LA(1);

                    if ( (LA371_0==255) ) {
                        alt371=1;
                    }
                    else if ( (LA371_0==256) ) {
                        alt371=2;
                    }
                    switch (alt371) {
                        case 1 :
                            // InternalKim.g:18198:6: otherlv_7= '+'
                            {
                            otherlv_7=(Token)match(input,255,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_7, grammarAccess.getNumberAccess().getPlusSignKeyword_4_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:18203:6: ( (lv_expNegative_8_0= '-' ) )
                            {
                            // InternalKim.g:18203:6: ( (lv_expNegative_8_0= '-' ) )
                            // InternalKim.g:18204:7: (lv_expNegative_8_0= '-' )
                            {
                            // InternalKim.g:18204:7: (lv_expNegative_8_0= '-' )
                            // InternalKim.g:18205:8: lv_expNegative_8_0= '-'
                            {
                            lv_expNegative_8_0=(Token)match(input,256,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_8_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_4_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", lv_expNegative_8_0 != null, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:18218:5: ( (lv_exp_9_0= RULE_INT ) )
                    // InternalKim.g:18219:6: (lv_exp_9_0= RULE_INT )
                    {
                    // InternalKim.g:18219:6: (lv_exp_9_0= RULE_INT )
                    // InternalKim.g:18220:7: lv_exp_9_0= RULE_INT
                    {
                    lv_exp_9_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_9_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_4_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_9_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleQuantity"
    // InternalKim.g:18242:1: entryRuleQuantity returns [EObject current=null] : iv_ruleQuantity= ruleQuantity EOF ;
    public final EObject entryRuleQuantity() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleQuantity = null;


        try {
            // InternalKim.g:18242:49: (iv_ruleQuantity= ruleQuantity EOF )
            // InternalKim.g:18243:2: iv_ruleQuantity= ruleQuantity EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getQuantityRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleQuantity=ruleQuantity();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleQuantity; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleQuantity"


    // $ANTLR start "ruleQuantity"
    // InternalKim.g:18249:1: ruleQuantity returns [EObject current=null] : ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) ;
    public final EObject ruleQuantity() throws RecognitionException {
        EObject current = null;

        Token lv_over_1_0=null;
        Token otherlv_2=null;
        EObject lv_value_0_0 = null;

        EObject lv_unit_3_0 = null;

        EObject lv_currency_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:18255:2: ( ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) ) )
            // InternalKim.g:18256:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            {
            // InternalKim.g:18256:2: ( ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) ) )
            // InternalKim.g:18257:3: ( (lv_value_0_0= ruleNumber ) ) ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' ) ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            {
            // InternalKim.g:18257:3: ( (lv_value_0_0= ruleNumber ) )
            // InternalKim.g:18258:4: (lv_value_0_0= ruleNumber )
            {
            // InternalKim.g:18258:4: (lv_value_0_0= ruleNumber )
            // InternalKim.g:18259:5: lv_value_0_0= ruleNumber
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getQuantityAccess().getValueNumberParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_209);
            lv_value_0_0=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getQuantityRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_0_0,
              						"org.integratedmodelling.kim.Kim.Number");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:18276:3: ( ( (lv_over_1_0= '/' ) ) | otherlv_2= '.' )
            int alt373=2;
            int LA373_0 = input.LA(1);

            if ( (LA373_0==112) ) {
                alt373=1;
            }
            else if ( (LA373_0==113) ) {
                alt373=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 373, 0, input);

                throw nvae;
            }
            switch (alt373) {
                case 1 :
                    // InternalKim.g:18277:4: ( (lv_over_1_0= '/' ) )
                    {
                    // InternalKim.g:18277:4: ( (lv_over_1_0= '/' ) )
                    // InternalKim.g:18278:5: (lv_over_1_0= '/' )
                    {
                    // InternalKim.g:18278:5: (lv_over_1_0= '/' )
                    // InternalKim.g:18279:6: lv_over_1_0= '/'
                    {
                    lv_over_1_0=(Token)match(input,112,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_over_1_0, grammarAccess.getQuantityAccess().getOverSolidusKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getQuantityRule());
                      						}
                      						setWithLastConsumed(current, "over", lv_over_1_0 != null, "/");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:18292:4: otherlv_2= '.'
                    {
                    otherlv_2=(Token)match(input,113,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getQuantityAccess().getFullStopKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18297:3: ( ( (lv_unit_3_0= ruleUnit ) ) | ( (lv_currency_4_0= ruleCurrency ) ) )
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==EOF||LA374_0==RULE_LOWERCASE_ID||(LA374_0>=RULE_STRING && LA374_0<=RULE_BACKCASE_ID)||LA374_0==RULE_TEMPLATE_VAR||LA374_0==21||LA374_0==26||(LA374_0>=28 && LA374_0<=34)||LA374_0==36||(LA374_0>=38 && LA374_0<=42)||LA374_0==44||LA374_0==47||(LA374_0>=49 && LA374_0<=50)||(LA374_0>=53 && LA374_0<=57)||(LA374_0>=59 && LA374_0<=61)||(LA374_0>=67 && LA374_0<=72)||LA374_0==74||(LA374_0>=81 && LA374_0<=93)||LA374_0==109||LA374_0==112||(LA374_0>=116 && LA374_0<=121)||(LA374_0>=123 && LA374_0<=128)||(LA374_0>=138 && LA374_0<=139)||(LA374_0>=146 && LA374_0<=148)||(LA374_0>=150 && LA374_0<=155)||(LA374_0>=157 && LA374_0<=168)||LA374_0==217||(LA374_0>=255 && LA374_0<=256)||LA374_0==263) ) {
                alt374=1;
            }
            else if ( (LA374_0==RULE_UPPERCASE_ID) ) {
                int LA374_2 = input.LA(2);

                if ( (LA374_2==EOF||(LA374_2>=RULE_LOWERCASE_ID && LA374_2<=RULE_UPPERCASE_PATH)||LA374_2==RULE_TEMPLATE_VAR||LA374_2==21||LA374_2==26||(LA374_2>=28 && LA374_2<=34)||LA374_2==36||(LA374_2>=38 && LA374_2<=42)||LA374_2==44||LA374_2==47||(LA374_2>=49 && LA374_2<=50)||(LA374_2>=53 && LA374_2<=57)||(LA374_2>=59 && LA374_2<=61)||(LA374_2>=67 && LA374_2<=72)||LA374_2==74||(LA374_2>=81 && LA374_2<=93)||(LA374_2>=109 && LA374_2<=110)||(LA374_2>=112 && LA374_2<=113)||(LA374_2>=116 && LA374_2<=121)||(LA374_2>=123 && LA374_2<=128)||(LA374_2>=138 && LA374_2<=139)||(LA374_2>=146 && LA374_2<=148)||(LA374_2>=150 && LA374_2<=155)||(LA374_2>=157 && LA374_2<=168)||LA374_2==217||(LA374_2>=255 && LA374_2<=256)||LA374_2==263) ) {
                    alt374=1;
                }
                else if ( (LA374_2==254) ) {
                    alt374=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 374, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 374, 0, input);

                throw nvae;
            }
            switch (alt374) {
                case 1 :
                    // InternalKim.g:18298:4: ( (lv_unit_3_0= ruleUnit ) )
                    {
                    // InternalKim.g:18298:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:18299:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:18299:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:18300:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getUnitUnitParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:18318:4: ( (lv_currency_4_0= ruleCurrency ) )
                    {
                    // InternalKim.g:18318:4: ( (lv_currency_4_0= ruleCurrency ) )
                    // InternalKim.g:18319:5: (lv_currency_4_0= ruleCurrency )
                    {
                    // InternalKim.g:18319:5: (lv_currency_4_0= ruleCurrency )
                    // InternalKim.g:18320:6: lv_currency_4_0= ruleCurrency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getQuantityAccess().getCurrencyCurrencyParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_currency_4_0=ruleCurrency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getQuantityRule());
                      						}
                      						set(
                      							current,
                      							"currency",
                      							lv_currency_4_0,
                      							"org.integratedmodelling.kim.Kim.Currency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleQuantity"


    // $ANTLR start "entryRuleDate"
    // InternalKim.g:18342:1: entryRuleDate returns [EObject current=null] : iv_ruleDate= ruleDate EOF ;
    public final EObject entryRuleDate() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDate = null;


        try {
            // InternalKim.g:18342:45: (iv_ruleDate= ruleDate EOF )
            // InternalKim.g:18343:2: iv_ruleDate= ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDate=ruleDate();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDate; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalKim.g:18349:1: ruleDate returns [EObject current=null] : ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) ;
    public final EObject ruleDate() throws RecognitionException {
        EObject current = null;

        Token lv_year_0_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token lv_bc_3_0=null;
        Token otherlv_4=null;
        Token lv_month_5_0=null;
        Token otherlv_6=null;
        Token lv_day_7_0=null;
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;


        	enterRule();

        try {
            // InternalKim.g:18355:2: ( ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? ) )
            // InternalKim.g:18356:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            {
            // InternalKim.g:18356:2: ( ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )? )
            // InternalKim.g:18357:3: ( (lv_year_0_0= RULE_INT ) ) (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )? otherlv_4= '-' ( (lv_month_5_0= RULE_INT ) ) otherlv_6= '-' ( (lv_day_7_0= RULE_INT ) ) ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            {
            // InternalKim.g:18357:3: ( (lv_year_0_0= RULE_INT ) )
            // InternalKim.g:18358:4: (lv_year_0_0= RULE_INT )
            {
            // InternalKim.g:18358:4: (lv_year_0_0= RULE_INT )
            // InternalKim.g:18359:5: lv_year_0_0= RULE_INT
            {
            lv_year_0_0=(Token)match(input,RULE_INT,FOLLOW_210); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_year_0_0, grammarAccess.getDateAccess().getYearINTTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"year",
              						lv_year_0_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:18375:3: (otherlv_1= 'AD' | otherlv_2= 'CE' | ( (lv_bc_3_0= 'BC' ) ) )?
            int alt375=4;
            switch ( input.LA(1) ) {
                case 260:
                    {
                    alt375=1;
                    }
                    break;
                case 261:
                    {
                    alt375=2;
                    }
                    break;
                case 262:
                    {
                    alt375=3;
                    }
                    break;
            }

            switch (alt375) {
                case 1 :
                    // InternalKim.g:18376:4: otherlv_1= 'AD'
                    {
                    otherlv_1=(Token)match(input,260,FOLLOW_211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDateAccess().getADKeyword_1_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18381:4: otherlv_2= 'CE'
                    {
                    otherlv_2=(Token)match(input,261,FOLLOW_211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getDateAccess().getCEKeyword_1_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18386:4: ( (lv_bc_3_0= 'BC' ) )
                    {
                    // InternalKim.g:18386:4: ( (lv_bc_3_0= 'BC' ) )
                    // InternalKim.g:18387:5: (lv_bc_3_0= 'BC' )
                    {
                    // InternalKim.g:18387:5: (lv_bc_3_0= 'BC' )
                    // InternalKim.g:18388:6: lv_bc_3_0= 'BC'
                    {
                    lv_bc_3_0=(Token)match(input,262,FOLLOW_211); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_bc_3_0, grammarAccess.getDateAccess().getBcBCKeyword_1_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(current, "bc", lv_bc_3_0 != null, "BC");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_4=(Token)match(input,256,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDateAccess().getHyphenMinusKeyword_2());
              		
            }
            // InternalKim.g:18405:3: ( (lv_month_5_0= RULE_INT ) )
            // InternalKim.g:18406:4: (lv_month_5_0= RULE_INT )
            {
            // InternalKim.g:18406:4: (lv_month_5_0= RULE_INT )
            // InternalKim.g:18407:5: lv_month_5_0= RULE_INT
            {
            lv_month_5_0=(Token)match(input,RULE_INT,FOLLOW_211); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_month_5_0, grammarAccess.getDateAccess().getMonthINTTerminalRuleCall_3_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"month",
              						lv_month_5_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            otherlv_6=(Token)match(input,256,FOLLOW_82); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getDateAccess().getHyphenMinusKeyword_4());
              		
            }
            // InternalKim.g:18427:3: ( (lv_day_7_0= RULE_INT ) )
            // InternalKim.g:18428:4: (lv_day_7_0= RULE_INT )
            {
            // InternalKim.g:18428:4: (lv_day_7_0= RULE_INT )
            // InternalKim.g:18429:5: lv_day_7_0= RULE_INT
            {
            lv_day_7_0=(Token)match(input,RULE_INT,FOLLOW_212); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_day_7_0, grammarAccess.getDateAccess().getDayINTTerminalRuleCall_5_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDateRule());
              					}
              					setWithLastConsumed(
              						current,
              						"day",
              						lv_day_7_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:18445:3: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )?
            int alt378=2;
            int LA378_0 = input.LA(1);

            if ( (LA378_0==RULE_INT) ) {
                int LA378_1 = input.LA(2);

                if ( (LA378_1==110) ) {
                    int LA378_3 = input.LA(3);

                    if ( (LA378_3==RULE_INT) ) {
                        int LA378_4 = input.LA(4);

                        if ( (synpred710_InternalKim()) ) {
                            alt378=1;
                        }
                    }
                }
            }
            switch (alt378) {
                case 1 :
                    // InternalKim.g:18446:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    {
                    // InternalKim.g:18446:4: ( (lv_hour_8_0= RULE_INT ) )
                    // InternalKim.g:18447:5: (lv_hour_8_0= RULE_INT )
                    {
                    // InternalKim.g:18447:5: (lv_hour_8_0= RULE_INT )
                    // InternalKim.g:18448:6: lv_hour_8_0= RULE_INT
                    {
                    lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_hour_8_0, grammarAccess.getDateAccess().getHourINTTerminalRuleCall_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"hour",
                      							lv_hour_8_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,110,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getDateAccess().getColonKeyword_6_1());
                      			
                    }
                    // InternalKim.g:18468:4: ( (lv_min_10_0= RULE_INT ) )
                    // InternalKim.g:18469:5: (lv_min_10_0= RULE_INT )
                    {
                    // InternalKim.g:18469:5: (lv_min_10_0= RULE_INT )
                    // InternalKim.g:18470:6: lv_min_10_0= RULE_INT
                    {
                    lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_213); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_min_10_0, grammarAccess.getDateAccess().getMinINTTerminalRuleCall_6_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getDateRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"min",
                      							lv_min_10_0,
                      							"org.eclipse.xtext.common.Terminals.INT");
                      					
                    }

                    }


                    }

                    // InternalKim.g:18486:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
                    int alt377=2;
                    int LA377_0 = input.LA(1);

                    if ( (LA377_0==110) ) {
                        alt377=1;
                    }
                    switch (alt377) {
                        case 1 :
                            // InternalKim.g:18487:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            {
                            otherlv_11=(Token)match(input,110,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_11, grammarAccess.getDateAccess().getColonKeyword_6_3_0());
                              				
                            }
                            // InternalKim.g:18491:5: ( (lv_sec_12_0= RULE_INT ) )
                            // InternalKim.g:18492:6: (lv_sec_12_0= RULE_INT )
                            {
                            // InternalKim.g:18492:6: (lv_sec_12_0= RULE_INT )
                            // InternalKim.g:18493:7: lv_sec_12_0= RULE_INT
                            {
                            lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_214); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_sec_12_0, grammarAccess.getDateAccess().getSecINTTerminalRuleCall_6_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDateRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"sec",
                              								lv_sec_12_0,
                              								"org.eclipse.xtext.common.Terminals.INT");
                              						
                            }

                            }


                            }

                            // InternalKim.g:18509:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                            int alt376=2;
                            int LA376_0 = input.LA(1);

                            if ( (LA376_0==113) ) {
                                alt376=1;
                            }
                            switch (alt376) {
                                case 1 :
                                    // InternalKim.g:18510:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                                    {
                                    otherlv_13=(Token)match(input,113,FOLLOW_82); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getDateAccess().getFullStopKeyword_6_3_2_0());
                                      					
                                    }
                                    // InternalKim.g:18514:6: ( (lv_ms_14_0= RULE_INT ) )
                                    // InternalKim.g:18515:7: (lv_ms_14_0= RULE_INT )
                                    {
                                    // InternalKim.g:18515:7: (lv_ms_14_0= RULE_INT )
                                    // InternalKim.g:18516:8: lv_ms_14_0= RULE_INT
                                    {
                                    lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_ms_14_0, grammarAccess.getDateAccess().getMsINTTerminalRuleCall_6_3_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getDateRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"ms",
                                      									lv_ms_14_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:18539:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:18539:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:18540:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:18546:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_UPPERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;


        	enterRule();

        try {
            // InternalKim.g:18552:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:18553:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:18553:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:18554:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:18554:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt379=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt379=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt379=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt379=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 379, 0, input);

                throw nvae;
            }

            switch (alt379) {
                case 1 :
                    // InternalKim.g:18555:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_214); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18563:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_214); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18571:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_214); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18579:3: (kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop381:
            do {
                int alt381=2;
                int LA381_0 = input.LA(1);

                if ( (LA381_0==113) ) {
                    alt381=1;
                }


                switch (alt381) {
            	case 1 :
            	    // InternalKim.g:18580:4: kw= '.' (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,113,FOLLOW_26); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:18585:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_UPPERCASE_ID_5= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt380=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt380=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt380=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt380=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 380, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt380) {
            	        case 1 :
            	            // InternalKim.g:18586:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_214); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:18594:5: this_UPPERCASE_ID_5= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_5=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_214); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_5, grammarAccess.getPathNameAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:18602:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_214); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop381;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:18615:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:18615:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:18616:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:18622:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_UPPERCASE_ID_6=null;
        Token this_LOWERCASE_DASHID_7=null;


        	enterRule();

        try {
            // InternalKim.g:18628:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:18629:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:18629:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:18630:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:18630:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt382=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt382=1;
                }
                break;
            case RULE_UPPERCASE_ID:
                {
                alt382=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt382=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 382, 0, input);

                throw nvae;
            }

            switch (alt382) {
                case 1 :
                    // InternalKim.g:18631:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18639:4: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18647:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_215); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18655:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID ) )*
            loop385:
            do {
                int alt385=2;
                int LA385_0 = input.LA(1);

                if ( ((LA385_0>=112 && LA385_0<=113)) ) {
                    alt385=1;
                }


                switch (alt385) {
            	case 1 :
            	    // InternalKim.g:18656:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:18656:4: (kw= '.' | kw= '/' )
            	    int alt383=2;
            	    int LA383_0 = input.LA(1);

            	    if ( (LA383_0==113) ) {
            	        alt383=1;
            	    }
            	    else if ( (LA383_0==112) ) {
            	        alt383=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 383, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt383) {
            	        case 1 :
            	            // InternalKim.g:18657:5: kw= '.'
            	            {
            	            kw=(Token)match(input,113,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:18663:5: kw= '/'
            	            {
            	            kw=(Token)match(input,112,FOLLOW_26); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:18669:4: (this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_UPPERCASE_ID_6= RULE_UPPERCASE_ID | this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID )
            	    int alt384=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt384=1;
            	        }
            	        break;
            	    case RULE_UPPERCASE_ID:
            	        {
            	        alt384=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt384=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 384, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt384) {
            	        case 1 :
            	            // InternalKim.g:18670:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_215); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:18678:5: this_UPPERCASE_ID_6= RULE_UPPERCASE_ID
            	            {
            	            this_UPPERCASE_ID_6=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_215); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_UPPERCASE_ID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_UPPERCASE_ID_6, grammarAccess.getPathAccess().getUPPERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:18686:5: this_LOWERCASE_DASHID_7= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_7=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_215); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_7);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_7, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop385;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:18699:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:18699:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:18700:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:18706:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:18712:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:18713:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:18713:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:18714:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_88);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,110,FOLLOW_185); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRuleAuthorityId"
    // InternalKim.g:18740:1: entryRuleAuthorityId returns [String current=null] : iv_ruleAuthorityId= ruleAuthorityId EOF ;
    public final String entryRuleAuthorityId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAuthorityId = null;


        try {
            // InternalKim.g:18740:51: (iv_ruleAuthorityId= ruleAuthorityId EOF )
            // InternalKim.g:18741:2: iv_ruleAuthorityId= ruleAuthorityId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAuthorityIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAuthorityId=ruleAuthorityId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAuthorityId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAuthorityId"


    // $ANTLR start "ruleAuthorityId"
    // InternalKim.g:18747:1: ruleAuthorityId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment ) ;
    public final AntlrDatatypeRuleToken ruleAuthorityId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_UPPERCASE_PATH_0=null;
        Token this_UPPERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_UPPERCASE_ID_4=null;
        Token this_INT_5=null;
        Token this_STRING_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_UPPERCASE_ID_9=null;
        Token this_INT_10=null;
        Token this_STRING_11=null;
        AntlrDatatypeRuleToken this_WellFormedUrnIdWithFragment_12 = null;



        	enterRule();

        try {
            // InternalKim.g:18753:2: ( ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment ) )
            // InternalKim.g:18754:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment )
            {
            // InternalKim.g:18754:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment )
            int alt390=2;
            alt390 = dfa390.predict(input);
            switch (alt390) {
                case 1 :
                    // InternalKim.g:18755:3: ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* )
                    {
                    // InternalKim.g:18755:3: ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* )
                    // InternalKim.g:18756:4: (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )*
                    {
                    // InternalKim.g:18756:4: (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID )
                    int alt386=2;
                    int LA386_0 = input.LA(1);

                    if ( (LA386_0==RULE_UPPERCASE_PATH) ) {
                        alt386=1;
                    }
                    else if ( (LA386_0==RULE_UPPERCASE_ID) ) {
                        alt386=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 386, 0, input);

                        throw nvae;
                    }
                    switch (alt386) {
                        case 1 :
                            // InternalKim.g:18757:5: this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH
                            {
                            this_UPPERCASE_PATH_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UPPERCASE_PATH_0);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_UPPERCASE_PATH_0, grammarAccess.getAuthorityIdAccess().getUPPERCASE_PATHTerminalRuleCall_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:18765:5: this_UPPERCASE_ID_1= RULE_UPPERCASE_ID
                            {
                            this_UPPERCASE_ID_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_88); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UPPERCASE_ID_1);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_UPPERCASE_ID_1, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_0_1());
                              				
                            }

                            }
                            break;

                    }

                    kw=(Token)match(input,110,FOLLOW_95); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getColonKeyword_0_1());
                      			
                    }
                    // InternalKim.g:18778:4: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING )
                    int alt387=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt387=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt387=2;
                        }
                        break;
                    case RULE_INT:
                        {
                        alt387=3;
                        }
                        break;
                    case RULE_STRING:
                        {
                        alt387=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 387, 0, input);

                        throw nvae;
                    }

                    switch (alt387) {
                        case 1 :
                            // InternalKim.g:18779:5: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                            {
                            this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_214); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_LOWERCASE_ID_3);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_0_2_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:18787:5: this_UPPERCASE_ID_4= RULE_UPPERCASE_ID
                            {
                            this_UPPERCASE_ID_4=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_214); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_UPPERCASE_ID_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_UPPERCASE_ID_4, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_2_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:18795:5: this_INT_5= RULE_INT
                            {
                            this_INT_5=(Token)match(input,RULE_INT,FOLLOW_214); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_5);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_5, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_0_2_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:18803:5: this_STRING_6= RULE_STRING
                            {
                            this_STRING_6=(Token)match(input,RULE_STRING,FOLLOW_214); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_STRING_6);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_STRING_6, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_0_2_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:18811:4: (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )*
                    loop389:
                    do {
                        int alt389=2;
                        int LA389_0 = input.LA(1);

                        if ( (LA389_0==113) ) {
                            alt389=1;
                        }


                        switch (alt389) {
                    	case 1 :
                    	    // InternalKim.g:18812:5: kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING )
                    	    {
                    	    kw=(Token)match(input,113,FOLLOW_95); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					current.merge(kw);
                    	      					newLeafNode(kw, grammarAccess.getAuthorityIdAccess().getFullStopKeyword_0_3_0());
                    	      				
                    	    }
                    	    // InternalKim.g:18817:5: (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING )
                    	    int alt388=4;
                    	    switch ( input.LA(1) ) {
                    	    case RULE_LOWERCASE_ID:
                    	        {
                    	        alt388=1;
                    	        }
                    	        break;
                    	    case RULE_UPPERCASE_ID:
                    	        {
                    	        alt388=2;
                    	        }
                    	        break;
                    	    case RULE_INT:
                    	        {
                    	        alt388=3;
                    	        }
                    	        break;
                    	    case RULE_STRING:
                    	        {
                    	        alt388=4;
                    	        }
                    	        break;
                    	    default:
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 388, 0, input);

                    	        throw nvae;
                    	    }

                    	    switch (alt388) {
                    	        case 1 :
                    	            // InternalKim.g:18818:6: this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    	            {
                    	            this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_214); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_LOWERCASE_ID_8);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getAuthorityIdAccess().getLOWERCASE_IDTerminalRuleCall_0_3_1_0());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:18826:6: this_UPPERCASE_ID_9= RULE_UPPERCASE_ID
                    	            {
                    	            this_UPPERCASE_ID_9=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_214); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_UPPERCASE_ID_9);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_UPPERCASE_ID_9, grammarAccess.getAuthorityIdAccess().getUPPERCASE_IDTerminalRuleCall_0_3_1_1());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 3 :
                    	            // InternalKim.g:18834:6: this_INT_10= RULE_INT
                    	            {
                    	            this_INT_10=(Token)match(input,RULE_INT,FOLLOW_214); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_INT_10);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_INT_10, grammarAccess.getAuthorityIdAccess().getINTTerminalRuleCall_0_3_1_2());
                    	              					
                    	            }

                    	            }
                    	            break;
                    	        case 4 :
                    	            // InternalKim.g:18842:6: this_STRING_11= RULE_STRING
                    	            {
                    	            this_STRING_11=(Token)match(input,RULE_STRING,FOLLOW_214); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              						current.merge(this_STRING_11);
                    	              					
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              						newLeafNode(this_STRING_11, grammarAccess.getAuthorityIdAccess().getSTRINGTerminalRuleCall_0_3_1_3());
                    	              					
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop389;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:18853:3: this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getAuthorityIdAccess().getWellFormedUrnIdWithFragmentParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_WellFormedUrnIdWithFragment_12=ruleWellFormedUrnIdWithFragment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_WellFormedUrnIdWithFragment_12);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAuthorityId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:18867:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:18867:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:18868:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:18874:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_BACKCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:18880:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:18881:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:18881:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:18882:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:18882:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt391=2;
            int LA391_0 = input.LA(1);

            if ( (LA391_0==RULE_LOWERCASE_ID) ) {
                int LA391_1 = input.LA(2);

                if ( (synpred731_InternalKim()) ) {
                    alt391=1;
                }
                else if ( (true) ) {
                    alt391=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 391, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA391_0==RULE_UPPERCASE_ID||LA391_0==RULE_LOWERCASE_DASHID) ) {
                alt391=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 391, 0, input);

                throw nvae;
            }
            switch (alt391) {
                case 1 :
                    // InternalKim.g:18883:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_88);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18894:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_88); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,110,FOLLOW_216); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:18907:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_BACKCASE_ID_4= RULE_BACKCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            int alt392=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
                {
                alt392=1;
                }
                break;
            case RULE_BACKCASE_ID:
                {
                alt392=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt392=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 392, 0, input);

                throw nvae;
            }

            switch (alt392) {
                case 1 :
                    // InternalKim.g:18908:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:18916:4: this_BACKCASE_ID_4= RULE_BACKCASE_ID
                    {
                    this_BACKCASE_ID_4=(Token)match(input,RULE_BACKCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_BACKCASE_ID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_BACKCASE_ID_4, grammarAccess.getPropertyIdAccess().getBACKCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:18924:4: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_5);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:18936:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:18936:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:18937:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:18943:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:18949:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:18950:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:18950:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:18951:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_217); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:18958:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt394=2;
            int LA394_0 = input.LA(1);

            if ( (LA394_0==113) ) {
                alt394=1;
            }
            switch (alt394) {
                case 1 :
                    // InternalKim.g:18959:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,113,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_217); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:18971:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt393=2;
                    int LA393_0 = input.LA(1);

                    if ( (LA393_0==113) ) {
                        alt393=1;
                    }
                    switch (alt393) {
                        case 1 :
                            // InternalKim.g:18972:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,113,FOLLOW_82); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_218); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:18986:3: (kw= '-' )?
            int alt395=2;
            int LA395_0 = input.LA(1);

            if ( (LA395_0==256) ) {
                alt395=1;
            }
            switch (alt395) {
                case 1 :
                    // InternalKim.g:18987:4: kw= '-'
                    {
                    kw=(Token)match(input,256,FOLLOW_219); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:18993:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt396=3;
            int LA396_0 = input.LA(1);

            if ( (LA396_0==RULE_LOWERCASE_ID) ) {
                int LA396_1 = input.LA(2);

                if ( (synpred737_InternalKim()) ) {
                    alt396=1;
                }
            }
            else if ( (LA396_0==RULE_UPPERCASE_ID) ) {
                int LA396_2 = input.LA(2);

                if ( (synpred738_InternalKim()) ) {
                    alt396=2;
                }
            }
            switch (alt396) {
                case 1 :
                    // InternalKim.g:18994:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:19002:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:19014:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:19020:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:19021:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:19021:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt397=3;
            switch ( input.LA(1) ) {
            case 112:
                {
                alt397=1;
                }
                break;
            case 263:
                {
                alt397=2;
                }
                break;
            case 44:
                {
                alt397=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 397, 0, input);

                throw nvae;
            }

            switch (alt397) {
                case 1 :
                    // InternalKim.g:19022:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:19022:3: (enumLiteral_0= '/' )
                    // InternalKim.g:19023:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:19030:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:19030:3: (enumLiteral_1= '^' )
                    // InternalKim.g:19031:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,263,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:19038:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:19038:3: (enumLiteral_2= '*' )
                    // InternalKim.g:19039:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:372:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred12_InternalKim
    public final void synpred12_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:395:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred12_InternalKim", "true");
        }
        // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        {
        // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        int alt399=2;
        int LA399_0 = input.LA(1);

        if ( (LA399_0==23) ) {
            alt399=1;
        }
        switch (alt399) {
            case 1 :
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                {
                // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
                // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
                {
                lv_projectPrivate_4_0=(Token)match(input,23,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        {
        // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        // InternalKim.g:416:11: lv_private_5_0= 'private'
        {
        lv_private_5_0=(Token)match(input,24,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred12_InternalKim

    // $ANTLR start synpred13_InternalKim
    public final void synpred13_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;
        Token lv_projectPrivate_4_0=null;
        Token lv_private_5_0=null;

        // InternalKim.g:366:4: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:366:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* ) )
        // InternalKim.g:367:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
        // InternalKim.g:370:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )* )
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        {
        // InternalKim.g:371:6: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) ) )*
        loop401:
        do {
            int alt401=3;
            int LA401_0 = input.LA(1);

            if ( LA401_0 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                alt401=1;
            }
            else if ( LA401_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt401=2;
            }
            else if ( LA401_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                alt401=2;
            }


            switch (alt401) {
        	case 1 :
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    {
        	    // InternalKim.g:372:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        	    // InternalKim.g:373:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:373:111: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        	    // InternalKim.g:374:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:377:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        	    // InternalKim.g:377:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:377:19: ( (lv_inactive_3_0= 'void' ) )
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    {
        	    // InternalKim.g:377:20: (lv_inactive_3_0= 'void' )
        	    // InternalKim.g:378:10: lv_inactive_3_0= 'void'
        	    {
        	    lv_inactive_3_0=(Token)match(input,22,FOLLOW_220); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    {
        	    // InternalKim.g:395:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) ) )
        	    // InternalKim.g:396:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:396:111: ( ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) ) )
        	    // InternalKim.g:397:6: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:400:9: ({...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) ) )
        	    // InternalKim.g:400:10: {...}? => ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred13_InternalKim", "true");
        	    }
        	    // InternalKim.g:400:19: ( ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) ) )
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )? ( (lv_private_5_0= 'private' ) )
        	    {
        	    // InternalKim.g:400:20: ( (lv_projectPrivate_4_0= 'project' ) )?
        	    int alt400=2;
        	    int LA400_0 = input.LA(1);

        	    if ( (LA400_0==23) ) {
        	        alt400=1;
        	    }
        	    switch (alt400) {
        	        case 1 :
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            {
        	            // InternalKim.g:401:10: (lv_projectPrivate_4_0= 'project' )
        	            // InternalKim.g:402:11: lv_projectPrivate_4_0= 'project'
        	            {
        	            lv_projectPrivate_4_0=(Token)match(input,23,FOLLOW_7); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:414:9: ( (lv_private_5_0= 'private' ) )
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    {
        	    // InternalKim.g:415:10: (lv_private_5_0= 'private' )
        	    // InternalKim.g:416:11: lv_private_5_0= 'private'
        	    {
        	    lv_private_5_0=(Token)match(input,24,FOLLOW_220); if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop401;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred13_InternalKim

    // $ANTLR start synpred20_InternalKim
    public final void synpred20_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:694:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_40);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop403:
        do {
            int alt403=2;
            int LA403_0 = input.LA(1);

            if ( (LA403_0==28) ) {
                alt403=1;
            }


            switch (alt403) {
        	case 1 :
        	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,28,FOLLOW_14); if (state.failed) return ;
        	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop403;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred20_InternalKim

    // $ANTLR start synpred22_InternalKim
    public final void synpred22_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_5_0 = null;


        // InternalKim.g:761:5: ( ( (lv_concept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
        // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_concept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred22_InternalKim

    // $ANTLR start synpred24_InternalKim
    public final void synpred24_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_7=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_number_4_0 = null;

        EObject lv_concept_5_0 = null;


        // InternalKim.g:693:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )
        // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as'
        {
        // InternalKim.g:693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )
        int alt406=4;
        alt406 = dfa406.predict(input);
        switch (alt406) {
            case 1 :
                // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:694:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:695:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:696:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:697:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_13);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:714:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop404:
                do {
                    int alt404=2;
                    int LA404_0 = input.LA(1);

                    if ( (LA404_0==28) ) {
                        alt404=1;
                    }


                    switch (alt404) {
                	case 1 :
                	    // InternalKim.g:715:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,28,FOLLOW_14); if (state.failed) return ;
                	    // InternalKim.g:719:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:720:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:721:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_13);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop404;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                {
                // InternalKim.g:741:5: ( (lv_number_4_0= ruleNumber ) )
                // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                {
                // InternalKim.g:742:6: (lv_number_4_0= ruleNumber )
                // InternalKim.g:743:7: lv_number_4_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_number_4_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:761:5: ( (lv_concept_5_0= ruleConceptDeclaration ) )
                // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                {
                // InternalKim.g:762:6: (lv_concept_5_0= ruleConceptDeclaration )
                // InternalKim.g:763:7: lv_concept_5_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptConceptDeclarationParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_11);
                lv_concept_5_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:781:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:782:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:783:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt405=2;
                int LA405_0 = input.LA(1);

                if ( (LA405_0==29) ) {
                    alt405=1;
                }
                else if ( (LA405_0==30) ) {
                    alt405=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 405, 0, input);

                    throw nvae;
                }
                switch (alt405) {
                    case 1 :
                        // InternalKim.g:784:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,29,FOLLOW_11); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:795:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,30,FOLLOW_11); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;

        }

        otherlv_7=(Token)match(input,26,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred24_InternalKim

    // $ANTLR start synpred61_InternalKim
    public final void synpred61_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1806:5: ( 'to' )
        // InternalKim.g:1806:6: 'to'
        {
        match(input,37,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred61_InternalKim

    // $ANTLR start synpred65_InternalKim
    public final void synpred65_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1764:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1764:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1765:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1766:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1767:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_43);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1784:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt424=3;
        int LA424_0 = input.LA(1);

        if ( (LA424_0==51) ) {
            alt424=1;
        }
        else if ( (LA424_0==52) ) {
            alt424=2;
        }
        switch (alt424) {
            case 1 :
                // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1785:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1786:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1787:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,51,FOLLOW_25); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1800:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,52,FOLLOW_25); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1805:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1806:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,37,FOLLOW_44); if (state.failed) return ;

        }

        // InternalKim.g:1812:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1813:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1817:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1818:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_45);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1835:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt425=3;
        int LA425_0 = input.LA(1);

        if ( (LA425_0==51) ) {
            alt425=1;
        }
        else if ( (LA425_0==52) ) {
            alt425=2;
        }
        switch (alt425) {
            case 1 :
                // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1836:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1837:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1838:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,51,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1851:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,52,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred65_InternalKim

    // $ANTLR start synpred66_InternalKim
    public final void synpred66_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1858:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1858:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1859:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1860:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalKim

    // $ANTLR start synpred69_InternalKim
    public final void synpred69_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1923:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1923:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1924:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1925:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred69_InternalKim

    // $ANTLR start synpred72_InternalKim
    public final void synpred72_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1943:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1943:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1944:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,39,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:1948:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1949:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1950:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1967:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop426:
        do {
            int alt426=2;
            int LA426_0 = input.LA(1);

            if ( (LA426_0==28) ) {
                alt426=1;
            }


            switch (alt426) {
        	case 1 :
        	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1968:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1969:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1975:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1976:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1977:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop426;
            }
        } while (true);

        otherlv_18=(Token)match(input,40,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred72_InternalKim

    // $ANTLR start synpred79_InternalKim
    public final void synpred79_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2164:5: ( 'to' )
        // InternalKim.g:2164:6: 'to'
        {
        match(input,37,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred79_InternalKim

    // $ANTLR start synpred86_InternalKim
    public final void synpred86_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_11_0 = null;


        // InternalKim.g:2255:3: ( ( (lv_concept_11_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:2255:3: ( (lv_concept_11_0= ruleConceptDeclaration ) )
        // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
        {
        // InternalKim.g:2256:4: (lv_concept_11_0= ruleConceptDeclaration )
        // InternalKim.g:2257:5: lv_concept_11_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getConceptConceptDeclarationParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_11_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred86_InternalKim

    // $ANTLR start synpred87_InternalKim
    public final void synpred87_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_12_1=null;

        // InternalKim.g:2278:6: (lv_id_12_1= RULE_LOWERCASE_ID )
        // InternalKim.g:2278:6: lv_id_12_1= RULE_LOWERCASE_ID
        {
        lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred87_InternalKim

    // $ANTLR start synpred88_InternalKim
    public final void synpred88_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_12_1=null;
        AntlrDatatypeRuleToken lv_id_12_2 = null;


        // InternalKim.g:2275:3: ( ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) )
        // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
        {
        // InternalKim.g:2275:3: ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) )
        // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
        {
        // InternalKim.g:2276:4: ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) )
        // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
        {
        // InternalKim.g:2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )
        int alt430=2;
        int LA430_0 = input.LA(1);

        if ( (LA430_0==RULE_LOWERCASE_ID) ) {
            int LA430_1 = input.LA(2);

            if ( (LA430_1==110||LA430_1==113) ) {
                alt430=2;
            }
            else if ( (LA430_1==EOF) ) {
                alt430=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 430, 1, input);

                throw nvae;
            }
        }
        else if ( (LA430_0==RULE_UPPERCASE_ID||LA430_0==RULE_LOWERCASE_DASHID) ) {
            alt430=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 430, 0, input);

            throw nvae;
        }
        switch (alt430) {
            case 1 :
                // InternalKim.g:2278:6: lv_id_12_1= RULE_LOWERCASE_ID
                {
                lv_id_12_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:2293:6: lv_id_12_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdNoSetAccess().getIdPropertyIdParserRuleCall_5_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_12_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred88_InternalKim

    // $ANTLR start synpred91_InternalKim
    public final void synpred91_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:2404:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:2404:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getUrnAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred91_InternalKim

    // $ANTLR start synpred95_InternalKim
    public final void synpred95_InternalKim_fragment() throws RecognitionException {   
        EObject lv_table_2_1 = null;


        // InternalKim.g:2509:6: (lv_table_2_1= ruleTable )
        // InternalKim.g:2509:6: lv_table_2_1= ruleTable
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_table_2_1=ruleTable();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred95_InternalKim

    // $ANTLR start synpred110_InternalKim
    public final void synpred110_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3034:5: ( 'to' )
        // InternalKim.g:3034:6: 'to'
        {
        match(input,37,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred110_InternalKim

    // $ANTLR start synpred130_InternalKim
    public final void synpred130_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;


        // InternalKim.g:3411:5: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )
        // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        {
        // InternalKim.g:3411:5: ( (lv_actions_5_0= ruleAction ) )
        // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
        {
        // InternalKim.g:3412:6: (lv_actions_5_0= ruleAction )
        // InternalKim.g:3413:7: lv_actions_5_0= ruleAction
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
          						
        }
        pushFollow(FOLLOW_40);
        lv_actions_5_0=ruleAction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:3430:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
        loop437:
        do {
            int alt437=2;
            int LA437_0 = input.LA(1);

            if ( (LA437_0==28) ) {
                alt437=1;
            }


            switch (alt437) {
        	case 1 :
        	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
        	    {
        	    // InternalKim.g:3431:6: ( ( ',' )=>otherlv_6= ',' )
        	    // InternalKim.g:3432:7: ( ',' )=>otherlv_6= ','
        	    {
        	    otherlv_6=(Token)match(input,28,FOLLOW_56); if (state.failed) return ;

        	    }

        	    // InternalKim.g:3438:6: ( (lv_actions_7_0= ruleAction ) )
        	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
        	    {
        	    // InternalKim.g:3439:7: (lv_actions_7_0= ruleAction )
        	    // InternalKim.g:3440:8: lv_actions_7_0= ruleAction
        	    {
        	    if ( state.backtracking==0 ) {

        	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
        	      							
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_actions_7_0=ruleAction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop437;
            }
        } while (true);


        }
    }
    // $ANTLR end synpred130_InternalKim

    // $ANTLR start synpred141_InternalKim
    public final void synpred141_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3688:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3688:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3689:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3690:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred141_InternalKim

    // $ANTLR start synpred164_InternalKim
    public final void synpred164_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:4184:5: ( ( ruleValue ) )
        // InternalKim.g:4184:6: ( ruleValue )
        {
        // InternalKim.g:4184:6: ( ruleValue )
        // InternalKim.g:4185:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred164_InternalKim

    // $ANTLR start synpred168_InternalKim
    public final void synpred168_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:4308:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:4308:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:4309:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:4310:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred168_InternalKim

    // $ANTLR start synpred175_InternalKim
    public final void synpred175_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:4405:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:4405:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:4406:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:4407:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt467=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt467=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt467=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt467=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 467, 0, input);

            throw nvae;
        }

        switch (alt467) {
            case 1 :
                // InternalKim.g:4408:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4423:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:4438:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred175_InternalKim

    // $ANTLR start synpred185_InternalKim
    public final void synpred185_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_conditionNegated_6_0=null;
        EObject lv_condition_7_0 = null;


        // InternalKim.g:4707:4: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )
        // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) )
        {
        // InternalKim.g:4707:4: (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) )
        int alt471=2;
        int LA471_0 = input.LA(1);

        if ( (LA471_0==49) ) {
            alt471=1;
        }
        else if ( (LA471_0==50) ) {
            alt471=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 471, 0, input);

            throw nvae;
        }
        switch (alt471) {
            case 1 :
                // InternalKim.g:4708:5: otherlv_5= 'if'
                {
                otherlv_5=(Token)match(input,49,FOLLOW_12); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                {
                // InternalKim.g:4713:5: ( (lv_conditionNegated_6_0= 'unless' ) )
                // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                {
                // InternalKim.g:4714:6: (lv_conditionNegated_6_0= 'unless' )
                // InternalKim.g:4715:7: lv_conditionNegated_6_0= 'unless'
                {
                lv_conditionNegated_6_0=(Token)match(input,50,FOLLOW_12); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:4728:4: ( (lv_condition_7_0= ruleValue ) )
        // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
        {
        // InternalKim.g:4729:5: (lv_condition_7_0= ruleValue )
        // InternalKim.g:4730:6: lv_condition_7_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getExecutableValueAccess().getConditionValueParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_condition_7_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred185_InternalKim

    // $ANTLR start synpred208_InternalKim
    public final void synpred208_InternalKim_fragment() throws RecognitionException {   
        Token lv_projectPrivate_3_0=null;
        Token lv_private_4_0=null;

        // InternalKim.g:4990:4: ( ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) ) )
        // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        {
        // InternalKim.g:4990:4: ({...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4991:5: {...}? => ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4991:106: ( ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) ) )
        // InternalKim.g:4992:6: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4995:9: ({...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) ) )
        // InternalKim.g:4995:10: {...}? => ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred208_InternalKim", "true");
        }
        // InternalKim.g:4995:19: ( ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) ) )
        // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )? ( (lv_private_4_0= 'private' ) )
        {
        // InternalKim.g:4995:20: ( (lv_projectPrivate_3_0= 'project' ) )?
        int alt473=2;
        int LA473_0 = input.LA(1);

        if ( (LA473_0==23) ) {
            alt473=1;
        }
        switch (alt473) {
            case 1 :
                // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
                {
                // InternalKim.g:4996:10: (lv_projectPrivate_3_0= 'project' )
                // InternalKim.g:4997:11: lv_projectPrivate_3_0= 'project'
                {
                lv_projectPrivate_3_0=(Token)match(input,23,FOLLOW_7); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5009:9: ( (lv_private_4_0= 'private' ) )
        // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
        {
        // InternalKim.g:5010:10: (lv_private_4_0= 'private' )
        // InternalKim.g:5011:11: lv_private_4_0= 'private'
        {
        lv_private_4_0=(Token)match(input,24,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred208_InternalKim

    // $ANTLR start synpred209_InternalKim
    public final void synpred209_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_5_0=null;

        // InternalKim.g:5029:4: ( ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) ) )
        // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:5029:4: ({...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) ) )
        // InternalKim.g:5030:5: {...}? => ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred209_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:5030:106: ( ({...}? => ( (lv_inactive_5_0= 'void' ) ) ) )
        // InternalKim.g:5031:6: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:5034:9: ({...}? => ( (lv_inactive_5_0= 'void' ) ) )
        // InternalKim.g:5034:10: {...}? => ( (lv_inactive_5_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred209_InternalKim", "true");
        }
        // InternalKim.g:5034:19: ( (lv_inactive_5_0= 'void' ) )
        // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
        {
        // InternalKim.g:5034:20: (lv_inactive_5_0= 'void' )
        // InternalKim.g:5035:10: lv_inactive_5_0= 'void'
        {
        lv_inactive_5_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred209_InternalKim

    // $ANTLR start synpred213_InternalKim
    public final void synpred213_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token lv_language_14_0=null;

        // InternalKim.g:5139:4: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:5139:4: ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) )
        // InternalKim.g:5140:5: {...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred213_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:5140:106: ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) )
        // InternalKim.g:5141:6: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:5144:9: ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) )
        // InternalKim.g:5144:10: {...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred213_InternalKim", "true");
        }
        // InternalKim.g:5144:19: (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) )
        // InternalKim.g:5144:20: otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        {
        otherlv_12=(Token)match(input,32,FOLLOW_74); if (state.failed) return ;
        otherlv_13=(Token)match(input,97,FOLLOW_75); if (state.failed) return ;
        // InternalKim.g:5152:9: ( (lv_language_14_0= RULE_UPPERCASE_ID ) )
        // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        {
        // InternalKim.g:5153:10: (lv_language_14_0= RULE_UPPERCASE_ID )
        // InternalKim.g:5154:11: lv_language_14_0= RULE_UPPERCASE_ID
        {
        lv_language_14_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred213_InternalKim

    // $ANTLR start synpred216_InternalKim
    public final void synpred216_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_imported_16_0 = null;

        EObject lv_imported_18_0 = null;


        // InternalKim.g:5176:4: ( ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:5176:4: ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:5177:5: {...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:5177:106: ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:5178:6: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:5181:9: ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) )
        // InternalKim.g:5181:10: {...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        }
        // InternalKim.g:5181:19: (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* )
        // InternalKim.g:5181:20: otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        {
        otherlv_15=(Token)match(input,32,FOLLOW_76); if (state.failed) return ;
        // InternalKim.g:5185:9: ( (lv_imported_16_0= ruleImport ) )
        // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
        {
        // InternalKim.g:5186:10: (lv_imported_16_0= ruleImport )
        // InternalKim.g:5187:11: lv_imported_16_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_imported_16_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5204:9: ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )*
        loop474:
        do {
            int alt474=2;
            int LA474_0 = input.LA(1);

            if ( (LA474_0==28) ) {
                alt474=1;
            }


            switch (alt474) {
        	case 1 :
        	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) )
        	    {
        	    // InternalKim.g:5205:10: ( ( ',' )=>otherlv_17= ',' )
        	    // InternalKim.g:5206:11: ( ',' )=>otherlv_17= ','
        	    {
        	    otherlv_17=(Token)match(input,28,FOLLOW_76); if (state.failed) return ;

        	    }

        	    // InternalKim.g:5212:10: ( (lv_imported_18_0= ruleImport ) )
        	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
        	    {
        	    // InternalKim.g:5213:11: (lv_imported_18_0= ruleImport )
        	    // InternalKim.g:5214:12: lv_imported_18_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_imported_18_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop474;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred216_InternalKim

    // $ANTLR start synpred218_InternalKim
    public final void synpred218_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_owlImports_20_0 = null;

        EObject lv_owlImports_22_0 = null;


        // InternalKim.g:5238:4: ( ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:5238:4: ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:5239:5: {...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:5239:106: ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:5240:6: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:5243:9: ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:5243:10: {...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred218_InternalKim", "true");
        }
        // InternalKim.g:5243:19: (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* )
        // InternalKim.g:5243:20: otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        {
        otherlv_19=(Token)match(input,98,FOLLOW_78); if (state.failed) return ;
        // InternalKim.g:5247:9: ( (lv_owlImports_20_0= ruleOwlImport ) )
        // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
        {
        // InternalKim.g:5248:10: (lv_owlImports_20_0= ruleOwlImport )
        // InternalKim.g:5249:11: lv_owlImports_20_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_owlImports_20_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5266:9: (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )*
        loop475:
        do {
            int alt475=2;
            int LA475_0 = input.LA(1);

            if ( (LA475_0==28) ) {
                alt475=1;
            }


            switch (alt475) {
        	case 1 :
        	    // InternalKim.g:5267:10: otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    {
        	    otherlv_21=(Token)match(input,28,FOLLOW_78); if (state.failed) return ;
        	    // InternalKim.g:5271:10: ( (lv_owlImports_22_0= ruleOwlImport ) )
        	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:5272:11: (lv_owlImports_22_0= ruleOwlImport )
        	    // InternalKim.g:5273:12: lv_owlImports_22_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_owlImports_22_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop475;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred218_InternalKim

    // $ANTLR start synpred221_InternalKim
    public final void synpred221_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_coverage_24_0 = null;

        EObject lv_coverage_26_0 = null;


        // InternalKim.g:5297:4: ( ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:5297:4: ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:5298:5: {...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:5298:106: ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:5299:6: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:5302:9: ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) )
        // InternalKim.g:5302:10: {...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "true");
        }
        // InternalKim.g:5302:19: (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* )
        // InternalKim.g:5302:20: otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        {
        otherlv_23=(Token)match(input,99,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:5306:9: ( (lv_coverage_24_0= ruleFunction ) )
        // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
        {
        // InternalKim.g:5307:10: (lv_coverage_24_0= ruleFunction )
        // InternalKim.g:5308:11: lv_coverage_24_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_coverage_24_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5325:9: ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )*
        loop476:
        do {
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( (LA476_0==28) ) {
                alt476=1;
            }


            switch (alt476) {
        	case 1 :
        	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:5326:10: ( ( ',' )=>otherlv_25= ',' )
        	    // InternalKim.g:5327:11: ( ',' )=>otherlv_25= ','
        	    {
        	    otherlv_25=(Token)match(input,28,FOLLOW_26); if (state.failed) return ;

        	    }

        	    // InternalKim.g:5333:10: ( (lv_coverage_26_0= ruleFunction ) )
        	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
        	    {
        	    // InternalKim.g:5334:11: (lv_coverage_26_0= ruleFunction )
        	    // InternalKim.g:5335:12: lv_coverage_26_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_coverage_26_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop476;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred221_InternalKim

    // $ANTLR start synpred223_InternalKim
    public final void synpred223_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_rootDomain_29_0=null;
        EObject lv_domainConcept_30_0 = null;


        // InternalKim.g:5359:4: ( ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:5359:4: ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5360:5: {...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:5360:106: ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5361:6: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:5364:9: ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5364:10: {...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "true");
        }
        // InternalKim.g:5364:19: (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:5364:20: otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,53,FOLLOW_79); if (state.failed) return ;
        otherlv_28=(Token)match(input,100,FOLLOW_80); if (state.failed) return ;
        // InternalKim.g:5372:9: ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) )
        int alt477=2;
        int LA477_0 = input.LA(1);

        if ( (LA477_0==101) ) {
            alt477=1;
        }
        else if ( ((LA477_0>=RULE_LOWERCASE_ID && LA477_0<=RULE_UPPERCASE_ID)||LA477_0==RULE_CAMELCASE_ID||LA477_0==RULE_LOWERCASE_DASHID||LA477_0==RULE_UPPERCASE_PATH||LA477_0==39||(LA477_0>=138 && LA477_0<=139)||(LA477_0>=147 && LA477_0<=148)||(LA477_0>=150 && LA477_0<=155)||(LA477_0>=157 && LA477_0<=168)) ) {
            alt477=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 477, 0, input);

            throw nvae;
        }
        switch (alt477) {
            case 1 :
                // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
                {
                // InternalKim.g:5373:10: ( (lv_rootDomain_29_0= 'root' ) )
                // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
                {
                // InternalKim.g:5374:11: (lv_rootDomain_29_0= 'root' )
                // InternalKim.g:5375:12: lv_rootDomain_29_0= 'root'
                {
                lv_rootDomain_29_0=(Token)match(input,101,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:5388:10: ( (lv_domainConcept_30_0= ruleConcept ) )
                // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
                {
                // InternalKim.g:5389:11: (lv_domainConcept_30_0= ruleConcept )
                // InternalKim.g:5390:12: lv_domainConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred223_InternalKim

    // $ANTLR start synpred225_InternalKim
    public final void synpred225_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        Token otherlv_34=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_33_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_35_0 = null;


        // InternalKim.g:5414:4: ( ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) )
        // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
        {
        // InternalKim.g:5414:4: ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) )
        // InternalKim.g:5415:5: {...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:5415:106: ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) )
        // InternalKim.g:5416:6: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:5419:9: ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) )
        // InternalKim.g:5419:10: {...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "true");
        }
        // InternalKim.g:5419:19: (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* )
        // InternalKim.g:5419:20: otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
        {
        otherlv_31=(Token)match(input,102,FOLLOW_81); if (state.failed) return ;
        otherlv_32=(Token)match(input,103,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:5427:9: ( (lv_disjointNamespaces_33_0= rulePathName ) )
        // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
        {
        // InternalKim.g:5428:10: (lv_disjointNamespaces_33_0= rulePathName )
        // InternalKim.g:5429:11: lv_disjointNamespaces_33_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_2_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_disjointNamespaces_33_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5446:9: (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )*
        loop478:
        do {
            int alt478=2;
            int LA478_0 = input.LA(1);

            if ( (LA478_0==28) ) {
                alt478=1;
            }


            switch (alt478) {
        	case 1 :
        	    // InternalKim.g:5447:10: otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) )
        	    {
        	    otherlv_34=(Token)match(input,28,FOLLOW_26); if (state.failed) return ;
        	    // InternalKim.g:5451:10: ( (lv_disjointNamespaces_35_0= rulePathName ) )
        	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    {
        	    // InternalKim.g:5452:11: (lv_disjointNamespaces_35_0= rulePathName )
        	    // InternalKim.g:5453:12: lv_disjointNamespaces_35_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_5_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_disjointNamespaces_35_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop478;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred225_InternalKim

    // $ANTLR start synpred226_InternalKim
    public final void synpred226_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        AntlrDatatypeRuleToken lv_version_37_0 = null;


        // InternalKim.g:5477:4: ( ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:5477:4: ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:5478:5: {...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred226_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:5478:106: ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:5479:6: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:5482:9: ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:5482:10: {...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred226_InternalKim", "true");
        }
        // InternalKim.g:5482:19: (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) )
        // InternalKim.g:5482:20: otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) )
        {
        otherlv_36=(Token)match(input,104,FOLLOW_82); if (state.failed) return ;
        // InternalKim.g:5486:9: ( (lv_version_37_0= ruleVersionNumber ) )
        // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
        {
        // InternalKim.g:5487:10: (lv_version_37_0= ruleVersionNumber )
        // InternalKim.g:5488:11: lv_version_37_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_37_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred226_InternalKim

    // $ANTLR start synpred229_InternalKim
    public final void synpred229_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;


        // InternalKim.g:5522:9: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:5523:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred229_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        }
        // InternalKim.g:5523:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:5524:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        // InternalKim.g:5527:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        // InternalKim.g:5527:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred229_InternalKim", "true");
        }
        // InternalKim.g:5527:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        // InternalKim.g:5527:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        {
        otherlv_39=(Token)match(input,105,FOLLOW_221); if (state.failed) return ;
        // InternalKim.g:5531:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        int alt481=2;
        int LA481_0 = input.LA(1);

        if ( (LA481_0==106) ) {
            alt481=1;
        }
        switch (alt481) {
            case 1 :
                // InternalKim.g:5532:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
                {
                otherlv_40=(Token)match(input,106,FOLLOW_222); if (state.failed) return ;
                // InternalKim.g:5536:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
                loop480:
                do {
                    int alt480=2;
                    int LA480_0 = input.LA(1);

                    if ( ((LA480_0>=RULE_LOWERCASE_ID && LA480_0<=RULE_UPPERCASE_ID)||LA480_0==RULE_LOWERCASE_DASHID) ) {
                        alt480=1;
                    }


                    switch (alt480) {
                	case 1 :
                	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
                	    {
                	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
                	    // InternalKim.g:5538:17: lv_lookupNamespace_41_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_222);
                	    lv_lookupNamespace_41_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop480;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred229_InternalKim

    // $ANTLR start synpred231_InternalKim
    public final void synpred231_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_42=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;


        // InternalKim.g:5562:9: ( ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:5563:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        }
        // InternalKim.g:5563:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        // InternalKim.g:5564:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        // InternalKim.g:5567:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        // InternalKim.g:5567:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "true");
        }
        // InternalKim.g:5567:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        // InternalKim.g:5567:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        {
        otherlv_42=(Token)match(input,107,FOLLOW_222); if (state.failed) return ;
        // InternalKim.g:5571:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        loop482:
        do {
            int alt482=2;
            int LA482_0 = input.LA(1);

            if ( ((LA482_0>=RULE_LOWERCASE_ID && LA482_0<=RULE_UPPERCASE_ID)||LA482_0==RULE_LOWERCASE_DASHID) ) {
                alt482=1;
            }


            switch (alt482) {
        	case 1 :
        	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    {
        	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    // InternalKim.g:5573:16: lv_blacklistNamespace_43_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_222);
        	    lv_blacklistNamespace_43_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop482;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred231_InternalKim

    // $ANTLR start synpred232_InternalKim
    public final void synpred232_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_44=null;
        EObject lv_weights_45_0 = null;


        // InternalKim.g:5596:9: ( ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:5597:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        }
        // InternalKim.g:5597:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        // InternalKim.g:5598:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        // InternalKim.g:5601:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        // InternalKim.g:5601:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "true");
        }
        // InternalKim.g:5601:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        // InternalKim.g:5601:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
        {
        otherlv_44=(Token)match(input,32,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:5605:14: ( (lv_weights_45_0= ruleMap ) )
        // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        {
        // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        // InternalKim.g:5607:16: lv_weights_45_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_45_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred232_InternalKim

    // $ANTLR start synpred233_InternalKim
    public final void synpred233_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_41_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_43_0 = null;

        EObject lv_weights_45_0 = null;


        // InternalKim.g:5511:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:5511:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:5512:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7)");
        }
        // InternalKim.g:5512:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:5513:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7);
        // InternalKim.g:5516:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:5516:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        }
        // InternalKim.g:5516:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:5516:20: ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:5517:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7());
        // InternalKim.g:5520:10: ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:5521:11: ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+
        int cnt486=0;
        loop486:
        do {
            int alt486=4;
            int LA486_0 = input.LA(1);

            if ( LA486_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
                alt486=1;
            }
            else if ( LA486_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
                alt486=2;
            }
            else if ( LA486_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
                alt486=3;
            }


            switch (alt486) {
        	case 1 :
        	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:5522:9: ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:5523:10: {...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0)");
        	    }
        	    // InternalKim.g:5523:113: ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:5524:11: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 0);
        	    // InternalKim.g:5527:14: ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:5527:15: {...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        	    }
        	    // InternalKim.g:5527:24: (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? )
        	    // InternalKim.g:5527:25: otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    {
        	    otherlv_39=(Token)match(input,105,FOLLOW_223); if (state.failed) return ;
        	    // InternalKim.g:5531:14: (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )?
        	    int alt484=2;
        	    int LA484_0 = input.LA(1);

        	    if ( (LA484_0==106) ) {
        	        alt484=1;
        	    }
        	    switch (alt484) {
        	        case 1 :
        	            // InternalKim.g:5532:15: otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            {
        	            otherlv_40=(Token)match(input,106,FOLLOW_224); if (state.failed) return ;
        	            // InternalKim.g:5536:15: ( (lv_lookupNamespace_41_0= rulePathName ) )*
        	            loop483:
        	            do {
        	                int alt483=2;
        	                int LA483_0 = input.LA(1);

        	                if ( ((LA483_0>=RULE_LOWERCASE_ID && LA483_0<=RULE_UPPERCASE_ID)||LA483_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt483=1;
        	                }


        	                switch (alt483) {
        	            	case 1 :
        	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:5537:16: (lv_lookupNamespace_41_0= rulePathName )
        	            	    // InternalKim.g:5538:17: lv_lookupNamespace_41_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_7_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_224);
        	            	    lv_lookupNamespace_41_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop483;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:5562:9: ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:5563:10: {...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1)");
        	    }
        	    // InternalKim.g:5563:113: ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:5564:11: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 1);
        	    // InternalKim.g:5567:14: ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) )
        	    // InternalKim.g:5567:15: {...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        	    }
        	    // InternalKim.g:5567:24: (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* )
        	    // InternalKim.g:5567:25: otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    {
        	    otherlv_42=(Token)match(input,107,FOLLOW_224); if (state.failed) return ;
        	    // InternalKim.g:5571:14: ( (lv_blacklistNamespace_43_0= rulePathName ) )*
        	    loop485:
        	    do {
        	        int alt485=2;
        	        int LA485_0 = input.LA(1);

        	        if ( ((LA485_0>=RULE_LOWERCASE_ID && LA485_0<=RULE_UPPERCASE_ID)||LA485_0==RULE_LOWERCASE_DASHID) ) {
        	            alt485=1;
        	        }


        	        switch (alt485) {
        	    	case 1 :
        	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:5572:15: (lv_blacklistNamespace_43_0= rulePathName )
        	    	    // InternalKim.g:5573:16: lv_blacklistNamespace_43_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_7_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_224);
        	    	    lv_blacklistNamespace_43_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop485;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        	    {
        	    // InternalKim.g:5596:9: ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) )
        	    // InternalKim.g:5597:10: {...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2)");
        	    }
        	    // InternalKim.g:5597:113: ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) )
        	    // InternalKim.g:5598:11: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7(), 2);
        	    // InternalKim.g:5601:14: ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) )
        	    // InternalKim.g:5601:15: {...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        	    }
        	    // InternalKim.g:5601:24: (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) )
        	    // InternalKim.g:5601:25: otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) )
        	    {
        	    otherlv_44=(Token)match(input,32,FOLLOW_37); if (state.failed) return ;
        	    // InternalKim.g:5605:14: ( (lv_weights_45_0= ruleMap ) )
        	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        	    {
        	    // InternalKim.g:5606:15: (lv_weights_45_0= ruleMap )
        	    // InternalKim.g:5607:16: lv_weights_45_0= ruleMap
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMapParserRuleCall_5_7_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_225);
        	    lv_weights_45_0=ruleMap();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt486 >= 1 ) break loop486;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(486, input);
                    throw eee;
            }
            cnt486++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_7())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred233_InternalKim

    // $ANTLR start synpred262_InternalKim
    public final void synpred262_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_4_0=null;

        // InternalKim.g:6541:9: ( (lv_docstring_4_0= RULE_STRING ) )
        // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
        {
        // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
        // InternalKim.g:6542:10: lv_docstring_4_0= RULE_STRING
        {
        lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred262_InternalKim

    // $ANTLR start synpred266_InternalKim
    public final void synpred266_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;


        // InternalKim.g:6615:9: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) )
        // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        {
        // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        // InternalKim.g:6616:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred266_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        }
        // InternalKim.g:6616:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        // InternalKim.g:6617:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        // InternalKim.g:6620:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        // InternalKim.g:6620:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred266_InternalKim", "true");
        }
        // InternalKim.g:6620:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        // InternalKim.g:6620:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        {
        otherlv_10=(Token)match(input,31,FOLLOW_103); if (state.failed) return ;
        // InternalKim.g:6624:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        {
        // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        // InternalKim.g:6626:16: lv_states_11_0= ruleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
          															
        }
        pushFollow(FOLLOW_40);
        lv_states_11_0=ruleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6643:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        loop495:
        do {
            int alt495=2;
            int LA495_0 = input.LA(1);

            if ( (LA495_0==28) ) {
                alt495=1;
            }


            switch (alt495) {
        	case 1 :
        	    // InternalKim.g:6644:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    {
        	    otherlv_12=(Token)match(input,28,FOLLOW_103); if (state.failed) return ;
        	    // InternalKim.g:6648:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    // InternalKim.g:6650:17: lv_states_13_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_states_13_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop495;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred266_InternalKim

    // $ANTLR start synpred268_InternalKim
    public final void synpred268_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;


        // InternalKim.g:6674:9: ( ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )
        // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        {
        // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        // InternalKim.g:6675:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred268_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        }
        // InternalKim.g:6675:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        // InternalKim.g:6676:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        // InternalKim.g:6679:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        // InternalKim.g:6679:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred268_InternalKim", "true");
        }
        // InternalKim.g:6679:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        // InternalKim.g:6679:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        {
        otherlv_14=(Token)match(input,116,FOLLOW_46); if (state.failed) return ;
        // InternalKim.g:6683:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        // InternalKim.g:6684:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        {
        otherlv_15=(Token)match(input,39,FOLLOW_99); if (state.failed) return ;
        // InternalKim.g:6688:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        {
        // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        // InternalKim.g:6690:17: lv_observations_16_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
          																
        }
        pushFollow(FOLLOW_36);
        lv_observations_16_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,40,FOLLOW_40); if (state.failed) return ;

        }

        // InternalKim.g:6712:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        loop496:
        do {
            int alt496=2;
            int LA496_0 = input.LA(1);

            if ( (LA496_0==28) ) {
                alt496=1;
            }


            switch (alt496) {
        	case 1 :
        	    // InternalKim.g:6713:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    {
        	    otherlv_18=(Token)match(input,28,FOLLOW_46); if (state.failed) return ;
        	    otherlv_19=(Token)match(input,39,FOLLOW_99); if (state.failed) return ;
        	    // InternalKim.g:6721:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    // InternalKim.g:6723:17: lv_observations_20_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_36);
        	    lv_observations_20_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_21=(Token)match(input,40,FOLLOW_40); if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    break loop496;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred268_InternalKim

    // $ANTLR start synpred270_InternalKim
    public final void synpred270_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_18=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_16_0 = null;

        EObject lv_observations_20_0 = null;

        EObject lv_actions_22_0 = null;


        // InternalKim.g:6491:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) )
        // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        {
        // InternalKim.g:6491:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) )
        // InternalKim.g:6492:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred270_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:6492:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) )
        // InternalKim.g:6493:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:6496:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) )
        // InternalKim.g:6496:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred270_InternalKim", "true");
        }
        // InternalKim.g:6496:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* )
        // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )*
        {
        // InternalKim.g:6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt497=2;
        alt497 = dfa497.predict(input);
        switch (alt497) {
            case 1 :
                // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:6497:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:6498:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:6499:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_11);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,26,FOLLOW_100); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:6521:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:6522:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:6523:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_226);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:6540:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt498=2;
        int LA498_0 = input.LA(1);

        if ( (LA498_0==RULE_STRING) ) {
            alt498=1;
        }
        switch (alt498) {
            case 1 :
                // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:6541:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:6542:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_227); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:6558:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt500=2;
        int LA500_0 = input.LA(1);

        if ( (LA500_0==115) ) {
            alt500=1;
        }
        switch (alt500) {
            case 1 :
                // InternalKim.g:6559:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,115,FOLLOW_26); if (state.failed) return ;
                // InternalKim.g:6563:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:6564:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:6565:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_228);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:6582:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop499:
                do {
                    int alt499=2;
                    int LA499_0 = input.LA(1);

                    if ( (LA499_0==28) ) {
                        alt499=1;
                    }


                    switch (alt499) {
                	case 1 :
                	    // InternalKim.g:6583:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,28,FOLLOW_26); if (state.failed) return ;
                	    // InternalKim.g:6587:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:6588:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:6589:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_228);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop499;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:6608:8: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) )
        // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        {
        // InternalKim.g:6609:9: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) )
        // InternalKim.g:6610:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4());
        // InternalKim.g:6613:10: ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* )
        // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        {
        // InternalKim.g:6614:11: ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )*
        loop503:
        do {
            int alt503=3;
            int LA503_0 = input.LA(1);

            if ( LA503_0 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
                alt503=1;
            }
            else if ( LA503_0 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
                alt503=2;
            }


            switch (alt503) {
        	case 1 :
        	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    {
        	    // InternalKim.g:6615:9: ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) )
        	    // InternalKim.g:6616:10: {...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0)");
        	    }
        	    // InternalKim.g:6616:124: ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) )
        	    // InternalKim.g:6617:11: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 0);
        	    // InternalKim.g:6620:14: ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) )
        	    // InternalKim.g:6620:15: {...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "true");
        	    }
        	    // InternalKim.g:6620:24: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )
        	    // InternalKim.g:6620:25: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    {
        	    otherlv_10=(Token)match(input,31,FOLLOW_103); if (state.failed) return ;
        	    // InternalKim.g:6624:14: ( (lv_states_11_0= ruleObservableSemantics ) )
        	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        	    {
        	    // InternalKim.g:6625:15: (lv_states_11_0= ruleObservableSemantics )
        	    // InternalKim.g:6626:16: lv_states_11_0= ruleObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_228);
        	    lv_states_11_0=ruleObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:6643:14: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
        	    loop501:
        	    do {
        	        int alt501=2;
        	        int LA501_0 = input.LA(1);

        	        if ( (LA501_0==28) ) {
        	            alt501=1;
        	        }


        	        switch (alt501) {
        	    	case 1 :
        	    	    // InternalKim.g:6644:15: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    {
        	    	    otherlv_12=(Token)match(input,28,FOLLOW_103); if (state.failed) return ;
        	    	    // InternalKim.g:6648:15: ( (lv_states_13_0= ruleObservableSemantics ) )
        	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    {
        	    	    // InternalKim.g:6649:16: (lv_states_13_0= ruleObservableSemantics )
        	    	    // InternalKim.g:6650:17: lv_states_13_0= ruleObservableSemantics
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_4_0_2_1_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_228);
        	    	    lv_states_13_0=ruleObservableSemantics();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop501;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    {
        	    // InternalKim.g:6674:9: ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) )
        	    // InternalKim.g:6675:10: {...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1)");
        	    }
        	    // InternalKim.g:6675:124: ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) )
        	    // InternalKim.g:6676:11: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup_0_4(), 1);
        	    // InternalKim.g:6679:14: ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) )
        	    // InternalKim.g:6679:15: {...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred270_InternalKim", "true");
        	    }
        	    // InternalKim.g:6679:24: (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* )
        	    // InternalKim.g:6679:25: otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    {
        	    otherlv_14=(Token)match(input,116,FOLLOW_46); if (state.failed) return ;
        	    // InternalKim.g:6683:14: (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' )
        	    // InternalKim.g:6684:15: otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')'
        	    {
        	    otherlv_15=(Token)match(input,39,FOLLOW_99); if (state.failed) return ;
        	    // InternalKim.g:6688:15: ( (lv_observations_16_0= ruleObserveStatementBody ) )
        	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    {
        	    // InternalKim.g:6689:16: (lv_observations_16_0= ruleObserveStatementBody )
        	    // InternalKim.g:6690:17: lv_observations_16_0= ruleObserveStatementBody
        	    {
        	    if ( state.backtracking==0 ) {

        	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_1_1_0());
        	      																
        	    }
        	    pushFollow(FOLLOW_36);
        	    lv_observations_16_0=ruleObserveStatementBody();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_17=(Token)match(input,40,FOLLOW_228); if (state.failed) return ;

        	    }

        	    // InternalKim.g:6712:14: (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )*
        	    loop502:
        	    do {
        	        int alt502=2;
        	        int LA502_0 = input.LA(1);

        	        if ( (LA502_0==28) ) {
        	            alt502=1;
        	        }


        	        switch (alt502) {
        	    	case 1 :
        	    	    // InternalKim.g:6713:15: otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')'
        	    	    {
        	    	    otherlv_18=(Token)match(input,28,FOLLOW_46); if (state.failed) return ;
        	    	    otherlv_19=(Token)match(input,39,FOLLOW_99); if (state.failed) return ;
        	    	    // InternalKim.g:6721:15: ( (lv_observations_20_0= ruleObserveStatementBody ) )
        	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    {
        	    	    // InternalKim.g:6722:16: (lv_observations_20_0= ruleObserveStatementBody )
        	    	    // InternalKim.g:6723:17: lv_observations_20_0= ruleObserveStatementBody
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																	newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_4_1_2_2_0());
        	    	      																
        	    	    }
        	    	    pushFollow(FOLLOW_36);
        	    	    lv_observations_20_0=ruleObserveStatementBody();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }

        	    	    otherlv_21=(Token)match(input,40,FOLLOW_228); if (state.failed) return ;

        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop502;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop503;
            }
        } while (true);


        }


        }


        }

        // InternalKim.g:6758:8: ( (lv_actions_22_0= ruleActionSpecification ) )*
        loop504:
        do {
            int alt504=2;
            int LA504_0 = input.LA(1);

            if ( ((LA504_0>=59 && LA504_0<=61)||(LA504_0>=67 && LA504_0<=72)) ) {
                alt504=1;
            }


            switch (alt504) {
        	case 1 :
        	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:6759:9: (lv_actions_22_0= ruleActionSpecification )
        	    // InternalKim.g:6760:10: lv_actions_22_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_5_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_229);
        	    lv_actions_22_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop504;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred270_InternalKim

    // $ANTLR start synpred272_InternalKim
    public final void synpred272_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_accessor_24_0 = null;


        // InternalKim.g:6783:3: ( ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) )
        // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        {
        // InternalKim.g:6783:3: ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) )
        // InternalKim.g:6784:4: {...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred272_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:6784:114: ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) )
        // InternalKim.g:6785:5: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:6788:8: ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) )
        // InternalKim.g:6788:9: {...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred272_InternalKim", "true");
        }
        // InternalKim.g:6788:18: (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? )
        // InternalKim.g:6788:19: otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )?
        {
        otherlv_23=(Token)match(input,32,FOLLOW_222); if (state.failed) return ;
        // InternalKim.g:6792:8: ( (lv_accessor_24_0= ruleFunction ) )?
        int alt505=2;
        int LA505_0 = input.LA(1);

        if ( ((LA505_0>=RULE_LOWERCASE_ID && LA505_0<=RULE_UPPERCASE_ID)||LA505_0==RULE_LOWERCASE_DASHID) ) {
            alt505=1;
        }
        switch (alt505) {
            case 1 :
                // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
                {
                // InternalKim.g:6793:9: (lv_accessor_24_0= ruleFunction )
                // InternalKim.g:6794:10: lv_accessor_24_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_1_1_0());
                  									
                }
                pushFollow(FOLLOW_2);
                lv_accessor_24_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred272_InternalKim

    // $ANTLR start synpred273_InternalKim
    public final void synpred273_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        EObject lv_metadata_26_0 = null;


        // InternalKim.g:6817:3: ( ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:6817:3: ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:6818:4: {...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred273_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2)");
        }
        // InternalKim.g:6818:114: ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) )
        // InternalKim.g:6819:5: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2);
        // InternalKim.g:6822:8: ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) )
        // InternalKim.g:6822:9: {...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred273_InternalKim", "true");
        }
        // InternalKim.g:6822:18: (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) )
        // InternalKim.g:6822:19: otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) )
        {
        otherlv_25=(Token)match(input,42,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:6826:8: ( (lv_metadata_26_0= ruleMap ) )
        // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
        {
        // InternalKim.g:6827:9: (lv_metadata_26_0= ruleMap )
        // InternalKim.g:6828:10: lv_metadata_26_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMapParserRuleCall_2_1_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_metadata_26_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred273_InternalKim

    // $ANTLR start synpred274_InternalKim
    public final void synpred274_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:6891:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:6891:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:6892:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:6893:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred274_InternalKim

    // $ANTLR start synpred276_InternalKim
    public final void synpred276_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:6955:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6955:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6956:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred276_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:6956:116: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6957:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:6960:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:6960:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred276_InternalKim", "true");
        }
        // InternalKim.g:6960:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:6960:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,37,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:6968:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:6969:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:6970:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred276_InternalKim

    // $ANTLR start synpred280_InternalKim
    public final void synpred280_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:7051:11: ( 'per' )
        // InternalKim.g:7051:12: 'per'
        {
        match(input,118,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred280_InternalKim

    // $ANTLR start synpred281_InternalKim
    public final void synpred281_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:6993:4: ( ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6993:4: ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6994:5: {...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred281_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:6994:116: ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6995:6: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:6998:9: ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6998:10: {...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred281_InternalKim", "true");
        }
        // InternalKim.g:6998:19: ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt508=2;
        int LA508_0 = input.LA(1);

        if ( (LA508_0==53) ) {
            alt508=1;
        }
        else if ( (LA508_0==118) && (synpred280_InternalKim())) {
            alt508=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 508, 0, input);

            throw nvae;
        }
        switch (alt508) {
            case 1 :
                // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6998:20: ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                // InternalKim.g:6999:10: ( ( 'in' )=>otherlv_8= 'in' )
                // InternalKim.g:7000:11: ( 'in' )=>otherlv_8= 'in'
                {
                otherlv_8=(Token)match(input,53,FOLLOW_108); if (state.failed) return ;

                }

                // InternalKim.g:7006:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt507=2;
                int LA507_0 = input.LA(1);

                if ( (LA507_0==EOF||LA507_0==RULE_LOWERCASE_ID||LA507_0==RULE_CAMELCASE_ID||LA507_0==RULE_BACKCASE_ID||LA507_0==39||LA507_0==44||LA507_0==112||LA507_0==263) ) {
                    alt507=1;
                }
                else if ( (LA507_0==RULE_UPPERCASE_ID) ) {
                    int LA507_2 = input.LA(2);

                    if ( (LA507_2==EOF||LA507_2==44||LA507_2==112||LA507_2==263) ) {
                        alt507=1;
                    }
                    else if ( (LA507_2==254) ) {
                        alt507=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 507, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 507, 0, input);

                    throw nvae;
                }
                switch (alt507) {
                    case 1 :
                        // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:7007:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:7008:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:7009:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:7027:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:7028:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:7029:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:7049:9: ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) )
                {
                // InternalKim.g:7050:10: ( ( 'per' )=>otherlv_11= 'per' )
                // InternalKim.g:7051:11: ( 'per' )=>otherlv_11= 'per'
                {
                otherlv_11=(Token)match(input,118,FOLLOW_230); if (state.failed) return ;

                }

                // InternalKim.g:7057:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:7058:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:7059:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred281_InternalKim

    // $ANTLR start synpred283_InternalKim
    public final void synpred283_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:7112:10: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:7113:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred283_InternalKim

    // $ANTLR start synpred284_InternalKim
    public final void synpred284_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_13_0 = null;

        EObject lv_valueOperators_14_0 = null;


        // InternalKim.g:7083:4: ( ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:7083:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:7084:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:7084:116: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:7085:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:7088:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) )
        // InternalKim.g:7088:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred284_InternalKim", "true");
        }
        // InternalKim.g:7088:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* )
        // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        {
        // InternalKim.g:7088:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) )
        // InternalKim.g:7089:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator )
        {
        // InternalKim.g:7093:10: (lv_valueOperators_13_0= ruleValueOperator )
        // InternalKim.g:7094:11: lv_valueOperators_13_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_231);
        lv_valueOperators_13_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7111:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*
        loop509:
        do {
            int alt509=2;
            int LA509_0 = input.LA(1);

            if ( (LA509_0==47||LA509_0==60||(LA509_0>=81 && LA509_0<=93)||(LA509_0>=125 && LA509_0<=128)) ) {
                alt509=1;
            }


            switch (alt509) {
        	case 1 :
        	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:7112:10: (lv_valueOperators_14_0= ruleValueOperator )
        	    // InternalKim.g:7113:11: lv_valueOperators_14_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_231);
        	    lv_valueOperators_14_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop509;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred284_InternalKim

    // $ANTLR start synpred286_InternalKim
    public final void synpred286_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_15_0=null;
        Token otherlv_16=null;

        // InternalKim.g:7136:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) )
        // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        {
        // InternalKim.g:7136:4: ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) )
        // InternalKim.g:7137:5: {...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred286_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:7137:116: ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) )
        // InternalKim.g:7138:6: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:7141:9: ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) )
        // InternalKim.g:7141:10: {...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred286_InternalKim", "true");
        }
        // InternalKim.g:7141:19: ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' )
        int alt510=2;
        int LA510_0 = input.LA(1);

        if ( (LA510_0==119) ) {
            alt510=1;
        }
        else if ( (LA510_0==120) ) {
            alt510=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 510, 0, input);

            throw nvae;
        }
        switch (alt510) {
            case 1 :
                // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
                {
                // InternalKim.g:7141:20: ( (lv_optional_15_0= 'optional' ) )
                // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
                {
                // InternalKim.g:7142:10: (lv_optional_15_0= 'optional' )
                // InternalKim.g:7143:11: lv_optional_15_0= 'optional'
                {
                lv_optional_15_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7156:9: otherlv_16= 'required'
                {
                otherlv_16=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred286_InternalKim

    // $ANTLR start synpred290_InternalKim
    public final void synpred290_InternalKim_fragment() throws RecognitionException {   
        Token lv_default_17_0=null;
        Token otherlv_18=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        EObject lv_defaultLiteral_19_0 = null;

        EObject lv_defaultConcept_20_0 = null;

        AntlrDatatypeRuleToken lv_causes_22_0 = null;

        AntlrDatatypeRuleToken lv_causes_24_0 = null;


        // InternalKim.g:7166:4: ( ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) )
        // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        {
        // InternalKim.g:7166:4: ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        // InternalKim.g:7167:5: {...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred290_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:7167:116: ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        // InternalKim.g:7168:6: ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:7171:9: ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        // InternalKim.g:7171:10: {...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred290_InternalKim", "true");
        }
        // InternalKim.g:7171:19: ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        // InternalKim.g:7171:20: ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        {
        // InternalKim.g:7171:20: ( (lv_default_17_0= 'default' ) )
        // InternalKim.g:7172:10: (lv_default_17_0= 'default' )
        {
        // InternalKim.g:7172:10: (lv_default_17_0= 'default' )
        // InternalKim.g:7173:11: lv_default_17_0= 'default'
        {
        lv_default_17_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return ;

        }


        }

        otherlv_18=(Token)match(input,37,FOLLOW_109); if (state.failed) return ;
        // InternalKim.g:7189:9: ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) )
        int alt512=2;
        int LA512_0 = input.LA(1);

        if ( (LA512_0==RULE_STRING||LA512_0==RULE_INT||(LA512_0>=29 && LA512_0<=30)||(LA512_0>=255 && LA512_0<=256)) ) {
            alt512=1;
        }
        else if ( ((LA512_0>=RULE_LOWERCASE_ID && LA512_0<=RULE_UPPERCASE_ID)||LA512_0==RULE_CAMELCASE_ID||LA512_0==RULE_LOWERCASE_DASHID||LA512_0==RULE_UPPERCASE_PATH||LA512_0==39||(LA512_0>=138 && LA512_0<=139)||(LA512_0>=147 && LA512_0<=148)||(LA512_0>=150 && LA512_0<=155)||(LA512_0>=157 && LA512_0<=168)) ) {
            alt512=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 512, 0, input);

            throw nvae;
        }
        switch (alt512) {
            case 1 :
                // InternalKim.g:7190:10: ( (lv_defaultLiteral_19_0= ruleLiteral ) )
                {
                // InternalKim.g:7190:10: ( (lv_defaultLiteral_19_0= ruleLiteral ) )
                // InternalKim.g:7191:11: (lv_defaultLiteral_19_0= ruleLiteral )
                {
                // InternalKim.g:7191:11: (lv_defaultLiteral_19_0= ruleLiteral )
                // InternalKim.g:7192:12: lv_defaultLiteral_19_0= ruleLiteral
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDefaultLiteralLiteralParserRuleCall_3_4_2_0_0());
                  											
                }
                pushFollow(FOLLOW_232);
                lv_defaultLiteral_19_0=ruleLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7210:10: ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:7210:10: ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) )
                // InternalKim.g:7211:11: (lv_defaultConcept_20_0= ruleConceptDeclaration )
                {
                // InternalKim.g:7211:11: (lv_defaultConcept_20_0= ruleConceptDeclaration )
                // InternalKim.g:7212:12: lv_defaultConcept_20_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDefaultConceptConceptDeclarationParserRuleCall_3_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_232);
                lv_defaultConcept_20_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:7230:9: (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        int alt514=2;
        int LA514_0 = input.LA(1);

        if ( (LA514_0==122) ) {
            alt514=1;
        }
        switch (alt514) {
            case 1 :
                // InternalKim.g:7231:10: otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )*
                {
                otherlv_21=(Token)match(input,122,FOLLOW_111); if (state.failed) return ;
                // InternalKim.g:7235:10: ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) )
                // InternalKim.g:7236:11: (lv_causes_22_0= ruleRESOLUTION_EXCEPTION )
                {
                // InternalKim.g:7236:11: (lv_causes_22_0= ruleRESOLUTION_EXCEPTION )
                // InternalKim.g:7237:12: lv_causes_22_0= ruleRESOLUTION_EXCEPTION
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_4_3_1_0());
                  											
                }
                pushFollow(FOLLOW_40);
                lv_causes_22_0=ruleRESOLUTION_EXCEPTION();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:7254:10: (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )*
                loop513:
                do {
                    int alt513=2;
                    int LA513_0 = input.LA(1);

                    if ( (LA513_0==28) ) {
                        alt513=1;
                    }


                    switch (alt513) {
                	case 1 :
                	    // InternalKim.g:7255:11: otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) )
                	    {
                	    otherlv_23=(Token)match(input,28,FOLLOW_111); if (state.failed) return ;
                	    // InternalKim.g:7259:11: ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) )
                	    // InternalKim.g:7260:12: (lv_causes_24_0= ruleRESOLUTION_EXCEPTION )
                	    {
                	    // InternalKim.g:7260:12: (lv_causes_24_0= ruleRESOLUTION_EXCEPTION )
                	    // InternalKim.g:7261:13: lv_causes_24_0= ruleRESOLUTION_EXCEPTION
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_4_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_40);
                	    lv_causes_24_0=ruleRESOLUTION_EXCEPTION();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop513;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred290_InternalKim

    // $ANTLR start synpred291_InternalKim
    public final void synpred291_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        EObject lv_from_25_0 = null;

        EObject lv_to_27_0 = null;


        // InternalKim.g:7286:4: ( ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7286:4: ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7286:4: ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7287:5: {...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred291_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:7287:116: ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7288:6: ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:7291:9: ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) )
        // InternalKim.g:7291:10: {...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred291_InternalKim", "true");
        }
        // InternalKim.g:7291:19: ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) )
        // InternalKim.g:7291:20: ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) )
        {
        // InternalKim.g:7291:20: ( (lv_from_25_0= ruleNumber ) )
        // InternalKim.g:7292:10: (lv_from_25_0= ruleNumber )
        {
        // InternalKim.g:7292:10: (lv_from_25_0= ruleNumber )
        // InternalKim.g:7293:11: lv_from_25_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_5_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_25_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_26=(Token)match(input,37,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:7314:9: ( (lv_to_27_0= ruleNumber ) )
        // InternalKim.g:7315:10: (lv_to_27_0= ruleNumber )
        {
        // InternalKim.g:7315:10: (lv_to_27_0= ruleNumber )
        // InternalKim.g:7316:11: lv_to_27_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_27_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred291_InternalKim

    // $ANTLR start synpred293_InternalKim
    public final void synpred293_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_28=null;
        Token lv_name_29_1=null;
        Token lv_name_29_2=null;

        // InternalKim.g:7339:4: ( ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:7339:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:7339:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:7340:5: {...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred293_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:7340:116: ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:7341:6: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:7344:9: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:7344:10: {...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred293_InternalKim", "true");
        }
        // InternalKim.g:7344:19: (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
        // InternalKim.g:7344:20: otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
        {
        otherlv_28=(Token)match(input,123,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:7348:9: ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
        // InternalKim.g:7349:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
        {
        // InternalKim.g:7349:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
        // InternalKim.g:7350:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
        {
        // InternalKim.g:7350:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
        int alt515=2;
        int LA515_0 = input.LA(1);

        if ( (LA515_0==RULE_LOWERCASE_ID) ) {
            alt515=1;
        }
        else if ( (LA515_0==RULE_STRING) ) {
            alt515=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 515, 0, input);

            throw nvae;
        }
        switch (alt515) {
            case 1 :
                // InternalKim.g:7351:12: lv_name_29_1= RULE_LOWERCASE_ID
                {
                lv_name_29_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:7366:12: lv_name_29_2= RULE_STRING
                {
                lv_name_29_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred293_InternalKim

    // $ANTLR start synpred303_InternalKim
    public final void synpred303_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:7581:12: ( 'per' )
        // InternalKim.g:7581:13: 'per'
        {
        match(input,118,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred303_InternalKim

    // $ANTLR start synpred304_InternalKim
    public final void synpred304_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_8=null;
        EObject lv_unit_6_0 = null;

        EObject lv_currency_7_0 = null;

        EObject lv_unit_9_0 = null;


        // InternalKim.g:7500:4: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) )
        // InternalKim.g:7500:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        {
        // InternalKim.g:7500:4: ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:7501:5: {...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalKim.g:7501:122: ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:7502:6: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0);
        // InternalKim.g:7505:9: ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:7505:10: {...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred304_InternalKim", "true");
        }
        // InternalKim.g:7505:19: ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) )
        // InternalKim.g:7505:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
        {
        // InternalKim.g:7505:20: ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) )
        int alt519=2;
        int LA519_0 = input.LA(1);

        if ( (LA519_0==53) ) {
            alt519=1;
        }
        else if ( (LA519_0==118) && (synpred303_InternalKim())) {
            alt519=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 519, 0, input);

            throw nvae;
        }
        switch (alt519) {
            case 1 :
                // InternalKim.g:7506:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
                {
                // InternalKim.g:7506:10: ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) )
                // InternalKim.g:7507:11: ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:7527:11: ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) )
                // InternalKim.g:7528:12: ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                {
                // InternalKim.g:7528:12: ( ( 'in' )=>otherlv_5= 'in' )
                // InternalKim.g:7529:13: ( 'in' )=>otherlv_5= 'in'
                {
                otherlv_5=(Token)match(input,53,FOLLOW_108); if (state.failed) return ;

                }

                // InternalKim.g:7535:12: ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) )
                int alt518=2;
                int LA518_0 = input.LA(1);

                if ( (LA518_0==EOF||LA518_0==RULE_LOWERCASE_ID||LA518_0==RULE_CAMELCASE_ID||LA518_0==RULE_BACKCASE_ID||LA518_0==39||LA518_0==44||LA518_0==112||LA518_0==263) ) {
                    alt518=1;
                }
                else if ( (LA518_0==RULE_UPPERCASE_ID) ) {
                    int LA518_2 = input.LA(2);

                    if ( (LA518_2==254) ) {
                        alt518=2;
                    }
                    else if ( (LA518_2==EOF||LA518_2==44||LA518_2==112||LA518_2==263) ) {
                        alt518=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 518, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 518, 0, input);

                    throw nvae;
                }
                switch (alt518) {
                    case 1 :
                        // InternalKim.g:7536:13: ( (lv_unit_6_0= ruleUnit ) )
                        {
                        // InternalKim.g:7536:13: ( (lv_unit_6_0= ruleUnit ) )
                        // InternalKim.g:7537:14: (lv_unit_6_0= ruleUnit )
                        {
                        // InternalKim.g:7537:14: (lv_unit_6_0= ruleUnit )
                        // InternalKim.g:7538:15: lv_unit_6_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_0_0_1_0_0());
                          														
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_6_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:7556:13: ( (lv_currency_7_0= ruleCurrency ) )
                        {
                        // InternalKim.g:7556:13: ( (lv_currency_7_0= ruleCurrency ) )
                        // InternalKim.g:7557:14: (lv_currency_7_0= ruleCurrency )
                        {
                        // InternalKim.g:7557:14: (lv_currency_7_0= ruleCurrency )
                        // InternalKim.g:7558:15: lv_currency_7_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          															newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_2_0_0_0_0_1_1_0());
                          														
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_7_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:7579:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
                {
                // InternalKim.g:7579:10: ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) )
                // InternalKim.g:7580:11: ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) )
                {
                // InternalKim.g:7580:11: ( ( 'per' )=>otherlv_8= 'per' )
                // InternalKim.g:7581:12: ( 'per' )=>otherlv_8= 'per'
                {
                otherlv_8=(Token)match(input,118,FOLLOW_230); if (state.failed) return ;

                }

                // InternalKim.g:7587:11: ( (lv_unit_9_0= ruleUnit ) )
                // InternalKim.g:7588:12: (lv_unit_9_0= ruleUnit )
                {
                // InternalKim.g:7588:12: (lv_unit_9_0= ruleUnit )
                // InternalKim.g:7589:13: lv_unit_9_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_2_0_0_1_1_0());
                  												
                }
                pushFollow(FOLLOW_2);
                lv_unit_9_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred304_InternalKim

    // $ANTLR start synpred306_InternalKim
    public final void synpred306_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_11_0 = null;


        // InternalKim.g:7643:10: ( (lv_valueOperators_11_0= ruleValueOperator ) )
        // InternalKim.g:7643:10: (lv_valueOperators_11_0= ruleValueOperator )
        {
        // InternalKim.g:7643:10: (lv_valueOperators_11_0= ruleValueOperator )
        // InternalKim.g:7644:11: lv_valueOperators_11_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_11_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred306_InternalKim

    // $ANTLR start synpred307_InternalKim
    public final void synpred307_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_10_0 = null;

        EObject lv_valueOperators_11_0 = null;


        // InternalKim.g:7614:4: ( ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:7614:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:7614:4: ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:7615:5: {...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred307_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalKim.g:7615:122: ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:7616:6: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1);
        // InternalKim.g:7619:9: ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) )
        // InternalKim.g:7619:10: {...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred307_InternalKim", "true");
        }
        // InternalKim.g:7619:19: ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* )
        // InternalKim.g:7619:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )*
        {
        // InternalKim.g:7619:20: ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) )
        // InternalKim.g:7620:10: ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator )
        {
        // InternalKim.g:7624:10: (lv_valueOperators_10_0= ruleValueOperator )
        // InternalKim.g:7625:11: lv_valueOperators_10_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_0_0());
          										
        }
        pushFollow(FOLLOW_231);
        lv_valueOperators_10_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:7642:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*
        loop520:
        do {
            int alt520=2;
            int LA520_0 = input.LA(1);

            if ( (LA520_0==47||LA520_0==60||(LA520_0>=81 && LA520_0<=93)||(LA520_0>=125 && LA520_0<=128)) ) {
                alt520=1;
            }


            switch (alt520) {
        	case 1 :
        	    // InternalKim.g:7643:10: (lv_valueOperators_11_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:7643:10: (lv_valueOperators_11_0= ruleValueOperator )
        	    // InternalKim.g:7644:11: lv_valueOperators_11_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_2_1_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_231);
        	    lv_valueOperators_11_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop520;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred307_InternalKim

    // $ANTLR start synpred308_InternalKim
    public final void synpred308_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        EObject lv_from_12_0 = null;

        EObject lv_to_14_0 = null;


        // InternalKim.g:7667:4: ( ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:7667:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:7667:4: ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:7668:5: {...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred308_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2)");
        }
        // InternalKim.g:7668:122: ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) )
        // InternalKim.g:7669:6: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2);
        // InternalKim.g:7672:9: ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) )
        // InternalKim.g:7672:10: {...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred308_InternalKim", "true");
        }
        // InternalKim.g:7672:19: ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) )
        // InternalKim.g:7672:20: ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) )
        {
        // InternalKim.g:7672:20: ( (lv_from_12_0= ruleNumber ) )
        // InternalKim.g:7673:10: (lv_from_12_0= ruleNumber )
        {
        // InternalKim.g:7673:10: (lv_from_12_0= ruleNumber )
        // InternalKim.g:7674:11: lv_from_12_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_2_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_12_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_13=(Token)match(input,37,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:7695:9: ( (lv_to_14_0= ruleNumber ) )
        // InternalKim.g:7696:10: (lv_to_14_0= ruleNumber )
        {
        // InternalKim.g:7696:10: (lv_to_14_0= ruleNumber )
        // InternalKim.g:7697:11: lv_to_14_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_2_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_14_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred308_InternalKim

    // $ANTLR start synpred310_InternalKim
    public final void synpred310_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonValue_3_0 = null;


        // InternalKim.g:7793:5: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) )
        // InternalKim.g:7793:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        {
        // InternalKim.g:7793:5: ( (lv_comparisonValue_3_0= ruleNumber ) )
        // InternalKim.g:7794:6: (lv_comparisonValue_3_0= ruleNumber )
        {
        // InternalKim.g:7794:6: (lv_comparisonValue_3_0= ruleNumber )
        // InternalKim.g:7795:7: lv_comparisonValue_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonValueNumberParserRuleCall_0_1_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonValue_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred310_InternalKim

    // $ANTLR start synpred311_InternalKim
    public final void synpred311_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonQuantity_4_0 = null;


        // InternalKim.g:7813:5: ( ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) )
        // InternalKim.g:7813:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        {
        // InternalKim.g:7813:5: ( (lv_comparisonQuantity_4_0= ruleQuantity ) )
        // InternalKim.g:7814:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        {
        // InternalKim.g:7814:6: (lv_comparisonQuantity_4_0= ruleQuantity )
        // InternalKim.g:7815:7: lv_comparisonQuantity_4_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonQuantityQuantityParserRuleCall_0_1_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonQuantity_4_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred311_InternalKim

    // $ANTLR start synpred312_InternalKim
    public final void synpred312_InternalKim_fragment() throws RecognitionException {   
        EObject lv_comparisonConcept_5_0 = null;


        // InternalKim.g:7833:5: ( ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:7833:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:7833:5: ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) )
        // InternalKim.g:7834:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        {
        // InternalKim.g:7834:6: (lv_comparisonConcept_5_0= ruleConceptDeclaration )
        // InternalKim.g:7835:7: lv_comparisonConcept_5_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getValueOperatorAccess().getComparisonConceptConceptDeclarationParserRuleCall_0_1_2_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_comparisonConcept_5_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred312_InternalKim

    // $ANTLR start synpred317_InternalKim
    public final void synpred317_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_value_1_0 = null;


        // InternalKim.g:7978:4: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )
        // InternalKim.g:7978:4: ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as'
        {
        // InternalKim.g:7978:4: ( (lv_value_1_0= ruleValue ) )
        // InternalKim.g:7979:5: (lv_value_1_0= ruleValue )
        {
        // InternalKim.g:7979:5: (lv_value_1_0= ruleValue )
        // InternalKim.g:7980:6: lv_value_1_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueValueParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_1_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_2=(Token)match(input,26,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred317_InternalKim

    // $ANTLR start synpred319_InternalKim
    public final void synpred319_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_6=null;
        Token otherlv_7=null;
        AntlrDatatypeRuleToken lv_accordingTo_8_0 = null;


        // InternalKim.g:8042:4: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:8042:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:8042:4: ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:8043:5: {...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred319_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0)");
        }
        // InternalKim.g:8043:125: ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:8044:6: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0);
        // InternalKim.g:8047:9: ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) )
        // InternalKim.g:8047:10: {...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred319_InternalKim", "true");
        }
        // InternalKim.g:8047:19: (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) )
        // InternalKim.g:8047:20: otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) )
        {
        otherlv_6=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        otherlv_7=(Token)match(input,37,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:8055:9: ( (lv_accordingTo_8_0= rulePropertyId ) )
        // InternalKim.g:8056:10: (lv_accordingTo_8_0= rulePropertyId )
        {
        // InternalKim.g:8056:10: (lv_accordingTo_8_0= rulePropertyId )
        // InternalKim.g:8057:11: lv_accordingTo_8_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_4_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_8_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred319_InternalKim

    // $ANTLR start synpred322_InternalKim
    public final void synpred322_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_12=null;
        EObject lv_unit_10_0 = null;

        EObject lv_currency_11_0 = null;

        EObject lv_unit_13_0 = null;


        // InternalKim.g:8080:4: ( ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:8080:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:8080:4: ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:8081:5: {...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred322_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1)");
        }
        // InternalKim.g:8081:125: ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:8082:6: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1);
        // InternalKim.g:8085:9: ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) )
        // InternalKim.g:8085:10: {...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred322_InternalKim", "true");
        }
        // InternalKim.g:8085:19: ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) )
        int alt525=2;
        int LA525_0 = input.LA(1);

        if ( (LA525_0==53) ) {
            alt525=1;
        }
        else if ( (LA525_0==118) ) {
            alt525=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 525, 0, input);

            throw nvae;
        }
        switch (alt525) {
            case 1 :
                // InternalKim.g:8085:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:8085:20: (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) )
                // InternalKim.g:8086:10: otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                {
                otherlv_9=(Token)match(input,53,FOLLOW_108); if (state.failed) return ;
                // InternalKim.g:8090:10: ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) )
                int alt524=2;
                int LA524_0 = input.LA(1);

                if ( (LA524_0==EOF||LA524_0==RULE_LOWERCASE_ID||LA524_0==RULE_CAMELCASE_ID||LA524_0==RULE_BACKCASE_ID||LA524_0==39||LA524_0==44||LA524_0==112||LA524_0==263) ) {
                    alt524=1;
                }
                else if ( (LA524_0==RULE_UPPERCASE_ID) ) {
                    int LA524_2 = input.LA(2);

                    if ( (LA524_2==254) ) {
                        alt524=2;
                    }
                    else if ( (LA524_2==EOF||LA524_2==44||LA524_2==112||LA524_2==263) ) {
                        alt524=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 524, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 524, 0, input);

                    throw nvae;
                }
                switch (alt524) {
                    case 1 :
                        // InternalKim.g:8091:11: ( (lv_unit_10_0= ruleUnit ) )
                        {
                        // InternalKim.g:8091:11: ( (lv_unit_10_0= ruleUnit ) )
                        // InternalKim.g:8092:12: (lv_unit_10_0= ruleUnit )
                        {
                        // InternalKim.g:8092:12: (lv_unit_10_0= ruleUnit )
                        // InternalKim.g:8093:13: lv_unit_10_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_10_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:8111:11: ( (lv_currency_11_0= ruleCurrency ) )
                        {
                        // InternalKim.g:8111:11: ( (lv_currency_11_0= ruleCurrency ) )
                        // InternalKim.g:8112:12: (lv_currency_11_0= ruleCurrency )
                        {
                        // InternalKim.g:8112:12: (lv_currency_11_0= ruleCurrency )
                        // InternalKim.g:8113:13: lv_currency_11_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_4_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_11_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8133:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                {
                // InternalKim.g:8133:9: (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) )
                // InternalKim.g:8134:10: otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) )
                {
                otherlv_12=(Token)match(input,118,FOLLOW_230); if (state.failed) return ;
                // InternalKim.g:8138:10: ( (lv_unit_13_0= ruleUnit ) )
                // InternalKim.g:8139:11: (lv_unit_13_0= ruleUnit )
                {
                // InternalKim.g:8139:11: (lv_unit_13_0= ruleUnit )
                // InternalKim.g:8140:12: lv_unit_13_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnitUnitParserRuleCall_4_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_13_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred322_InternalKim

    // $ANTLR start synpred323_InternalKim
    public final void synpred323_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:8189:10: ( (lv_valueOperators_15_0= ruleValueOperator ) )
        // InternalKim.g:8189:10: (lv_valueOperators_15_0= ruleValueOperator )
        {
        // InternalKim.g:8189:10: (lv_valueOperators_15_0= ruleValueOperator )
        // InternalKim.g:8190:11: lv_valueOperators_15_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_15_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred323_InternalKim

    // $ANTLR start synpred324_InternalKim
    public final void synpred324_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_14_0 = null;

        EObject lv_valueOperators_15_0 = null;


        // InternalKim.g:8164:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:8164:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:8164:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:8165:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred324_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2)");
        }
        // InternalKim.g:8165:125: ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:8166:6: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2);
        // InternalKim.g:8169:9: ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) )
        // InternalKim.g:8169:10: {...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred324_InternalKim", "true");
        }
        // InternalKim.g:8169:19: ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* )
        // InternalKim.g:8169:20: ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        {
        // InternalKim.g:8169:20: ( (lv_valueOperators_14_0= ruleValueOperator ) )
        // InternalKim.g:8170:10: (lv_valueOperators_14_0= ruleValueOperator )
        {
        // InternalKim.g:8170:10: (lv_valueOperators_14_0= ruleValueOperator )
        // InternalKim.g:8171:11: lv_valueOperators_14_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_0_0());
          										
        }
        pushFollow(FOLLOW_231);
        lv_valueOperators_14_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:8188:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*
        loop526:
        do {
            int alt526=2;
            int LA526_0 = input.LA(1);

            if ( (LA526_0==47||LA526_0==60||(LA526_0>=81 && LA526_0<=93)||(LA526_0>=125 && LA526_0<=128)) ) {
                alt526=1;
            }


            switch (alt526) {
        	case 1 :
        	    // InternalKim.g:8189:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:8189:10: (lv_valueOperators_15_0= ruleValueOperator )
        	    // InternalKim.g:8190:11: lv_valueOperators_15_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_4_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_231);
        	    lv_valueOperators_15_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop526;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred324_InternalKim

    // $ANTLR start synpred326_InternalKim
    public final void synpred326_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_16_0=null;
        Token otherlv_17=null;

        // InternalKim.g:8213:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) )
        // InternalKim.g:8213:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        {
        // InternalKim.g:8213:4: ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) )
        // InternalKim.g:8214:5: {...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred326_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3)");
        }
        // InternalKim.g:8214:125: ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) )
        // InternalKim.g:8215:6: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3);
        // InternalKim.g:8218:9: ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) )
        // InternalKim.g:8218:10: {...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred326_InternalKim", "true");
        }
        // InternalKim.g:8218:19: ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' )
        int alt527=2;
        int LA527_0 = input.LA(1);

        if ( (LA527_0==119) ) {
            alt527=1;
        }
        else if ( (LA527_0==120) ) {
            alt527=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 527, 0, input);

            throw nvae;
        }
        switch (alt527) {
            case 1 :
                // InternalKim.g:8218:20: ( (lv_optional_16_0= 'optional' ) )
                {
                // InternalKim.g:8218:20: ( (lv_optional_16_0= 'optional' ) )
                // InternalKim.g:8219:10: (lv_optional_16_0= 'optional' )
                {
                // InternalKim.g:8219:10: (lv_optional_16_0= 'optional' )
                // InternalKim.g:8220:11: lv_optional_16_0= 'optional'
                {
                lv_optional_16_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8233:9: otherlv_17= 'required'
                {
                otherlv_17=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred326_InternalKim

    // $ANTLR start synpred330_InternalKim
    public final void synpred330_InternalKim_fragment() throws RecognitionException {   
        Token lv_default_18_0=null;
        Token otherlv_19=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        EObject lv_defaultLiteral_20_0 = null;

        EObject lv_defaultConcept_21_0 = null;

        AntlrDatatypeRuleToken lv_causes_23_0 = null;

        AntlrDatatypeRuleToken lv_causes_25_0 = null;


        // InternalKim.g:8243:4: ( ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) )
        // InternalKim.g:8243:4: ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        {
        // InternalKim.g:8243:4: ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        // InternalKim.g:8244:5: {...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred330_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4)");
        }
        // InternalKim.g:8244:125: ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        // InternalKim.g:8245:6: ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4);
        // InternalKim.g:8248:9: ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        // InternalKim.g:8248:10: {...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred330_InternalKim", "true");
        }
        // InternalKim.g:8248:19: ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        // InternalKim.g:8248:20: ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        {
        // InternalKim.g:8248:20: ( (lv_default_18_0= 'default' ) )
        // InternalKim.g:8249:10: (lv_default_18_0= 'default' )
        {
        // InternalKim.g:8249:10: (lv_default_18_0= 'default' )
        // InternalKim.g:8250:11: lv_default_18_0= 'default'
        {
        lv_default_18_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return ;

        }


        }

        otherlv_19=(Token)match(input,37,FOLLOW_109); if (state.failed) return ;
        // InternalKim.g:8266:9: ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) )
        int alt529=2;
        int LA529_0 = input.LA(1);

        if ( (LA529_0==RULE_STRING||LA529_0==RULE_INT||(LA529_0>=29 && LA529_0<=30)||(LA529_0>=255 && LA529_0<=256)) ) {
            alt529=1;
        }
        else if ( ((LA529_0>=RULE_LOWERCASE_ID && LA529_0<=RULE_UPPERCASE_ID)||LA529_0==RULE_CAMELCASE_ID||LA529_0==RULE_LOWERCASE_DASHID||LA529_0==RULE_UPPERCASE_PATH||LA529_0==39||(LA529_0>=138 && LA529_0<=139)||(LA529_0>=147 && LA529_0<=148)||(LA529_0>=150 && LA529_0<=155)||(LA529_0>=157 && LA529_0<=168)) ) {
            alt529=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 529, 0, input);

            throw nvae;
        }
        switch (alt529) {
            case 1 :
                // InternalKim.g:8267:10: ( (lv_defaultLiteral_20_0= ruleLiteral ) )
                {
                // InternalKim.g:8267:10: ( (lv_defaultLiteral_20_0= ruleLiteral ) )
                // InternalKim.g:8268:11: (lv_defaultLiteral_20_0= ruleLiteral )
                {
                // InternalKim.g:8268:11: (lv_defaultLiteral_20_0= ruleLiteral )
                // InternalKim.g:8269:12: lv_defaultLiteral_20_0= ruleLiteral
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDefaultLiteralLiteralParserRuleCall_4_4_2_0_0());
                  											
                }
                pushFollow(FOLLOW_232);
                lv_defaultLiteral_20_0=ruleLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8287:10: ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:8287:10: ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) )
                // InternalKim.g:8288:11: (lv_defaultConcept_21_0= ruleConceptDeclaration )
                {
                // InternalKim.g:8288:11: (lv_defaultConcept_21_0= ruleConceptDeclaration )
                // InternalKim.g:8289:12: lv_defaultConcept_21_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getDefaultConceptConceptDeclarationParserRuleCall_4_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_232);
                lv_defaultConcept_21_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:8307:9: (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        int alt531=2;
        int LA531_0 = input.LA(1);

        if ( (LA531_0==122) ) {
            alt531=1;
        }
        switch (alt531) {
            case 1 :
                // InternalKim.g:8308:10: otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )*
                {
                otherlv_22=(Token)match(input,122,FOLLOW_111); if (state.failed) return ;
                // InternalKim.g:8312:10: ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) )
                // InternalKim.g:8313:11: (lv_causes_23_0= ruleRESOLUTION_EXCEPTION )
                {
                // InternalKim.g:8313:11: (lv_causes_23_0= ruleRESOLUTION_EXCEPTION )
                // InternalKim.g:8314:12: lv_causes_23_0= ruleRESOLUTION_EXCEPTION
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_4_4_3_1_0());
                  											
                }
                pushFollow(FOLLOW_40);
                lv_causes_23_0=ruleRESOLUTION_EXCEPTION();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:8331:10: (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )*
                loop530:
                do {
                    int alt530=2;
                    int LA530_0 = input.LA(1);

                    if ( (LA530_0==28) ) {
                        alt530=1;
                    }


                    switch (alt530) {
                	case 1 :
                	    // InternalKim.g:8332:11: otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) )
                	    {
                	    otherlv_24=(Token)match(input,28,FOLLOW_111); if (state.failed) return ;
                	    // InternalKim.g:8336:11: ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) )
                	    // InternalKim.g:8337:12: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
                	    {
                	    // InternalKim.g:8337:12: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
                	    // InternalKim.g:8338:13: lv_causes_25_0= ruleRESOLUTION_EXCEPTION
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_4_4_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_40);
                	    lv_causes_25_0=ruleRESOLUTION_EXCEPTION();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop530;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred330_InternalKim

    // $ANTLR start synpred331_InternalKim
    public final void synpred331_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        EObject lv_from_26_0 = null;

        EObject lv_to_28_0 = null;


        // InternalKim.g:8363:4: ( ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:8363:4: ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:8363:4: ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:8364:5: {...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred331_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5)");
        }
        // InternalKim.g:8364:125: ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) )
        // InternalKim.g:8365:6: ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5);
        // InternalKim.g:8368:9: ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) )
        // InternalKim.g:8368:10: {...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred331_InternalKim", "true");
        }
        // InternalKim.g:8368:19: ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) )
        // InternalKim.g:8368:20: ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) )
        {
        // InternalKim.g:8368:20: ( (lv_from_26_0= ruleNumber ) )
        // InternalKim.g:8369:10: (lv_from_26_0= ruleNumber )
        {
        // InternalKim.g:8369:10: (lv_from_26_0= ruleNumber )
        // InternalKim.g:8370:11: lv_from_26_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getFromNumberParserRuleCall_4_5_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_26_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_27=(Token)match(input,37,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:8391:9: ( (lv_to_28_0= ruleNumber ) )
        // InternalKim.g:8392:10: (lv_to_28_0= ruleNumber )
        {
        // InternalKim.g:8392:10: (lv_to_28_0= ruleNumber )
        // InternalKim.g:8393:11: lv_to_28_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAnnotatedObservableSemanticsAccess().getToNumberParserRuleCall_4_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_28_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred331_InternalKim

    // $ANTLR start synpred333_InternalKim
    public final void synpred333_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token lv_name_30_1=null;
        Token lv_name_30_2=null;

        // InternalKim.g:8416:4: ( ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:8416:4: ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:8416:4: ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:8417:5: {...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred333_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6)");
        }
        // InternalKim.g:8417:125: ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:8418:6: ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6);
        // InternalKim.g:8421:9: ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:8421:10: {...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred333_InternalKim", "true");
        }
        // InternalKim.g:8421:19: (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) )
        // InternalKim.g:8421:20: otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) )
        {
        otherlv_29=(Token)match(input,123,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:8425:9: ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) )
        // InternalKim.g:8426:10: ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) )
        {
        // InternalKim.g:8426:10: ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) )
        // InternalKim.g:8427:11: (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING )
        {
        // InternalKim.g:8427:11: (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING )
        int alt532=2;
        int LA532_0 = input.LA(1);

        if ( (LA532_0==RULE_LOWERCASE_ID) ) {
            alt532=1;
        }
        else if ( (LA532_0==RULE_STRING) ) {
            alt532=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 532, 0, input);

            throw nvae;
        }
        switch (alt532) {
            case 1 :
                // InternalKim.g:8428:12: lv_name_30_1= RULE_LOWERCASE_ID
                {
                lv_name_30_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8443:12: lv_name_30_2= RULE_STRING
                {
                lv_name_30_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred333_InternalKim

    // $ANTLR start synpred335_InternalKim
    public final void synpred335_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;

        // InternalKim.g:8529:8: (lv_modelReference_1_1= RULE_LOWERCASE_ID )
        // InternalKim.g:8529:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred335_InternalKim

    // $ANTLR start synpred336_InternalKim
    public final void synpred336_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;


        // InternalKim.g:8544:8: (lv_modelReference_1_2= rulePathName )
        // InternalKim.g:8544:8: lv_modelReference_1_2= rulePathName
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_1_0_0_0_1());
          							
        }
        pushFollow(FOLLOW_2);
        lv_modelReference_1_2=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred336_InternalKim

    // $ANTLR start synpred338_InternalKim
    public final void synpred338_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;


        // InternalKim.g:8526:5: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) )
        // InternalKim.g:8526:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
        {
        // InternalKim.g:8526:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
        // InternalKim.g:8527:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
        {
        // InternalKim.g:8527:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
        // InternalKim.g:8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
        {
        // InternalKim.g:8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
        int alt533=4;
        alt533 = dfa533.predict(input);
        switch (alt533) {
            case 1 :
                // InternalKim.g:8529:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                {
                lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8544:8: lv_modelReference_1_2= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_modelReference_1_2=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:8560:8: lv_modelReference_1_3= ruleUrnId
                {
                pushFollow(FOLLOW_2);
                lv_modelReference_1_3=ruleUrnId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:8576:8: lv_modelReference_1_4= RULE_STRING
                {
                lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred338_InternalKim

    // $ANTLR start synpred339_InternalKim
    public final void synpred339_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_1_1=null;
        Token lv_modelReference_1_4=null;
        AntlrDatatypeRuleToken lv_modelReference_1_2 = null;

        AntlrDatatypeRuleToken lv_modelReference_1_3 = null;

        EObject lv_observable_2_0 = null;


        // InternalKim.g:8525:4: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) )
        // InternalKim.g:8525:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        {
        // InternalKim.g:8525:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )
        int alt535=2;
        alt535 = dfa535.predict(input);
        switch (alt535) {
            case 1 :
                // InternalKim.g:8526:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                {
                // InternalKim.g:8526:5: ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) )
                // InternalKim.g:8527:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                {
                // InternalKim.g:8527:6: ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) )
                // InternalKim.g:8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                {
                // InternalKim.g:8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )
                int alt534=4;
                alt534 = dfa534.predict(input);
                switch (alt534) {
                    case 1 :
                        // InternalKim.g:8529:8: lv_modelReference_1_1= RULE_LOWERCASE_ID
                        {
                        lv_modelReference_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:8544:8: lv_modelReference_1_2= rulePathName
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_2=rulePathName();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:8560:8: lv_modelReference_1_3= ruleUrnId
                        {
                        pushFollow(FOLLOW_2);
                        lv_modelReference_1_3=ruleUrnId();

                        state._fsp--;
                        if (state.failed) return ;

                        }
                        break;
                    case 4 :
                        // InternalKim.g:8576:8: lv_modelReference_1_4= RULE_STRING
                        {
                        lv_modelReference_1_4=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8594:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                {
                // InternalKim.g:8594:5: ( (lv_observable_2_0= ruleDependencyObservableSemantics ) )
                // InternalKim.g:8595:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                {
                // InternalKim.g:8595:6: (lv_observable_2_0= ruleDependencyObservableSemantics )
                // InternalKim.g:8596:7: lv_observable_2_0= ruleDependencyObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getDependencyAccess().getObservableDependencyObservableSemanticsParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_2);
                lv_observable_2_0=ruleDependencyObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred339_InternalKim

    // $ANTLR start synpred343_InternalKim
    public final void synpred343_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_optional_9_0=null;
        Token otherlv_10=null;
        EObject lv_alternativeObservables_5_0 = null;

        EObject lv_alternativeObservables_7_0 = null;


        // InternalKim.g:8622:5: ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) )
        // InternalKim.g:8622:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        {
        // InternalKim.g:8622:5: ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) )
        // InternalKim.g:8623:6: {...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred343_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0)");
        }
        // InternalKim.g:8623:110: ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) )
        // InternalKim.g:8624:7: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 0);
        // InternalKim.g:8627:10: ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) )
        // InternalKim.g:8627:11: {...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred343_InternalKim", "true");
        }
        // InternalKim.g:8627:20: (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? )
        // InternalKim.g:8627:21: otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        {
        otherlv_4=(Token)match(input,39,FOLLOW_103); if (state.failed) return ;
        // InternalKim.g:8631:10: ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) )
        // InternalKim.g:8632:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        {
        // InternalKim.g:8632:11: (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics )
        // InternalKim.g:8633:12: lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_1_0());
          											
        }
        pushFollow(FOLLOW_29);
        lv_alternativeObservables_5_0=ruleAlternativeDependencyObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:8650:10: (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )*
        loop536:
        do {
            int alt536=2;
            int LA536_0 = input.LA(1);

            if ( (LA536_0==28) ) {
                alt536=1;
            }


            switch (alt536) {
        	case 1 :
        	    // InternalKim.g:8651:11: otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    {
        	    otherlv_6=(Token)match(input,28,FOLLOW_103); if (state.failed) return ;
        	    // InternalKim.g:8655:11: ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) )
        	    // InternalKim.g:8656:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    {
        	    // InternalKim.g:8656:12: (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics )
        	    // InternalKim.g:8657:13: lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getDependencyAccess().getAlternativeObservablesAlternativeDependencyObservableSemanticsParserRuleCall_1_1_0_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_29);
        	    lv_alternativeObservables_7_0=ruleAlternativeDependencyObservableSemantics();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop536;
            }
        } while (true);

        otherlv_8=(Token)match(input,40,FOLLOW_233); if (state.failed) return ;
        // InternalKim.g:8679:10: ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )?
        int alt537=3;
        int LA537_0 = input.LA(1);

        if ( (LA537_0==119) ) {
            alt537=1;
        }
        else if ( (LA537_0==120) ) {
            alt537=2;
        }
        switch (alt537) {
            case 1 :
                // InternalKim.g:8680:11: ( (lv_optional_9_0= 'optional' ) )
                {
                // InternalKim.g:8680:11: ( (lv_optional_9_0= 'optional' ) )
                // InternalKim.g:8681:12: (lv_optional_9_0= 'optional' )
                {
                // InternalKim.g:8681:12: (lv_optional_9_0= 'optional' )
                // InternalKim.g:8682:13: lv_optional_9_0= 'optional'
                {
                lv_optional_9_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8695:11: otherlv_10= 'required'
                {
                otherlv_10=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred343_InternalKim

    // $ANTLR start synpred347_InternalKim
    public final void synpred347_InternalKim_fragment() throws RecognitionException {   
        Token lv_default_11_0=null;
        Token otherlv_12=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_defaultLiteral_13_0 = null;

        EObject lv_defaultConcept_14_0 = null;

        AntlrDatatypeRuleToken lv_causes_16_0 = null;

        AntlrDatatypeRuleToken lv_causes_18_0 = null;


        // InternalKim.g:8706:5: ( ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) )
        // InternalKim.g:8706:5: ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        {
        // InternalKim.g:8706:5: ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        // InternalKim.g:8707:6: {...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1)");
        }
        // InternalKim.g:8707:110: ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        // InternalKim.g:8708:7: ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 1);
        // InternalKim.g:8711:10: ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        // InternalKim.g:8711:11: {...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "true");
        }
        // InternalKim.g:8711:20: ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        // InternalKim.g:8711:21: ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        {
        // InternalKim.g:8711:21: ( (lv_default_11_0= 'default' ) )
        // InternalKim.g:8712:11: (lv_default_11_0= 'default' )
        {
        // InternalKim.g:8712:11: (lv_default_11_0= 'default' )
        // InternalKim.g:8713:12: lv_default_11_0= 'default'
        {
        lv_default_11_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return ;

        }


        }

        otherlv_12=(Token)match(input,37,FOLLOW_109); if (state.failed) return ;
        // InternalKim.g:8729:10: ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) )
        int alt539=2;
        int LA539_0 = input.LA(1);

        if ( (LA539_0==RULE_STRING||LA539_0==RULE_INT||(LA539_0>=29 && LA539_0<=30)||(LA539_0>=255 && LA539_0<=256)) ) {
            alt539=1;
        }
        else if ( ((LA539_0>=RULE_LOWERCASE_ID && LA539_0<=RULE_UPPERCASE_ID)||LA539_0==RULE_CAMELCASE_ID||LA539_0==RULE_LOWERCASE_DASHID||LA539_0==RULE_UPPERCASE_PATH||LA539_0==39||(LA539_0>=138 && LA539_0<=139)||(LA539_0>=147 && LA539_0<=148)||(LA539_0>=150 && LA539_0<=155)||(LA539_0>=157 && LA539_0<=168)) ) {
            alt539=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 539, 0, input);

            throw nvae;
        }
        switch (alt539) {
            case 1 :
                // InternalKim.g:8730:11: ( (lv_defaultLiteral_13_0= ruleLiteral ) )
                {
                // InternalKim.g:8730:11: ( (lv_defaultLiteral_13_0= ruleLiteral ) )
                // InternalKim.g:8731:12: (lv_defaultLiteral_13_0= ruleLiteral )
                {
                // InternalKim.g:8731:12: (lv_defaultLiteral_13_0= ruleLiteral )
                // InternalKim.g:8732:13: lv_defaultLiteral_13_0= ruleLiteral
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getDependencyAccess().getDefaultLiteralLiteralParserRuleCall_1_1_1_2_0_0());
                  												
                }
                pushFollow(FOLLOW_232);
                lv_defaultLiteral_13_0=ruleLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8750:11: ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:8750:11: ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) )
                // InternalKim.g:8751:12: (lv_defaultConcept_14_0= ruleConceptDeclaration )
                {
                // InternalKim.g:8751:12: (lv_defaultConcept_14_0= ruleConceptDeclaration )
                // InternalKim.g:8752:13: lv_defaultConcept_14_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getDependencyAccess().getDefaultConceptConceptDeclarationParserRuleCall_1_1_1_2_1_0());
                  												
                }
                pushFollow(FOLLOW_232);
                lv_defaultConcept_14_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:8770:10: (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        int alt541=2;
        int LA541_0 = input.LA(1);

        if ( (LA541_0==122) ) {
            alt541=1;
        }
        switch (alt541) {
            case 1 :
                // InternalKim.g:8771:11: otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )*
                {
                otherlv_15=(Token)match(input,122,FOLLOW_111); if (state.failed) return ;
                // InternalKim.g:8775:11: ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) )
                // InternalKim.g:8776:12: (lv_causes_16_0= ruleRESOLUTION_EXCEPTION )
                {
                // InternalKim.g:8776:12: (lv_causes_16_0= ruleRESOLUTION_EXCEPTION )
                // InternalKim.g:8777:13: lv_causes_16_0= ruleRESOLUTION_EXCEPTION
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getDependencyAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_1_1_1_3_1_0());
                  												
                }
                pushFollow(FOLLOW_40);
                lv_causes_16_0=ruleRESOLUTION_EXCEPTION();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:8794:11: (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )*
                loop540:
                do {
                    int alt540=2;
                    int LA540_0 = input.LA(1);

                    if ( (LA540_0==28) ) {
                        alt540=1;
                    }


                    switch (alt540) {
                	case 1 :
                	    // InternalKim.g:8795:12: otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) )
                	    {
                	    otherlv_17=(Token)match(input,28,FOLLOW_111); if (state.failed) return ;
                	    // InternalKim.g:8799:12: ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) )
                	    // InternalKim.g:8800:13: (lv_causes_18_0= ruleRESOLUTION_EXCEPTION )
                	    {
                	    // InternalKim.g:8800:13: (lv_causes_18_0= ruleRESOLUTION_EXCEPTION )
                	    // InternalKim.g:8801:14: lv_causes_18_0= ruleRESOLUTION_EXCEPTION
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getDependencyAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_1_1_1_3_2_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_40);
                	    lv_causes_18_0=ruleRESOLUTION_EXCEPTION();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop540;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred347_InternalKim

    // $ANTLR start synpred349_InternalKim
    public final void synpred349_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token lv_name_20_1=null;
        Token lv_name_20_2=null;

        // InternalKim.g:8826:5: ( ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:8826:5: ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:8826:5: ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:8827:6: {...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2)");
        }
        // InternalKim.g:8827:110: ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:8828:7: ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyAccess().getUnorderedGroup_1_1(), 2);
        // InternalKim.g:8831:10: ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:8831:11: {...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "true");
        }
        // InternalKim.g:8831:20: (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) )
        // InternalKim.g:8831:21: otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) )
        {
        otherlv_19=(Token)match(input,123,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:8835:10: ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) )
        // InternalKim.g:8836:11: ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) )
        {
        // InternalKim.g:8836:11: ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) )
        // InternalKim.g:8837:12: (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING )
        {
        // InternalKim.g:8837:12: (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING )
        int alt542=2;
        int LA542_0 = input.LA(1);

        if ( (LA542_0==RULE_LOWERCASE_ID) ) {
            alt542=1;
        }
        else if ( (LA542_0==RULE_STRING) ) {
            alt542=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 542, 0, input);

            throw nvae;
        }
        switch (alt542) {
            case 1 :
                // InternalKim.g:8838:13: lv_name_20_1= RULE_LOWERCASE_ID
                {
                lv_name_20_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8853:13: lv_name_20_2= RULE_STRING
                {
                lv_name_20_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred349_InternalKim

    // $ANTLR start synpred350_InternalKim
    public final void synpred350_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_0_0 = null;


        // InternalKim.g:8918:4: ( (lv_main_0_0= ruleConcept ) )
        // InternalKim.g:8918:4: (lv_main_0_0= ruleConcept )
        {
        // InternalKim.g:8918:4: (lv_main_0_0= ruleConcept )
        // InternalKim.g:8919:5: lv_main_0_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_0_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred350_InternalKim

    // $ANTLR start synpred352_InternalKim
    public final void synpred352_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:8943:4: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) )
        // InternalKim.g:8943:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        {
        // InternalKim.g:8943:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8944:5: {...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:8944:115: ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8945:6: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:8948:9: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8948:10: {...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred352_InternalKim", "true");
        }
        // InternalKim.g:8948:19: ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:8948:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        // InternalKim.g:8948:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:8949:10: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_2=(Token)match(input,129,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:8953:10: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8954:11: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8954:11: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        int alt543=2;
        int LA543_0 = input.LA(1);

        if ( (LA543_0==27) ) {
            alt543=1;
        }
        switch (alt543) {
            case 1 :
                // InternalKim.g:8955:12: (lv_distributedOfInherency_3_0= 'each' )
                {
                // InternalKim.g:8955:12: (lv_distributedOfInherency_3_0= 'each' )
                // InternalKim.g:8956:13: lv_distributedOfInherency_3_0= 'each'
                {
                lv_distributedOfInherency_3_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:8968:11: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8969:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8969:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8970:13: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred352_InternalKim

    // $ANTLR start synpred354_InternalKim
    public final void synpred354_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        EObject lv_motivation_7_0 = null;


        // InternalKim.g:8995:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:8995:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:8995:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:8996:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred354_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:8996:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:8997:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:9000:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9000:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred354_InternalKim", "true");
        }
        // InternalKim.g:9000:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9000:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_5=(Token)match(input,74,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9004:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9005:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9005:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        int alt544=2;
        int LA544_0 = input.LA(1);

        if ( (LA544_0==27) ) {
            alt544=1;
        }
        switch (alt544) {
            case 1 :
                // InternalKim.g:9006:11: (lv_distributedForInherency_6_0= 'each' )
                {
                // InternalKim.g:9006:11: (lv_distributedForInherency_6_0= 'each' )
                // InternalKim.g:9007:12: lv_distributedForInherency_6_0= 'each'
                {
                lv_distributedForInherency_6_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:9019:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9020:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9020:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9021:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_motivation_7_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred354_InternalKim

    // $ANTLR start synpred355_InternalKim
    public final void synpred355_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        EObject lv_compresent_9_0 = null;


        // InternalKim.g:9045:4: ( ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9045:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9045:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9046:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:9046:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9047:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:9050:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9050:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "true");
        }
        // InternalKim.g:9050:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9050:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_8=(Token)match(input,103,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9054:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9055:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9055:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9056:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_9_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred355_InternalKim

    // $ANTLR start synpred356_InternalKim
    public final void synpred356_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_causant_12_0 = null;


        // InternalKim.g:9079:4: ( ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9079:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9079:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9080:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred356_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:9080:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9081:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:9084:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9084:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred356_InternalKim", "true");
        }
        // InternalKim.g:9084:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9084:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_10=(Token)match(input,130,FOLLOW_124); if (state.failed) return ;
        otherlv_11=(Token)match(input,93,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9092:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9093:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9093:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9094:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_12_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred356_InternalKim

    // $ANTLR start synpred357_InternalKim
    public final void synpred357_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_14=null;
        EObject lv_adjacent_15_0 = null;


        // InternalKim.g:9117:4: ( ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9117:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9117:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9118:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred357_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:9118:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9119:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:9122:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9122:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred357_InternalKim", "true");
        }
        // InternalKim.g:9122:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9122:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_13=(Token)match(input,131,FOLLOW_25); if (state.failed) return ;
        otherlv_14=(Token)match(input,37,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9130:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9131:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9131:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9132:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred357_InternalKim

    // $ANTLR start synpred358_InternalKim
    public final void synpred358_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        Token otherlv_17=null;
        EObject lv_container_18_0 = null;


        // InternalKim.g:9155:4: ( ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9155:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9155:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9156:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred358_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:9156:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9157:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:9160:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9160:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred358_InternalKim", "true");
        }
        // InternalKim.g:9160:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9160:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_16=(Token)match(input,132,FOLLOW_125); if (state.failed) return ;
        otherlv_17=(Token)match(input,53,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9168:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9169:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9169:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9170:11: lv_container_18_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_18_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred358_InternalKim

    // $ANTLR start synpred359_InternalKim
    public final void synpred359_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        EObject lv_contained_20_0 = null;


        // InternalKim.g:9193:4: ( ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9193:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9193:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9194:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        }
        // InternalKim.g:9194:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9195:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        // InternalKim.g:9198:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9198:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "true");
        }
        // InternalKim.g:9198:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9198:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_19=(Token)match(input,133,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9202:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9203:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9203:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9204:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_20_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred359_InternalKim

    // $ANTLR start synpred360_InternalKim
    public final void synpred360_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_21=null;
        EObject lv_caused_22_0 = null;


        // InternalKim.g:9227:4: ( ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9227:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9227:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9228:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred360_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        }
        // InternalKim.g:9228:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9229:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        // InternalKim.g:9232:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9232:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred360_InternalKim", "true");
        }
        // InternalKim.g:9232:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9232:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_21=(Token)match(input,134,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9236:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9237:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9237:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9238:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_22_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred360_InternalKim

    // $ANTLR start synpred362_InternalKim
    public final void synpred362_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        EObject lv_during_25_0 = null;


        // InternalKim.g:9261:4: ( ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:9261:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:9261:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9262:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred362_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        }
        // InternalKim.g:9262:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9263:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        // InternalKim.g:9266:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9266:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred362_InternalKim", "true");
        }
        // InternalKim.g:9266:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9266:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_23=(Token)match(input,135,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9270:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9271:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9271:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
        int alt545=2;
        int LA545_0 = input.LA(1);

        if ( (LA545_0==27) ) {
            alt545=1;
        }
        switch (alt545) {
            case 1 :
                // InternalKim.g:9272:11: (lv_distributedTemporalInherency_24_0= 'each' )
                {
                // InternalKim.g:9272:11: (lv_distributedTemporalInherency_24_0= 'each' )
                // InternalKim.g:9273:12: lv_distributedTemporalInherency_24_0= 'each'
                {
                lv_distributedTemporalInherency_24_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:9285:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9286:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9286:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9287:12: lv_during_25_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_during_25_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred362_InternalKim

    // $ANTLR start synpred364_InternalKim
    public final void synpred364_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        EObject lv_context_28_0 = null;


        // InternalKim.g:9311:4: ( ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        // InternalKim.g:9311:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        {
        // InternalKim.g:9311:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9312:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred364_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        }
        // InternalKim.g:9312:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9313:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        // InternalKim.g:9316:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9316:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred364_InternalKim", "true");
        }
        // InternalKim.g:9316:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9316:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        {
        otherlv_26=(Token)match(input,136,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9320:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9321:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:9321:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
        int alt546=2;
        int LA546_0 = input.LA(1);

        if ( (LA546_0==27) ) {
            alt546=1;
        }
        switch (alt546) {
            case 1 :
                // InternalKim.g:9322:11: (lv_distributedWithinInherency_27_0= 'each' )
                {
                // InternalKim.g:9322:11: (lv_distributedWithinInherency_27_0= 'each' )
                // InternalKim.g:9323:12: lv_distributedWithinInherency_27_0= 'each'
                {
                lv_distributedWithinInherency_27_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:9335:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9336:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9336:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9337:12: lv_context_28_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_context_28_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred364_InternalKim

    // $ANTLR start synpred365_InternalKim
    public final void synpred365_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;


        // InternalKim.g:9361:4: ( ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9361:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9361:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9362:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred365_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        }
        // InternalKim.g:9362:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9363:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        // InternalKim.g:9366:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:9366:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred365_InternalKim", "true");
        }
        // InternalKim.g:9366:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:9366:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_29=(Token)match(input,137,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9370:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9371:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9371:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9372:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_31=(Token)match(input,37,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:9393:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:9394:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:9394:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:9395:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred365_InternalKim

    // $ANTLR start synpred366_InternalKim
    public final void synpred366_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_distributedOfInherency_3_0=null;
        Token otherlv_5=null;
        Token lv_distributedForInherency_6_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token lv_distributedTemporalInherency_24_0=null;
        Token otherlv_26=null;
        Token lv_distributedWithinInherency_27_0=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_7_0 = null;

        EObject lv_compresent_9_0 = null;

        EObject lv_causant_12_0 = null;

        EObject lv_adjacent_15_0 = null;

        EObject lv_container_18_0 = null;

        EObject lv_contained_20_0 = null;

        EObject lv_caused_22_0 = null;

        EObject lv_during_25_0 = null;

        EObject lv_context_28_0 = null;

        EObject lv_relationshipSource_30_0 = null;

        EObject lv_relationshipTarget_32_0 = null;


        // InternalKim.g:8937:4: ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
        // InternalKim.g:8937:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        {
        // InternalKim.g:8937:4: ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
        // InternalKim.g:8938:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        {
        getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1());
        // InternalKim.g:8941:5: ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
        // InternalKim.g:8942:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        {
        // InternalKim.g:8942:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
        loop551:
        do {
            int alt551=12;
            alt551 = dfa551.predict(input);
            switch (alt551) {
        	case 1 :
        	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8943:4: ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) )
        	    // InternalKim.g:8944:5: {...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0)");
        	    }
        	    // InternalKim.g:8944:115: ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8945:6: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0);
        	    // InternalKim.g:8948:9: ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8948:10: {...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:8948:19: ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:8948:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    // InternalKim.g:8948:20: (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:8949:10: otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_2=(Token)match(input,129,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:8953:10: ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:8954:11: ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:8954:11: ( (lv_distributedOfInherency_3_0= 'each' ) )?
        	    int alt547=2;
        	    int LA547_0 = input.LA(1);

        	    if ( (LA547_0==27) ) {
        	        alt547=1;
        	    }
        	    switch (alt547) {
        	        case 1 :
        	            // InternalKim.g:8955:12: (lv_distributedOfInherency_3_0= 'each' )
        	            {
        	            // InternalKim.g:8955:12: (lv_distributedOfInherency_3_0= 'each' )
        	            // InternalKim.g:8956:13: lv_distributedOfInherency_3_0= 'each'
        	            {
        	            lv_distributedOfInherency_3_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:8968:11: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:8969:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:8969:12: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:8970:13: lv_inherency_4_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_1_0_0_1_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:8995:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:8995:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:8996:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1)");
        	    }
        	    // InternalKim.g:8996:115: ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:8997:6: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1);
        	    // InternalKim.g:9000:9: ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9000:10: {...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9000:19: (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9000:20: otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_5=(Token)match(input,74,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9004:9: ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9005:10: ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:9005:10: ( (lv_distributedForInherency_6_0= 'each' ) )?
        	    int alt548=2;
        	    int LA548_0 = input.LA(1);

        	    if ( (LA548_0==27) ) {
        	        alt548=1;
        	    }
        	    switch (alt548) {
        	        case 1 :
        	            // InternalKim.g:9006:11: (lv_distributedForInherency_6_0= 'each' )
        	            {
        	            // InternalKim.g:9006:11: (lv_distributedForInherency_6_0= 'each' )
        	            // InternalKim.g:9007:12: lv_distributedForInherency_6_0= 'each'
        	            {
        	            lv_distributedForInherency_6_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:9019:10: ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9020:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9020:11: (lv_motivation_7_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9021:12: lv_motivation_7_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_1_1_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_motivation_7_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:9045:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9045:4: ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9046:5: {...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2)");
        	    }
        	    // InternalKim.g:9046:115: ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9047:6: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2);
        	    // InternalKim.g:9050:9: ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9050:10: {...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9050:19: (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9050:20: otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_8=(Token)match(input,103,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9054:9: ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9055:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9055:10: (lv_compresent_9_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9056:11: lv_compresent_9_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_1_2_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_compresent_9_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 4 :
        	    // InternalKim.g:9079:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9079:4: ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9080:5: {...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3)");
        	    }
        	    // InternalKim.g:9080:115: ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9081:6: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3);
        	    // InternalKim.g:9084:9: ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9084:10: {...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9084:19: (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9084:20: otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_10=(Token)match(input,130,FOLLOW_124); if (state.failed) return ;
        	    otherlv_11=(Token)match(input,93,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9092:9: ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9093:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9093:10: (lv_causant_12_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9094:11: lv_causant_12_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_1_3_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_causant_12_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 5 :
        	    // InternalKim.g:9117:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9117:4: ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9118:5: {...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4)");
        	    }
        	    // InternalKim.g:9118:115: ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9119:6: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4);
        	    // InternalKim.g:9122:9: ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9122:10: {...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9122:19: (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9122:20: otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_13=(Token)match(input,131,FOLLOW_25); if (state.failed) return ;
        	    otherlv_14=(Token)match(input,37,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9130:9: ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9131:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9131:10: (lv_adjacent_15_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9132:11: lv_adjacent_15_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_1_4_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_adjacent_15_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 6 :
        	    // InternalKim.g:9155:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9155:4: ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9156:5: {...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5)");
        	    }
        	    // InternalKim.g:9156:115: ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9157:6: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5);
        	    // InternalKim.g:9160:9: ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9160:10: {...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9160:19: (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9160:20: otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_16=(Token)match(input,132,FOLLOW_125); if (state.failed) return ;
        	    otherlv_17=(Token)match(input,53,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9168:9: ( (lv_container_18_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9169:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9169:10: (lv_container_18_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9170:11: lv_container_18_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_1_5_2_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_container_18_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 7 :
        	    // InternalKim.g:9193:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9193:4: ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9194:5: {...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6)");
        	    }
        	    // InternalKim.g:9194:115: ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9195:6: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6);
        	    // InternalKim.g:9198:9: ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9198:10: {...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9198:19: (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9198:20: otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_19=(Token)match(input,133,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9202:9: ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9203:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9203:10: (lv_contained_20_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9204:11: lv_contained_20_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_1_6_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_contained_20_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 8 :
        	    // InternalKim.g:9227:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9227:4: ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9228:5: {...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7)");
        	    }
        	    // InternalKim.g:9228:115: ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9229:6: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7);
        	    // InternalKim.g:9232:9: ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9232:10: {...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9232:19: (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9232:20: otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_21=(Token)match(input,134,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9236:9: ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9237:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9237:10: (lv_caused_22_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9238:11: lv_caused_22_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_1_7_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_caused_22_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 9 :
        	    // InternalKim.g:9261:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9261:4: ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:9262:5: {...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8)");
        	    }
        	    // InternalKim.g:9262:115: ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9263:6: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8);
        	    // InternalKim.g:9266:9: ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9266:10: {...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9266:19: (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9266:20: otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_23=(Token)match(input,135,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9270:9: ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9271:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:9271:10: ( (lv_distributedTemporalInherency_24_0= 'each' ) )?
        	    int alt549=2;
        	    int LA549_0 = input.LA(1);

        	    if ( (LA549_0==27) ) {
        	        alt549=1;
        	    }
        	    switch (alt549) {
        	        case 1 :
        	            // InternalKim.g:9272:11: (lv_distributedTemporalInherency_24_0= 'each' )
        	            {
        	            // InternalKim.g:9272:11: (lv_distributedTemporalInherency_24_0= 'each' )
        	            // InternalKim.g:9273:12: lv_distributedTemporalInherency_24_0= 'each'
        	            {
        	            lv_distributedTemporalInherency_24_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:9285:10: ( (lv_during_25_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9286:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9286:11: (lv_during_25_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9287:12: lv_during_25_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_1_8_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_during_25_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 10 :
        	    // InternalKim.g:9311:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9311:4: ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        	    // InternalKim.g:9312:5: {...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9)");
        	    }
        	    // InternalKim.g:9312:115: ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9313:6: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9);
        	    // InternalKim.g:9316:9: ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9316:10: {...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9316:19: (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9316:20: otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    otherlv_26=(Token)match(input,136,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9320:9: ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9321:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:9321:10: ( (lv_distributedWithinInherency_27_0= 'each' ) )?
        	    int alt550=2;
        	    int LA550_0 = input.LA(1);

        	    if ( (LA550_0==27) ) {
        	        alt550=1;
        	    }
        	    switch (alt550) {
        	        case 1 :
        	            // InternalKim.g:9322:11: (lv_distributedWithinInherency_27_0= 'each' )
        	            {
        	            // InternalKim.g:9322:11: (lv_distributedWithinInherency_27_0= 'each' )
        	            // InternalKim.g:9323:12: lv_distributedWithinInherency_27_0= 'each'
        	            {
        	            lv_distributedWithinInherency_27_0=(Token)match(input,27,FOLLOW_122); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }

        	    // InternalKim.g:9335:10: ( (lv_context_28_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9336:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9336:11: (lv_context_28_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9337:12: lv_context_28_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_1_9_1_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_context_28_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 11 :
        	    // InternalKim.g:9361:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    {
        	    // InternalKim.g:9361:4: ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        	    // InternalKim.g:9362:5: {...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10)");
        	    }
        	    // InternalKim.g:9362:116: ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) )
        	    // InternalKim.g:9363:6: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10);
        	    // InternalKim.g:9366:9: ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) )
        	    // InternalKim.g:9366:10: {...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        	    }
        	    // InternalKim.g:9366:19: (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) )
        	    // InternalKim.g:9366:20: otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_29=(Token)match(input,137,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9370:9: ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9371:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9371:10: (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9372:11: lv_relationshipSource_30_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipSourceSimpleConceptDeclarationParserRuleCall_1_10_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_relationshipSource_30_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    otherlv_31=(Token)match(input,37,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:9393:9: ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:9394:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:9394:10: (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:9395:11: lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getRelationshipTargetSimpleConceptDeclarationParserRuleCall_1_10_3_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_relationshipTarget_32_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop551;
            }
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred366_InternalKim

    // $ANTLR start synpred371_InternalKim
    public final void synpred371_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token lv_name_6_0=null;
        EObject lv_extends_4_0 = null;


        // InternalKim.g:9535:5: ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) )
        // InternalKim.g:9535:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
        {
        // InternalKim.g:9535:5: ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) )
        // InternalKim.g:9536:6: ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) )
        {
        // InternalKim.g:9536:6: ( (lv_extends_4_0= ruleConcept ) )
        // InternalKim.g:9537:7: (lv_extends_4_0= ruleConcept )
        {
        // InternalKim.g:9537:7: (lv_extends_4_0= ruleConcept )
        // InternalKim.g:9538:8: lv_extends_4_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_0_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_4_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,110,FOLLOW_126); if (state.failed) return ;
        // InternalKim.g:9559:6: ( (lv_name_6_0= 'context' ) )
        // InternalKim.g:9560:7: (lv_name_6_0= 'context' )
        {
        // InternalKim.g:9560:7: (lv_name_6_0= 'context' )
        // InternalKim.g:9561:8: lv_name_6_0= 'context'
        {
        lv_name_6_0=(Token)match(input,65,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred371_InternalKim

    // $ANTLR start synpred372_InternalKim
    public final void synpred372_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        EObject lv_extends_7_0 = null;


        // InternalKim.g:9575:5: ( ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) )
        // InternalKim.g:9575:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
        {
        // InternalKim.g:9575:5: ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) )
        // InternalKim.g:9576:6: ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) )
        {
        // InternalKim.g:9576:6: ( (lv_extends_7_0= ruleConcept ) )
        // InternalKim.g:9577:7: (lv_extends_7_0= ruleConcept )
        {
        // InternalKim.g:9577:7: (lv_extends_7_0= ruleConcept )
        // InternalKim.g:9578:8: lv_extends_7_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_1_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_7_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_8=(Token)match(input,110,FOLLOW_128); if (state.failed) return ;
        // InternalKim.g:9599:6: ( (lv_name_9_0= 'inherent' ) )
        // InternalKim.g:9600:7: (lv_name_9_0= 'inherent' )
        {
        // InternalKim.g:9600:7: (lv_name_9_0= 'inherent' )
        // InternalKim.g:9601:8: lv_name_9_0= 'inherent'
        {
        lv_name_9_0=(Token)match(input,140,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred372_InternalKim

    // $ANTLR start synpred373_InternalKim
    public final void synpred373_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_11=null;
        Token lv_name_12_0=null;
        EObject lv_extends_10_0 = null;


        // InternalKim.g:9615:5: ( ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) )
        // InternalKim.g:9615:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
        {
        // InternalKim.g:9615:5: ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) )
        // InternalKim.g:9616:6: ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) )
        {
        // InternalKim.g:9616:6: ( (lv_extends_10_0= ruleConcept ) )
        // InternalKim.g:9617:7: (lv_extends_10_0= ruleConcept )
        {
        // InternalKim.g:9617:7: (lv_extends_10_0= ruleConcept )
        // InternalKim.g:9618:8: lv_extends_10_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_2_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_10_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_11=(Token)match(input,110,FOLLOW_129); if (state.failed) return ;
        // InternalKim.g:9639:6: ( (lv_name_12_0= 'compresent' ) )
        // InternalKim.g:9640:7: (lv_name_12_0= 'compresent' )
        {
        // InternalKim.g:9640:7: (lv_name_12_0= 'compresent' )
        // InternalKim.g:9641:8: lv_name_12_0= 'compresent'
        {
        lv_name_12_0=(Token)match(input,141,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred373_InternalKim

    // $ANTLR start synpred374_InternalKim
    public final void synpred374_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token lv_name_15_0=null;
        EObject lv_extends_13_0 = null;


        // InternalKim.g:9655:5: ( ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) )
        // InternalKim.g:9655:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
        {
        // InternalKim.g:9655:5: ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) )
        // InternalKim.g:9656:6: ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) )
        {
        // InternalKim.g:9656:6: ( (lv_extends_13_0= ruleConcept ) )
        // InternalKim.g:9657:7: (lv_extends_13_0= ruleConcept )
        {
        // InternalKim.g:9657:7: (lv_extends_13_0= ruleConcept )
        // InternalKim.g:9658:8: lv_extends_13_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_3_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_13_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,110,FOLLOW_130); if (state.failed) return ;
        // InternalKim.g:9679:6: ( (lv_name_15_0= 'adjacent' ) )
        // InternalKim.g:9680:7: (lv_name_15_0= 'adjacent' )
        {
        // InternalKim.g:9680:7: (lv_name_15_0= 'adjacent' )
        // InternalKim.g:9681:8: lv_name_15_0= 'adjacent'
        {
        lv_name_15_0=(Token)match(input,131,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred374_InternalKim

    // $ANTLR start synpred375_InternalKim
    public final void synpred375_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        Token lv_name_18_0=null;
        EObject lv_extends_16_0 = null;


        // InternalKim.g:9695:5: ( ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) )
        // InternalKim.g:9695:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
        {
        // InternalKim.g:9695:5: ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) )
        // InternalKim.g:9696:6: ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) )
        {
        // InternalKim.g:9696:6: ( (lv_extends_16_0= ruleConcept ) )
        // InternalKim.g:9697:7: (lv_extends_16_0= ruleConcept )
        {
        // InternalKim.g:9697:7: (lv_extends_16_0= ruleConcept )
        // InternalKim.g:9698:8: lv_extends_16_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_4_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_16_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_17=(Token)match(input,110,FOLLOW_131); if (state.failed) return ;
        // InternalKim.g:9719:6: ( (lv_name_18_0= 'container' ) )
        // InternalKim.g:9720:7: (lv_name_18_0= 'container' )
        {
        // InternalKim.g:9720:7: (lv_name_18_0= 'container' )
        // InternalKim.g:9721:8: lv_name_18_0= 'container'
        {
        lv_name_18_0=(Token)match(input,142,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred375_InternalKim

    // $ANTLR start synpred376_InternalKim
    public final void synpred376_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token lv_name_21_0=null;
        EObject lv_extends_19_0 = null;


        // InternalKim.g:9735:5: ( ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) )
        // InternalKim.g:9735:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
        {
        // InternalKim.g:9735:5: ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) )
        // InternalKim.g:9736:6: ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) )
        {
        // InternalKim.g:9736:6: ( (lv_extends_19_0= ruleConcept ) )
        // InternalKim.g:9737:7: (lv_extends_19_0= ruleConcept )
        {
        // InternalKim.g:9737:7: (lv_extends_19_0= ruleConcept )
        // InternalKim.g:9738:8: lv_extends_19_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_5_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_19_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_20=(Token)match(input,110,FOLLOW_132); if (state.failed) return ;
        // InternalKim.g:9759:6: ( (lv_name_21_0= 'contained' ) )
        // InternalKim.g:9760:7: (lv_name_21_0= 'contained' )
        {
        // InternalKim.g:9760:7: (lv_name_21_0= 'contained' )
        // InternalKim.g:9761:8: lv_name_21_0= 'contained'
        {
        lv_name_21_0=(Token)match(input,132,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred376_InternalKim

    // $ANTLR start synpred377_InternalKim
    public final void synpred377_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token lv_name_24_0=null;
        EObject lv_extends_22_0 = null;


        // InternalKim.g:9775:5: ( ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) )
        // InternalKim.g:9775:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
        {
        // InternalKim.g:9775:5: ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) )
        // InternalKim.g:9776:6: ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) )
        {
        // InternalKim.g:9776:6: ( (lv_extends_22_0= ruleConcept ) )
        // InternalKim.g:9777:7: (lv_extends_22_0= ruleConcept )
        {
        // InternalKim.g:9777:7: (lv_extends_22_0= ruleConcept )
        // InternalKim.g:9778:8: lv_extends_22_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_6_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_22_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,110,FOLLOW_133); if (state.failed) return ;
        // InternalKim.g:9799:6: ( (lv_name_24_0= 'purpose' ) )
        // InternalKim.g:9800:7: (lv_name_24_0= 'purpose' )
        {
        // InternalKim.g:9800:7: (lv_name_24_0= 'purpose' )
        // InternalKim.g:9801:8: lv_name_24_0= 'purpose'
        {
        lv_name_24_0=(Token)match(input,143,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred377_InternalKim

    // $ANTLR start synpred378_InternalKim
    public final void synpred378_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token lv_name_27_0=null;
        EObject lv_extends_25_0 = null;


        // InternalKim.g:9815:5: ( ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) )
        // InternalKim.g:9815:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
        {
        // InternalKim.g:9815:5: ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) )
        // InternalKim.g:9816:6: ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) )
        {
        // InternalKim.g:9816:6: ( (lv_extends_25_0= ruleConcept ) )
        // InternalKim.g:9817:7: (lv_extends_25_0= ruleConcept )
        {
        // InternalKim.g:9817:7: (lv_extends_25_0= ruleConcept )
        // InternalKim.g:9818:8: lv_extends_25_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_7_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_25_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_26=(Token)match(input,110,FOLLOW_134); if (state.failed) return ;
        // InternalKim.g:9839:6: ( (lv_name_27_0= 'causant' ) )
        // InternalKim.g:9840:7: (lv_name_27_0= 'causant' )
        {
        // InternalKim.g:9840:7: (lv_name_27_0= 'causant' )
        // InternalKim.g:9841:8: lv_name_27_0= 'causant'
        {
        lv_name_27_0=(Token)match(input,144,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred378_InternalKim

    // $ANTLR start synpred379_InternalKim
    public final void synpred379_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_29=null;
        Token lv_name_30_0=null;
        EObject lv_extends_28_0 = null;


        // InternalKim.g:9855:5: ( ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) )
        // InternalKim.g:9855:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
        {
        // InternalKim.g:9855:5: ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) )
        // InternalKim.g:9856:6: ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) )
        {
        // InternalKim.g:9856:6: ( (lv_extends_28_0= ruleConcept ) )
        // InternalKim.g:9857:7: (lv_extends_28_0= ruleConcept )
        {
        // InternalKim.g:9857:7: (lv_extends_28_0= ruleConcept )
        // InternalKim.g:9858:8: lv_extends_28_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_3_1_8_0_0());
          							
        }
        pushFollow(FOLLOW_88);
        lv_extends_28_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_29=(Token)match(input,110,FOLLOW_135); if (state.failed) return ;
        // InternalKim.g:9879:6: ( (lv_name_30_0= 'caused' ) )
        // InternalKim.g:9880:7: (lv_name_30_0= 'caused' )
        {
        // InternalKim.g:9880:7: (lv_name_30_0= 'caused' )
        // InternalKim.g:9881:8: lv_name_30_0= 'caused'
        {
        lv_name_30_0=(Token)match(input,130,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred379_InternalKim

    // $ANTLR start synpred413_InternalKim
    public final void synpred413_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_48=null;
        EObject lv_other_49_0 = null;


        // InternalKim.g:10769:5: ( ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10769:5: ( ( 'in' )=>otherlv_48= 'in' ) ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10769:5: ( ( 'in' )=>otherlv_48= 'in' )
        // InternalKim.g:10770:6: ( 'in' )=>otherlv_48= 'in'
        {
        otherlv_48=(Token)match(input,53,FOLLOW_122); if (state.failed) return ;

        }

        // InternalKim.g:10776:5: ( (lv_other_49_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10777:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10777:6: (lv_other_49_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10778:7: lv_other_49_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_49_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred413_InternalKim

    // $ANTLR start synpred416_InternalKim
    public final void synpred416_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        EObject lv_other_54_0 = null;


        // InternalKim.g:10837:5: ( ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10837:5: ( ( 'in' )=>otherlv_53= 'in' ) ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10837:5: ( ( 'in' )=>otherlv_53= 'in' )
        // InternalKim.g:10838:6: ( 'in' )=>otherlv_53= 'in'
        {
        otherlv_53=(Token)match(input,53,FOLLOW_122); if (state.failed) return ;

        }

        // InternalKim.g:10844:5: ( (lv_other_54_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10845:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10845:6: (lv_other_54_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10846:7: lv_other_54_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_13_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_54_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred416_InternalKim

    // $ANTLR start synpred422_InternalKim
    public final void synpred422_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_64=null;
        EObject lv_other_65_0 = null;


        // InternalKim.g:10985:5: ( ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:10985:5: ( ( 'over' )=>otherlv_64= 'over' ) ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:10985:5: ( ( 'over' )=>otherlv_64= 'over' )
        // InternalKim.g:10986:6: ( 'over' )=>otherlv_64= 'over'
        {
        otherlv_64=(Token)match(input,60,FOLLOW_122); if (state.failed) return ;

        }

        // InternalKim.g:10992:5: ( (lv_other_65_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10993:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10993:6: (lv_other_65_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10994:7: lv_other_65_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_15_4_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_65_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred422_InternalKim

    // $ANTLR start synpred425_InternalKim
    public final void synpred425_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:11142:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:11142:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:11142:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:11143:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:11143:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:11144:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,169,FOLLOW_23); if (state.failed) return ;

        }


        }

        // InternalKim.g:11156:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:11157:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:11157:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:11158:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred425_InternalKim

    // $ANTLR start synpred427_InternalKim
    public final void synpred427_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:11207:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:11207:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:11207:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:11208:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:11208:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:11209:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:11209:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt571=2;
        int LA571_0 = input.LA(1);

        if ( (LA571_0==170) ) {
            alt571=1;
        }
        else if ( (LA571_0==171) ) {
            alt571=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 571, 0, input);

            throw nvae;
        }
        switch (alt571) {
            case 1 :
                // InternalKim.g:11210:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,170,FOLLOW_23); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:11221:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,171,FOLLOW_23); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:11234:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:11235:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:11235:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:11236:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred427_InternalKim

    // $ANTLR start synpred429_InternalKim
    public final void synpred429_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:11292:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:11292:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:11292:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:11293:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred429_InternalKim

    // $ANTLR start synpred439_InternalKim
    public final void synpred439_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:11607:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:11607:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:11607:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:11608:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred439_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:11608:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:11609:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:11612:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:11612:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred439_InternalKim", "true");
        }
        // InternalKim.g:11612:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:11612:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:11612:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:11613:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,177,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred439_InternalKim

    // $ANTLR start synpred440_InternalKim
    public final void synpred440_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:11630:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:11630:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:11630:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:11631:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred440_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:11631:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:11632:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:11635:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:11635:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred440_InternalKim", "true");
        }
        // InternalKim.g:11635:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:11635:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:11635:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:11636:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,178,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred440_InternalKim

    // $ANTLR start synpred441_InternalKim
    public final void synpred441_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:11653:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:11653:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:11653:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:11654:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred441_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:11654:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:11655:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:11658:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:11658:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred441_InternalKim", "true");
        }
        // InternalKim.g:11658:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:11658:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:11658:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:11659:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,179,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred441_InternalKim

    // $ANTLR start synpred445_InternalKim
    public final void synpred445_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:11741:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:11741:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:11741:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:11742:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred445_InternalKim

    // $ANTLR start synpred447_InternalKim
    public final void synpred447_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token lv_attributeSpecifier_8_0=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:11676:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )
        // InternalKim.g:11676:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        {
        // InternalKim.g:11676:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) )
        // InternalKim.g:11677:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred447_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:11677:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) )
        // InternalKim.g:11678:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:11681:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) )
        // InternalKim.g:11681:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred447_InternalKim", "true");
        }
        // InternalKim.g:11681:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) )
        int alt583=3;
        switch ( input.LA(1) ) {
        case 172:
        case 173:
        case 174:
            {
            alt583=1;
            }
            break;
        case 252:
        case 253:
            {
            alt583=2;
            }
            break;
        case 180:
            {
            alt583=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 583, 0, input);

            throw nvae;
        }

        switch (alt583) {
            case 1 :
                // InternalKim.g:11681:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:11681:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:11682:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:11682:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:11683:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:11683:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt581=3;
                switch ( input.LA(1) ) {
                case 172:
                    {
                    alt581=1;
                    }
                    break;
                case 173:
                    {
                    alt581=2;
                    }
                    break;
                case 174:
                    {
                    alt581=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 581, 0, input);

                    throw nvae;
                }

                switch (alt581) {
                    case 1 :
                        // InternalKim.g:11684:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,172,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:11695:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,173,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:11706:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,174,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:11720:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:11720:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:11721:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:11721:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:11722:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:11722:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:11723:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_234);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:11740:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop582:
                do {
                    int alt582=2;
                    int LA582_0 = input.LA(1);

                    if ( ((LA582_0>=252 && LA582_0<=253)) ) {
                        alt582=1;
                    }


                    switch (alt582) {
                	case 1 :
                	    // InternalKim.g:11741:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:11741:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:11742:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_234);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop582;
                    }
                } while (true);


                }


                }
                break;
            case 3 :
                // InternalKim.g:11761:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                {
                // InternalKim.g:11761:9: ( (lv_attributeSpecifier_8_0= 'rescaling' ) )
                // InternalKim.g:11762:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                {
                // InternalKim.g:11762:10: (lv_attributeSpecifier_8_0= 'rescaling' )
                // InternalKim.g:11763:11: lv_attributeSpecifier_8_0= 'rescaling'
                {
                lv_attributeSpecifier_8_0=(Token)match(input,180,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred447_InternalKim

    // $ANTLR start synpred456_InternalKim
    public final void synpred456_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:12065:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:12065:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:12065:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:12066:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred456_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:12066:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:12067:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:12070:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:12070:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred456_InternalKim", "true");
        }
        // InternalKim.g:12070:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:12070:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:12070:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:12071:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred456_InternalKim

    // $ANTLR start synpred463_InternalKim
    public final void synpred463_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_alias_13_0=null;
        Token lv_coreConcept_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:12092:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:12092:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:12092:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:12093:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:12093:117: ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12094:6: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:12097:9: ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12097:10: {...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred463_InternalKim", "true");
        }
        // InternalKim.g:12097:19: ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12097:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:12097:20: ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? )
        // InternalKim.g:12098:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )?
        {
        // InternalKim.g:12098:10: (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) )
        int alt589=2;
        int LA589_0 = input.LA(1);

        if ( (LA589_0==181) ) {
            alt589=1;
        }
        else if ( (LA589_0==182) ) {
            alt589=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 589, 0, input);

            throw nvae;
        }
        switch (alt589) {
            case 1 :
                // InternalKim.g:12099:11: otherlv_12= 'is'
                {
                otherlv_12=(Token)match(input,181,FOLLOW_160); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12104:11: ( (lv_alias_13_0= 'equals' ) )
                {
                // InternalKim.g:12104:11: ( (lv_alias_13_0= 'equals' ) )
                // InternalKim.g:12105:12: (lv_alias_13_0= 'equals' )
                {
                // InternalKim.g:12105:12: (lv_alias_13_0= 'equals' )
                // InternalKim.g:12106:13: lv_alias_13_0= 'equals'
                {
                lv_alias_13_0=(Token)match(input,182,FOLLOW_160); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:12119:10: ( (lv_coreConcept_14_0= 'core' ) )?
        int alt590=2;
        int LA590_0 = input.LA(1);

        if ( (LA590_0==183) ) {
            alt590=1;
        }
        switch (alt590) {
            case 1 :
                // InternalKim.g:12120:11: (lv_coreConcept_14_0= 'core' )
                {
                // InternalKim.g:12120:11: (lv_coreConcept_14_0= 'core' )
                // InternalKim.g:12121:12: lv_coreConcept_14_0= 'core'
                {
                lv_coreConcept_14_0=(Token)match(input,183,FOLLOW_161); if (state.failed) return ;

                }


                }
                break;

        }


        }

        // InternalKim.g:12134:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt593=2;
        int LA593_0 = input.LA(1);

        if ( (LA593_0==184) ) {
            alt593=1;
        }
        else if ( ((LA593_0>=RULE_LOWERCASE_ID && LA593_0<=RULE_UPPERCASE_ID)||LA593_0==RULE_CAMELCASE_ID||LA593_0==RULE_LOWERCASE_DASHID||LA593_0==RULE_UPPERCASE_PATH||LA593_0==39||(LA593_0>=138 && LA593_0<=139)||(LA593_0>=147 && LA593_0<=148)||(LA593_0>=150 && LA593_0<=155)||(LA593_0>=157 && LA593_0<=168)) ) {
            alt593=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 593, 0, input);

            throw nvae;
        }
        switch (alt593) {
            case 1 :
                // InternalKim.g:12135:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:12135:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:12136:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:12136:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:12137:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,184,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:12150:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:12150:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:12151:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:12151:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:12152:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12152:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:12153:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_235);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12170:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop592:
                do {
                    int alt592=2;
                    int LA592_0 = input.LA(1);

                    if ( (LA592_0==28||(LA592_0>=169 && LA592_0<=170)) ) {
                        alt592=1;
                    }


                    switch (alt592) {
                	case 1 :
                	    // InternalKim.g:12171:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:12171:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:12172:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:12172:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:12173:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:12173:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt591=3;
                	    switch ( input.LA(1) ) {
                	    case 28:
                	        {
                	        alt591=1;
                	        }
                	        break;
                	    case 169:
                	        {
                	        alt591=2;
                	        }
                	        break;
                	    case 170:
                	        {
                	        alt591=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 591, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt591) {
                	        case 1 :
                	            // InternalKim.g:12174:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:12185:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,169,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:12196:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,170,FOLLOW_23); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:12209:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12210:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12210:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:12211:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_235);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop592;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred463_InternalKim

    // $ANTLR start synpred466_InternalKim
    public final void synpred466_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_20=null;
        Token lv_definedAuthority_21_1=null;
        Token lv_definedAuthority_21_2=null;
        EObject lv_upperConcept_22_0 = null;


        // InternalKim.g:12237:4: ( ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:12237:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:12237:4: ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:12238:5: {...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:12238:117: ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:12239:6: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:12242:9: ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) )
        // InternalKim.g:12242:10: {...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred466_InternalKim", "true");
        }
        // InternalKim.g:12242:19: (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) )
        // InternalKim.g:12242:20: otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
        {
        otherlv_19=(Token)match(input,185,FOLLOW_163); if (state.failed) return ;
        // InternalKim.g:12246:9: ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) )
        int alt596=2;
        int LA596_0 = input.LA(1);

        if ( (LA596_0==186) ) {
            alt596=1;
        }
        else if ( ((LA596_0>=RULE_LOWERCASE_ID && LA596_0<=RULE_UPPERCASE_ID)||LA596_0==RULE_CAMELCASE_ID||LA596_0==RULE_LOWERCASE_DASHID||LA596_0==RULE_UPPERCASE_PATH||LA596_0==39||(LA596_0>=138 && LA596_0<=139)||(LA596_0>=147 && LA596_0<=148)||(LA596_0>=150 && LA596_0<=155)||(LA596_0>=157 && LA596_0<=168)) ) {
            alt596=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 596, 0, input);

            throw nvae;
        }
        switch (alt596) {
            case 1 :
                // InternalKim.g:12247:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
                {
                // InternalKim.g:12247:10: (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) )
                // InternalKim.g:12248:11: otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
                {
                otherlv_20=(Token)match(input,186,FOLLOW_140); if (state.failed) return ;
                // InternalKim.g:12252:11: ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:12253:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
                {
                // InternalKim.g:12253:12: ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:12254:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:12254:13: (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH )
                int alt595=2;
                int LA595_0 = input.LA(1);

                if ( (LA595_0==RULE_UPPERCASE_ID) ) {
                    alt595=1;
                }
                else if ( (LA595_0==RULE_UPPERCASE_PATH) ) {
                    alt595=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 595, 0, input);

                    throw nvae;
                }
                switch (alt595) {
                    case 1 :
                        // InternalKim.g:12255:14: lv_definedAuthority_21_1= RULE_UPPERCASE_ID
                        {
                        lv_definedAuthority_21_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:12270:14: lv_definedAuthority_21_2= RULE_UPPERCASE_PATH
                        {
                        lv_definedAuthority_21_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:12289:10: ( (lv_upperConcept_22_0= ruleConcept ) )
                {
                // InternalKim.g:12289:10: ( (lv_upperConcept_22_0= ruleConcept ) )
                // InternalKim.g:12290:11: (lv_upperConcept_22_0= ruleConcept )
                {
                // InternalKim.g:12290:11: (lv_upperConcept_22_0= ruleConcept )
                // InternalKim.g:12291:12: lv_upperConcept_22_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_22_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred466_InternalKim

    // $ANTLR start synpred468_InternalKim
    public final void synpred468_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_25=null;
        EObject lv_requirements_24_0 = null;

        EObject lv_requirements_26_0 = null;


        // InternalKim.g:12315:4: ( ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:12315:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:12315:4: ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:12316:5: {...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred468_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:12316:117: ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:12317:6: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:12320:9: ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:12320:10: {...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred468_InternalKim", "true");
        }
        // InternalKim.g:12320:19: (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:12320:20: otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_23=(Token)match(input,187,FOLLOW_164); if (state.failed) return ;
        // InternalKim.g:12324:9: ( (lv_requirements_24_0= ruleIdentityRequirement ) )
        // InternalKim.g:12325:10: (lv_requirements_24_0= ruleIdentityRequirement )
        {
        // InternalKim.g:12325:10: (lv_requirements_24_0= ruleIdentityRequirement )
        // InternalKim.g:12326:11: lv_requirements_24_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_requirements_24_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12343:9: (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )*
        loop597:
        do {
            int alt597=2;
            int LA597_0 = input.LA(1);

            if ( (LA597_0==28) ) {
                alt597=1;
            }


            switch (alt597) {
        	case 1 :
        	    // InternalKim.g:12344:10: otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_25=(Token)match(input,28,FOLLOW_164); if (state.failed) return ;
        	    // InternalKim.g:12348:10: ( (lv_requirements_26_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:12349:11: (lv_requirements_26_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:12349:11: (lv_requirements_26_0= ruleIdentityRequirement )
        	    // InternalKim.g:12350:12: lv_requirements_26_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_3_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_requirements_26_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop597;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred468_InternalKim

    // $ANTLR start synpred470_InternalKim
    public final void synpred470_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_29=null;
        EObject lv_describedQuality_28_0 = null;

        EObject lv_descriptionConstraints_30_0 = null;


        // InternalKim.g:12374:4: ( ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) )
        // InternalKim.g:12374:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
        {
        // InternalKim.g:12374:4: ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) )
        // InternalKim.g:12375:5: {...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred470_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:12375:117: ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) )
        // InternalKim.g:12376:6: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:12379:9: ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) )
        // InternalKim.g:12379:10: {...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred470_InternalKim", "true");
        }
        // InternalKim.g:12379:19: (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? )
        // InternalKim.g:12379:20: otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
        {
        otherlv_27=(Token)match(input,188,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12383:9: ( (lv_describedQuality_28_0= ruleConceptDeclaration ) )
        // InternalKim.g:12384:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12384:10: (lv_describedQuality_28_0= ruleConceptDeclaration )
        // InternalKim.g:12385:11: lv_describedQuality_28_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_178);
        lv_describedQuality_28_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12402:9: (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )?
        int alt598=2;
        int LA598_0 = input.LA(1);

        if ( (LA598_0==26) ) {
            alt598=1;
        }
        switch (alt598) {
            case 1 :
                // InternalKim.g:12403:10: otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
                {
                otherlv_29=(Token)match(input,26,FOLLOW_167); if (state.failed) return ;
                // InternalKim.g:12407:10: ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) )
                // InternalKim.g:12408:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
                {
                // InternalKim.g:12408:11: (lv_descriptionConstraints_30_0= ruleDescriptionConstraints )
                // InternalKim.g:12409:12: lv_descriptionConstraints_30_0= ruleDescriptionConstraints
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescriptionConstraintsDescriptionConstraintsParserRuleCall_3_4_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_descriptionConstraints_30_0=ruleDescriptionConstraints();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred470_InternalKim

    // $ANTLR start synpred471_InternalKim
    public final void synpred471_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_32=null;
        EObject lv_describedProportionality_33_0 = null;


        // InternalKim.g:12433:4: ( ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12433:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12433:4: ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12434:5: {...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred471_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:12434:117: ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12435:6: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:12438:9: ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12438:10: {...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred471_InternalKim", "true");
        }
        // InternalKim.g:12438:19: (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12438:20: otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
        {
        otherlv_31=(Token)match(input,189,FOLLOW_81); if (state.failed) return ;
        otherlv_32=(Token)match(input,103,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12446:9: ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) )
        // InternalKim.g:12447:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12447:10: (lv_describedProportionality_33_0= ruleConceptDeclaration )
        // InternalKim.g:12448:11: lv_describedProportionality_33_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_33_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred471_InternalKim

    // $ANTLR start synpred472_InternalKim
    public final void synpred472_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        EObject lv_describedInverseProportionalityQuality_36_0 = null;


        // InternalKim.g:12471:4: ( ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12471:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12471:4: ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12472:5: {...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred472_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:12472:117: ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12473:6: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:12476:9: ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12476:10: {...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred472_InternalKim", "true");
        }
        // InternalKim.g:12476:19: (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12476:20: otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_34=(Token)match(input,190,FOLLOW_81); if (state.failed) return ;
        otherlv_35=(Token)match(input,103,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12484:9: ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:12485:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12485:10: (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:12486:11: lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred472_InternalKim

    // $ANTLR start synpred473_InternalKim
    public final void synpred473_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        EObject lv_describedNonzeroQuality_38_0 = null;


        // InternalKim.g:12509:4: ( ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12509:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12509:4: ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12510:5: {...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred473_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:12510:117: ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12511:6: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:12514:9: ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12514:10: {...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred473_InternalKim", "true");
        }
        // InternalKim.g:12514:19: (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12514:20: otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,191,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12518:9: ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) )
        // InternalKim.g:12519:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12519:10: (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration )
        // InternalKim.g:12520:11: lv_describedNonzeroQuality_38_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_38_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred473_InternalKim

    // $ANTLR start synpred474_InternalKim
    public final void synpred474_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_classifiesQuality_40_0 = null;


        // InternalKim.g:12543:4: ( ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12543:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12543:4: ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12544:5: {...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred474_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:12544:117: ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12545:6: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:12548:9: ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12548:10: {...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred474_InternalKim", "true");
        }
        // InternalKim.g:12548:19: (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12548:20: otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
        {
        otherlv_39=(Token)match(input,192,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12552:9: ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) )
        // InternalKim.g:12553:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12553:10: (lv_classifiesQuality_40_0= ruleConceptDeclaration )
        // InternalKim.g:12554:11: lv_classifiesQuality_40_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_40_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred474_InternalKim

    // $ANTLR start synpred475_InternalKim
    public final void synpred475_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_41=null;
        EObject lv_discretizesQuality_42_0 = null;


        // InternalKim.g:12577:4: ( ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:12577:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:12577:4: ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:12578:5: {...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred475_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:12578:117: ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:12579:6: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:12582:9: ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:12582:10: {...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred475_InternalKim", "true");
        }
        // InternalKim.g:12582:19: (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12582:20: otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_41=(Token)match(input,193,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12586:9: ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:12587:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12587:10: (lv_discretizesQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:12588:11: lv_discretizesQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred475_InternalKim

    // $ANTLR start synpred477_InternalKim
    public final void synpred477_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        Token otherlv_45=null;
        EObject lv_actuallyInheritedTraits_44_0 = null;

        EObject lv_actuallyInheritedTraits_46_0 = null;


        // InternalKim.g:12611:4: ( ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12611:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12611:4: ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12612:5: {...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred477_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:12612:118: ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12613:6: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:12616:9: ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12616:10: {...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred477_InternalKim", "true");
        }
        // InternalKim.g:12616:19: (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12616:20: otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_43=(Token)match(input,194,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12620:9: ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:12621:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12621:10: (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration )
        // InternalKim.g:12622:11: lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_actuallyInheritedTraits_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12639:9: (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )*
        loop599:
        do {
            int alt599=2;
            int LA599_0 = input.LA(1);

            if ( (LA599_0==28) ) {
                alt599=1;
            }


            switch (alt599) {
        	case 1 :
        	    // InternalKim.g:12640:10: otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_45=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12644:10: ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12645:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12645:11: (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration )
        	    // InternalKim.g:12646:12: lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_10_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_actuallyInheritedTraits_46_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop599;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred477_InternalKim

    // $ANTLR start synpred482_InternalKim
    public final void synpred482_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        EObject lv_roles_49_0 = null;

        EObject lv_roles_51_0 = null;

        EObject lv_targetObservables_53_0 = null;

        EObject lv_targetObservables_55_0 = null;

        EObject lv_restrictedObservables_57_0 = null;

        EObject lv_restrictedObservables_59_0 = null;


        // InternalKim.g:12670:4: ( ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:12670:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:12670:4: ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12671:5: {...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred482_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:12671:118: ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12672:6: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:12675:9: ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12675:10: {...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred482_InternalKim", "true");
        }
        // InternalKim.g:12675:19: (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12675:20: otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_47=(Token)match(input,195,FOLLOW_168); if (state.failed) return ;
        otherlv_48=(Token)match(input,196,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12683:9: ( (lv_roles_49_0= ruleConceptDeclaration ) )
        // InternalKim.g:12684:10: (lv_roles_49_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12684:10: (lv_roles_49_0= ruleConceptDeclaration )
        // InternalKim.g:12685:11: lv_roles_49_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_2_0());
          										
        }
        pushFollow(FOLLOW_169);
        lv_roles_49_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12702:9: (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )*
        loop601:
        do {
            int alt601=2;
            int LA601_0 = input.LA(1);

            if ( (LA601_0==28) ) {
                alt601=1;
            }


            switch (alt601) {
        	case 1 :
        	    // InternalKim.g:12703:10: otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_50=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12707:10: ( (lv_roles_51_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12708:11: (lv_roles_51_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12708:11: (lv_roles_51_0= ruleConceptDeclaration )
        	    // InternalKim.g:12709:12: lv_roles_51_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_11_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_169);
        	    lv_roles_51_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop601;
            }
        } while (true);

        // InternalKim.g:12727:9: (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )?
        int alt603=2;
        int LA603_0 = input.LA(1);

        if ( (LA603_0==197) ) {
            alt603=1;
        }
        switch (alt603) {
            case 1 :
                // InternalKim.g:12728:10: otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_52=(Token)match(input,197,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:12732:10: ( (lv_targetObservables_53_0= ruleConceptDeclaration ) )
                // InternalKim.g:12733:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12733:11: (lv_targetObservables_53_0= ruleConceptDeclaration )
                // InternalKim.g:12734:12: lv_targetObservables_53_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_1_0());
                  											
                }
                pushFollow(FOLLOW_170);
                lv_targetObservables_53_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12751:10: (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )*
                loop602:
                do {
                    int alt602=2;
                    int LA602_0 = input.LA(1);

                    if ( (LA602_0==28) ) {
                        alt602=1;
                    }


                    switch (alt602) {
                	case 1 :
                	    // InternalKim.g:12752:11: otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_54=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:12756:11: ( (lv_targetObservables_55_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12757:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12757:12: (lv_targetObservables_55_0= ruleConceptDeclaration )
                	    // InternalKim.g:12758:13: lv_targetObservables_55_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_11_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_170);
                	    lv_targetObservables_55_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop602;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:12777:9: (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12778:10: otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_56=(Token)match(input,53,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12782:10: ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) )
        // InternalKim.g:12783:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12783:11: (lv_restrictedObservables_57_0= ruleConceptDeclaration )
        // InternalKim.g:12784:12: lv_restrictedObservables_57_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_1_0());
          											
        }
        pushFollow(FOLLOW_40);
        lv_restrictedObservables_57_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12801:10: (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )*
        loop604:
        do {
            int alt604=2;
            int LA604_0 = input.LA(1);

            if ( (LA604_0==28) ) {
                alt604=1;
            }


            switch (alt604) {
        	case 1 :
        	    // InternalKim.g:12802:11: otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_58=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12806:11: ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12807:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12807:12: (lv_restrictedObservables_59_0= ruleConceptDeclaration )
        	    // InternalKim.g:12808:13: lv_restrictedObservables_59_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_11_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_restrictedObservables_59_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop604;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred482_InternalKim

    // $ANTLR start synpred486_InternalKim
    public final void synpred486_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        EObject lv_conferredTraits_61_0 = null;

        EObject lv_conferredTraits_63_0 = null;

        EObject lv_conferredTargets_65_0 = null;

        EObject lv_conferredTargets_67_0 = null;


        // InternalKim.g:12833:4: ( ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:12833:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:12833:4: ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:12834:5: {...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred486_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:12834:118: ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:12835:6: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:12838:9: ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:12838:10: {...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred486_InternalKim", "true");
        }
        // InternalKim.g:12838:19: (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:12838:20: otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_60=(Token)match(input,198,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12842:9: ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) )
        // InternalKim.g:12843:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12843:10: (lv_conferredTraits_61_0= ruleConceptDeclaration )
        // InternalKim.g:12844:11: lv_conferredTraits_61_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_1_0());
          										
        }
        pushFollow(FOLLOW_236);
        lv_conferredTraits_61_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12861:9: (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )*
        loop606:
        do {
            int alt606=2;
            int LA606_0 = input.LA(1);

            if ( (LA606_0==28) ) {
                alt606=1;
            }


            switch (alt606) {
        	case 1 :
        	    // InternalKim.g:12862:10: otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_62=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12866:10: ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12867:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12867:11: (lv_conferredTraits_63_0= ruleConceptDeclaration )
        	    // InternalKim.g:12868:12: lv_conferredTraits_63_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_12_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_236);
        	    lv_conferredTraits_63_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop606;
            }
        } while (true);

        // InternalKim.g:12886:9: (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )?
        int alt608=2;
        int LA608_0 = input.LA(1);

        if ( (LA608_0==37) ) {
            alt608=1;
        }
        switch (alt608) {
            case 1 :
                // InternalKim.g:12887:10: otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_64=(Token)match(input,37,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:12891:10: ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) )
                // InternalKim.g:12892:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
                {
                // InternalKim.g:12892:11: (lv_conferredTargets_65_0= ruleConceptDeclaration )
                // InternalKim.g:12893:12: lv_conferredTargets_65_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_1_0());
                  											
                }
                pushFollow(FOLLOW_40);
                lv_conferredTargets_65_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:12910:10: (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )*
                loop607:
                do {
                    int alt607=2;
                    int LA607_0 = input.LA(1);

                    if ( (LA607_0==28) ) {
                        alt607=1;
                    }


                    switch (alt607) {
                	case 1 :
                	    // InternalKim.g:12911:11: otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_66=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:12915:11: ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:12916:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:12916:12: (lv_conferredTargets_67_0= ruleConceptDeclaration )
                	    // InternalKim.g:12917:13: lv_conferredTargets_67_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_12_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_40);
                	    lv_conferredTargets_67_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop607;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred486_InternalKim

    // $ANTLR start synpred488_InternalKim
    public final void synpred488_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_68=null;
        Token otherlv_69=null;
        Token otherlv_71=null;
        EObject lv_emergenceTriggers_70_0 = null;

        EObject lv_emergenceTriggers_72_0 = null;


        // InternalKim.g:12942:4: ( ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:12942:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:12942:4: ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:12943:5: {...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred488_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:12943:118: ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:12944:6: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:12947:9: ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:12947:10: {...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred488_InternalKim", "true");
        }
        // InternalKim.g:12947:19: (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:12947:20: otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_68=(Token)match(input,199,FOLLOW_86); if (state.failed) return ;
        otherlv_69=(Token)match(input,106,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:12955:9: ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) )
        // InternalKim.g:12956:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12956:10: (lv_emergenceTriggers_70_0= ruleConceptDeclaration )
        // InternalKim.g:12957:11: lv_emergenceTriggers_70_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_2_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_emergenceTriggers_70_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:12974:9: (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )*
        loop609:
        do {
            int alt609=2;
            int LA609_0 = input.LA(1);

            if ( (LA609_0==28) ) {
                alt609=1;
            }


            switch (alt609) {
        	case 1 :
        	    // InternalKim.g:12975:10: otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_71=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:12979:10: ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:12980:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:12980:11: (lv_emergenceTriggers_72_0= ruleConceptDeclaration )
        	    // InternalKim.g:12981:12: lv_emergenceTriggers_72_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getEmergenceTriggersConceptDeclarationParserRuleCall_3_13_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_emergenceTriggers_72_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop609;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred488_InternalKim

    // $ANTLR start synpred490_InternalKim
    public final void synpred490_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_73=null;
        Token otherlv_75=null;
        EObject lv_creates_74_0 = null;

        EObject lv_creates_76_0 = null;


        // InternalKim.g:13005:4: ( ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:13005:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:13005:4: ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:13006:5: {...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred490_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:13006:118: ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:13007:6: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:13010:9: ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:13010:10: {...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred490_InternalKim", "true");
        }
        // InternalKim.g:13010:19: (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:13010:20: otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_73=(Token)match(input,200,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:13014:9: ( (lv_creates_74_0= ruleConceptDeclaration ) )
        // InternalKim.g:13015:10: (lv_creates_74_0= ruleConceptDeclaration )
        {
        // InternalKim.g:13015:10: (lv_creates_74_0= ruleConceptDeclaration )
        // InternalKim.g:13016:11: lv_creates_74_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_creates_74_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13033:9: (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )*
        loop610:
        do {
            int alt610=2;
            int LA610_0 = input.LA(1);

            if ( (LA610_0==28) ) {
                alt610=1;
            }


            switch (alt610) {
        	case 1 :
        	    // InternalKim.g:13034:10: otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_75=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:13038:10: ( (lv_creates_76_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:13039:11: (lv_creates_76_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:13039:11: (lv_creates_76_0= ruleConceptDeclaration )
        	    // InternalKim.g:13040:12: lv_creates_76_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_14_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_creates_76_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop610;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred490_InternalKim

    // $ANTLR start synpred492_InternalKim
    public final void synpred492_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_77=null;
        Token otherlv_78=null;
        Token otherlv_80=null;
        EObject lv_traitTargets_79_0 = null;

        EObject lv_traitTargets_81_0 = null;


        // InternalKim.g:13064:4: ( ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:13064:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:13064:4: ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:13065:5: {...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred492_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:13065:118: ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:13066:6: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:13069:9: ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:13069:10: {...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred492_InternalKim", "true");
        }
        // InternalKim.g:13069:19: (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:13069:20: otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
        {
        otherlv_77=(Token)match(input,201,FOLLOW_25); if (state.failed) return ;
        otherlv_78=(Token)match(input,37,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:13077:9: ( (lv_traitTargets_79_0= ruleApplicableTarget ) )
        // InternalKim.g:13078:10: (lv_traitTargets_79_0= ruleApplicableTarget )
        {
        // InternalKim.g:13078:10: (lv_traitTargets_79_0= ruleApplicableTarget )
        // InternalKim.g:13079:11: lv_traitTargets_79_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_2_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_traitTargets_79_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13096:9: (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )*
        loop611:
        do {
            int alt611=2;
            int LA611_0 = input.LA(1);

            if ( (LA611_0==28) ) {
                alt611=1;
            }


            switch (alt611) {
        	case 1 :
        	    // InternalKim.g:13097:10: otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_80=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:13101:10: ( (lv_traitTargets_81_0= ruleApplicableTarget ) )
        	    // InternalKim.g:13102:11: (lv_traitTargets_81_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:13102:11: (lv_traitTargets_81_0= ruleApplicableTarget )
        	    // InternalKim.g:13103:12: lv_traitTargets_81_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_15_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_traitTargets_81_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop611;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred492_InternalKim

    // $ANTLR start synpred496_InternalKim
    public final void synpred496_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_82=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        EObject lv_domains_83_0 = null;

        EObject lv_ranges_85_0 = null;

        EObject lv_domains_87_0 = null;

        EObject lv_ranges_89_0 = null;


        // InternalKim.g:13127:4: ( ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:13127:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:13127:4: ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:13128:5: {...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred496_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:13128:118: ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:13129:6: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:13132:9: ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:13132:10: {...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred496_InternalKim", "true");
        }
        // InternalKim.g:13132:19: (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:13132:20: otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_82=(Token)match(input,202,FOLLOW_122); if (state.failed) return ;
        // InternalKim.g:13136:9: ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:13137:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:13137:10: (lv_domains_83_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:13138:11: lv_domains_83_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_1_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_domains_83_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13155:9: ( ( 'to' )=>otherlv_84= 'to' )
        // InternalKim.g:13156:10: ( 'to' )=>otherlv_84= 'to'
        {
        otherlv_84=(Token)match(input,37,FOLLOW_122); if (state.failed) return ;

        }

        // InternalKim.g:13162:9: ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:13163:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:13163:10: (lv_ranges_85_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:13164:11: lv_ranges_85_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_3_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_ranges_85_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13181:9: (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )*
        loop612:
        do {
            int alt612=2;
            int LA612_0 = input.LA(1);

            if ( (LA612_0==28) ) {
                alt612=1;
            }


            switch (alt612) {
        	case 1 :
        	    // InternalKim.g:13182:10: otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_86=(Token)match(input,28,FOLLOW_122); if (state.failed) return ;
        	    // InternalKim.g:13186:10: ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:13187:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:13187:11: (lv_domains_87_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:13188:12: lv_domains_87_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_16_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_25);
        	    lv_domains_87_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:13205:10: ( ( 'to' )=>otherlv_88= 'to' )
        	    // InternalKim.g:13206:11: ( 'to' )=>otherlv_88= 'to'
        	    {
        	    otherlv_88=(Token)match(input,37,FOLLOW_122); if (state.failed) return ;

        	    }

        	    // InternalKim.g:13212:10: ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:13213:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:13213:11: (lv_ranges_89_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:13214:12: lv_ranges_89_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_16_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_ranges_89_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop612;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred496_InternalKim

    // $ANTLR start synpred498_InternalKim
    public final void synpred498_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_90=null;
        Token otherlv_92=null;
        EObject lv_qualitiesAffected_91_0 = null;

        EObject lv_qualitiesAffected_93_0 = null;


        // InternalKim.g:13238:4: ( ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:13238:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:13238:4: ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:13239:5: {...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred498_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:13239:118: ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:13240:6: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:13243:9: ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:13243:10: {...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred498_InternalKim", "true");
        }
        // InternalKim.g:13243:19: (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:13243:20: otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_90=(Token)match(input,203,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:13247:9: ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) )
        // InternalKim.g:13248:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
        {
        // InternalKim.g:13248:10: (lv_qualitiesAffected_91_0= ruleConceptDeclaration )
        // InternalKim.g:13249:11: lv_qualitiesAffected_91_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_qualitiesAffected_91_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13266:9: (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )*
        loop613:
        do {
            int alt613=2;
            int LA613_0 = input.LA(1);

            if ( (LA613_0==28) ) {
                alt613=1;
            }


            switch (alt613) {
        	case 1 :
        	    // InternalKim.g:13267:10: otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        	    // InternalKim.g:13271:10: ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:13272:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:13272:11: (lv_qualitiesAffected_93_0= ruleConceptDeclaration )
        	    // InternalKim.g:13273:12: lv_qualitiesAffected_93_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_17_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_qualitiesAffected_93_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop613;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred498_InternalKim

    // $ANTLR start synpred501_InternalKim
    public final void synpred501_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_94=null;
        Token lv_disjoint_95_0=null;
        Token otherlv_96=null;
        Token otherlv_98=null;
        EObject lv_children_97_0 = null;

        EObject lv_children_99_0 = null;


        // InternalKim.g:13297:4: ( ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:13297:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:13297:4: ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:13298:5: {...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred501_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:13298:118: ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:13299:6: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:13302:9: ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:13302:10: {...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred501_InternalKim", "true");
        }
        // InternalKim.g:13302:19: (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* )
        // InternalKim.g:13302:20: otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
        {
        otherlv_94=(Token)match(input,195,FOLLOW_172); if (state.failed) return ;
        // InternalKim.g:13306:9: ( (lv_disjoint_95_0= 'disjoint' ) )?
        int alt614=2;
        int LA614_0 = input.LA(1);

        if ( (LA614_0==102) ) {
            alt614=1;
        }
        switch (alt614) {
            case 1 :
                // InternalKim.g:13307:10: (lv_disjoint_95_0= 'disjoint' )
                {
                // InternalKim.g:13307:10: (lv_disjoint_95_0= 'disjoint' )
                // InternalKim.g:13308:11: lv_disjoint_95_0= 'disjoint'
                {
                lv_disjoint_95_0=(Token)match(input,102,FOLLOW_173); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_96=(Token)match(input,116,FOLLOW_174); if (state.failed) return ;
        // InternalKim.g:13324:9: ( (lv_children_97_0= ruleChildConcept ) )
        // InternalKim.g:13325:10: (lv_children_97_0= ruleChildConcept )
        {
        // InternalKim.g:13325:10: (lv_children_97_0= ruleChildConcept )
        // InternalKim.g:13326:11: lv_children_97_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_3_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_children_97_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13343:9: (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )*
        loop615:
        do {
            int alt615=2;
            int LA615_0 = input.LA(1);

            if ( (LA615_0==28) ) {
                alt615=1;
            }


            switch (alt615) {
        	case 1 :
        	    // InternalKim.g:13344:10: otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) )
        	    {
        	    otherlv_98=(Token)match(input,28,FOLLOW_174); if (state.failed) return ;
        	    // InternalKim.g:13348:10: ( (lv_children_99_0= ruleChildConcept ) )
        	    // InternalKim.g:13349:11: (lv_children_99_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:13349:11: (lv_children_99_0= ruleChildConcept )
        	    // InternalKim.g:13350:12: lv_children_99_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_18_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_children_99_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop615;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred501_InternalKim

    // $ANTLR start synpred503_InternalKim
    public final void synpred503_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_100=null;
        Token otherlv_102=null;
        EObject lv_implications_101_0 = null;

        EObject lv_implications_103_0 = null;


        // InternalKim.g:13374:4: ( ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) )
        // InternalKim.g:13374:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
        {
        // InternalKim.g:13374:4: ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) )
        // InternalKim.g:13375:5: {...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred503_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:13375:118: ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) )
        // InternalKim.g:13376:6: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:13379:9: ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) )
        // InternalKim.g:13379:10: {...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred503_InternalKim", "true");
        }
        // InternalKim.g:13379:19: (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* )
        // InternalKim.g:13379:20: otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
        {
        otherlv_100=(Token)match(input,204,FOLLOW_175); if (state.failed) return ;
        // InternalKim.g:13383:9: ( (lv_implications_101_0= ruleImplication ) )
        // InternalKim.g:13384:10: (lv_implications_101_0= ruleImplication )
        {
        // InternalKim.g:13384:10: (lv_implications_101_0= ruleImplication )
        // InternalKim.g:13385:11: lv_implications_101_0= ruleImplication
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_40);
        lv_implications_101_0=ruleImplication();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:13402:9: (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )*
        loop616:
        do {
            int alt616=2;
            int LA616_0 = input.LA(1);

            if ( (LA616_0==28) ) {
                alt616=1;
            }


            switch (alt616) {
        	case 1 :
        	    // InternalKim.g:13403:10: otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) )
        	    {
        	    otherlv_102=(Token)match(input,28,FOLLOW_175); if (state.failed) return ;
        	    // InternalKim.g:13407:10: ( (lv_implications_103_0= ruleImplication ) )
        	    // InternalKim.g:13408:11: (lv_implications_103_0= ruleImplication )
        	    {
        	    // InternalKim.g:13408:11: (lv_implications_103_0= ruleImplication )
        	    // InternalKim.g:13409:12: lv_implications_103_0= ruleImplication
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getImplicationsImplicationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_40);
        	    lv_implications_103_0=ruleImplication();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop616;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred503_InternalKim

    // $ANTLR start synpred505_InternalKim
    public final void synpred505_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_104=null;
        Token otherlv_105=null;
        Token lv_authorities_106_1=null;
        Token lv_authorities_106_2=null;

        // InternalKim.g:13433:4: ( ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) )
        // InternalKim.g:13433:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        {
        // InternalKim.g:13433:4: ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) )
        // InternalKim.g:13434:5: {...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred505_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:13434:118: ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
        // InternalKim.g:13435:6: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:13438:9: ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) )
        // InternalKim.g:13438:10: {...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred505_InternalKim", "true");
        }
        // InternalKim.g:13438:19: (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) )
        // InternalKim.g:13438:20: otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
        {
        otherlv_104=(Token)match(input,205,FOLLOW_176); if (state.failed) return ;
        otherlv_105=(Token)match(input,186,FOLLOW_140); if (state.failed) return ;
        // InternalKim.g:13446:9: ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) )
        // InternalKim.g:13447:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
        {
        // InternalKim.g:13447:10: ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) )
        // InternalKim.g:13448:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
        {
        // InternalKim.g:13448:11: (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH )
        int alt617=2;
        int LA617_0 = input.LA(1);

        if ( (LA617_0==RULE_UPPERCASE_ID) ) {
            alt617=1;
        }
        else if ( (LA617_0==RULE_UPPERCASE_PATH) ) {
            alt617=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 617, 0, input);

            throw nvae;
        }
        switch (alt617) {
            case 1 :
                // InternalKim.g:13449:12: lv_authorities_106_1= RULE_UPPERCASE_ID
                {
                lv_authorities_106_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13464:12: lv_authorities_106_2= RULE_UPPERCASE_PATH
                {
                lv_authorities_106_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred505_InternalKim

    // $ANTLR start synpred506_InternalKim
    public final void synpred506_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_107=null;
        EObject lv_metadata_108_0 = null;


        // InternalKim.g:13487:4: ( ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) )
        // InternalKim.g:13487:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
        {
        // InternalKim.g:13487:4: ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) )
        // InternalKim.g:13488:5: {...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred506_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:13488:118: ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) )
        // InternalKim.g:13489:6: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:13492:9: ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) )
        // InternalKim.g:13492:10: {...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred506_InternalKim", "true");
        }
        // InternalKim.g:13492:19: (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) )
        // InternalKim.g:13492:20: otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) )
        {
        otherlv_107=(Token)match(input,42,FOLLOW_37); if (state.failed) return ;
        // InternalKim.g:13496:9: ( (lv_metadata_108_0= ruleMap ) )
        // InternalKim.g:13497:10: (lv_metadata_108_0= ruleMap )
        {
        // InternalKim.g:13497:10: (lv_metadata_108_0= ruleMap )
        // InternalKim.g:13498:11: lv_metadata_108_0= ruleMap
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMapParserRuleCall_3_21_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_108_0=ruleMap();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred506_InternalKim

    // $ANTLR start synpred507_InternalKim
    public final void synpred507_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_109_0 = null;


        // InternalKim.g:13526:10: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )
        // InternalKim.g:13526:10: {...}? => ( (lv_properties_109_0= rulePropertyStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred507_InternalKim", "true");
        }
        // InternalKim.g:13526:19: ( (lv_properties_109_0= rulePropertyStatement ) )
        // InternalKim.g:13526:20: (lv_properties_109_0= rulePropertyStatement )
        {
        // InternalKim.g:13526:20: (lv_properties_109_0= rulePropertyStatement )
        // InternalKim.g:13527:10: lv_properties_109_0= rulePropertyStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_properties_109_0=rulePropertyStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred507_InternalKim

    // $ANTLR start synpred508_InternalKim
    public final void synpred508_InternalKim_fragment() throws RecognitionException {   
        EObject lv_properties_109_0 = null;


        // InternalKim.g:13521:4: ( ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )
        // InternalKim.g:13521:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
        {
        // InternalKim.g:13521:4: ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) )
        // InternalKim.g:13522:5: {...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred508_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:13522:118: ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ )
        // InternalKim.g:13523:6: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:13526:9: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+
        int cnt618=0;
        loop618:
        do {
            int alt618=2;
            int LA618_0 = input.LA(1);

            if ( (LA618_0==RULE_LOWERCASE_ID) && ((true))) {
                alt618=1;
            }
            else if ( (LA618_0==RULE_UPPERCASE_ID) && ((true))) {
                alt618=1;
            }
            else if ( (LA618_0==RULE_LOWERCASE_DASHID) && ((true))) {
                alt618=1;
            }
            else if ( (LA618_0==RULE_BACKCASE_ID) && ((true))) {
                alt618=1;
            }
            else if ( (LA618_0==195) && ((true))) {
                alt618=1;
            }
            else if ( (LA618_0==211) && ((true))) {
                alt618=1;
            }
            else if ( (LA618_0==205) && ((true))) {
                alt618=1;
            }


            switch (alt618) {
        	case 1 :
        	    // InternalKim.g:13526:10: {...}? => ( (lv_properties_109_0= rulePropertyStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred508_InternalKim", "true");
        	    }
        	    // InternalKim.g:13526:19: ( (lv_properties_109_0= rulePropertyStatement ) )
        	    // InternalKim.g:13526:20: (lv_properties_109_0= rulePropertyStatement )
        	    {
        	    // InternalKim.g:13526:20: (lv_properties_109_0= rulePropertyStatement )
        	    // InternalKim.g:13527:10: lv_properties_109_0= rulePropertyStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getPropertiesPropertyStatementParserRuleCall_3_22_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_157);
        	    lv_properties_109_0=rulePropertyStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt618 >= 1 ) break loop618;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(618, input);
                    throw eee;
            }
            cnt618++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred508_InternalKim

    // $ANTLR start synpred513_InternalKim
    public final void synpred513_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantifier_0_0 = null;


        // InternalKim.g:13711:4: ( (lv_quantifier_0_0= ruleQuantification ) )
        // InternalKim.g:13711:4: (lv_quantifier_0_0= ruleQuantification )
        {
        // InternalKim.g:13711:4: (lv_quantifier_0_0= ruleQuantification )
        // InternalKim.g:13712:5: lv_quantifier_0_0= ruleQuantification
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getImplicationAccess().getQuantifierQuantificationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantifier_0_0=ruleQuantification();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred513_InternalKim

    // $ANTLR start synpred542_InternalKim
    public final void synpred542_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;


        // InternalKim.g:14500:4: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
        // InternalKim.g:14500:4: ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
        {
        // InternalKim.g:14500:4: ( ( '(' )=>otherlv_1= '(' )
        // InternalKim.g:14501:5: ( '(' )=>otherlv_1= '('
        {
        otherlv_1=(Token)match(input,39,FOLLOW_187); if (state.failed) return ;

        }

        // InternalKim.g:14507:4: ( (lv_parameters_2_0= ruleParameterList ) )?
        int alt635=2;
        int LA635_0 = input.LA(1);

        if ( ((LA635_0>=RULE_LOWERCASE_ID && LA635_0<=RULE_STRING)||(LA635_0>=RULE_EXPR && LA635_0<=RULE_LOWERCASE_DASHID)||LA635_0==RULE_UPPERCASE_PATH||LA635_0==RULE_TEMPLATE_VAR||(LA635_0>=29 && LA635_0<=30)||LA635_0==39||LA635_0==47||(LA635_0>=54 && LA635_0<=55)||(LA635_0>=81 && LA635_0<=84)||LA635_0==87||LA635_0==89||LA635_0==117||LA635_0==124||(LA635_0>=138 && LA635_0<=139)||(LA635_0>=147 && LA635_0<=148)||(LA635_0>=150 && LA635_0<=155)||(LA635_0>=157 && LA635_0<=168)||LA635_0==217||(LA635_0>=255 && LA635_0<=256)) ) {
            alt635=1;
        }
        switch (alt635) {
            case 1 :
                // InternalKim.g:14508:5: (lv_parameters_2_0= ruleParameterList )
                {
                // InternalKim.g:14508:5: (lv_parameters_2_0= ruleParameterList )
                // InternalKim.g:14509:6: lv_parameters_2_0= ruleParameterList
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                  					
                }
                pushFollow(FOLLOW_36);
                lv_parameters_2_0=ruleParameterList();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_3=(Token)match(input,40,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred542_InternalKim

    // $ANTLR start synpred543_InternalKim
    public final void synpred543_InternalKim_fragment() throws RecognitionException {   
        EObject lv_contents_2_0 = null;


        // InternalKim.g:14565:4: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )
        // InternalKim.g:14565:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
        {
        // InternalKim.g:14565:4: (lv_contents_2_0= ruleValueWithIdAndConcept )
        // InternalKim.g:14566:5: lv_contents_2_0= ruleValueWithIdAndConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getListAccess().getContentsValueWithIdAndConceptParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_contents_2_0=ruleValueWithIdAndConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred543_InternalKim

    // $ANTLR start synpred560_InternalKim
    public final void synpred560_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14977:6: ( ',' )
        // InternalKim.g:14977:7: ','
        {
        match(input,28,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred560_InternalKim

    // $ANTLR start synpred563_InternalKim
    public final void synpred563_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:15092:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:15092:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred563_InternalKim

    // $ANTLR start synpred564_InternalKim
    public final void synpred564_InternalKim_fragment() throws RecognitionException {   
        Token lv_name_0_2=null;

        // InternalKim.g:15108:6: (lv_name_0_2= RULE_LOWERCASE_ID )
        // InternalKim.g:15108:6: lv_name_0_2= RULE_LOWERCASE_ID
        {
        lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred564_InternalKim

    // $ANTLR start synpred573_InternalKim
    public final void synpred573_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:15355:3: ( ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) )
        // InternalKim.g:15355:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
        {
        // InternalKim.g:15355:3: ( (lv_concept_1_0= ruleSimpleObservableSemantics ) )
        // InternalKim.g:15356:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
        {
        // InternalKim.g:15356:4: (lv_concept_1_0= ruleSimpleObservableSemantics )
        // InternalKim.g:15357:5: lv_concept_1_0= ruleSimpleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleSimpleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred573_InternalKim

    // $ANTLR start synpred574_InternalKim
    public final void synpred574_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_2_0 = null;


        // InternalKim.g:15375:3: ( ( (lv_function_2_0= ruleFunction ) ) )
        // InternalKim.g:15375:3: ( (lv_function_2_0= ruleFunction ) )
        {
        // InternalKim.g:15375:3: ( (lv_function_2_0= ruleFunction ) )
        // InternalKim.g:15376:4: (lv_function_2_0= ruleFunction )
        {
        // InternalKim.g:15376:4: (lv_function_2_0= ruleFunction )
        // InternalKim.g:15377:5: lv_function_2_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_2_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred574_InternalKim

    // $ANTLR start synpred575_InternalKim
    public final void synpred575_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_3_0 = null;


        // InternalKim.g:15395:3: ( ( (lv_date_3_0= ruleDate ) ) )
        // InternalKim.g:15395:3: ( (lv_date_3_0= ruleDate ) )
        {
        // InternalKim.g:15395:3: ( (lv_date_3_0= ruleDate ) )
        // InternalKim.g:15396:4: (lv_date_3_0= ruleDate )
        {
        // InternalKim.g:15396:4: (lv_date_3_0= ruleDate )
        // InternalKim.g:15397:5: lv_date_3_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getDateDateParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_3_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred575_InternalKim

    // $ANTLR start synpred576_InternalKim
    public final void synpred576_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_4_0 = null;


        // InternalKim.g:15415:3: ( ( (lv_literal_4_0= ruleLiteral ) ) )
        // InternalKim.g:15415:3: ( (lv_literal_4_0= ruleLiteral ) )
        {
        // InternalKim.g:15415:3: ( (lv_literal_4_0= ruleLiteral ) )
        // InternalKim.g:15416:4: (lv_literal_4_0= ruleLiteral )
        {
        // InternalKim.g:15416:4: (lv_literal_4_0= ruleLiteral )
        // InternalKim.g:15417:5: lv_literal_4_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_4_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_4_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred576_InternalKim

    // $ANTLR start synpred579_InternalKim
    public final void synpred579_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_7_1 = null;


        // InternalKim.g:15476:6: (lv_id_7_1= rulePathName )
        // InternalKim.g:15476:6: lv_id_7_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_7_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_7_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred579_InternalKim

    // $ANTLR start synpred580_InternalKim
    public final void synpred580_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_2=null;

        // InternalKim.g:15492:6: (lv_id_7_2= RULE_LOWERCASE_ID )
        // InternalKim.g:15492:6: lv_id_7_2= RULE_LOWERCASE_ID
        {
        lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred580_InternalKim

    // $ANTLR start synpred581_InternalKim
    public final void synpred581_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_3=null;

        // InternalKim.g:15507:6: (lv_id_7_3= RULE_UPPERCASE_ID )
        // InternalKim.g:15507:6: lv_id_7_3= RULE_UPPERCASE_ID
        {
        lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred581_InternalKim

    // $ANTLR start synpred582_InternalKim
    public final void synpred582_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_7_2=null;
        Token lv_id_7_3=null;
        Token lv_id_7_4=null;
        AntlrDatatypeRuleToken lv_id_7_1 = null;


        // InternalKim.g:15473:3: ( ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:15473:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:15473:3: ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:15474:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:15474:4: ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:15475:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:15475:5: (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID )
        int alt643=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA643_1 = input.LA(2);

            if ( (synpred579_InternalKim()) ) {
                alt643=1;
            }
            else if ( (synpred580_InternalKim()) ) {
                alt643=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 643, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            int LA643_2 = input.LA(2);

            if ( (synpred579_InternalKim()) ) {
                alt643=1;
            }
            else if ( (synpred581_InternalKim()) ) {
                alt643=3;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 643, 2, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt643=1;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt643=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 643, 0, input);

            throw nvae;
        }

        switch (alt643) {
            case 1 :
                // InternalKim.g:15476:6: lv_id_7_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_7_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:15492:6: lv_id_7_2= RULE_LOWERCASE_ID
                {
                lv_id_7_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:15507:6: lv_id_7_3= RULE_UPPERCASE_ID
                {
                lv_id_7_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:15522:6: lv_id_7_4= RULE_CAMELCASE_ID
                {
                lv_id_7_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred582_InternalKim

    // $ANTLR start synpred584_InternalKim
    public final void synpred584_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_9_0 = null;


        // InternalKim.g:15560:3: ( ( (lv_list_9_0= ruleList ) ) )
        // InternalKim.g:15560:3: ( (lv_list_9_0= ruleList ) )
        {
        // InternalKim.g:15560:3: ( (lv_list_9_0= ruleList ) )
        // InternalKim.g:15561:4: (lv_list_9_0= ruleList )
        {
        // InternalKim.g:15561:4: (lv_list_9_0= ruleList )
        // InternalKim.g:15562:5: lv_list_9_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_9_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_9_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred584_InternalKim

    // $ANTLR start synpred585_InternalKim
    public final void synpred585_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_10_0 = null;


        // InternalKim.g:15580:3: ( ( (lv_quantity_10_0= ruleQuantity ) ) )
        // InternalKim.g:15580:3: ( (lv_quantity_10_0= ruleQuantity ) )
        {
        // InternalKim.g:15580:3: ( (lv_quantity_10_0= ruleQuantity ) )
        // InternalKim.g:15581:4: (lv_quantity_10_0= ruleQuantity )
        {
        // InternalKim.g:15581:4: (lv_quantity_10_0= ruleQuantity )
        // InternalKim.g:15582:5: lv_quantity_10_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getQuantityQuantityParserRuleCall_10_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_10_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred585_InternalKim

    // $ANTLR start synpred587_InternalKim
    public final void synpred587_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_0_0 = null;


        // InternalKim.g:15674:3: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) )
        // InternalKim.g:15674:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        {
        // InternalKim.g:15674:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
        // InternalKim.g:15675:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        {
        // InternalKim.g:15675:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
        // InternalKim.g:15676:5: lv_literal_0_0= ruleLiteralOrIdOrComma
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_0_0=ruleLiteralOrIdOrComma();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred587_InternalKim

    // $ANTLR start synpred588_InternalKim
    public final void synpred588_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:15694:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:15694:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:15694:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:15695:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:15695:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:15696:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred588_InternalKim

    // $ANTLR start synpred593_InternalKim
    public final void synpred593_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:15759:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:15759:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:15759:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:15760:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:15760:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:15761:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:15761:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt645=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt645=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt645=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt645=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 645, 0, input);

            throw nvae;
        }

        switch (alt645) {
            case 1 :
                // InternalKim.g:15762:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:15777:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:15792:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred593_InternalKim

    // $ANTLR start synpred596_InternalKim
    public final void synpred596_InternalKim_fragment() throws RecognitionException {   
        EObject lv_quantity_8_0 = null;


        // InternalKim.g:15850:3: ( ( (lv_quantity_8_0= ruleQuantity ) ) )
        // InternalKim.g:15850:3: ( (lv_quantity_8_0= ruleQuantity ) )
        {
        // InternalKim.g:15850:3: ( (lv_quantity_8_0= ruleQuantity ) )
        // InternalKim.g:15851:4: (lv_quantity_8_0= ruleQuantity )
        {
        // InternalKim.g:15851:4: (lv_quantity_8_0= ruleQuantity )
        // InternalKim.g:15852:5: lv_quantity_8_0= ruleQuantity
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getQuantityQuantityParserRuleCall_6_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_quantity_8_0=ruleQuantity();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred596_InternalKim

    // $ANTLR start synpred597_InternalKim
    public final void synpred597_InternalKim_fragment() throws RecognitionException {   
        EObject lv_date_9_0 = null;


        // InternalKim.g:15870:3: ( ( (lv_date_9_0= ruleDate ) ) )
        // InternalKim.g:15870:3: ( (lv_date_9_0= ruleDate ) )
        {
        // InternalKim.g:15870:3: ( (lv_date_9_0= ruleDate ) )
        // InternalKim.g:15871:4: (lv_date_9_0= ruleDate )
        {
        // InternalKim.g:15871:4: (lv_date_9_0= ruleDate )
        // InternalKim.g:15872:5: lv_date_9_0= ruleDate
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getDateDateParserRuleCall_7_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_date_9_0=ruleDate();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred597_InternalKim

    // $ANTLR start synpred600_InternalKim
    public final void synpred600_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_1_0 = null;


        // InternalKim.g:15963:3: ( ( (lv_concept_1_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:15963:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:15963:3: ( (lv_concept_1_0= ruleConceptDeclaration ) )
        // InternalKim.g:15964:4: (lv_concept_1_0= ruleConceptDeclaration )
        {
        // InternalKim.g:15964:4: (lv_concept_1_0= ruleConceptDeclaration )
        // InternalKim.g:15965:5: lv_concept_1_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_1_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred600_InternalKim

    // $ANTLR start synpred648_InternalKim
    public final void synpred648_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:16664:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:16664:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:16664:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:16665:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:16665:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:16666:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred648_InternalKim

    // $ANTLR start synpred650_InternalKim
    public final void synpred650_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:16728:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:16728:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:16728:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:16729:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred650_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:16729:126: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:16730:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:16733:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:16733:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred650_InternalKim", "true");
        }
        // InternalKim.g:16733:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:16733:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,37,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:16741:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:16742:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:16742:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:16743:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred650_InternalKim

    // $ANTLR start synpred653_InternalKim
    public final void synpred653_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:16766:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:16766:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:16766:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:16767:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred653_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:16767:126: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:16768:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:16771:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:16771:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred653_InternalKim", "true");
        }
        // InternalKim.g:16771:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt648=2;
        int LA648_0 = input.LA(1);

        if ( (LA648_0==53) ) {
            alt648=1;
        }
        else if ( (LA648_0==118) ) {
            alt648=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 648, 0, input);

            throw nvae;
        }
        switch (alt648) {
            case 1 :
                // InternalKim.g:16771:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:16771:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:16772:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,53,FOLLOW_108); if (state.failed) return ;
                // InternalKim.g:16776:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt647=2;
                int LA647_0 = input.LA(1);

                if ( (LA647_0==EOF||LA647_0==RULE_LOWERCASE_ID||LA647_0==RULE_CAMELCASE_ID||LA647_0==RULE_BACKCASE_ID||LA647_0==39||LA647_0==44||LA647_0==112||LA647_0==263) ) {
                    alt647=1;
                }
                else if ( (LA647_0==RULE_UPPERCASE_ID) ) {
                    int LA647_2 = input.LA(2);

                    if ( (LA647_2==EOF||LA647_2==44||LA647_2==112||LA647_2==263) ) {
                        alt647=1;
                    }
                    else if ( (LA647_2==254) ) {
                        alt647=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 647, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 647, 0, input);

                    throw nvae;
                }
                switch (alt647) {
                    case 1 :
                        // InternalKim.g:16777:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:16777:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:16778:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:16778:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:16779:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:16797:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:16797:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:16798:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:16798:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:16799:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16819:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:16819:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:16820:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,118,FOLLOW_230); if (state.failed) return ;
                // InternalKim.g:16824:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:16825:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:16825:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:16826:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred653_InternalKim

    // $ANTLR start synpred654_InternalKim
    public final void synpred654_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:16850:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:16850:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:16850:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:16851:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred654_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:16851:126: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:16852:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:16855:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:16855:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred654_InternalKim", "true");
        }
        // InternalKim.g:16855:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:16855:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:16855:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:16856:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:16856:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:16857:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,37,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:16878:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:16879:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:16879:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:16880:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred654_InternalKim

    // $ANTLR start synpred655_InternalKim
    public final void synpred655_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16928:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:16928:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:16928:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:16929:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred655_InternalKim

    // $ANTLR start synpred656_InternalKim
    public final void synpred656_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:16903:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:16903:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:16903:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:16904:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred656_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:16904:126: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:16905:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:16908:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:16908:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred656_InternalKim", "true");
        }
        // InternalKim.g:16908:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:16908:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:16908:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:16909:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:16909:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:16910:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_231);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:16927:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop649:
        do {
            int alt649=2;
            int LA649_0 = input.LA(1);

            if ( (LA649_0==47||LA649_0==60||(LA649_0>=81 && LA649_0<=93)||(LA649_0>=125 && LA649_0<=128)) ) {
                alt649=1;
            }


            switch (alt649) {
        	case 1 :
        	    // InternalKim.g:16928:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:16928:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:16929:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_231);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop649;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred656_InternalKim

    // $ANTLR start synpred658_InternalKim
    public final void synpred658_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_18_0=null;
        Token otherlv_19=null;

        // InternalKim.g:16952:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) )
        // InternalKim.g:16952:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        {
        // InternalKim.g:16952:4: ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) )
        // InternalKim.g:16953:5: {...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred658_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:16953:126: ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) )
        // InternalKim.g:16954:6: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:16957:9: ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) )
        // InternalKim.g:16957:10: {...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred658_InternalKim", "true");
        }
        // InternalKim.g:16957:19: ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' )
        int alt650=2;
        int LA650_0 = input.LA(1);

        if ( (LA650_0==119) ) {
            alt650=1;
        }
        else if ( (LA650_0==120) ) {
            alt650=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 650, 0, input);

            throw nvae;
        }
        switch (alt650) {
            case 1 :
                // InternalKim.g:16957:20: ( (lv_optional_18_0= 'optional' ) )
                {
                // InternalKim.g:16957:20: ( (lv_optional_18_0= 'optional' ) )
                // InternalKim.g:16958:10: (lv_optional_18_0= 'optional' )
                {
                // InternalKim.g:16958:10: (lv_optional_18_0= 'optional' )
                // InternalKim.g:16959:11: lv_optional_18_0= 'optional'
                {
                lv_optional_18_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:16972:9: otherlv_19= 'required'
                {
                otherlv_19=(Token)match(input,120,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred658_InternalKim

    // $ANTLR start synpred662_InternalKim
    public final void synpred662_InternalKim_fragment() throws RecognitionException {   
        Token lv_default_20_0=null;
        Token otherlv_21=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        EObject lv_defaultLiteral_22_0 = null;

        EObject lv_defaultConcept_23_0 = null;

        AntlrDatatypeRuleToken lv_causes_25_0 = null;

        AntlrDatatypeRuleToken lv_causes_27_0 = null;


        // InternalKim.g:16982:4: ( ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) )
        // InternalKim.g:16982:4: ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        {
        // InternalKim.g:16982:4: ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) )
        // InternalKim.g:16983:5: {...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred662_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:16983:126: ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) )
        // InternalKim.g:16984:6: ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:16987:9: ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) )
        // InternalKim.g:16987:10: {...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred662_InternalKim", "true");
        }
        // InternalKim.g:16987:19: ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? )
        // InternalKim.g:16987:20: ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        {
        // InternalKim.g:16987:20: ( (lv_default_20_0= 'default' ) )
        // InternalKim.g:16988:10: (lv_default_20_0= 'default' )
        {
        // InternalKim.g:16988:10: (lv_default_20_0= 'default' )
        // InternalKim.g:16989:11: lv_default_20_0= 'default'
        {
        lv_default_20_0=(Token)match(input,121,FOLLOW_25); if (state.failed) return ;

        }


        }

        otherlv_21=(Token)match(input,37,FOLLOW_109); if (state.failed) return ;
        // InternalKim.g:17005:9: ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) )
        int alt652=2;
        int LA652_0 = input.LA(1);

        if ( (LA652_0==RULE_STRING||LA652_0==RULE_INT||(LA652_0>=29 && LA652_0<=30)||(LA652_0>=255 && LA652_0<=256)) ) {
            alt652=1;
        }
        else if ( ((LA652_0>=RULE_LOWERCASE_ID && LA652_0<=RULE_UPPERCASE_ID)||LA652_0==RULE_CAMELCASE_ID||LA652_0==RULE_LOWERCASE_DASHID||LA652_0==RULE_UPPERCASE_PATH||LA652_0==39||(LA652_0>=138 && LA652_0<=139)||(LA652_0>=147 && LA652_0<=148)||(LA652_0>=150 && LA652_0<=155)||(LA652_0>=157 && LA652_0<=168)) ) {
            alt652=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 652, 0, input);

            throw nvae;
        }
        switch (alt652) {
            case 1 :
                // InternalKim.g:17006:10: ( (lv_defaultLiteral_22_0= ruleLiteral ) )
                {
                // InternalKim.g:17006:10: ( (lv_defaultLiteral_22_0= ruleLiteral ) )
                // InternalKim.g:17007:11: (lv_defaultLiteral_22_0= ruleLiteral )
                {
                // InternalKim.g:17007:11: (lv_defaultLiteral_22_0= ruleLiteral )
                // InternalKim.g:17008:12: lv_defaultLiteral_22_0= ruleLiteral
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDefaultLiteralLiteralParserRuleCall_3_5_2_0_0());
                  											
                }
                pushFollow(FOLLOW_232);
                lv_defaultLiteral_22_0=ruleLiteral();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:17026:10: ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) )
                {
                // InternalKim.g:17026:10: ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) )
                // InternalKim.g:17027:11: (lv_defaultConcept_23_0= ruleConceptDeclaration )
                {
                // InternalKim.g:17027:11: (lv_defaultConcept_23_0= ruleConceptDeclaration )
                // InternalKim.g:17028:12: lv_defaultConcept_23_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getDefaultConceptConceptDeclarationParserRuleCall_3_5_2_1_0());
                  											
                }
                pushFollow(FOLLOW_232);
                lv_defaultConcept_23_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:17046:9: (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )?
        int alt654=2;
        int LA654_0 = input.LA(1);

        if ( (LA654_0==122) ) {
            alt654=1;
        }
        switch (alt654) {
            case 1 :
                // InternalKim.g:17047:10: otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )*
                {
                otherlv_24=(Token)match(input,122,FOLLOW_111); if (state.failed) return ;
                // InternalKim.g:17051:10: ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) )
                // InternalKim.g:17052:11: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
                {
                // InternalKim.g:17052:11: (lv_causes_25_0= ruleRESOLUTION_EXCEPTION )
                // InternalKim.g:17053:12: lv_causes_25_0= ruleRESOLUTION_EXCEPTION
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_5_3_1_0());
                  											
                }
                pushFollow(FOLLOW_40);
                lv_causes_25_0=ruleRESOLUTION_EXCEPTION();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:17070:10: (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )*
                loop653:
                do {
                    int alt653=2;
                    int LA653_0 = input.LA(1);

                    if ( (LA653_0==28) ) {
                        alt653=1;
                    }


                    switch (alt653) {
                	case 1 :
                	    // InternalKim.g:17071:11: otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) )
                	    {
                	    otherlv_26=(Token)match(input,28,FOLLOW_111); if (state.failed) return ;
                	    // InternalKim.g:17075:11: ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) )
                	    // InternalKim.g:17076:12: (lv_causes_27_0= ruleRESOLUTION_EXCEPTION )
                	    {
                	    // InternalKim.g:17076:12: (lv_causes_27_0= ruleRESOLUTION_EXCEPTION )
                	    // InternalKim.g:17077:13: lv_causes_27_0= ruleRESOLUTION_EXCEPTION
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getDependencyObservableSemanticsAccess().getCausesRESOLUTION_EXCEPTIONParserRuleCall_3_5_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_40);
                	    lv_causes_27_0=ruleRESOLUTION_EXCEPTION();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop653;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred662_InternalKim

    // $ANTLR start synpred664_InternalKim
    public final void synpred664_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_28=null;
        Token lv_name_29_1=null;
        Token lv_name_29_2=null;

        // InternalKim.g:17102:4: ( ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )
        // InternalKim.g:17102:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
        {
        // InternalKim.g:17102:4: ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) )
        // InternalKim.g:17103:5: {...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred664_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:17103:126: ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:17104:6: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:17107:9: ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) )
        // InternalKim.g:17107:10: {...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred664_InternalKim", "true");
        }
        // InternalKim.g:17107:19: (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) )
        // InternalKim.g:17107:20: otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
        {
        otherlv_28=(Token)match(input,123,FOLLOW_52); if (state.failed) return ;
        // InternalKim.g:17111:9: ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) )
        // InternalKim.g:17112:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
        {
        // InternalKim.g:17112:10: ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) )
        // InternalKim.g:17113:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
        {
        // InternalKim.g:17113:11: (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING )
        int alt655=2;
        int LA655_0 = input.LA(1);

        if ( (LA655_0==RULE_LOWERCASE_ID) ) {
            alt655=1;
        }
        else if ( (LA655_0==RULE_STRING) ) {
            alt655=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 655, 0, input);

            throw nvae;
        }
        switch (alt655) {
            case 1 :
                // InternalKim.g:17114:12: lv_name_29_1= RULE_LOWERCASE_ID
                {
                lv_name_29_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:17129:12: lv_name_29_2= RULE_STRING
                {
                lv_name_29_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred664_InternalKim

    // $ANTLR start synpred665_InternalKim
    public final void synpred665_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:17192:4: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )
        // InternalKim.g:17192:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as'
        {
        // InternalKim.g:17192:4: ( (lv_value_0_0= ruleLiteralValueWithConcept ) )
        // InternalKim.g:17193:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        {
        // InternalKim.g:17193:5: (lv_value_0_0= ruleLiteralValueWithConcept )
        // InternalKim.g:17194:6: lv_value_0_0= ruleLiteralValueWithConcept
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueLiteralValueWithConceptParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_11);
        lv_value_0_0=ruleLiteralValueWithConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred665_InternalKim

    // $ANTLR start synpred667_InternalKim
    public final void synpred667_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        Token otherlv_6=null;
        AntlrDatatypeRuleToken lv_accordingTo_7_0 = null;


        // InternalKim.g:17256:4: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:17256:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:17256:4: ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:17257:5: {...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred667_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:17257:137: ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:17258:6: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:17261:9: ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) )
        // InternalKim.g:17261:10: {...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred667_InternalKim", "true");
        }
        // InternalKim.g:17261:19: (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) )
        // InternalKim.g:17261:20: otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) )
        {
        otherlv_5=(Token)match(input,36,FOLLOW_25); if (state.failed) return ;
        otherlv_6=(Token)match(input,37,FOLLOW_26); if (state.failed) return ;
        // InternalKim.g:17269:9: ( (lv_accordingTo_7_0= rulePropertyId ) )
        // InternalKim.g:17270:10: (lv_accordingTo_7_0= rulePropertyId )
        {
        // InternalKim.g:17270:10: (lv_accordingTo_7_0= rulePropertyId )
        // InternalKim.g:17271:11: lv_accordingTo_7_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_7_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred667_InternalKim

    // $ANTLR start synpred670_InternalKim
    public final void synpred670_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_11=null;
        EObject lv_unit_9_0 = null;

        EObject lv_currency_10_0 = null;

        EObject lv_unit_12_0 = null;


        // InternalKim.g:17294:4: ( ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:17294:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:17294:4: ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:17295:5: {...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred670_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:17295:137: ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:17296:6: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:17299:9: ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) )
        // InternalKim.g:17299:10: {...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred670_InternalKim", "true");
        }
        // InternalKim.g:17299:19: ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) )
        int alt658=2;
        int LA658_0 = input.LA(1);

        if ( (LA658_0==53) ) {
            alt658=1;
        }
        else if ( (LA658_0==118) ) {
            alt658=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 658, 0, input);

            throw nvae;
        }
        switch (alt658) {
            case 1 :
                // InternalKim.g:17299:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:17299:20: (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) )
                // InternalKim.g:17300:10: otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                {
                otherlv_8=(Token)match(input,53,FOLLOW_108); if (state.failed) return ;
                // InternalKim.g:17304:10: ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) )
                int alt657=2;
                int LA657_0 = input.LA(1);

                if ( (LA657_0==EOF||LA657_0==RULE_LOWERCASE_ID||LA657_0==RULE_CAMELCASE_ID||LA657_0==RULE_BACKCASE_ID||LA657_0==39||LA657_0==44||LA657_0==112||LA657_0==263) ) {
                    alt657=1;
                }
                else if ( (LA657_0==RULE_UPPERCASE_ID) ) {
                    int LA657_2 = input.LA(2);

                    if ( (LA657_2==254) ) {
                        alt657=2;
                    }
                    else if ( (LA657_2==EOF||LA657_2==44||LA657_2==112||LA657_2==263) ) {
                        alt657=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 657, 2, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 657, 0, input);

                    throw nvae;
                }
                switch (alt657) {
                    case 1 :
                        // InternalKim.g:17305:11: ( (lv_unit_9_0= ruleUnit ) )
                        {
                        // InternalKim.g:17305:11: ( (lv_unit_9_0= ruleUnit ) )
                        // InternalKim.g:17306:12: (lv_unit_9_0= ruleUnit )
                        {
                        // InternalKim.g:17306:12: (lv_unit_9_0= ruleUnit )
                        // InternalKim.g:17307:13: lv_unit_9_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_9_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:17325:11: ( (lv_currency_10_0= ruleCurrency ) )
                        {
                        // InternalKim.g:17325:11: ( (lv_currency_10_0= ruleCurrency ) )
                        // InternalKim.g:17326:12: (lv_currency_10_0= ruleCurrency )
                        {
                        // InternalKim.g:17326:12: (lv_currency_10_0= ruleCurrency )
                        // InternalKim.g:17327:13: lv_currency_10_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_1_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_10_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:17347:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                {
                // InternalKim.g:17347:9: (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) )
                // InternalKim.g:17348:10: otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) )
                {
                otherlv_11=(Token)match(input,118,FOLLOW_230); if (state.failed) return ;
                // InternalKim.g:17352:10: ( (lv_unit_12_0= ruleUnit ) )
                // InternalKim.g:17353:11: (lv_unit_12_0= ruleUnit )
                {
                // InternalKim.g:17353:11: (lv_unit_12_0= ruleUnit )
                // InternalKim.g:17354:12: lv_unit_12_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnitUnitParserRuleCall_3_1_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_12_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred670_InternalKim

    // $ANTLR start synpred671_InternalKim
    public final void synpred671_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        EObject lv_from_13_0 = null;

        EObject lv_to_15_0 = null;


        // InternalKim.g:17378:4: ( ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:17378:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:17378:4: ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:17379:5: {...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred671_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:17379:137: ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) )
        // InternalKim.g:17380:6: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:17383:9: ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) )
        // InternalKim.g:17383:10: {...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred671_InternalKim", "true");
        }
        // InternalKim.g:17383:19: ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) )
        // InternalKim.g:17383:20: ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) )
        {
        // InternalKim.g:17383:20: ( (lv_from_13_0= ruleNumber ) )
        // InternalKim.g:17384:10: (lv_from_13_0= ruleNumber )
        {
        // InternalKim.g:17384:10: (lv_from_13_0= ruleNumber )
        // InternalKim.g:17385:11: lv_from_13_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getFromNumberParserRuleCall_3_2_0_0());
          										
        }
        pushFollow(FOLLOW_25);
        lv_from_13_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_14=(Token)match(input,37,FOLLOW_44); if (state.failed) return ;
        // InternalKim.g:17406:9: ( (lv_to_15_0= ruleNumber ) )
        // InternalKim.g:17407:10: (lv_to_15_0= ruleNumber )
        {
        // InternalKim.g:17407:10: (lv_to_15_0= ruleNumber )
        // InternalKim.g:17408:11: lv_to_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getToNumberParserRuleCall_3_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred671_InternalKim

    // $ANTLR start synpred672_InternalKim
    public final void synpred672_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:17456:10: ( (lv_valueOperators_17_0= ruleValueOperator ) )
        // InternalKim.g:17456:10: (lv_valueOperators_17_0= ruleValueOperator )
        {
        // InternalKim.g:17456:10: (lv_valueOperators_17_0= ruleValueOperator )
        // InternalKim.g:17457:11: lv_valueOperators_17_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_valueOperators_17_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred672_InternalKim

    // $ANTLR start synpred673_InternalKim
    public final void synpred673_InternalKim_fragment() throws RecognitionException {   
        EObject lv_valueOperators_16_0 = null;

        EObject lv_valueOperators_17_0 = null;


        // InternalKim.g:17431:4: ( ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )
        // InternalKim.g:17431:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        {
        // InternalKim.g:17431:4: ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) )
        // InternalKim.g:17432:5: {...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred673_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:17432:137: ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) )
        // InternalKim.g:17433:6: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:17436:9: ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) )
        // InternalKim.g:17436:10: {...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred673_InternalKim", "true");
        }
        // InternalKim.g:17436:19: ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* )
        // InternalKim.g:17436:20: ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        {
        // InternalKim.g:17436:20: ( (lv_valueOperators_16_0= ruleValueOperator ) )
        // InternalKim.g:17437:10: (lv_valueOperators_16_0= ruleValueOperator )
        {
        // InternalKim.g:17437:10: (lv_valueOperators_16_0= ruleValueOperator )
        // InternalKim.g:17438:11: lv_valueOperators_16_0= ruleValueOperator
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_0_0());
          										
        }
        pushFollow(FOLLOW_231);
        lv_valueOperators_16_0=ruleValueOperator();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:17455:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*
        loop659:
        do {
            int alt659=2;
            int LA659_0 = input.LA(1);

            if ( (LA659_0==47||LA659_0==60||(LA659_0>=81 && LA659_0<=93)||(LA659_0>=125 && LA659_0<=128)) ) {
                alt659=1;
            }


            switch (alt659) {
        	case 1 :
        	    // InternalKim.g:17456:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    {
        	    // InternalKim.g:17456:10: (lv_valueOperators_17_0= ruleValueOperator )
        	    // InternalKim.g:17457:11: lv_valueOperators_17_0= ruleValueOperator
        	    {
        	    if ( state.backtracking==0 ) {

        	      											newCompositeNode(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getValueOperatorsValueOperatorParserRuleCall_3_3_1_0());
        	      										
        	    }
        	    pushFollow(FOLLOW_231);
        	    lv_valueOperators_17_0=ruleValueOperator();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop659;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred673_InternalKim

    // $ANTLR start synpred686_InternalKim
    public final void synpred686_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:17858:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:17858:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:17858:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:17859:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred686_InternalKim

    // $ANTLR start synpred693_InternalKim
    public final void synpred693_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:18054:4: ( ( RULE_INT ) )
        // InternalKim.g:18054:5: ( RULE_INT )
        {
        // InternalKim.g:18054:5: ( RULE_INT )
        // InternalKim.g:18055:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred693_InternalKim

    // $ANTLR start synpred694_InternalKim
    public final void synpred694_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:18076:4: ( ( 'l' ) )
        // InternalKim.g:18076:5: ( 'l' )
        {
        // InternalKim.g:18076:5: ( 'l' )
        // InternalKim.g:18077:5: 'l'
        {
        match(input,257,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred694_InternalKim

    // $ANTLR start synpred695_InternalKim
    public final void synpred695_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:18094:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:18094:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:18094:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:18095:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:18095:5: ( ( '.' ) )
        // InternalKim.g:18096:6: ( '.' )
        {
        // InternalKim.g:18096:6: ( '.' )
        // InternalKim.g:18097:7: '.'
        {
        match(input,113,FOLLOW_82); if (state.failed) return ;

        }


        }

        // InternalKim.g:18100:5: ( ( RULE_INT ) )
        // InternalKim.g:18101:6: ( RULE_INT )
        {
        // InternalKim.g:18101:6: ( RULE_INT )
        // InternalKim.g:18102:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred695_InternalKim

    // $ANTLR start synpred699_InternalKim
    public final void synpred699_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:18143:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:18143:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:18143:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:18144:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:18144:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:18145:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:18145:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:18146:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=258 && input.LA(1)<=259) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:18153:5: ( '+' | ( ( '-' ) ) )?
        int alt661=3;
        int LA661_0 = input.LA(1);

        if ( (LA661_0==255) ) {
            alt661=1;
        }
        else if ( (LA661_0==256) ) {
            alt661=2;
        }
        switch (alt661) {
            case 1 :
                // InternalKim.g:18154:6: '+'
                {
                match(input,255,FOLLOW_82); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:18156:6: ( ( '-' ) )
                {
                // InternalKim.g:18156:6: ( ( '-' ) )
                // InternalKim.g:18157:7: ( '-' )
                {
                // InternalKim.g:18157:7: ( '-' )
                // InternalKim.g:18158:8: '-'
                {
                match(input,256,FOLLOW_82); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:18162:5: ( ( RULE_INT ) )
        // InternalKim.g:18163:6: ( RULE_INT )
        {
        // InternalKim.g:18163:6: ( RULE_INT )
        // InternalKim.g:18164:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred699_InternalKim

    // $ANTLR start synpred710_InternalKim
    public final void synpred710_InternalKim_fragment() throws RecognitionException {   
        Token lv_hour_8_0=null;
        Token otherlv_9=null;
        Token lv_min_10_0=null;
        Token otherlv_11=null;
        Token lv_sec_12_0=null;
        Token otherlv_13=null;
        Token lv_ms_14_0=null;

        // InternalKim.g:18446:4: ( ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )? )
        // InternalKim.g:18446:4: ( (lv_hour_8_0= RULE_INT ) ) otherlv_9= ':' ( (lv_min_10_0= RULE_INT ) ) (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
        {
        // InternalKim.g:18446:4: ( (lv_hour_8_0= RULE_INT ) )
        // InternalKim.g:18447:5: (lv_hour_8_0= RULE_INT )
        {
        // InternalKim.g:18447:5: (lv_hour_8_0= RULE_INT )
        // InternalKim.g:18448:6: lv_hour_8_0= RULE_INT
        {
        lv_hour_8_0=(Token)match(input,RULE_INT,FOLLOW_88); if (state.failed) return ;

        }


        }

        otherlv_9=(Token)match(input,110,FOLLOW_82); if (state.failed) return ;
        // InternalKim.g:18468:4: ( (lv_min_10_0= RULE_INT ) )
        // InternalKim.g:18469:5: (lv_min_10_0= RULE_INT )
        {
        // InternalKim.g:18469:5: (lv_min_10_0= RULE_INT )
        // InternalKim.g:18470:6: lv_min_10_0= RULE_INT
        {
        lv_min_10_0=(Token)match(input,RULE_INT,FOLLOW_213); if (state.failed) return ;

        }


        }

        // InternalKim.g:18486:4: (otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )? )?
        int alt664=2;
        int LA664_0 = input.LA(1);

        if ( (LA664_0==110) ) {
            alt664=1;
        }
        switch (alt664) {
            case 1 :
                // InternalKim.g:18487:5: otherlv_11= ':' ( (lv_sec_12_0= RULE_INT ) ) (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                {
                otherlv_11=(Token)match(input,110,FOLLOW_82); if (state.failed) return ;
                // InternalKim.g:18491:5: ( (lv_sec_12_0= RULE_INT ) )
                // InternalKim.g:18492:6: (lv_sec_12_0= RULE_INT )
                {
                // InternalKim.g:18492:6: (lv_sec_12_0= RULE_INT )
                // InternalKim.g:18493:7: lv_sec_12_0= RULE_INT
                {
                lv_sec_12_0=(Token)match(input,RULE_INT,FOLLOW_214); if (state.failed) return ;

                }


                }

                // InternalKim.g:18509:5: (otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) ) )?
                int alt663=2;
                int LA663_0 = input.LA(1);

                if ( (LA663_0==113) ) {
                    alt663=1;
                }
                switch (alt663) {
                    case 1 :
                        // InternalKim.g:18510:6: otherlv_13= '.' ( (lv_ms_14_0= RULE_INT ) )
                        {
                        otherlv_13=(Token)match(input,113,FOLLOW_82); if (state.failed) return ;
                        // InternalKim.g:18514:6: ( (lv_ms_14_0= RULE_INT ) )
                        // InternalKim.g:18515:7: (lv_ms_14_0= RULE_INT )
                        {
                        // InternalKim.g:18515:7: (lv_ms_14_0= RULE_INT )
                        // InternalKim.g:18516:8: lv_ms_14_0= RULE_INT
                        {
                        lv_ms_14_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred710_InternalKim

    // $ANTLR start synpred731_InternalKim
    public final void synpred731_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:18883:4: (this_PathName_0= rulePathName )
        // InternalKim.g:18883:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred731_InternalKim

    // $ANTLR start synpred737_InternalKim
    public final void synpred737_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:18994:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:18994:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred737_InternalKim

    // $ANTLR start synpred738_InternalKim
    public final void synpred738_InternalKim_fragment() throws RecognitionException {   
        Token this_UPPERCASE_ID_7=null;

        // InternalKim.g:19002:4: (this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )
        // InternalKim.g:19002:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
        {
        this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred738_InternalKim

    // Delegated rules

    public final boolean synpred22_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred22_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred508_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred508_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred356_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred356_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred358_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred358_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred507_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred507_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred359_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred310_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred310_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred317_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred317_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred319_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred319_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred352_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred352_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred354_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred354_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred20_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred588_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred588_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred587_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred587_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred667_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred667_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred350_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred350_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred543_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred543_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred585_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred585_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred542_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred542_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred582_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred582_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred584_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred584_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred731_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred731_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred286_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred286_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred427_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred427_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred439_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred439_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred283_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred283_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred272_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred272_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred276_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred276_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred273_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred273_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred284_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred284_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred429_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred429_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred274_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred274_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred501_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred501_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred503_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred503_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred513_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred513_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred665_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred665_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred654_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred654_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred69_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred69_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred168_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred168_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred505_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred505_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred653_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred653_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred281_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred281_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred664_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred664_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred506_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred506_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred694_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred694_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred24_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred24_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred280_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred280_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred662_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred662_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred270_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred270_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred13_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred13_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred695_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred695_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred130_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred324_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred324_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred323_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred323_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred322_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred322_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred110_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred110_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred343_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred343_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred349_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred349_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred306_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred306_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred308_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred308_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred655_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred655_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred656_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred656_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred307_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred307_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred699_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred699_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred658_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred658_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred268_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred268_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred468_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred468_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred425_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred425_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred360_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred360_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred447_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred447_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred710_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred710_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred488_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred488_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred581_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred581_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred445_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred445_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred580_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred580_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred422_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred422_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred486_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred486_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred209_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred209_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred440_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred440_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred738_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred738_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred463_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred463_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred208_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred208_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred441_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred441_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred737_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred737_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred303_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred303_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred141_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred141_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred335_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred335_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred336_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred336_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred377_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred377_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred378_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred378_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred87_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred87_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred376_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred376_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred339_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred339_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred490_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred490_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred600_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred600_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred331_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred331_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred374_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred374_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred338_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred338_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred375_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred375_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred564_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred564_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred330_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred330_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred372_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred372_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred563_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred563_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred413_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred413_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred560_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred560_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred648_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred648_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred371_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred371_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred416_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred416_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred266_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred266_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred293_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred293_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred262_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred262_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred290_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred290_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred686_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred686_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred79_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred79_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred579_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred579_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred88_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred88_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred291_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred291_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred673_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred673_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred670_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred670_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred12_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred12_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred672_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred672_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred650_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred650_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred671_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred671_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred693_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred693_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred95_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred95_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred575_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred575_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred576_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred576_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred597_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred597_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred574_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred574_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred596_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred596_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred593_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred593_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred573_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred573_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred91_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred91_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred456_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred456_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred477_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred477_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred496_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred496_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred498_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred498_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred475_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred475_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred472_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred472_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred473_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred473_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred218_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred218_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred492_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred492_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred470_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred470_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred474_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred474_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred379_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred379_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred471_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred471_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred357_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred357_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA18 dfa18 = new DFA18(this);
    protected DFA17 dfa17 = new DFA17(this);
    protected DFA51 dfa51 = new DFA51(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA55 dfa55 = new DFA55(this);
    protected DFA57 dfa57 = new DFA57(this);
    protected DFA60 dfa60 = new DFA60(this);
    protected DFA62 dfa62 = new DFA62(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA78 dfa78 = new DFA78(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA106 dfa106 = new DFA106(this);
    protected DFA111 dfa111 = new DFA111(this);
    protected DFA113 dfa113 = new DFA113(this);
    protected DFA131 dfa131 = new DFA131(this);
    protected DFA141 dfa141 = new DFA141(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA164 dfa164 = new DFA164(this);
    protected DFA155 dfa155 = new DFA155(this);
    protected DFA163 dfa163 = new DFA163(this);
    protected DFA165 dfa165 = new DFA165(this);
    protected DFA175 dfa175 = new DFA175(this);
    protected DFA169 dfa169 = new DFA169(this);
    protected DFA180 dfa180 = new DFA180(this);
    protected DFA179 dfa179 = new DFA179(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA185 dfa185 = new DFA185(this);
    protected DFA195 dfa195 = new DFA195(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA206 dfa206 = new DFA206(this);
    protected DFA198 dfa198 = new DFA198(this);
    protected DFA197 dfa197 = new DFA197(this);
    protected DFA207 dfa207 = new DFA207(this);
    protected DFA213 dfa213 = new DFA213(this);
    protected DFA212 dfa212 = new DFA212(this);
    protected DFA216 dfa216 = new DFA216(this);
    protected DFA215 dfa215 = new DFA215(this);
    protected DFA236 dfa236 = new DFA236(this);
    protected DFA241 dfa241 = new DFA241(this);
    protected DFA242 dfa242 = new DFA242(this);
    protected DFA248 dfa248 = new DFA248(this);
    protected DFA284 dfa284 = new DFA284(this);
    protected DFA283 dfa283 = new DFA283(this);
    protected DFA289 dfa289 = new DFA289(this);
    protected DFA309 dfa309 = new DFA309(this);
    protected DFA310 dfa310 = new DFA310(this);
    protected DFA314 dfa314 = new DFA314(this);
    protected DFA316 dfa316 = new DFA316(this);
    protected DFA325 dfa325 = new DFA325(this);
    protected DFA323 dfa323 = new DFA323(this);
    protected DFA327 dfa327 = new DFA327(this);
    protected DFA330 dfa330 = new DFA330(this);
    protected DFA332 dfa332 = new DFA332(this);
    protected DFA342 dfa342 = new DFA342(this);
    protected DFA352 dfa352 = new DFA352(this);
    protected DFA346 dfa346 = new DFA346(this);
    protected DFA353 dfa353 = new DFA353(this);
    protected DFA358 dfa358 = new DFA358(this);
    protected DFA357 dfa357 = new DFA357(this);
    protected DFA364 dfa364 = new DFA364(this);
    protected DFA390 dfa390 = new DFA390(this);
    protected DFA406 dfa406 = new DFA406(this);
    protected DFA497 dfa497 = new DFA497(this);
    protected DFA533 dfa533 = new DFA533(this);
    protected DFA535 dfa535 = new DFA535(this);
    protected DFA534 dfa534 = new DFA534(this);
    protected DFA551 dfa551 = new DFA551(this);
    static final String dfa_1s = "\100\uffff";
    static final String dfa_2s = "\1\10\77\uffff";
    static final String dfa_3s = "\1\17\4\0\73\uffff";
    static final String dfa_4s = "\1\u00fd\4\0\73\uffff";
    static final String dfa_5s = "\5\uffff\1\1\2\uffff\1\2\67\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\1\3\73\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\6\uffff\1\4\1\2\1\3\1\10\61\uffff\6\10\15\uffff\3\5\3\uffff\1\10\15\uffff\1\10\71\uffff\11\10\17\uffff\1\10\20\uffff\4\10\5\uffff\40\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA1_4 = input.LA(1);

                         
                        int index1_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index1_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\75\uffff";
    static final String dfa_9s = "\1\17\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_10s = "\1\u00fd\1\0\62\uffff\1\0\10\uffff";
    static final String dfa_11s = "\2\uffff\1\1\56\uffff\1\2\10\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\62\uffff\1\1\10\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\6\uffff\3\61\1\72\61\uffff\1\64\5\61\23\uffff\1\2\15\uffff\1\73\71\uffff\11\2\17\uffff\1\2\20\uffff\4\2\5\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred7_InternalKim()) ) {s = 58;}

                        else if ( (true) ) {s = 59;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_52 = input.LA(1);

                         
                        int index4_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred6_InternalKim()) ) {s = 60;}

                         
                        input.seek(index4_52);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\54\uffff";
    static final String dfa_15s = "\1\4\3\0\1\uffff\37\0\10\uffff";
    static final String dfa_16s = "\1\u0100\3\0\1\uffff\37\0\10\uffff";
    static final String dfa_17s = "\4\uffff\1\1\37\uffff\1\2\7\uffff";
    static final String dfa_18s = "\1\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\1\1\2\1\6\1\uffff\1\44\1\5\1\11\1\3\1\44\1\14\1\uffff\1\44\14\uffff\1\44\1\42\1\43\10\uffff\1\41\16\uffff\2\44\65\uffff\1\4\7\uffff\1\44\24\uffff\1\15\1\16\7\uffff\1\12\1\13\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\uffff\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\60\uffff\1\44\45\uffff\1\7\1\10",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA18 extends DFA {

        public DFA18(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 18;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "692:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) ) otherlv_7= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA18_1 = input.LA(1);

                         
                        int index18_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA18_2 = input.LA(1);

                         
                        int index18_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA18_3 = input.LA(1);

                         
                        int index18_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA18_5 = input.LA(1);

                         
                        int index18_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA18_6 = input.LA(1);

                         
                        int index18_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA18_7 = input.LA(1);

                         
                        int index18_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA18_8 = input.LA(1);

                         
                        int index18_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA18_9 = input.LA(1);

                         
                        int index18_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA18_10 = input.LA(1);

                         
                        int index18_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA18_11 = input.LA(1);

                         
                        int index18_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA18_12 = input.LA(1);

                         
                        int index18_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA18_13 = input.LA(1);

                         
                        int index18_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA18_14 = input.LA(1);

                         
                        int index18_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA18_15 = input.LA(1);

                         
                        int index18_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA18_16 = input.LA(1);

                         
                        int index18_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA18_17 = input.LA(1);

                         
                        int index18_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA18_18 = input.LA(1);

                         
                        int index18_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA18_19 = input.LA(1);

                         
                        int index18_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA18_20 = input.LA(1);

                         
                        int index18_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA18_21 = input.LA(1);

                         
                        int index18_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA18_22 = input.LA(1);

                         
                        int index18_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA18_23 = input.LA(1);

                         
                        int index18_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA18_24 = input.LA(1);

                         
                        int index18_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA18_25 = input.LA(1);

                         
                        int index18_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA18_26 = input.LA(1);

                         
                        int index18_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA18_27 = input.LA(1);

                         
                        int index18_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA18_28 = input.LA(1);

                         
                        int index18_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA18_29 = input.LA(1);

                         
                        int index18_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA18_30 = input.LA(1);

                         
                        int index18_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA18_31 = input.LA(1);

                         
                        int index18_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA18_32 = input.LA(1);

                         
                        int index18_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA18_33 = input.LA(1);

                         
                        int index18_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA18_34 = input.LA(1);

                         
                        int index18_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA18_35 = input.LA(1);

                         
                        int index18_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred24_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index18_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 18, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\71\uffff";
    static final String dfa_21s = "\1\4\3\32\1\uffff\1\0\3\uffff\4\4\3\32\3\156\1\32\5\4\6\156\4\4\3\156\3\32\1\4\1\12\1\4\3\32\1\4\2\0\1\12\1\4\2\32\1\4\1\12\1\4";
    static final String dfa_22s = "\1\u0100\3\161\1\uffff\1\0\3\uffff\4\13\7\161\2\u00a8\3\13\6\161\2\u00a8\2\13\6\161\1\13\1\12\1\13\3\161\1\u0100\2\0\1\12\3\72\1\u0100\1\12\1\u0100";
    static final String dfa_23s = "\4\uffff\1\1\1\uffff\1\2\1\3\1\4\60\uffff";
    static final String dfa_24s = "\5\uffff\1\1\52\uffff\1\2\1\0\7\uffff}>";
    static final String[] dfa_25s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\6\1\3\1\uffff\1\7\17\uffff\2\10\10\uffff\1\7\105\uffff\1\4\34\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7\126\uffff\2\6",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\1\uffff\1\4\1\11",
            "\1\4\1\uffff\1\4\121\uffff\1\14\2\uffff\1\13",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\1\uffff\1\4\1\11",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\15\1\16\5\uffff\1\17",
            "\1\20\1\21\3\uffff\1\7\1\uffff\1\22",
            "\1\23\1\16\5\uffff\1\17",
            "\1\24\1\25\1\7\2\uffff\2\7\1\22",
            "\1\4\1\uffff\1\4\35\uffff\1\4\63\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\13",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\13",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\4\1\uffff\1\4\121\uffff\1\12\2\uffff\1\13",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\14\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\17\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\14\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\17\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\1\31\1\32\5\uffff\1\33",
            "\1\34\1\35\5\uffff\1\36",
            "\1\37\1\40\1\7\3\uffff\1\7\1\33",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\27\2\uffff\1\26",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\14\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\17\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\2\7\3\uffff\1\7\1\uffff\1\7\1\uffff\1\7\14\uffff\1\7\14\uffff\1\7\42\uffff\1\7\34\uffff\1\7\6\uffff\1\27\2\uffff\1\30\17\uffff\13\7\7\uffff\11\7\1\uffff\14\7",
            "\1\43\1\44\5\uffff\1\45",
            "\1\46\1\47\4\uffff\1\4\1\50",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\42\2\uffff\1\41",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\54\1\55\5\uffff\1\56",
            "\1\57",
            "\1\60\1\61\1\7\3\uffff\1\7\1\4",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\4\1\uffff\1\4\35\uffff\1\53\63\uffff\1\52\1\uffff\1\4\1\51",
            "\1\64\1\65\24\uffff\1\4\1\uffff\1\4\35\uffff\1\53\66\uffff\1\62\u008e\uffff\1\63",
            "\1\uffff",
            "\1\uffff",
            "\1\66",
            "\1\64\1\65\24\uffff\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\4\1\uffff\1\4\35\uffff\1\53",
            "\1\64\1\65\24\uffff\1\4\1\uffff\1\4\35\uffff\1\53\66\uffff\1\67\u008e\uffff\1\63",
            "\1\70",
            "\1\64\1\65\24\uffff\1\4\1\uffff\1\4\35\uffff\1\53\u00c5\uffff\1\63"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA17 extends DFA {

        public DFA17(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 17;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA17_49 = input.LA(1);

                         
                        int index17_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_49);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA17_5 = input.LA(1);

                         
                        int index17_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA17_48 = input.LA(1);

                         
                        int index17_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index17_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 17, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\57\uffff";
    static final String dfa_27s = "\1\4\2\uffff\3\0\35\uffff\1\0\13\uffff";
    static final String dfa_28s = "\1\u0100\2\uffff\3\0\35\uffff\1\0\13\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\5\1\6\33\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\35\uffff\1\3\13\uffff}>";
    static final String[] dfa_31s = {
            "\2\10\1\7\2\uffff\1\10\1\5\1\10\1\uffff\1\10\17\uffff\2\1\10\uffff\1\43\4\uffff\1\53\2\uffff\1\44\5\uffff\1\6\1\52\32\uffff\4\44\4\uffff\1\44\60\uffff\2\10\7\uffff\2\10\1\uffff\6\10\1\uffff\14\10\126\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA51 extends DFA {

        public DFA51(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 51;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1731:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA51_3 = input.LA(1);

                         
                        int index51_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 44;}

                        else if ( (synpred66_InternalKim()) ) {s = 45;}

                         
                        input.seek(index51_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA51_4 = input.LA(1);

                         
                        int index51_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 44;}

                        else if ( (synpred66_InternalKim()) ) {s = 45;}

                         
                        input.seek(index51_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA51_5 = input.LA(1);

                         
                        int index51_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 44;}

                        else if ( (synpred66_InternalKim()) ) {s = 45;}

                         
                        input.seek(index51_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA51_35 = input.LA(1);

                         
                        int index51_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred69_InternalKim()) ) {s = 8;}

                        else if ( (synpred72_InternalKim()) ) {s = 46;}

                         
                        input.seek(index51_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 51, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\157\uffff";
    static final String dfa_33s = "\4\uffff\1\21\3\uffff\1\26\4\uffff\1\21\12\uffff\1\21\2\uffff\1\21\1\uffff\1\26\3\uffff\3\26\1\uffff\1\26\4\uffff\5\26\1\uffff\6\26\12\uffff\2\26\1\uffff\3\26\2\uffff\2\26\10\uffff\2\26\1\uffff\3\26\12\uffff\2\26\6\uffff\2\26\3\uffff";
    static final String dfa_34s = "\1\4\1\uffff\2\12\1\45\2\uffff\3\156\3\uffff\1\45\3\12\2\uffff\3\4\1\uffff\1\4\1\45\2\12\1\45\1\0\4\156\3\4\1\0\1\156\11\4\1\156\22\4\1\72\3\4\2\72\2\4\1\156\3\72\4\156\2\4\1\72\3\4\2\72\12\4\6\72\2\4\3\72";
    static final String dfa_35s = "\1\u0100\1\uffff\2\12\1\u0103\2\uffff\3\161\3\uffff\1\u0103\1\12\2\u0100\2\uffff\1\16\1\13\1\u0100\1\uffff\1\16\1\u0103\2\12\1\156\1\0\4\161\3\u0100\1\0\1\161\1\u0100\2\13\6\u0100\1\161\6\u0100\12\13\2\u0100\1\161\3\u0100\2\161\2\u0100\10\161\2\u0100\1\161\3\u0100\2\161\10\13\2\u0100\6\161\2\u0100\3\161";
    static final String dfa_36s = "\1\uffff\1\1\3\uffff\1\4\1\5\3\uffff\1\7\1\10\1\11\4\uffff\1\3\1\2\3\uffff\1\6\130\uffff";
    static final String dfa_37s = "\34\uffff\1\1\7\uffff\1\0\112\uffff}>";
    static final String[] dfa_38s = {
            "\1\10\1\7\1\5\2\uffff\1\6\1\4\1\11\1\uffff\1\6\17\uffff\2\1\10\uffff\1\6\4\uffff\1\14\2\uffff\1\12\6\uffff\1\13\32\uffff\4\12\4\uffff\1\12\60\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6\126\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\22\15\uffff\2\22\71\uffff\1\21\2\uffff\1\16\u008f\uffff\1\15\1\17\1\20",
            "",
            "",
            "\1\23\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\27\2\uffff\1\24",
            "",
            "",
            "",
            "\1\22\15\uffff\2\22\71\uffff\1\21\2\uffff\1\16\u0090\uffff\1\17\1\20",
            "\1\30",
            "\1\33\u00f4\uffff\1\31\1\32",
            "\1\33\u00f4\uffff\1\31\1\32",
            "",
            "",
            "\1\34\2\6\2\uffff\2\6\1\35\2\uffff\1\26",
            "\1\36\1\37\5\uffff\1\40",
            "\1\42\1\41\1\26\1\uffff\1\26\1\44\1\26\1\43\1\uffff\2\26\1\uffff\1\26\14\uffff\2\26\10\uffff\1\26\7\uffff\1\26\6\uffff\2\26\31\uffff\4\26\2\uffff\1\26\1\uffff\1\26\33\uffff\1\26\6\uffff\1\26\15\uffff\2\26\7\uffff\2\26\1\uffff\6\26\1\uffff\14\26\60\uffff\1\26\45\uffff\2\26",
            "",
            "\1\45\1\6\3\uffff\1\6\1\uffff\1\35\2\uffff\1\26",
            "\1\22\15\uffff\2\22\71\uffff\1\21\u0093\uffff\1\17\1\20",
            "\1\33",
            "\1\33",
            "\1\22\15\uffff\2\22\71\uffff\1\21",
            "\1\uffff",
            "\1\46\2\uffff\1\6",
            "\1\27\2\uffff\1\24",
            "\1\27\2\uffff\1\24",
            "\1\27\2\uffff\1\24",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\47\2\uffff\1\50\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\51\2\uffff\1\50\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\51\2\uffff\1\50\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\1\uffff",
            "\1\46\2\uffff\1\6",
            "\1\53\1\52\1\26\1\uffff\3\26\1\54\1\uffff\1\26\2\uffff\1\26\14\uffff\2\26\10\uffff\1\26\7\uffff\1\26\6\uffff\2\26\31\uffff\4\26\2\uffff\1\26\1\uffff\1\26\33\uffff\1\26\6\uffff\1\26\15\uffff\2\26\7\uffff\2\26\1\uffff\6\26\1\uffff\14\26\60\uffff\1\26\45\uffff\2\26",
            "\1\55\1\56\1\26\2\uffff\2\26\1\57",
            "\1\60\1\61\5\uffff\1\62",
            "\1\64\1\63\1\26\1\uffff\3\26\1\65\1\uffff\1\26\2\uffff\1\26\14\uffff\2\26\10\uffff\1\26\7\uffff\1\26\6\uffff\2\26\31\uffff\4\26\2\uffff\1\26\1\uffff\1\26\33\uffff\1\26\6\uffff\1\26\15\uffff\2\26\7\uffff\2\26\1\uffff\6\26\1\uffff\14\26\60\uffff\1\26\45\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\66\2\uffff\1\67\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\70\2\uffff\1\67\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\70\2\uffff\1\67\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\72\2\uffff\1\71\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\72\2\uffff\1\71\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\1\72\2\uffff\1\73",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\74\2\uffff\1\50\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\74\2\uffff\1\50\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\74\2\uffff\1\50\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\75\2\uffff\1\76\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\77\2\uffff\1\76\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\77\2\uffff\1\76\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\1\100\1\101\1\26\2\uffff\2\26\1\102",
            "\1\103\1\104\5\uffff\1\105",
            "\1\106\1\107\3\uffff\1\26\1\uffff\1\102",
            "\1\110\1\111\1\26\3\uffff\1\26\1\112",
            "\1\113\1\114\5\uffff\1\115",
            "\1\116\1\117\5\uffff\1\112",
            "\1\120\1\121\3\uffff\1\26\1\uffff\1\57",
            "\1\122\1\123\1\26\2\uffff\2\26\1\124",
            "\1\125\1\126\5\uffff\1\127",
            "\1\130\1\131\3\uffff\1\26\1\uffff\1\124",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\132\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\132\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\1\6\63\uffff\1\133\2\uffff\1\134",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\70\2\uffff\1\67\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\70\2\uffff\1\67\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\70\2\uffff\1\67\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\1\6\63\uffff\1\133\2\uffff\1\134",
            "\1\6\63\uffff\1\133\2\uffff\1\134",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\72\2\uffff\1\71\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\5\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\72\2\uffff\1\71\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\1\72\2\uffff\1\73",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\72\2\uffff\1\73",
            "\1\72\2\uffff\1\73",
            "\1\72\2\uffff\1\73",
            "\1\72\2\uffff\1\73",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\140\2\uffff\1\137\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\140\2\uffff\1\137\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\1\6\63\uffff\1\140\2\uffff\1\141",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\77\2\uffff\1\76\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\77\2\uffff\1\76\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\6\uffff\1\26\32\uffff\4\26\4\uffff\1\26\24\uffff\1\77\2\uffff\1\76\30\uffff\2\26\6\uffff\3\26\1\uffff\6\26\1\uffff\14\26\126\uffff\2\26",
            "\1\6\63\uffff\1\140\2\uffff\1\141",
            "\1\6\63\uffff\1\140\2\uffff\1\141",
            "\1\142\1\143\1\26\3\uffff\1\26\1\144",
            "\2\26\4\uffff\1\6\1\26",
            "\1\145\1\146\5\uffff\1\144",
            "\1\147\1\150\5\uffff\1\151",
            "\2\26\4\uffff\1\6\1\26",
            "\1\152\1\153\1\26\3\uffff\1\26\1\154",
            "\2\26\4\uffff\1\6\1\26",
            "\1\155\1\156\5\uffff\1\154",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\132\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\133\2\uffff\1\132\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\1\6\63\uffff\1\133\2\uffff\1\134",
            "\1\6\63\uffff\1\133\2\uffff\1\134",
            "\1\6\63\uffff\1\133\2\uffff\1\134",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\1\6\63\uffff\1\136\2\uffff\1\135",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\140\2\uffff\1\137\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\3\26\2\uffff\3\26\1\uffff\1\26\16\uffff\3\26\10\uffff\1\26\4\uffff\1\26\2\uffff\1\26\5\uffff\2\26\3\uffff\1\6\1\uffff\1\26\15\uffff\1\26\6\uffff\15\26\11\uffff\1\26\6\uffff\1\140\2\uffff\1\137\4\uffff\1\26\6\uffff\17\26\6\uffff\12\26\1\uffff\14\26\126\uffff\2\26",
            "\1\6\63\uffff\1\140\2\uffff\1\141",
            "\1\6\63\uffff\1\140\2\uffff\1\141",
            "\1\6\63\uffff\1\140\2\uffff\1\141"
    };

    static final short[] dfa_32 = DFA.unpackEncodedString(dfa_32s);
    static final short[] dfa_33 = DFA.unpackEncodedString(dfa_33s);
    static final char[] dfa_34 = DFA.unpackEncodedStringToUnsignedChars(dfa_34s);
    static final char[] dfa_35 = DFA.unpackEncodedStringToUnsignedChars(dfa_35s);
    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final short[][] dfa_38 = unpackEncodedStringArray(dfa_38s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_32;
            this.eof = dfa_33;
            this.min = dfa_34;
            this.max = dfa_35;
            this.accept = dfa_36;
            this.special = dfa_37;
            this.transition = dfa_38;
        }
        public String getDescription() {
            return "2089:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_string_10_0= RULE_STRING ) ) | ( (lv_concept_11_0= ruleConceptDeclaration ) ) | ( ( (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId ) ) ) | ( ( (lv_op_13_0= ruleREL_OPERATOR ) ) ( (lv_expression_14_0= ruleNumber ) ) ) | ( (lv_nodata_15_0= 'unknown' ) ) | ( (lv_star_16_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_36 = input.LA(1);

                         
                        int index56_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalKim()) ) {s = 6;}

                        else if ( (synpred88_InternalKim()) ) {s = 22;}

                         
                        input.seek(index56_36);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA56_28 = input.LA(1);

                         
                        int index56_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred86_InternalKim()) ) {s = 6;}

                        else if ( (synpred88_InternalKim()) ) {s = 22;}

                         
                        input.seek(index56_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_39s = "\51\uffff";
    static final String dfa_40s = "\1\uffff\1\4\3\uffff\2\10\1\uffff\1\15\1\uffff\3\2\4\uffff\3\2\3\uffff\2\2\11\uffff\2\2\5\uffff";
    static final String dfa_41s = "\1\4\1\156\1\uffff\1\4\1\uffff\3\4\2\0\3\4\1\uffff\6\4\3\156\5\4\3\156\3\72\4\4\3\72";
    static final String dfa_42s = "\1\13\1\161\1\uffff\1\u0100\1\uffff\3\u0100\2\0\3\u0100\1\uffff\3\13\3\u0100\3\161\2\u0100\3\13\6\161\2\u0100\2\13\3\161";
    static final String dfa_43s = "\2\uffff\1\2\1\uffff\1\1\10\uffff\1\1\33\uffff";
    static final String dfa_44s = "\11\uffff\1\0\37\uffff}>";
    static final String[] dfa_45s = {
            "\1\1\1\2\5\uffff\1\2",
            "\1\3\2\uffff\1\2",
            "",
            "\1\5\2\4\1\uffff\3\4\1\6\1\uffff\1\4\1\2\1\uffff\1\4\14\uffff\2\4\10\uffff\1\4\7\uffff\1\4\6\uffff\2\4\31\uffff\4\4\2\uffff\1\4\1\uffff\1\4\33\uffff\1\4\6\uffff\1\4\15\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\14\4\60\uffff\1\4\45\uffff\2\4",
            "",
            "\3\4\2\uffff\3\4\1\uffff\1\4\16\uffff\3\4\10\uffff\1\4\4\uffff\1\4\2\uffff\1\4\6\uffff\1\4\32\uffff\4\4\4\uffff\1\4\24\uffff\1\7\2\uffff\1\4\30\uffff\2\4\6\uffff\3\4\1\uffff\6\4\1\uffff\14\4\126\uffff\2\4",
            "\3\4\2\uffff\3\4\1\uffff\1\4\16\uffff\3\4\10\uffff\1\4\4\uffff\1\4\2\uffff\1\4\6\uffff\1\4\32\uffff\4\4\4\uffff\1\4\24\uffff\1\7\2\uffff\1\4\30\uffff\2\4\6\uffff\3\4\1\uffff\6\4\1\uffff\14\4\126\uffff\2\4",
            "\1\12\1\13\1\2\1\uffff\1\2\1\11\1\2\1\14\1\uffff\1\2\2\uffff\1\2\14\uffff\2\2\10\uffff\1\2\7\uffff\1\2\6\uffff\2\2\31\uffff\4\2\2\uffff\1\2\1\uffff\1\2\33\uffff\1\2\6\uffff\1\2\15\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\14\2\60\uffff\1\2\45\uffff\2\2",
            "\1\uffff",
            "\1\uffff",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\17\2\uffff\1\16\30\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\126\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\20\2\uffff\1\16\30\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\126\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\17\2\uffff\1\16\30\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\126\uffff\2\2",
            "",
            "\1\21\1\22\5\uffff\1\23",
            "\1\24\1\25\3\uffff\1\2\1\uffff\1\26",
            "\1\27\1\30\1\2\2\uffff\2\2\1\26",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\17\2\uffff\1\16\30\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\126\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\17\2\uffff\1\16\30\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\126\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\6\uffff\1\2\32\uffff\4\2\4\uffff\1\2\24\uffff\1\17\2\uffff\1\16\30\uffff\2\2\6\uffff\3\2\1\uffff\6\2\1\uffff\14\2\126\uffff\2\2",
            "\1\32\2\uffff\1\31",
            "\1\32\2\uffff\1\31",
            "\1\32\2\uffff\1\31",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\33\4\uffff\1\2\6\uffff\17\2\6\uffff\12\2\1\uffff\14\2\126\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\33\4\uffff\1\2\6\uffff\17\2\6\uffff\12\2\1\uffff\14\2\126\uffff\2\2",
            "\1\34\1\35\5\uffff\1\36",
            "\1\37\1\40\5\uffff\1\41",
            "\1\42\1\43\1\2\3\uffff\1\2\1\36",
            "\1\32\2\uffff\1\31",
            "\1\32\2\uffff\1\31",
            "\1\32\2\uffff\1\31",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\33\4\uffff\1\2\6\uffff\17\2\6\uffff\12\2\1\uffff\14\2\126\uffff\2\2",
            "\3\2\2\uffff\3\2\1\uffff\1\2\16\uffff\3\2\10\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\2\2\5\uffff\1\2\15\uffff\1\2\6\uffff\15\2\11\uffff\1\2\6\uffff\1\32\2\uffff\1\33\4\uffff\1\2\6\uffff\17\2\6\uffff\12\2\1\uffff\14\2\126\uffff\2\2",
            "\1\46\1\47\5\uffff\1\50",
            "\2\2\4\uffff\1\15\1\2",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44",
            "\1\15\63\uffff\1\45\2\uffff\1\44"
    };

    static final short[] dfa_39 = DFA.unpackEncodedString(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final char[] dfa_41 = DFA.unpackEncodedStringToUnsignedChars(dfa_41s);
    static final char[] dfa_42 = DFA.unpackEncodedStringToUnsignedChars(dfa_42s);
    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final short[][] dfa_45 = unpackEncodedStringArray(dfa_45s);

    class DFA55 extends DFA {

        public DFA55(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 55;
            this.eot = dfa_39;
            this.eof = dfa_40;
            this.min = dfa_41;
            this.max = dfa_42;
            this.accept = dfa_43;
            this.special = dfa_44;
            this.transition = dfa_45;
        }
        public String getDescription() {
            return "2277:5: (lv_id_12_1= RULE_LOWERCASE_ID | lv_id_12_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA55_9 = input.LA(1);

                         
                        int index55_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred87_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index55_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 55, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_46s = "\13\uffff";
    static final String dfa_47s = "\2\uffff\1\6\5\uffff\3\6";
    static final String dfa_48s = "\1\4\1\156\1\32\1\156\3\uffff\1\4\3\32";
    static final String dfa_49s = "\1\155\3\161\3\uffff\1\13\3\161";
    static final String dfa_50s = "\4\uffff\1\2\1\3\1\1\4\uffff";
    static final String dfa_51s = "\1\uffff\1\1\1\uffff\1\0\7\uffff}>";
    static final String[] dfa_52s = {
            "\1\1\1\2\3\uffff\1\5\1\uffff\1\3\141\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7",
            "\1\4\2\uffff\1\4",
            "",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7",
            "\1\6\1\uffff\1\6\121\uffff\1\4\2\uffff\1\7"
    };

    static final short[] dfa_46 = DFA.unpackEncodedString(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final char[] dfa_48 = DFA.unpackEncodedStringToUnsignedChars(dfa_48s);
    static final char[] dfa_49 = DFA.unpackEncodedStringToUnsignedChars(dfa_49s);
    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final short[][] dfa_52 = unpackEncodedStringArray(dfa_52s);

    class DFA57 extends DFA {

        public DFA57(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 57;
            this.eot = dfa_46;
            this.eof = dfa_47;
            this.min = dfa_48;
            this.max = dfa_49;
            this.accept = dfa_50;
            this.special = dfa_51;
            this.transition = dfa_52;
        }
        public String getDescription() {
            return "2403:5: (lv_name_0_1= rulePathName | lv_name_0_2= ruleUrnId | lv_name_0_3= ruleLocalFilePath )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA57_3 = input.LA(1);

                         
                        int index57_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA57_3==110||LA57_3==113) ) {s = 4;}

                        else if ( (synpred91_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index57_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA57_1 = input.LA(1);

                         
                        int index57_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA57_1==110||LA57_1==113) ) {s = 4;}

                        else if ( (synpred91_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index57_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 57, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_53s = "\60\uffff";
    static final String dfa_54s = "\1\4\55\0\2\uffff";
    static final String dfa_55s = "\1\u0100\55\0\2\uffff";
    static final String dfa_56s = "\56\uffff\1\1\1\2";
    static final String dfa_57s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\2\uffff}>";
    static final String[] dfa_58s = {
            "\1\1\1\14\1\2\1\uffff\1\52\1\16\1\7\1\15\1\uffff\1\13\17\uffff\1\3\1\4\10\uffff\1\43\4\uffff\1\54\2\uffff\1\46\5\uffff\1\10\1\53\3\uffff\1\55\26\uffff\1\44\1\51\1\50\1\45\4\uffff\1\47\60\uffff\1\17\1\20\7\uffff\1\11\1\12\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\uffff\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\126\uffff\1\5\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_53 = DFA.unpackEncodedString(dfa_53s);
    static final char[] dfa_54 = DFA.unpackEncodedStringToUnsignedChars(dfa_54s);
    static final char[] dfa_55 = DFA.unpackEncodedStringToUnsignedChars(dfa_55s);
    static final short[] dfa_56 = DFA.unpackEncodedString(dfa_56s);
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[][] dfa_58 = unpackEncodedStringArray(dfa_58s);

    class DFA60 extends DFA {

        public DFA60(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 60;
            this.eot = dfa_53;
            this.eof = dfa_53;
            this.min = dfa_54;
            this.max = dfa_55;
            this.accept = dfa_56;
            this.special = dfa_57;
            this.transition = dfa_58;
        }
        public String getDescription() {
            return "2508:5: (lv_table_2_1= ruleTable | lv_table_2_2= ruleTwoWayTable )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA60_1 = input.LA(1);

                         
                        int index60_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA60_2 = input.LA(1);

                         
                        int index60_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA60_3 = input.LA(1);

                         
                        int index60_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA60_4 = input.LA(1);

                         
                        int index60_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA60_5 = input.LA(1);

                         
                        int index60_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA60_6 = input.LA(1);

                         
                        int index60_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA60_7 = input.LA(1);

                         
                        int index60_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA60_8 = input.LA(1);

                         
                        int index60_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA60_9 = input.LA(1);

                         
                        int index60_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA60_10 = input.LA(1);

                         
                        int index60_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA60_11 = input.LA(1);

                         
                        int index60_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA60_12 = input.LA(1);

                         
                        int index60_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA60_13 = input.LA(1);

                         
                        int index60_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA60_14 = input.LA(1);

                         
                        int index60_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA60_15 = input.LA(1);

                         
                        int index60_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA60_16 = input.LA(1);

                         
                        int index60_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA60_17 = input.LA(1);

                         
                        int index60_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA60_18 = input.LA(1);

                         
                        int index60_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA60_19 = input.LA(1);

                         
                        int index60_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA60_20 = input.LA(1);

                         
                        int index60_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA60_21 = input.LA(1);

                         
                        int index60_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA60_22 = input.LA(1);

                         
                        int index60_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA60_23 = input.LA(1);

                         
                        int index60_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA60_24 = input.LA(1);

                         
                        int index60_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA60_25 = input.LA(1);

                         
                        int index60_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA60_26 = input.LA(1);

                         
                        int index60_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA60_27 = input.LA(1);

                         
                        int index60_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA60_28 = input.LA(1);

                         
                        int index60_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA60_29 = input.LA(1);

                         
                        int index60_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA60_30 = input.LA(1);

                         
                        int index60_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA60_31 = input.LA(1);

                         
                        int index60_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA60_32 = input.LA(1);

                         
                        int index60_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA60_33 = input.LA(1);

                         
                        int index60_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA60_34 = input.LA(1);

                         
                        int index60_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA60_35 = input.LA(1);

                         
                        int index60_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA60_36 = input.LA(1);

                         
                        int index60_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA60_37 = input.LA(1);

                         
                        int index60_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA60_38 = input.LA(1);

                         
                        int index60_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA60_39 = input.LA(1);

                         
                        int index60_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA60_40 = input.LA(1);

                         
                        int index60_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA60_41 = input.LA(1);

                         
                        int index60_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA60_42 = input.LA(1);

                         
                        int index60_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA60_43 = input.LA(1);

                         
                        int index60_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA60_44 = input.LA(1);

                         
                        int index60_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA60_45 = input.LA(1);

                         
                        int index60_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred95_InternalKim()) ) {s = 46;}

                        else if ( (true) ) {s = 47;}

                         
                        input.seek(index60_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 60, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_59s = "\10\uffff";
    static final String dfa_60s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_61s = "\1\4\2\7\2\uffff\1\4\2\7";
    static final String dfa_62s = "\1\u0100\1\161\1\110\2\uffff\1\u0100\1\161\1\110";
    static final String dfa_63s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_64s = "\10\uffff}>";
    static final String[] dfa_65s = {
            "\1\1\1\3\1\2\1\uffff\4\3\1\uffff\1\3\17\uffff\2\3\10\uffff\1\3\4\uffff\1\3\2\uffff\1\3\5\uffff\2\3\3\uffff\1\3\26\uffff\4\3\4\uffff\1\3\60\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\14\3\126\uffff\2\3",
            "\1\4\61\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\15\uffff\1\3\6\uffff\1\3\15\uffff\1\3\15\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3",
            "",
            "",
            "\1\6\1\3\1\7\1\uffff\4\3\1\uffff\1\3\17\uffff\2\3\10\uffff\1\3\4\uffff\1\3\2\uffff\1\3\5\uffff\2\3\3\uffff\1\3\26\uffff\4\3\4\uffff\1\3\60\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\14\3\126\uffff\2\3",
            "\1\4\61\uffff\1\4\64\uffff\1\3\2\uffff\1\3",
            "\1\4\15\uffff\1\3\6\uffff\1\3\15\uffff\1\3\15\uffff\1\3\1\5\1\uffff\3\3\5\uffff\6\3"
    };

    static final short[] dfa_59 = DFA.unpackEncodedString(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final char[] dfa_61 = DFA.unpackEncodedStringToUnsignedChars(dfa_61s);
    static final char[] dfa_62 = DFA.unpackEncodedStringToUnsignedChars(dfa_62s);
    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[][] dfa_65 = unpackEncodedStringArray(dfa_65s);

    class DFA62 extends DFA {

        public DFA62(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 62;
            this.eot = dfa_59;
            this.eof = dfa_60;
            this.min = dfa_61;
            this.max = dfa_62;
            this.accept = dfa_63;
            this.special = dfa_64;
            this.transition = dfa_65;
        }
        public String getDescription() {
            return "2566:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_66s = "\32\uffff";
    static final String dfa_67s = "\4\uffff\1\25\10\uffff\2\25\1\23\6\uffff\1\25\2\uffff\1\25";
    static final String dfa_68s = "\1\4\1\uffff\2\12\1\7\10\uffff\2\7\1\4\2\12\4\uffff\1\7\2\12\1\7";
    static final String dfa_69s = "\1\u0100\1\uffff\2\12\1\u0106\10\uffff\2\u0103\1\u0107\2\u0100\4\uffff\1\u0103\2\12\1\161";
    static final String dfa_70s = "\1\uffff\1\1\3\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\5\uffff\1\2\1\4\1\5\1\3\4\uffff";
    static final String dfa_71s = "\32\uffff}>";
    static final String[] dfa_72s = {
            "\2\7\1\6\1\uffff\1\11\1\7\1\4\1\7\1\uffff\1\7\17\uffff\2\1\10\uffff\1\7\4\uffff\1\13\2\uffff\1\10\5\uffff\1\5\1\12\3\uffff\1\14\26\uffff\4\10\4\uffff\1\10\60\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7\126\uffff\1\2\1\3",
            "",
            "\1\15",
            "\1\15",
            "\1\25\15\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u008e\uffff\1\24\1\16\1\20\1\21\3\24",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\25\15\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u008f\uffff\1\16\1\20\1\21",
            "\1\25\15\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\1\23\1\17\u0090\uffff\1\20\1\21",
            "\2\23\1\uffff\1\23\1\uffff\1\23\1\26\3\uffff\1\23\6\uffff\1\23\6\uffff\1\23\12\uffff\1\23\2\uffff\1\23\1\uffff\1\23\13\uffff\2\23\1\uffff\3\23\5\uffff\6\23\47\uffff\1\23\u0096\uffff\1\23",
            "\1\31\u00f4\uffff\1\27\1\30",
            "\1\31\u00f4\uffff\1\27\1\30",
            "",
            "",
            "",
            "",
            "\1\25\15\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\2\23\u0090\uffff\1\20\1\21",
            "\1\31",
            "\1\31",
            "\1\25\15\uffff\1\25\6\uffff\1\25\10\uffff\1\22\4\uffff\1\25\10\uffff\2\22\3\uffff\2\25\1\uffff\3\25\5\uffff\6\25\47\uffff\2\23"
    };

    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final char[] dfa_68 = DFA.unpackEncodedStringToUnsignedChars(dfa_68s);
    static final char[] dfa_69 = DFA.unpackEncodedStringToUnsignedChars(dfa_69s);
    static final short[] dfa_70 = DFA.unpackEncodedString(dfa_70s);
    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[][] dfa_72 = unpackEncodedStringArray(dfa_72s);

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_66;
            this.eof = dfa_67;
            this.min = dfa_68;
            this.max = dfa_69;
            this.accept = dfa_70;
            this.special = dfa_71;
            this.transition = dfa_72;
        }
        public String getDescription() {
            return "2959:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( (lv_date_11_0= ruleDate ) ) | (otherlv_12= 'in' ( (lv_set_13_0= ruleList ) ) ) | ( (lv_string_14_0= RULE_STRING ) ) | ( (lv_concept_15_0= ruleConceptDeclaration ) ) | ( ( (lv_op_16_0= ruleREL_OPERATOR ) ) ( (lv_expression_17_0= ruleNumber ) ) ) | ( (lv_expr_18_0= RULE_EXPR ) ) | ( (lv_nodata_19_0= 'unknown' ) ) | ( (lv_star_20_0= '*' ) ) | ( (lv_anything_21_0= '#' ) ) )";
        }
    }
    static final String dfa_73s = "\56\uffff";
    static final String dfa_74s = "\1\7\55\uffff";
    static final String dfa_75s = "\1\4\6\0\47\uffff";
    static final String dfa_76s = "\1\u00a8\6\0\47\uffff";
    static final String dfa_77s = "\7\uffff\1\2\45\uffff\1\1";
    static final String dfa_78s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\47\uffff}>";
    static final String[] dfa_79s = {
            "\3\7\2\uffff\1\7\1\uffff\1\7\1\uffff\1\7\7\uffff\1\7\12\uffff\1\7\6\uffff\2\7\1\uffff\1\7\20\uffff\3\7\5\uffff\1\1\1\2\1\3\1\4\1\5\1\6\44\uffff\1\7\34\uffff\2\7\7\uffff\2\7\1\uffff\6\7\1\uffff\14\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[] dfa_74 = DFA.unpackEncodedString(dfa_74s);
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA78 extends DFA {

        public DFA78(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 78;
            this.eot = dfa_73;
            this.eof = dfa_74;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "3410:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA78_1 = input.LA(1);

                         
                        int index78_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA78_2 = input.LA(1);

                         
                        int index78_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA78_3 = input.LA(1);

                         
                        int index78_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA78_4 = input.LA(1);

                         
                        int index78_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA78_5 = input.LA(1);

                         
                        int index78_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA78_6 = input.LA(1);

                         
                        int index78_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred130_InternalKim()) ) {s = 45;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index78_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 78, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\70\uffff";
    static final String dfa_81s = "\1\22\67\uffff";
    static final String dfa_82s = "\1\4\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\51\uffff";
    static final String dfa_83s = "\1\u0100\3\uffff\1\0\3\uffff\4\0\1\uffff\2\0\51\uffff";
    static final String dfa_84s = "\1\uffff\3\1\1\uffff\3\1\4\uffff\1\1\2\uffff\3\1\1\2\45\uffff";
    static final String dfa_85s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\1\5\1\uffff\1\6\1\7\51\uffff}>";
    static final String[] dfa_86s = {
            "\1\11\1\12\1\4\1\uffff\1\14\1\15\1\3\1\13\1\7\1\22\7\uffff\1\22\6\uffff\1\10\1\5\1\6\1\uffff\1\22\6\uffff\1\16\1\22\1\uffff\1\22\13\uffff\1\21\1\17\3\uffff\3\22\5\uffff\6\22\44\uffff\1\22\34\uffff\2\22\7\uffff\2\22\1\uffff\6\22\1\uffff\14\22\60\uffff\1\20\45\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_80;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "4183:4: ( ( ( ruleValue ) )=> (lv_condition_24_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_0==255) && (synpred164_InternalKim())) {s = 1;}

                        else if ( (LA99_0==256) && (synpred164_InternalKim())) {s = 2;}

                        else if ( (LA99_0==RULE_INT) && (synpred164_InternalKim())) {s = 3;}

                        else if ( (LA99_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA99_0==29) && (synpred164_InternalKim())) {s = 5;}

                        else if ( (LA99_0==30) && (synpred164_InternalKim())) {s = 6;}

                        else if ( (LA99_0==RULE_ID) && (synpred164_InternalKim())) {s = 7;}

                        else if ( (LA99_0==28) ) {s = 8;}

                        else if ( (LA99_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA99_0==RULE_UPPERCASE_ID) ) {s = 10;}

                        else if ( (LA99_0==RULE_LOWERCASE_DASHID) ) {s = 11;}

                        else if ( (LA99_0==RULE_EXPR) && (synpred164_InternalKim())) {s = 12;}

                        else if ( (LA99_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA99_0==39) ) {s = 14;}

                        else if ( (LA99_0==55) && (synpred164_InternalKim())) {s = 15;}

                        else if ( (LA99_0==217) && (synpred164_InternalKim())) {s = 16;}

                        else if ( (LA99_0==54) && (synpred164_InternalKim())) {s = 17;}

                        else if ( (LA99_0==EOF||LA99_0==RULE_UPPERCASE_PATH||LA99_0==21||LA99_0==32||LA99_0==40||LA99_0==42||(LA99_0>=59 && LA99_0<=61)||(LA99_0>=67 && LA99_0<=72)||LA99_0==109||(LA99_0>=138 && LA99_0<=139)||(LA99_0>=147 && LA99_0<=148)||(LA99_0>=150 && LA99_0<=155)||(LA99_0>=157 && LA99_0<=168)) ) {s = 18;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_4 = input.LA(1);

                         
                        int index99_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA99_8 = input.LA(1);

                         
                        int index99_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA99_9 = input.LA(1);

                         
                        int index99_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA99_10 = input.LA(1);

                         
                        int index99_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA99_11 = input.LA(1);

                         
                        int index99_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA99_13 = input.LA(1);

                         
                        int index99_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA99_14 = input.LA(1);

                         
                        int index99_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred164_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index99_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\20\uffff";
    static final String dfa_88s = "\1\4\10\uffff\2\0\5\uffff";
    static final String dfa_89s = "\1\u0100\10\uffff\2\0\5\uffff";
    static final String dfa_90s = "\1\uffff\1\1\11\uffff\1\2\1\3\1\4\1\5\1\6";
    static final String dfa_91s = "\11\uffff\1\0\1\1\5\uffff}>";
    static final String[] dfa_92s = {
            "\1\11\1\12\1\1\1\uffff\1\14\1\15\1\1\1\13\1\1\17\uffff\3\1\10\uffff\1\16\16\uffff\1\17\u00c8\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_87 = DFA.unpackEncodedString(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final char[] dfa_89 = DFA.unpackEncodedStringToUnsignedChars(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[] dfa_91 = DFA.unpackEncodedString(dfa_91s);
    static final short[][] dfa_92 = unpackEncodedStringArray(dfa_92s);

    class DFA106 extends DFA {

        public DFA106(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 106;
            this.eot = dfa_87;
            this.eof = dfa_87;
            this.min = dfa_88;
            this.max = dfa_89;
            this.accept = dfa_90;
            this.special = dfa_91;
            this.transition = dfa_92;
        }
        public String getDescription() {
            return "4287:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA106_9 = input.LA(1);

                         
                        int index106_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalKim()) ) {s = 11;}

                        else if ( (synpred175_InternalKim()) ) {s = 13;}

                         
                        input.seek(index106_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA106_10 = input.LA(1);

                         
                        int index106_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred168_InternalKim()) ) {s = 11;}

                        else if ( (synpred175_InternalKim()) ) {s = 13;}

                         
                        input.seek(index106_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 106, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_93s = "\1\4\3\47\2\uffff\1\4\1\uffff\3\47";
    static final String dfa_94s = "\1\155\3\161\2\uffff\1\13\1\uffff\3\161";
    static final String dfa_95s = "\4\uffff\1\2\1\3\1\uffff\1\1\3\uffff";
    static final String dfa_96s = "\13\uffff}>";
    static final String[] dfa_97s = {
            "\1\1\1\2\1\5\1\uffff\1\4\2\uffff\1\3\141\uffff\1\5",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6",
            "\1\7\106\uffff\1\5\2\uffff\1\6"
    };
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final char[] dfa_94 = DFA.unpackEncodedStringToUnsignedChars(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final short[][] dfa_97 = unpackEncodedStringArray(dfa_97s);

    class DFA111 extends DFA {

        public DFA111(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 111;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_93;
            this.max = dfa_94;
            this.accept = dfa_95;
            this.special = dfa_96;
            this.transition = dfa_97;
        }
        public String getDescription() {
            return "4571:3: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_urn_4_1= ruleUrnId | lv_urn_4_2= RULE_STRING ) ) ) )";
        }
    }
    static final String dfa_98s = "\66\uffff";
    static final String dfa_99s = "\1\3\65\uffff";
    static final String dfa_100s = "\1\4\2\0\63\uffff";
    static final String dfa_101s = "\1\u00a8\2\0\63\uffff";
    static final String dfa_102s = "\3\uffff\1\2\61\uffff\1\1";
    static final String dfa_103s = "\1\uffff\1\0\1\1\63\uffff}>";
    static final String[] dfa_104s = {
            "\3\3\2\uffff\1\3\1\uffff\1\3\1\uffff\1\3\7\uffff\1\3\6\uffff\1\3\3\uffff\3\3\3\uffff\5\3\6\uffff\1\1\1\2\10\uffff\3\3\5\uffff\6\3\1\uffff\1\3\42\uffff\1\3\34\uffff\2\3\7\uffff\2\3\1\uffff\6\3\1\uffff\14\3",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_98 = DFA.unpackEncodedString(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final char[] dfa_100 = DFA.unpackEncodedStringToUnsignedChars(dfa_100s);
    static final char[] dfa_101 = DFA.unpackEncodedStringToUnsignedChars(dfa_101s);
    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final short[][] dfa_104 = unpackEncodedStringArray(dfa_104s);

    class DFA113 extends DFA {

        public DFA113(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 113;
            this.eot = dfa_98;
            this.eof = dfa_99;
            this.min = dfa_100;
            this.max = dfa_101;
            this.accept = dfa_102;
            this.special = dfa_103;
            this.transition = dfa_104;
        }
        public String getDescription() {
            return "4706:3: ( (otherlv_5= 'if' | ( (lv_conditionNegated_6_0= 'unless' ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA113_1 = input.LA(1);

                         
                        int index113_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred185_InternalKim()) ) {s = 53;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index113_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA113_2 = input.LA(1);

                         
                        int index113_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred185_InternalKim()) ) {s = 53;}

                        else if ( (true) ) {s = 3;}

                         
                        input.seek(index113_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 113, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_105s = "\21\uffff";
    static final String dfa_106s = "\1\25\1\uffff\1\4\16\uffff";
    static final String dfa_107s = "\1\154\1\uffff\1\u00d9\16\uffff";
    static final String dfa_108s = "\1\uffff\1\11\1\uffff\1\3\1\4\1\5\1\6\1\7\3\10\5\2\1\1";
    static final String dfa_109s = "\1\1\1\uffff\1\0\16\uffff}>";
    static final String[] dfa_110s = {
            "\1\1\12\uffff\1\2\11\uffff\1\1\12\uffff\1\5\54\uffff\1\3\1\4\2\uffff\1\6\1\uffff\1\7\1\10\1\uffff\1\11\1\1",
            "",
            "\1\15\1\16\5\uffff\1\17\33\uffff\1\13\4\uffff\1\14\64\uffff\1\20\167\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_105 = DFA.unpackEncodedString(dfa_105s);
    static final char[] dfa_106 = DFA.unpackEncodedStringToUnsignedChars(dfa_106s);
    static final char[] dfa_107 = DFA.unpackEncodedStringToUnsignedChars(dfa_107s);
    static final short[] dfa_108 = DFA.unpackEncodedString(dfa_108s);
    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[][] dfa_110 = unpackEncodedStringArray(dfa_110s);

    class DFA131 extends DFA {

        public DFA131(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 131;
            this.eot = dfa_105;
            this.eof = dfa_105;
            this.min = dfa_106;
            this.max = dfa_107;
            this.accept = dfa_108;
            this.special = dfa_109;
            this.transition = dfa_110;
        }
        public String getDescription() {
            return "()* loopback of 5138:6: ( ({...}? => ( ({...}? => (otherlv_12= 'using' otherlv_13= 'language' ( (lv_language_14_0= RULE_UPPERCASE_ID ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'using' ( (lv_imported_16_0= ruleImport ) ) ( ( ( ',' )=>otherlv_17= ',' ) ( (lv_imported_18_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'imports' ( (lv_owlImports_20_0= ruleOwlImport ) ) (otherlv_21= ',' ( (lv_owlImports_22_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'covering' ( (lv_coverage_24_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_25= ',' ) ( (lv_coverage_26_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'in' otherlv_28= 'domain' ( ( (lv_rootDomain_29_0= 'root' ) ) | ( (lv_domainConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'disjoint' otherlv_32= 'with' ( (lv_disjointNamespaces_33_0= rulePathName ) ) (otherlv_34= ',' ( (lv_disjointNamespaces_35_0= rulePathName ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_36= 'version' ( (lv_version_37_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_39= 'resolve' (otherlv_40= 'from' ( (lv_lookupNamespace_41_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_42= 'outside' ( (lv_blacklistNamespace_43_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_44= 'using' ( (lv_weights_45_0= ruleMap ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA131_2 = input.LA(1);

                         
                        int index131_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA131_2 == 217 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 10;}

                        else if ( LA131_2 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 11;}

                        else if ( LA131_2 == 44 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 12;}

                        else if ( LA131_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 13;}

                        else if ( LA131_2 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 14;}

                        else if ( LA131_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 15;}

                        else if ( LA131_2 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 16;}

                         
                        input.seek(index131_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA131_0 = input.LA(1);

                         
                        int index131_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA131_0==21||LA131_0==42||LA131_0==108) ) {s = 1;}

                        else if ( (LA131_0==32) ) {s = 2;}

                        else if ( LA131_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 3;}

                        else if ( LA131_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 4;}

                        else if ( LA131_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 5;}

                        else if ( LA131_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 6;}

                        else if ( LA131_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 7;}

                        else if ( LA131_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 8;}

                        else if ( LA131_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 7) ) {s = 9;}

                         
                        input.seek(index131_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 131, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_111s = "\12\uffff";
    static final String dfa_112s = "\1\uffff\3\6\3\uffff\3\6";
    static final String dfa_113s = "\5\4\2\uffff\3\4";
    static final String dfa_114s = "\1\13\3\u00a8\1\13\2\uffff\3\u00a8";
    static final String dfa_115s = "\5\uffff\1\2\1\1\3\uffff";
    static final String dfa_116s = "\12\uffff}>";
    static final String[] dfa_117s = {
            "\1\1\1\2\5\uffff\1\3",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\30\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\30\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\30\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\1\7\1\10\5\uffff\1\11",
            "",
            "",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\30\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\30\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\3\6\2\uffff\1\6\1\uffff\1\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\3\uffff\5\6\4\uffff\1\5\1\uffff\2\6\2\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\27\uffff\2\6\2\uffff\1\6\1\uffff\2\6\1\uffff\3\6\1\uffff\2\6\1\4\30\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6"
    };

    static final short[] dfa_111 = DFA.unpackEncodedString(dfa_111s);
    static final short[] dfa_112 = DFA.unpackEncodedString(dfa_112s);
    static final char[] dfa_113 = DFA.unpackEncodedStringToUnsignedChars(dfa_113s);
    static final char[] dfa_114 = DFA.unpackEncodedStringToUnsignedChars(dfa_114s);
    static final short[] dfa_115 = DFA.unpackEncodedString(dfa_115s);
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final short[][] dfa_117 = unpackEncodedStringArray(dfa_117s);

    class DFA141 extends DFA {

        public DFA141(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 141;
            this.eot = dfa_111;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "6031:4: (this_Path_12= rulePath | this_UrnKvp_13= ruleUrnKvp )";
        }
    }

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_111;
            this.eof = dfa_112;
            this.min = dfa_113;
            this.max = dfa_114;
            this.accept = dfa_115;
            this.special = dfa_116;
            this.transition = dfa_117;
        }
        public String getDescription() {
            return "6060:5: (this_Path_15= rulePath | this_UrnKvp_16= ruleUrnKvp )";
        }
    }
    static final String dfa_118s = "\42\uffff";
    static final String dfa_119s = "\1\1\41\uffff";
    static final String dfa_120s = "\1\4\41\uffff";
    static final String dfa_121s = "\1\u00a8\41\uffff";
    static final String dfa_122s = "\1\uffff\1\4\36\1\1\2\1\3";
    static final String dfa_123s = "\1\0\41\uffff}>";
    static final String[] dfa_124s = {
            "\1\2\1\3\1\7\2\uffff\1\6\1\uffff\1\4\1\uffff\1\12\7\uffff\1\1\12\uffff\1\40\6\uffff\1\37\1\1\1\uffff\1\41\102\uffff\1\5\34\uffff\1\13\1\14\7\uffff\1\10\1\11\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final char[] dfa_120 = DFA.unpackEncodedStringToUnsignedChars(dfa_120s);
    static final char[] dfa_121 = DFA.unpackEncodedStringToUnsignedChars(dfa_121s);
    static final short[] dfa_122 = DFA.unpackEncodedString(dfa_122s);
    static final short[] dfa_123 = DFA.unpackEncodedString(dfa_123s);
    static final short[][] dfa_124 = unpackEncodedStringArray(dfa_124s);

    class DFA164 extends DFA {

        public DFA164(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 164;
            this.eot = dfa_118;
            this.eof = dfa_119;
            this.min = dfa_120;
            this.max = dfa_121;
            this.accept = dfa_122;
            this.special = dfa_123;
            this.transition = dfa_124;
        }
        public String getDescription() {
            return "()+ loopback of 6490:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'children' (otherlv_15= '(' ( (lv_observations_16_0= ruleObserveStatementBody ) ) otherlv_17= ')' ) (otherlv_18= ',' otherlv_19= '(' ( (lv_observations_20_0= ruleObserveStatementBody ) ) otherlv_21= ')' )* ) ) ) ) )* ) ) ) ( (lv_actions_22_0= ruleActionSpecification ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'using' ( (lv_accessor_24_0= ruleFunction ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'metadata' ( (lv_metadata_26_0= ruleMap ) ) ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA164_0 = input.LA(1);

                         
                        int index164_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA164_0==EOF||LA164_0==21||LA164_0==40) ) {s = 1;}

                        else if ( LA164_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 2;}

                        else if ( LA164_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 3;}

                        else if ( LA164_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 4;}

                        else if ( LA164_0 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 5;}

                        else if ( LA164_0 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 6;}

                        else if ( LA164_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 7;}

                        else if ( LA164_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 8;}

                        else if ( LA164_0 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 9;}

                        else if ( LA164_0 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 10;}

                        else if ( LA164_0 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 11;}

                        else if ( LA164_0 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 12;}

                        else if ( LA164_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 13;}

                        else if ( LA164_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 14;}

                        else if ( LA164_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 15;}

                        else if ( LA164_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 16;}

                        else if ( LA164_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 17;}

                        else if ( LA164_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 18;}

                        else if ( LA164_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 19;}

                        else if ( LA164_0 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 20;}

                        else if ( LA164_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 21;}

                        else if ( LA164_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 22;}

                        else if ( LA164_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 23;}

                        else if ( LA164_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 24;}

                        else if ( LA164_0 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 25;}

                        else if ( LA164_0 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 26;}

                        else if ( LA164_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 27;}

                        else if ( LA164_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 28;}

                        else if ( LA164_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( LA164_0 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 30;}

                        else if ( LA164_0 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( LA164_0 == 32 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 32;}

                        else if ( LA164_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 2) ) {s = 33;}

                         
                        input.seek(index164_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 164, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_125s = "\67\uffff";
    static final String dfa_126s = "\1\4\3\32\1\uffff\1\4\1\uffff\4\4\3\32\3\156\1\32\5\4\6\156\4\4\3\156\3\32\1\4\1\12\1\4\3\32\3\4\1\12\1\4\2\32\1\4\1\12\1\4";
    static final String dfa_127s = "\1\u00a8\3\161\1\uffff\1\u00a8\1\uffff\4\13\7\161\2\u00a8\3\13\6\161\2\u00a8\2\13\6\161\1\13\1\12\1\13\3\161\1\u0100\2\u00a8\1\12\3\72\1\u0100\1\12\1\u0100";
    static final String dfa_128s = "\4\uffff\1\1\1\uffff\1\2\60\uffff";
    static final String dfa_129s = "\67\uffff}>";
    static final String[] dfa_130s = {
            "\1\1\1\2\1\4\2\uffff\1\5\1\uffff\1\3\1\uffff\1\6\31\uffff\1\6\105\uffff\1\4\34\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6",
            "\1\4\37\uffff\1\4\63\uffff\1\10\1\uffff\1\4\1\7",
            "\1\4\123\uffff\1\12\2\uffff\1\11",
            "\1\4\37\uffff\1\4\63\uffff\1\10\1\uffff\1\4\1\7",
            "",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\14\uffff\1\4\14\uffff\1\6\22\uffff\1\4\17\uffff\1\6\34\uffff\1\6\10\uffff\2\4\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "",
            "\1\13\1\14\5\uffff\1\15",
            "\1\16\1\17\3\uffff\1\6\1\uffff\1\20",
            "\1\21\1\14\5\uffff\1\15",
            "\1\22\1\23\1\6\2\uffff\2\6\1\20",
            "\1\4\37\uffff\1\4\63\uffff\1\10\2\uffff\1\11",
            "\1\4\123\uffff\1\10\2\uffff\1\11",
            "\1\4\123\uffff\1\10\2\uffff\1\11",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\4\123\uffff\1\10\2\uffff\1\11",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\31\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\31\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\1\27\1\30\5\uffff\1\31",
            "\1\32\1\33\5\uffff\1\34",
            "\1\35\1\36\1\6\3\uffff\1\6\1\31",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\25\2\uffff\1\24",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\31\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\31\uffff\1\6\42\uffff\1\6\34\uffff\1\6\6\uffff\1\25\2\uffff\1\26\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\1\41\1\42\5\uffff\1\43",
            "\1\44\1\45\4\uffff\1\4\1\46",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\1\40\2\uffff\1\37",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\52\1\53\5\uffff\1\54",
            "\1\55",
            "\1\56\1\57\1\6\3\uffff\1\6\1\4",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\4\37\uffff\1\51\63\uffff\1\50\1\uffff\1\4\1\47",
            "\1\62\1\63\24\uffff\1\4\37\uffff\1\51\66\uffff\1\60\u008e\uffff\1\61",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\14\uffff\1\4\14\uffff\1\6\7\uffff\1\4\32\uffff\1\6\34\uffff\1\6\7\uffff\3\4\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\2\6\3\uffff\1\6\1\uffff\1\6\1\uffff\1\6\14\uffff\1\4\14\uffff\1\6\7\uffff\1\4\32\uffff\1\6\34\uffff\1\6\7\uffff\3\4\11\uffff\1\6\5\uffff\13\6\7\uffff\11\6\1\uffff\14\6",
            "\1\64",
            "\1\62\1\63\24\uffff\1\4\37\uffff\1\51",
            "\1\4\37\uffff\1\51",
            "\1\4\37\uffff\1\51",
            "\1\62\1\63\24\uffff\1\4\37\uffff\1\51\66\uffff\1\65\u008e\uffff\1\61",
            "\1\66",
            "\1\62\1\63\24\uffff\1\4\37\uffff\1\51\u00c5\uffff\1\61"
    };

    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final char[] dfa_126 = DFA.unpackEncodedStringToUnsignedChars(dfa_126s);
    static final char[] dfa_127 = DFA.unpackEncodedStringToUnsignedChars(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final short[] dfa_129 = DFA.unpackEncodedString(dfa_129s);
    static final short[][] dfa_130 = unpackEncodedStringArray(dfa_130s);

    class DFA155 extends DFA {

        public DFA155(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 155;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_131s = "\14\uffff";
    static final String dfa_132s = "\1\4\13\uffff";
    static final String dfa_133s = "\1\4\3\32\1\uffff\1\4\1\uffff\1\4\4\32";
    static final String dfa_134s = "\1\u00a8\3\161\1\uffff\1\13\1\uffff\1\13\4\161";
    static final String dfa_135s = "\4\uffff\1\2\1\uffff\1\1\5\uffff";
    static final String dfa_136s = "\14\uffff}>";
    static final String[] dfa_137s = {
            "\1\1\1\2\1\4\2\uffff\1\4\1\uffff\1\3\1\uffff\1\4\7\uffff\1\4\12\uffff\1\4\6\uffff\2\4\1\uffff\1\4\102\uffff\1\4\34\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\14\4",
            "\1\4\14\uffff\1\6\22\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\22\uffff\1\4\63\uffff\1\4\1\uffff\1\4\1\5",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\13\1\11\5\uffff\1\12",
            "\1\4\14\uffff\1\6\22\uffff\1\4\63\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7",
            "\1\4\14\uffff\1\6\106\uffff\1\4\2\uffff\1\7"
    };

    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final char[] dfa_133 = DFA.unpackEncodedStringToUnsignedChars(dfa_133s);
    static final char[] dfa_134 = DFA.unpackEncodedStringToUnsignedChars(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final short[] dfa_136 = DFA.unpackEncodedString(dfa_136s);
    static final short[][] dfa_137 = unpackEncodedStringArray(dfa_137s);

    class DFA163 extends DFA {

        public DFA163(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 163;
            this.eot = dfa_131;
            this.eof = dfa_132;
            this.min = dfa_133;
            this.max = dfa_134;
            this.accept = dfa_135;
            this.special = dfa_136;
            this.transition = dfa_137;
        }
        public String getDescription() {
            return "6792:8: ( (lv_accessor_24_0= ruleFunction ) )?";
        }
    }
    static final String dfa_138s = "\45\uffff";
    static final String dfa_139s = "\1\4\6\uffff\34\0\2\uffff";
    static final String dfa_140s = "\1\u0100\6\uffff\34\0\2\uffff";
    static final String dfa_141s = "\1\uffff\1\1\42\uffff\1\2";
    static final String dfa_142s = "\7\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\2\uffff}>";
    static final String[] dfa_143s = {
            "\1\13\1\12\1\1\1\uffff\1\1\1\15\1\1\1\14\1\uffff\1\11\17\uffff\2\1\10\uffff\1\42\115\uffff\1\44\24\uffff\1\16\1\17\7\uffff\1\7\1\10\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\uffff\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\126\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            ""
    };

    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final char[] dfa_139 = DFA.unpackEncodedStringToUnsignedChars(dfa_139s);
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final short[] dfa_141 = DFA.unpackEncodedString(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA165 extends DFA {

        public DFA165(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 165;
            this.eot = dfa_138;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "6890:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA165_7 = input.LA(1);

                         
                        int index165_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA165_8 = input.LA(1);

                         
                        int index165_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA165_9 = input.LA(1);

                         
                        int index165_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA165_10 = input.LA(1);

                         
                        int index165_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA165_11 = input.LA(1);

                         
                        int index165_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA165_12 = input.LA(1);

                         
                        int index165_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA165_13 = input.LA(1);

                         
                        int index165_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA165_14 = input.LA(1);

                         
                        int index165_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA165_15 = input.LA(1);

                         
                        int index165_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA165_16 = input.LA(1);

                         
                        int index165_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA165_17 = input.LA(1);

                         
                        int index165_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA165_18 = input.LA(1);

                         
                        int index165_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA165_19 = input.LA(1);

                         
                        int index165_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA165_20 = input.LA(1);

                         
                        int index165_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA165_21 = input.LA(1);

                         
                        int index165_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA165_22 = input.LA(1);

                         
                        int index165_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA165_23 = input.LA(1);

                         
                        int index165_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA165_24 = input.LA(1);

                         
                        int index165_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA165_25 = input.LA(1);

                         
                        int index165_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA165_26 = input.LA(1);

                         
                        int index165_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA165_27 = input.LA(1);

                         
                        int index165_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA165_28 = input.LA(1);

                         
                        int index165_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA165_29 = input.LA(1);

                         
                        int index165_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA165_30 = input.LA(1);

                         
                        int index165_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA165_31 = input.LA(1);

                         
                        int index165_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA165_32 = input.LA(1);

                         
                        int index165_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA165_33 = input.LA(1);

                         
                        int index165_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA165_34 = input.LA(1);

                         
                        int index165_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred274_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index165_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 165, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_144s = "\114\uffff";
    static final String dfa_145s = "\1\1\45\uffff\1\1\45\uffff";
    static final String dfa_146s = "\1\4\1\uffff\1\4\42\uffff\1\47\1\4\1\47\26\uffff\3\4\3\47\1\0\7\uffff";
    static final String dfa_147s = "\1\u0100\1\uffff\1\u0100\42\uffff\1\161\1\u00a8\1\161\26\uffff\3\13\3\161\1\0\7\uffff";
    static final String dfa_148s = "\1\uffff\1\10\1\uffff\1\1\2\2\22\3\2\4\1\5\3\6\1\7\6\3\3\uffff\26\3\7\uffff\7\3";
    static final String dfa_149s = "\1\0\1\uffff\1\4\74\uffff\1\3\1\2\3\uffff\1\1\7\uffff}>";
    static final String[] dfa_150s = {
            "\3\1\2\uffff\1\1\1\35\1\1\1\uffff\1\1\7\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\3\2\uffff\2\1\1\uffff\1\1\4\uffff\1\14\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\15\1\16\1\17\1\20\1\21\1\22\1\23\17\uffff\1\1\6\uffff\1\1\1\uffff\1\5\1\30\1\31\1\32\1\uffff\1\36\1\uffff\1\24\1\25\1\26\1\27\11\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1\126\uffff\1\33\1\34",
            "",
            "\1\46\1\45\3\uffff\1\50\1\41\1\47\1\uffff\1\44\31\uffff\1\75\142\uffff\1\51\1\52\7\uffff\1\42\1\43\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\uffff\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\126\uffff\1\37\1\40",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "\3\1\2\uffff\1\1\1\uffff\1\1\1\uffff\1\1\7\uffff\1\1\6\uffff\1\1\3\uffff\1\1\6\uffff\2\1\1\uffff\1\1\20\uffff\3\1\5\uffff\6\1\44\uffff\1\1\1\100\2\uffff\1\76\30\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1",
            "\1\1\106\uffff\1\100\2\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\101\1\102\5\uffff\1\103",
            "\1\105\1\106\1\111\2\uffff\1\104\1\110\1\107",
            "\1\112\1\113\3\uffff\1\104\1\uffff\1\107",
            "\1\1\106\uffff\1\100\2\uffff\1\76",
            "\1\1\106\uffff\1\100\2\uffff\1\76",
            "\1\1\106\uffff\1\100\2\uffff\1\76",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[] dfa_145 = DFA.unpackEncodedString(dfa_145s);
    static final char[] dfa_146 = DFA.unpackEncodedStringToUnsignedChars(dfa_146s);
    static final char[] dfa_147 = DFA.unpackEncodedStringToUnsignedChars(dfa_147s);
    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final short[] dfa_149 = DFA.unpackEncodedString(dfa_149s);
    static final short[][] dfa_150 = unpackEncodedStringArray(dfa_150s);

    class DFA175 extends DFA {

        public DFA175(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 175;
            this.eot = dfa_144;
            this.eof = dfa_145;
            this.min = dfa_146;
            this.max = dfa_147;
            this.accept = dfa_148;
            this.special = dfa_149;
            this.transition = dfa_150;
        }
        public String getDescription() {
            return "()* loopback of 6954:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( 'in' )=>otherlv_8= 'in' ) ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | ( ( ( 'per' )=>otherlv_11= 'per' ) ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_13_0= ruleValueOperator ) ) ( (lv_valueOperators_14_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_15_0= 'optional' ) ) | otherlv_16= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_17_0= 'default' ) ) otherlv_18= 'to' ( ( (lv_defaultLiteral_19_0= ruleLiteral ) ) | ( (lv_defaultConcept_20_0= ruleConceptDeclaration ) ) ) (otherlv_21= 'when' ( (lv_causes_22_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_23= ',' ( (lv_causes_24_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_25_0= ruleNumber ) ) otherlv_26= 'to' ( (lv_to_27_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA175_0 = input.LA(1);

                         
                        int index175_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA175_0==EOF||(LA175_0>=RULE_LOWERCASE_ID && LA175_0<=RULE_STRING)||LA175_0==RULE_CAMELCASE_ID||LA175_0==RULE_LOWERCASE_DASHID||LA175_0==RULE_UPPERCASE_PATH||LA175_0==21||LA175_0==28||(LA175_0>=31 && LA175_0<=32)||(LA175_0>=39 && LA175_0<=40)||LA175_0==42||LA175_0==59||LA175_0==61||(LA175_0>=67 && LA175_0<=72)||LA175_0==109||LA175_0==116||(LA175_0>=138 && LA175_0<=139)||(LA175_0>=147 && LA175_0<=148)||(LA175_0>=150 && LA175_0<=155)||(LA175_0>=157 && LA175_0<=168)) ) {s = 1;}

                        else if ( (LA175_0==60) ) {s = 2;}

                        else if ( LA175_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA175_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA175_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA175_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA175_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA175_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA175_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 9;}

                        else if ( LA175_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 10;}

                        else if ( LA175_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 11;}

                        else if ( LA175_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 12;}

                        else if ( LA175_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 13;}

                        else if ( LA175_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 14;}

                        else if ( LA175_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 15;}

                        else if ( LA175_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 16;}

                        else if ( LA175_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 17;}

                        else if ( LA175_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 18;}

                        else if ( LA175_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 19;}

                        else if ( LA175_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 20;}

                        else if ( LA175_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 21;}

                        else if ( LA175_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 22;}

                        else if ( LA175_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 23;}

                        else if ( LA175_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA175_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA175_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 26;}

                        else if ( LA175_0 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 27;}

                        else if ( LA175_0 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 28;}

                        else if ( LA175_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 29;}

                        else if ( LA175_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 30;}

                         
                        input.seek(index175_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA175_68 = input.LA(1);

                         
                        int index175_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred284_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index175_68);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA175_64 = input.LA(1);

                         
                        int index175_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA175_64==RULE_CAMELCASE_ID) ) {s = 68;}

                        else if ( LA175_64 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 74;}

                        else if ( LA175_64 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 75;}

                        else if ( LA175_64 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 71;}

                         
                        input.seek(index175_64);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA175_63 = input.LA(1);

                         
                        int index175_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA175_63==RULE_CAMELCASE_ID) ) {s = 68;}

                        else if ( LA175_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 69;}

                        else if ( LA175_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 70;}

                        else if ( LA175_63 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 71;}

                        else if ( LA175_63 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 72;}

                        else if ( LA175_63 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 73;}

                         
                        input.seek(index175_63);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA175_2 = input.LA(1);

                         
                        int index175_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA175_2 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 31;}

                        else if ( LA175_2 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 32;}

                        else if ( LA175_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 33;}

                        else if ( LA175_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 34;}

                        else if ( LA175_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 35;}

                        else if ( LA175_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 36;}

                        else if ( (LA175_2==RULE_UPPERCASE_ID) ) {s = 37;}

                        else if ( (LA175_2==RULE_LOWERCASE_ID) ) {s = 38;}

                        else if ( (LA175_2==RULE_LOWERCASE_DASHID) ) {s = 39;}

                        else if ( LA175_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 40;}

                        else if ( LA175_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 41;}

                        else if ( LA175_2 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 42;}

                        else if ( LA175_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 43;}

                        else if ( LA175_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 44;}

                        else if ( LA175_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 45;}

                        else if ( LA175_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 46;}

                        else if ( LA175_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 47;}

                        else if ( LA175_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 48;}

                        else if ( LA175_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 49;}

                        else if ( LA175_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 50;}

                        else if ( LA175_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 51;}

                        else if ( LA175_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 52;}

                        else if ( LA175_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 53;}

                        else if ( LA175_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 54;}

                        else if ( LA175_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 55;}

                        else if ( LA175_2 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 56;}

                        else if ( LA175_2 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 57;}

                        else if ( LA175_2 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 58;}

                        else if ( LA175_2 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 59;}

                        else if ( LA175_2 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 60;}

                        else if ( LA175_2 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 61;}

                         
                        input.seek(index175_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 175, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_151s = "\115\uffff";
    static final String dfa_152s = "\1\1\114\uffff";
    static final String dfa_153s = "\1\4\3\uffff\1\0\56\uffff\22\0\10\uffff";
    static final String dfa_154s = "\1\u0100\3\uffff\1\0\56\uffff\22\0\10\uffff";
    static final String dfa_155s = "\1\uffff\1\2\112\uffff\1\1";
    static final String dfa_156s = "\4\uffff\1\0\56\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\10\uffff}>";
    static final String[] dfa_157s = {
            "\3\1\2\uffff\3\1\1\uffff\1\1\7\uffff\1\1\6\uffff\1\1\2\uffff\2\1\3\uffff\1\1\2\uffff\2\1\1\uffff\1\1\4\uffff\1\71\5\uffff\1\1\5\uffff\1\1\1\4\1\1\5\uffff\6\1\10\uffff\1\63\1\64\1\65\1\66\1\67\1\70\1\72\1\73\1\74\1\75\1\76\1\77\1\100\17\uffff\1\1\6\uffff\1\1\1\uffff\4\1\1\uffff\1\1\1\uffff\1\101\1\102\1\103\1\104\11\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final char[] dfa_153 = DFA.unpackEncodedStringToUnsignedChars(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[][] dfa_157 = unpackEncodedStringArray(dfa_157s);

    class DFA169 extends DFA {

        public DFA169(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 169;
            this.eot = dfa_151;
            this.eof = dfa_152;
            this.min = dfa_153;
            this.max = dfa_154;
            this.accept = dfa_155;
            this.special = dfa_156;
            this.transition = dfa_157;
        }
        public String getDescription() {
            return "()* loopback of 7111:9: ( (lv_valueOperators_14_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA169_4 = input.LA(1);

                         
                        int index169_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA169_51 = input.LA(1);

                         
                        int index169_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_51);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA169_52 = input.LA(1);

                         
                        int index169_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_52);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA169_53 = input.LA(1);

                         
                        int index169_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_53);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA169_54 = input.LA(1);

                         
                        int index169_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_54);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA169_55 = input.LA(1);

                         
                        int index169_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_55);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA169_56 = input.LA(1);

                         
                        int index169_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_56);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA169_57 = input.LA(1);

                         
                        int index169_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_57);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA169_58 = input.LA(1);

                         
                        int index169_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_58);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA169_59 = input.LA(1);

                         
                        int index169_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_59);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA169_60 = input.LA(1);

                         
                        int index169_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_60);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA169_61 = input.LA(1);

                         
                        int index169_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_61);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA169_62 = input.LA(1);

                         
                        int index169_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_62);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA169_63 = input.LA(1);

                         
                        int index169_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_63);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA169_64 = input.LA(1);

                         
                        int index169_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_64);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA169_65 = input.LA(1);

                         
                        int index169_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_65);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA169_66 = input.LA(1);

                         
                        int index169_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_66);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA169_67 = input.LA(1);

                         
                        int index169_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_67);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA169_68 = input.LA(1);

                         
                        int index169_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred283_InternalKim()) ) {s = 76;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index169_68);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 169, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_158s = "\105\uffff";
    static final String dfa_159s = "\1\1\104\uffff";
    static final String dfa_160s = "\1\4\5\uffff\1\0\34\uffff\3\0\6\uffff\6\0\23\uffff";
    static final String dfa_161s = "\1\u0100\5\uffff\1\0\34\uffff\3\0\6\uffff\6\0\23\uffff";
    static final String dfa_162s = "\1\uffff\1\4\64\uffff\2\1\14\2\1\3";
    static final String dfa_163s = "\1\0\5\uffff\1\1\34\uffff\1\2\1\3\1\4\6\uffff\1\5\1\6\1\7\1\10\1\11\1\12\23\uffff}>";
    static final String[] dfa_164s = {
            "\3\1\1\uffff\2\1\1\43\1\1\1\uffff\1\1\2\uffff\1\1\13\uffff\3\1\10\uffff\2\1\3\uffff\1\1\2\uffff\1\56\5\uffff\1\66\2\1\4\uffff\1\76\24\uffff\1\54\1\61\1\60\1\55\1\70\1\71\1\6\1\72\1\57\1\73\1\74\1\75\1\77\27\uffff\1\1\1\67\5\uffff\1\1\1\100\1\101\1\102\1\103\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\60\uffff\1\1\45\uffff\1\44\1\45",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[][] dfa_164 = unpackEncodedStringArray(dfa_164s);

    class DFA180 extends DFA {

        public DFA180(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 180;
            this.eot = dfa_158;
            this.eof = dfa_159;
            this.min = dfa_160;
            this.max = dfa_161;
            this.accept = dfa_162;
            this.special = dfa_163;
            this.transition = dfa_164;
        }
        public String getDescription() {
            return "()* loopback of 7499:6: ( ({...}? => ( ({...}? => ( ( ( ( ( ( ( 'in' )=> 'in' ) ( ( ( ruleUnit ) ) | ( ( ruleCurrency ) ) ) ) )=> ( ( ( 'in' )=>otherlv_5= 'in' ) ( ( (lv_unit_6_0= ruleUnit ) ) | ( (lv_currency_7_0= ruleCurrency ) ) ) ) ) | ( ( ( 'per' )=>otherlv_8= 'per' ) ( (lv_unit_9_0= ruleUnit ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ruleValueOperator ) )=> (lv_valueOperators_10_0= ruleValueOperator ) ) ( (lv_valueOperators_11_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_12_0= ruleNumber ) ) otherlv_13= 'to' ( (lv_to_14_0= ruleNumber ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA180_0 = input.LA(1);

                         
                        int index180_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA180_0==EOF||(LA180_0>=RULE_LOWERCASE_ID && LA180_0<=RULE_STRING)||(LA180_0>=RULE_EXPR && LA180_0<=RULE_CAMELCASE_ID)||LA180_0==RULE_LOWERCASE_DASHID||LA180_0==RULE_UPPERCASE_PATH||LA180_0==RULE_TEMPLATE_VAR||(LA180_0>=28 && LA180_0<=30)||(LA180_0>=39 && LA180_0<=40)||LA180_0==44||(LA180_0>=54 && LA180_0<=55)||LA180_0==117||LA180_0==124||(LA180_0>=138 && LA180_0<=139)||(LA180_0>=146 && LA180_0<=148)||(LA180_0>=150 && LA180_0<=155)||(LA180_0>=157 && LA180_0<=168)||LA180_0==217) ) {s = 1;}

                        else if ( (LA180_0==87) ) {s = 6;}

                        else if ( (LA180_0==RULE_INT) ) {s = 35;}

                        else if ( (LA180_0==255) ) {s = 36;}

                        else if ( (LA180_0==256) ) {s = 37;}

                        else if ( (LA180_0==81) ) {s = 44;}

                        else if ( (LA180_0==84) ) {s = 45;}

                        else if ( (LA180_0==47) ) {s = 46;}

                        else if ( (LA180_0==89) ) {s = 47;}

                        else if ( (LA180_0==83) ) {s = 48;}

                        else if ( (LA180_0==82) ) {s = 49;}

                        else if ( LA180_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {s = 54;}

                        else if ( LA180_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 0) ) {s = 55;}

                        else if ( LA180_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 56;}

                        else if ( LA180_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 57;}

                        else if ( LA180_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 58;}

                        else if ( LA180_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 59;}

                        else if ( LA180_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 60;}

                        else if ( LA180_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 61;}

                        else if ( LA180_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 62;}

                        else if ( LA180_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 63;}

                        else if ( LA180_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 64;}

                        else if ( LA180_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 65;}

                        else if ( LA180_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 66;}

                        else if ( LA180_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                         
                        input.seek(index180_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA180_6 = input.LA(1);

                         
                        int index180_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA180_35 = input.LA(1);

                         
                        int index180_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred308_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_35);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA180_36 = input.LA(1);

                         
                        int index180_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred308_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_36);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA180_37 = input.LA(1);

                         
                        int index180_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred308_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 2) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_37);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA180_44 = input.LA(1);

                         
                        int index180_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_44);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA180_45 = input.LA(1);

                         
                        int index180_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_45);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA180_46 = input.LA(1);

                         
                        int index180_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_46);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA180_47 = input.LA(1);

                         
                        int index180_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_47);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA180_48 = input.LA(1);

                         
                        int index180_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_48);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA180_49 = input.LA(1);

                         
                        int index180_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred307_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_2(), 1) ) {s = 67;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index180_49);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 180, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_165s = "\1\4\5\uffff\1\0\45\uffff\6\0\6\uffff\14\0\1\uffff";
    static final String dfa_166s = "\1\u0100\5\uffff\1\0\45\uffff\6\0\6\uffff\14\0\1\uffff";
    static final String dfa_167s = "\1\uffff\1\2\102\uffff\1\1";
    static final String dfa_168s = "\6\uffff\1\0\45\uffff\1\1\1\2\1\3\1\4\1\5\1\6\6\uffff\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_169s = {
            "\3\1\1\uffff\4\1\1\uffff\1\1\2\uffff\1\1\13\uffff\3\1\10\uffff\2\1\3\uffff\1\1\2\uffff\1\56\5\uffff\3\1\4\uffff\1\76\24\uffff\1\54\1\61\1\60\1\55\1\70\1\71\1\6\1\72\1\57\1\73\1\74\1\75\1\77\27\uffff\2\1\5\uffff\1\1\1\100\1\101\1\102\1\103\11\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\60\uffff\1\1\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_165 = DFA.unpackEncodedStringToUnsignedChars(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[][] dfa_169 = unpackEncodedStringArray(dfa_169s);

    class DFA179 extends DFA {

        public DFA179(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 179;
            this.eot = dfa_158;
            this.eof = dfa_159;
            this.min = dfa_165;
            this.max = dfa_166;
            this.accept = dfa_167;
            this.special = dfa_168;
            this.transition = dfa_169;
        }
        public String getDescription() {
            return "()* loopback of 7642:9: ( (lv_valueOperators_11_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA179_6 = input.LA(1);

                         
                        int index179_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA179_44 = input.LA(1);

                         
                        int index179_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_44);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA179_45 = input.LA(1);

                         
                        int index179_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_45);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA179_46 = input.LA(1);

                         
                        int index179_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_46);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA179_47 = input.LA(1);

                         
                        int index179_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_47);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA179_48 = input.LA(1);

                         
                        int index179_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_48);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA179_49 = input.LA(1);

                         
                        int index179_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_49);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA179_56 = input.LA(1);

                         
                        int index179_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_56);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA179_57 = input.LA(1);

                         
                        int index179_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_57);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA179_58 = input.LA(1);

                         
                        int index179_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_58);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA179_59 = input.LA(1);

                         
                        int index179_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_59);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA179_60 = input.LA(1);

                         
                        int index179_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_60);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA179_61 = input.LA(1);

                         
                        int index179_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_61);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA179_62 = input.LA(1);

                         
                        int index179_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_62);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA179_63 = input.LA(1);

                         
                        int index179_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_63);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA179_64 = input.LA(1);

                         
                        int index179_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_64);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA179_65 = input.LA(1);

                         
                        int index179_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_65);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA179_66 = input.LA(1);

                         
                        int index179_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_66);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA179_67 = input.LA(1);

                         
                        int index179_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred306_InternalKim()) ) {s = 68;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index179_67);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 179, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_170s = "\43\uffff";
    static final String dfa_171s = "\1\4\3\0\33\uffff\1\0\3\uffff";
    static final String dfa_172s = "\1\u0100\3\0\33\uffff\1\0\3\uffff";
    static final String dfa_173s = "\4\uffff\1\3\33\uffff\1\1\1\2\1\4";
    static final String dfa_174s = "\1\uffff\1\0\1\1\1\2\33\uffff\1\3\3\uffff}>";
    static final String[] dfa_175s = {
            "\2\4\3\uffff\1\4\1\3\1\4\1\uffff\1\4\31\uffff\1\37\142\uffff\2\4\7\uffff\2\4\1\uffff\6\4\1\uffff\14\4\126\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final char[] dfa_171 = DFA.unpackEncodedStringToUnsignedChars(dfa_171s);
    static final char[] dfa_172 = DFA.unpackEncodedStringToUnsignedChars(dfa_172s);
    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final short[][] dfa_175 = unpackEncodedStringArray(dfa_175s);

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_170;
            this.eof = dfa_170;
            this.min = dfa_171;
            this.max = dfa_172;
            this.accept = dfa_173;
            this.special = dfa_174;
            this.transition = dfa_175;
        }
        public String getDescription() {
            return "7792:4: ( ( (lv_comparisonValue_3_0= ruleNumber ) ) | ( (lv_comparisonQuantity_4_0= ruleQuantity ) ) | ( (lv_comparisonConcept_5_0= ruleConceptDeclaration ) ) | (otherlv_6= '(' ( (lv_comparisonObservable_7_0= ruleObservableSemantics ) ) otherlv_8= ')' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA182_1 = input.LA(1);

                         
                        int index182_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 32;}

                        else if ( (synpred311_InternalKim()) ) {s = 33;}

                         
                        input.seek(index182_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA182_2 = input.LA(1);

                         
                        int index182_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 32;}

                        else if ( (synpred311_InternalKim()) ) {s = 33;}

                         
                        input.seek(index182_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA182_3 = input.LA(1);

                         
                        int index182_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred310_InternalKim()) ) {s = 32;}

                        else if ( (synpred311_InternalKim()) ) {s = 33;}

                         
                        input.seek(index182_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA182_31 = input.LA(1);

                         
                        int index182_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred312_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 34;}

                         
                        input.seek(index182_31);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 182, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_176s = "\52\uffff";
    static final String dfa_177s = "\1\4\10\uffff\3\0\1\uffff\2\0\33\uffff";
    static final String dfa_178s = "\1\u0100\10\uffff\3\0\1\uffff\2\0\33\uffff";
    static final String dfa_179s = "\1\uffff\1\1\20\uffff\1\2\27\uffff";
    static final String dfa_180s = "\11\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\33\uffff}>";
    static final String[] dfa_181s = {
            "\1\11\1\12\1\1\1\uffff\1\1\1\15\1\1\1\13\1\1\1\22\16\uffff\3\1\10\uffff\1\16\16\uffff\2\1\75\uffff\1\22\24\uffff\2\22\7\uffff\2\22\1\uffff\6\22\1\uffff\14\22\60\uffff\1\1\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final char[] dfa_177 = DFA.unpackEncodedStringToUnsignedChars(dfa_177s);
    static final char[] dfa_178 = DFA.unpackEncodedStringToUnsignedChars(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final short[][] dfa_181 = unpackEncodedStringArray(dfa_181s);

    class DFA185 extends DFA {

        public DFA185(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 185;
            this.eot = dfa_176;
            this.eof = dfa_176;
            this.min = dfa_177;
            this.max = dfa_178;
            this.accept = dfa_179;
            this.special = dfa_180;
            this.transition = dfa_181;
        }
        public String getDescription() {
            return "7977:3: ( ( (lv_value_1_0= ruleValue ) ) otherlv_2= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA185_9 = input.LA(1);

                         
                        int index185_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index185_9);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA185_10 = input.LA(1);

                         
                        int index185_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index185_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA185_11 = input.LA(1);

                         
                        int index185_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index185_11);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA185_13 = input.LA(1);

                         
                        int index185_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index185_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA185_14 = input.LA(1);

                         
                        int index185_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred317_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index185_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 185, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_182s = "\1\1\36\uffff\1\1\54\uffff";
    static final String dfa_183s = "\1\6\1\uffff\1\4\34\uffff\1\25\2\47\34\uffff\3\4\3\47\1\0\7\uffff";
    static final String dfa_184s = "\1\u0100\1\uffff\1\u0100\34\uffff\3\161\34\uffff\3\13\3\161\1\0\7\uffff";
    static final String dfa_185s = "\1\uffff\1\10\1\uffff\1\1\2\2\22\3\2\4\1\5\3\6\1\7\3\uffff\34\3\7\uffff\7\3";
    static final String dfa_186s = "\1\0\1\uffff\1\1\74\uffff\1\2\1\3\3\uffff\1\4\7\uffff}>";
    static final String[] dfa_187s = {
            "\1\1\3\uffff\1\35\12\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\3\1\uffff\1\1\2\uffff\2\1\4\uffff\1\14\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\15\1\16\1\17\1\20\1\21\1\22\1\23\30\uffff\1\5\1\30\1\31\1\32\1\uffff\1\36\1\uffff\1\24\1\25\1\26\1\27\176\uffff\1\33\1\34",
            "",
            "\1\37\1\40\3\uffff\1\50\1\44\1\41\1\uffff\1\47\31\uffff\1\75\142\uffff\1\51\1\52\7\uffff\1\45\1\46\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\uffff\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\126\uffff\1\42\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\2\uffff\1\1\20\uffff\3\1\5\uffff\6\1\45\uffff\1\77\2\uffff\1\76",
            "\1\1\106\uffff\1\100\2\uffff\1\76",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\101\1\102\5\uffff\1\103",
            "\1\105\1\106\3\uffff\1\104\1\uffff\1\107",
            "\1\110\1\111\1\113\2\uffff\1\104\1\112\1\107",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final char[] dfa_183 = DFA.unpackEncodedStringToUnsignedChars(dfa_183s);
    static final char[] dfa_184 = DFA.unpackEncodedStringToUnsignedChars(dfa_184s);
    static final short[] dfa_185 = DFA.unpackEncodedString(dfa_185s);
    static final short[] dfa_186 = DFA.unpackEncodedString(dfa_186s);
    static final short[][] dfa_187 = unpackEncodedStringArray(dfa_187s);

    class DFA195 extends DFA {

        public DFA195(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 195;
            this.eot = dfa_144;
            this.eof = dfa_182;
            this.min = dfa_183;
            this.max = dfa_184;
            this.accept = dfa_185;
            this.special = dfa_186;
            this.transition = dfa_187;
        }
        public String getDescription() {
            return "()* loopback of 8041:6: ( ({...}? => ( ({...}? => (otherlv_6= 'according' otherlv_7= 'to' ( (lv_accordingTo_8_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_9= 'in' ( ( (lv_unit_10_0= ruleUnit ) ) | ( (lv_currency_11_0= ruleCurrency ) ) ) ) | (otherlv_12= 'per' ( (lv_unit_13_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_14_0= ruleValueOperator ) ) ( (lv_valueOperators_15_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_16_0= 'optional' ) ) | otherlv_17= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_18_0= 'default' ) ) otherlv_19= 'to' ( ( (lv_defaultLiteral_20_0= ruleLiteral ) ) | ( (lv_defaultConcept_21_0= ruleConceptDeclaration ) ) ) (otherlv_22= 'when' ( (lv_causes_23_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_24= ',' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_26_0= ruleNumber ) ) otherlv_27= 'to' ( (lv_to_28_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'named' ( ( (lv_name_30_1= RULE_LOWERCASE_ID | lv_name_30_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA195_0 = input.LA(1);

                         
                        int index195_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA195_0==EOF||LA195_0==RULE_STRING||LA195_0==21||LA195_0==28||(LA195_0>=31 && LA195_0<=34)||LA195_0==38||(LA195_0>=41 && LA195_0<=42)||LA195_0==59||LA195_0==61||(LA195_0>=67 && LA195_0<=72)) ) {s = 1;}

                        else if ( (LA195_0==60) ) {s = 2;}

                        else if ( LA195_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 0) ) {s = 3;}

                        else if ( LA195_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 4;}

                        else if ( LA195_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 1) ) {s = 5;}

                        else if ( LA195_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 6;}

                        else if ( LA195_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 7;}

                        else if ( LA195_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 8;}

                        else if ( LA195_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 9;}

                        else if ( LA195_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 10;}

                        else if ( LA195_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 11;}

                        else if ( LA195_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 12;}

                        else if ( LA195_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 13;}

                        else if ( LA195_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 14;}

                        else if ( LA195_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 15;}

                        else if ( LA195_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 16;}

                        else if ( LA195_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 17;}

                        else if ( LA195_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 18;}

                        else if ( LA195_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 19;}

                        else if ( LA195_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 20;}

                        else if ( LA195_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 21;}

                        else if ( LA195_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 22;}

                        else if ( LA195_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 23;}

                        else if ( LA195_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 24;}

                        else if ( LA195_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 3) ) {s = 25;}

                        else if ( LA195_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 4) ) {s = 26;}

                        else if ( LA195_0 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 27;}

                        else if ( LA195_0 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 28;}

                        else if ( LA195_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 5) ) {s = 29;}

                        else if ( LA195_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 6) ) {s = 30;}

                         
                        input.seek(index195_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA195_2 = input.LA(1);

                         
                        int index195_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA195_2==RULE_LOWERCASE_ID) ) {s = 31;}

                        else if ( (LA195_2==RULE_UPPERCASE_ID) ) {s = 32;}

                        else if ( (LA195_2==RULE_LOWERCASE_DASHID) ) {s = 33;}

                        else if ( LA195_2 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 34;}

                        else if ( LA195_2 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 35;}

                        else if ( LA195_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 36;}

                        else if ( LA195_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 37;}

                        else if ( LA195_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 38;}

                        else if ( LA195_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 39;}

                        else if ( LA195_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 40;}

                        else if ( LA195_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 41;}

                        else if ( LA195_2 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 42;}

                        else if ( LA195_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 43;}

                        else if ( LA195_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 44;}

                        else if ( LA195_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 45;}

                        else if ( LA195_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 46;}

                        else if ( LA195_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 47;}

                        else if ( LA195_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 48;}

                        else if ( LA195_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 49;}

                        else if ( LA195_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 50;}

                        else if ( LA195_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 51;}

                        else if ( LA195_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 52;}

                        else if ( LA195_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 53;}

                        else if ( LA195_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 54;}

                        else if ( LA195_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 55;}

                        else if ( LA195_2 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 56;}

                        else if ( LA195_2 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 57;}

                        else if ( LA195_2 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 58;}

                        else if ( LA195_2 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 59;}

                        else if ( LA195_2 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 60;}

                        else if ( LA195_2 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 61;}

                         
                        input.seek(index195_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA195_63 = input.LA(1);

                         
                        int index195_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA195_63==RULE_CAMELCASE_ID) ) {s = 68;}

                        else if ( LA195_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 69;}

                        else if ( LA195_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 70;}

                        else if ( LA195_63 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 71;}

                         
                        input.seek(index195_63);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA195_64 = input.LA(1);

                         
                        int index195_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA195_64==RULE_CAMELCASE_ID) ) {s = 68;}

                        else if ( LA195_64 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 72;}

                        else if ( LA195_64 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 73;}

                        else if ( LA195_64 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 74;}

                        else if ( LA195_64 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 75;}

                        else if ( LA195_64 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 71;}

                         
                        input.seek(index195_64);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA195_68 = input.LA(1);

                         
                        int index195_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred324_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getAnnotatedObservableSemanticsAccess().getUnorderedGroup_4(), 2) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index195_68);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 195, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_188s = "\62\uffff";
    static final String dfa_189s = "\1\1\61\uffff";
    static final String dfa_190s = "\1\6\11\uffff\1\0\15\uffff\22\0\10\uffff";
    static final String dfa_191s = "\1\u0100\11\uffff\1\0\15\uffff\22\0\10\uffff";
    static final String dfa_192s = "\1\uffff\1\2\57\uffff\1\1";
    static final String dfa_193s = "\12\uffff\1\0\15\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\10\uffff}>";
    static final String[] dfa_194s = {
            "\1\1\3\uffff\1\1\12\uffff\1\1\6\uffff\1\1\2\uffff\4\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\4\uffff\1\36\5\uffff\1\1\5\uffff\1\1\1\12\1\1\5\uffff\6\1\10\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\37\1\40\1\41\1\42\1\43\1\44\1\45\30\uffff\4\1\1\uffff\1\1\1\uffff\1\46\1\47\1\50\1\51\176\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);
    static final char[] dfa_190 = DFA.unpackEncodedStringToUnsignedChars(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_188;
            this.eof = dfa_189;
            this.min = dfa_190;
            this.max = dfa_191;
            this.accept = dfa_192;
            this.special = dfa_193;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "()* loopback of 8188:9: ( (lv_valueOperators_15_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_10 = input.LA(1);

                         
                        int index189_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_10);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA189_24 = input.LA(1);

                         
                        int index189_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_24);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA189_25 = input.LA(1);

                         
                        int index189_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_25);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA189_26 = input.LA(1);

                         
                        int index189_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_26);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA189_27 = input.LA(1);

                         
                        int index189_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_27);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA189_28 = input.LA(1);

                         
                        int index189_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_28);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA189_29 = input.LA(1);

                         
                        int index189_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_29);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA189_30 = input.LA(1);

                         
                        int index189_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_30);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA189_31 = input.LA(1);

                         
                        int index189_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_31);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA189_32 = input.LA(1);

                         
                        int index189_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_32);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA189_33 = input.LA(1);

                         
                        int index189_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_33);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA189_34 = input.LA(1);

                         
                        int index189_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_34);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA189_35 = input.LA(1);

                         
                        int index189_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_35);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA189_36 = input.LA(1);

                         
                        int index189_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_36);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA189_37 = input.LA(1);

                         
                        int index189_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_37);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA189_38 = input.LA(1);

                         
                        int index189_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_38);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA189_39 = input.LA(1);

                         
                        int index189_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_39);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA189_40 = input.LA(1);

                         
                        int index189_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_40);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA189_41 = input.LA(1);

                         
                        int index189_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred323_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index189_41);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_195s = "\50\uffff";
    static final String dfa_196s = "\1\4\42\uffff\1\0\4\uffff";
    static final String dfa_197s = "\1\u0100\42\uffff\1\0\4\uffff";
    static final String dfa_198s = "\1\uffff\1\1\44\uffff\1\2\1\uffff";
    static final String dfa_199s = "\43\uffff\1\0\4\uffff}>";
    static final String[] dfa_200s = {
            "\3\1\1\uffff\4\1\1\uffff\1\1\17\uffff\2\1\10\uffff\1\43\105\uffff\1\1\7\uffff\1\1\3\uffff\1\46\1\uffff\1\46\16\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final char[] dfa_196 = DFA.unpackEncodedStringToUnsignedChars(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final short[] dfa_198 = DFA.unpackEncodedString(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[][] dfa_200 = unpackEncodedStringArray(dfa_200s);

    class DFA206 extends DFA {

        public DFA206(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 206;
            this.eot = dfa_195;
            this.eof = dfa_195;
            this.min = dfa_196;
            this.max = dfa_197;
            this.accept = dfa_198;
            this.special = dfa_199;
            this.transition = dfa_200;
        }
        public String getDescription() {
            return "8524:3: ( ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) ) | ( ( ( ( ({...}? => ( ({...}? => (otherlv_4= '(' ( (lv_alternativeObservables_5_0= ruleAlternativeDependencyObservableSemantics ) ) (otherlv_6= ',' ( (lv_alternativeObservables_7_0= ruleAlternativeDependencyObservableSemantics ) ) )* otherlv_8= ')' ( ( (lv_optional_9_0= 'optional' ) ) | otherlv_10= 'required' )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_11_0= 'default' ) ) otherlv_12= 'to' ( ( (lv_defaultLiteral_13_0= ruleLiteral ) ) | ( (lv_defaultConcept_14_0= ruleConceptDeclaration ) ) ) (otherlv_15= 'when' ( (lv_causes_16_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_17= ',' ( (lv_causes_18_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'named' ( ( (lv_name_20_1= RULE_LOWERCASE_ID | lv_name_20_2= RULE_STRING ) ) ) ) ) ) ) )+ {...}?) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA206_35 = input.LA(1);

                         
                        int index206_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred339_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index206_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 206, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_201s = "\65\uffff";
    static final String dfa_202s = "\1\uffff\3\4\1\uffff\1\4\4\uffff\3\4\3\uffff\2\6\11\uffff\2\6\5\uffff\3\4\3\uffff\4\4\3\uffff\4\4\1\uffff\1\4";
    static final String dfa_203s = "\1\4\3\25\1\uffff\1\25\1\uffff\3\4\3\25\3\156\5\4\6\156\4\4\3\156\3\25\1\4\1\12\1\4\3\25\1\4\2\0\1\12\1\4\2\25\1\4\1\12\1\4";
    static final String dfa_204s = "\1\u0100\3\161\1\uffff\1\110\1\uffff\3\13\6\161\2\u0100\3\13\6\161\2\u0100\2\13\6\161\1\13\1\12\1\13\3\161\1\u0100\2\0\1\12\3\110\1\u0100\1\12\1\u0100";
    static final String dfa_205s = "\4\uffff\1\1\1\uffff\1\2\56\uffff";
    static final String dfa_206s = "\54\uffff\1\1\1\0\7\uffff}>";
    static final String[] dfa_207s = {
            "\1\1\1\2\1\5\1\uffff\3\6\1\3\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\105\uffff\1\4\7\uffff\1\6\24\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6\126\uffff\2\6",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\11\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "",
            "\1\4\4\uffff\1\6\1\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\20\uffff\3\4\5\uffff\6\4",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\1\15\1\16\3\uffff\1\6\1\uffff\1\17",
            "\1\20\1\21\1\6\2\uffff\2\6\1\17",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\1\6\1\uffff\2\4\20\uffff\3\4\5\uffff\6\4\45\uffff\1\10\2\uffff\1\7",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\2\6\3\uffff\3\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\1\25\1\26\5\uffff\1\27",
            "\1\30\1\31\5\uffff\1\32",
            "\1\33\1\34\1\6\3\uffff\1\6\1\27",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\2\6\3\uffff\3\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\7\uffff\1\6\4\uffff\1\6\1\uffff\1\6\3\uffff\3\6\1\uffff\1\6\1\uffff\2\6\1\uffff\2\6\4\uffff\1\6\5\uffff\1\6\5\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\1\37\1\40\5\uffff\1\41",
            "\1\42\1\43\4\uffff\1\4\1\44",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\50\1\51\5\uffff\1\52",
            "\1\53",
            "\1\54\1\55\1\6\3\uffff\1\6\1\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\45\uffff\1\46\1\uffff\1\4\1\45",
            "\1\60\1\61\17\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\50\uffff\1\56\u008e\uffff\1\57",
            "\1\uffff",
            "\1\uffff",
            "\1\62",
            "\1\60\1\61\17\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4",
            "\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4",
            "\1\60\1\61\17\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\50\uffff\1\63\u008e\uffff\1\57",
            "\1\64",
            "\1\60\1\61\17\uffff\1\4\6\uffff\1\4\3\uffff\3\4\3\uffff\1\4\2\uffff\2\4\17\uffff\1\47\3\4\5\uffff\6\4\u00b7\uffff\1\57"
    };

    static final short[] dfa_201 = DFA.unpackEncodedString(dfa_201s);
    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[][] dfa_207 = unpackEncodedStringArray(dfa_207s);

    class DFA198 extends DFA {

        public DFA198(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 198;
            this.eot = dfa_201;
            this.eof = dfa_202;
            this.min = dfa_203;
            this.max = dfa_204;
            this.accept = dfa_205;
            this.special = dfa_206;
            this.transition = dfa_207;
        }
        public String getDescription() {
            return "8525:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA198_45 = input.LA(1);

                         
                        int index198_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred338_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index198_45);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA198_44 = input.LA(1);

                         
                        int index198_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred338_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index198_44);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 198, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_208s = "\2\uffff\2\7\5\uffff\3\7";
    static final String dfa_209s = "\1\4\1\156\2\25\4\uffff\1\4\3\25";
    static final String dfa_210s = "\1\155\3\161\4\uffff\1\13\3\161";
    static final String dfa_211s = "\4\uffff\1\3\1\4\1\1\1\2\4\uffff";
    static final String dfa_212s = "\1\uffff\1\0\12\uffff}>";
    static final String[] dfa_213s = {
            "\1\1\1\2\1\5\4\uffff\1\3\141\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\13",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10",
            "\1\7\6\uffff\1\7\3\uffff\3\7\3\uffff\1\7\2\uffff\2\7\20\uffff\3\7\5\uffff\6\7\45\uffff\1\4\2\uffff\1\10"
    };
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final char[] dfa_209 = DFA.unpackEncodedStringToUnsignedChars(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[][] dfa_213 = unpackEncodedStringArray(dfa_213s);

    class DFA197 extends DFA {

        public DFA197(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 197;
            this.eot = dfa_131;
            this.eof = dfa_208;
            this.min = dfa_209;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_213;
        }
        public String getDescription() {
            return "8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA197_1 = input.LA(1);

                         
                        int index197_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA197_1==110||LA197_1==113) ) {s = 4;}

                        else if ( (synpred335_InternalKim()) ) {s = 6;}

                        else if ( (synpred336_InternalKim()) ) {s = 7;}

                         
                        input.seek(index197_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 197, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_214s = "\u008c\uffff";
    static final String dfa_215s = "\1\1\u008b\uffff";
    static final String dfa_216s = "\1\4\44\uffff\1\0\33\uffff\3\0\1\uffff\1\0\1\uffff\27\0\56\uffff";
    static final String dfa_217s = "\1\u0100\44\uffff\1\0\33\uffff\3\0\1\uffff\1\0\1\uffff\27\0\56\uffff";
    static final String dfa_218s = "\1\uffff\1\2\u0089\uffff\1\1";
    static final String dfa_219s = "\45\uffff\1\0\33\uffff\1\1\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\56\uffff}>";
    static final String[] dfa_220s = {
            "\1\101\1\102\3\1\1\105\1\1\1\103\1\uffff\1\111\1\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\3\1\1\45\3\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\11\uffff\1\1\5\uffff\2\1\5\uffff\26\1\1\112\1\113\6\uffff\1\1\1\107\1\110\1\uffff\1\114\1\115\1\116\1\117\1\120\1\121\1\uffff\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\3\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final char[] dfa_216 = DFA.unpackEncodedStringToUnsignedChars(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[][] dfa_220 = unpackEncodedStringArray(dfa_220s);

    class DFA207 extends DFA {

        public DFA207(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 207;
            this.eot = dfa_214;
            this.eof = dfa_215;
            this.min = dfa_216;
            this.max = dfa_217;
            this.accept = dfa_218;
            this.special = dfa_219;
            this.transition = dfa_220;
        }
        public String getDescription() {
            return "()+ loopback of 8917:3: ( (lv_main_0_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA207_37 = input.LA(1);

                         
                        int index207_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_37);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA207_65 = input.LA(1);

                         
                        int index207_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_65);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA207_66 = input.LA(1);

                         
                        int index207_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_66);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA207_67 = input.LA(1);

                         
                        int index207_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_67);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA207_69 = input.LA(1);

                         
                        int index207_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_69);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA207_71 = input.LA(1);

                         
                        int index207_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_71);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA207_72 = input.LA(1);

                         
                        int index207_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_72);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA207_73 = input.LA(1);

                         
                        int index207_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_73);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA207_74 = input.LA(1);

                         
                        int index207_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_74);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA207_75 = input.LA(1);

                         
                        int index207_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_75);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA207_76 = input.LA(1);

                         
                        int index207_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_76);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA207_77 = input.LA(1);

                         
                        int index207_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_77);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA207_78 = input.LA(1);

                         
                        int index207_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_78);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA207_79 = input.LA(1);

                         
                        int index207_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_79);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA207_80 = input.LA(1);

                         
                        int index207_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_80);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA207_81 = input.LA(1);

                         
                        int index207_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_81);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA207_82 = input.LA(1);

                         
                        int index207_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_82);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA207_83 = input.LA(1);

                         
                        int index207_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_83);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA207_84 = input.LA(1);

                         
                        int index207_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_84);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA207_85 = input.LA(1);

                         
                        int index207_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_85);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA207_86 = input.LA(1);

                         
                        int index207_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_86);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA207_87 = input.LA(1);

                         
                        int index207_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_87);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA207_88 = input.LA(1);

                         
                        int index207_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_88);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA207_89 = input.LA(1);

                         
                        int index207_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_89);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA207_90 = input.LA(1);

                         
                        int index207_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_90);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA207_91 = input.LA(1);

                         
                        int index207_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_91);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA207_92 = input.LA(1);

                         
                        int index207_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_92);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA207_93 = input.LA(1);

                         
                        int index207_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred350_InternalKim()) ) {s = 139;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index207_93);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 207, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_221s = "\1\17\u008b\uffff";
    static final String dfa_222s = "\1\4\13\uffff\177\0\1\uffff";
    static final String dfa_223s = "\1\u0100\13\uffff\177\0\1\uffff";
    static final String dfa_224s = "\1\uffff\1\1\u0089\uffff\1\2";
    static final String dfa_225s = "\14\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\136\1\137\1\140\1\141\1\142\1\143\1\144\1\145\1\146\1\147\1\150\1\151\1\152\1\153\1\154\1\155\1\156\1\157\1\160\1\161\1\162\1\163\1\164\1\165\1\166\1\167\1\170\1\171\1\172\1\173\1\174\1\175\1\176\1\uffff}>";
    static final String[] dfa_226s = {
            "\1\101\1\102\1\106\1\43\1\147\1\105\1\77\1\103\1\uffff\1\111\1\u0086\1\uffff\1\150\4\uffff\1\37\4\uffff\1\14\1\uffff\1\15\1\145\1\146\1\137\1\136\1\155\1\156\1\uffff\1\46\1\u0089\1\23\1\45\1\16\1\24\1\36\1\uffff\1\153\2\uffff\1\56\1\20\1\21\1\22\2\uffff\1\44\1\152\1\151\1\42\1\41\1\uffff\1\25\1\26\1\27\5\uffff\1\30\1\31\1\32\1\33\1\34\1\35\1\uffff\1\1\6\uffff\1\50\1\51\1\52\1\53\1\54\1\55\1\57\1\60\1\61\1\62\1\63\1\64\1\65\11\uffff\1\1\5\uffff\1\104\1\40\5\uffff\1\140\1\143\1\47\1\72\1\73\1\74\1\141\1\100\1\144\1\66\1\67\1\70\1\71\11\1\1\112\1\113\6\uffff\1\154\1\107\1\110\1\uffff\1\114\1\115\1\116\1\117\1\120\1\121\1\uffff\1\122\1\123\1\124\1\125\1\126\1\127\1\130\1\131\1\132\1\133\1\134\1\135\1\161\1\157\1\160\11\uffff\1\162\1\163\2\uffff\1\164\1\uffff\1\165\1\166\1\167\1\170\1\171\1\172\1\173\1\174\1\175\1\uffff\1\u0088\1\176\1\177\1\u0080\1\u0081\1\u0082\1\u0083\1\u0084\1\u0085\5\uffff\1\u0087\1\u008a\4\uffff\1\142\45\uffff\1\75\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_221 = DFA.unpackEncodedString(dfa_221s);
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final char[] dfa_223 = DFA.unpackEncodedStringToUnsignedChars(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[] dfa_225 = DFA.unpackEncodedString(dfa_225s);
    static final short[][] dfa_226 = unpackEncodedStringArray(dfa_226s);

    class DFA213 extends DFA {

        public DFA213(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 213;
            this.eot = dfa_214;
            this.eof = dfa_221;
            this.min = dfa_222;
            this.max = dfa_223;
            this.accept = dfa_224;
            this.special = dfa_225;
            this.transition = dfa_226;
        }
        public String getDescription() {
            return "8936:3: ( ( ( ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA213_12 = input.LA(1);

                         
                        int index213_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_12);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA213_13 = input.LA(1);

                         
                        int index213_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_13);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA213_14 = input.LA(1);

                         
                        int index213_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_14);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA213_15 = input.LA(1);

                         
                        int index213_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_15);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA213_16 = input.LA(1);

                         
                        int index213_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_16);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA213_17 = input.LA(1);

                         
                        int index213_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_17);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA213_18 = input.LA(1);

                         
                        int index213_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_18);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA213_19 = input.LA(1);

                         
                        int index213_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_19);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA213_20 = input.LA(1);

                         
                        int index213_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_20);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA213_21 = input.LA(1);

                         
                        int index213_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_21);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA213_22 = input.LA(1);

                         
                        int index213_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_22);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA213_23 = input.LA(1);

                         
                        int index213_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_23);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA213_24 = input.LA(1);

                         
                        int index213_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_24);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA213_25 = input.LA(1);

                         
                        int index213_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_25);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA213_26 = input.LA(1);

                         
                        int index213_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_26);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA213_27 = input.LA(1);

                         
                        int index213_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_27);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA213_28 = input.LA(1);

                         
                        int index213_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_28);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA213_29 = input.LA(1);

                         
                        int index213_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_29);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA213_30 = input.LA(1);

                         
                        int index213_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_30);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA213_31 = input.LA(1);

                         
                        int index213_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_31);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA213_32 = input.LA(1);

                         
                        int index213_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_32);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA213_33 = input.LA(1);

                         
                        int index213_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_33);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA213_34 = input.LA(1);

                         
                        int index213_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_34);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA213_35 = input.LA(1);

                         
                        int index213_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_35);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA213_36 = input.LA(1);

                         
                        int index213_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_36);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA213_37 = input.LA(1);

                         
                        int index213_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_37);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA213_38 = input.LA(1);

                         
                        int index213_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_38);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA213_39 = input.LA(1);

                         
                        int index213_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_39);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA213_40 = input.LA(1);

                         
                        int index213_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_40);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA213_41 = input.LA(1);

                         
                        int index213_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_41);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA213_42 = input.LA(1);

                         
                        int index213_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_42);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA213_43 = input.LA(1);

                         
                        int index213_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_43);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA213_44 = input.LA(1);

                         
                        int index213_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_44);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA213_45 = input.LA(1);

                         
                        int index213_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_45);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA213_46 = input.LA(1);

                         
                        int index213_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_46);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA213_47 = input.LA(1);

                         
                        int index213_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_47);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA213_48 = input.LA(1);

                         
                        int index213_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_48);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA213_49 = input.LA(1);

                         
                        int index213_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_49);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA213_50 = input.LA(1);

                         
                        int index213_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_50);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA213_51 = input.LA(1);

                         
                        int index213_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_51);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA213_52 = input.LA(1);

                         
                        int index213_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_52);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA213_53 = input.LA(1);

                         
                        int index213_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_53);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA213_54 = input.LA(1);

                         
                        int index213_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_54);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA213_55 = input.LA(1);

                         
                        int index213_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_55);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA213_56 = input.LA(1);

                         
                        int index213_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_56);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA213_57 = input.LA(1);

                         
                        int index213_57 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_57);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA213_58 = input.LA(1);

                         
                        int index213_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_58);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA213_59 = input.LA(1);

                         
                        int index213_59 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_59);
                        if ( s>=0 ) return s;
                        break;
                    case 48 : 
                        int LA213_60 = input.LA(1);

                         
                        int index213_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_60);
                        if ( s>=0 ) return s;
                        break;
                    case 49 : 
                        int LA213_61 = input.LA(1);

                         
                        int index213_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_61);
                        if ( s>=0 ) return s;
                        break;
                    case 50 : 
                        int LA213_62 = input.LA(1);

                         
                        int index213_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_62);
                        if ( s>=0 ) return s;
                        break;
                    case 51 : 
                        int LA213_63 = input.LA(1);

                         
                        int index213_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_63);
                        if ( s>=0 ) return s;
                        break;
                    case 52 : 
                        int LA213_64 = input.LA(1);

                         
                        int index213_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_64);
                        if ( s>=0 ) return s;
                        break;
                    case 53 : 
                        int LA213_65 = input.LA(1);

                         
                        int index213_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_65);
                        if ( s>=0 ) return s;
                        break;
                    case 54 : 
                        int LA213_66 = input.LA(1);

                         
                        int index213_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_66);
                        if ( s>=0 ) return s;
                        break;
                    case 55 : 
                        int LA213_67 = input.LA(1);

                         
                        int index213_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_67);
                        if ( s>=0 ) return s;
                        break;
                    case 56 : 
                        int LA213_68 = input.LA(1);

                         
                        int index213_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_68);
                        if ( s>=0 ) return s;
                        break;
                    case 57 : 
                        int LA213_69 = input.LA(1);

                         
                        int index213_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_69);
                        if ( s>=0 ) return s;
                        break;
                    case 58 : 
                        int LA213_70 = input.LA(1);

                         
                        int index213_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_70);
                        if ( s>=0 ) return s;
                        break;
                    case 59 : 
                        int LA213_71 = input.LA(1);

                         
                        int index213_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_71);
                        if ( s>=0 ) return s;
                        break;
                    case 60 : 
                        int LA213_72 = input.LA(1);

                         
                        int index213_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_72);
                        if ( s>=0 ) return s;
                        break;
                    case 61 : 
                        int LA213_73 = input.LA(1);

                         
                        int index213_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_73);
                        if ( s>=0 ) return s;
                        break;
                    case 62 : 
                        int LA213_74 = input.LA(1);

                         
                        int index213_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_74);
                        if ( s>=0 ) return s;
                        break;
                    case 63 : 
                        int LA213_75 = input.LA(1);

                         
                        int index213_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_75);
                        if ( s>=0 ) return s;
                        break;
                    case 64 : 
                        int LA213_76 = input.LA(1);

                         
                        int index213_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_76);
                        if ( s>=0 ) return s;
                        break;
                    case 65 : 
                        int LA213_77 = input.LA(1);

                         
                        int index213_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_77);
                        if ( s>=0 ) return s;
                        break;
                    case 66 : 
                        int LA213_78 = input.LA(1);

                         
                        int index213_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_78);
                        if ( s>=0 ) return s;
                        break;
                    case 67 : 
                        int LA213_79 = input.LA(1);

                         
                        int index213_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_79);
                        if ( s>=0 ) return s;
                        break;
                    case 68 : 
                        int LA213_80 = input.LA(1);

                         
                        int index213_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_80);
                        if ( s>=0 ) return s;
                        break;
                    case 69 : 
                        int LA213_81 = input.LA(1);

                         
                        int index213_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_81);
                        if ( s>=0 ) return s;
                        break;
                    case 70 : 
                        int LA213_82 = input.LA(1);

                         
                        int index213_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_82);
                        if ( s>=0 ) return s;
                        break;
                    case 71 : 
                        int LA213_83 = input.LA(1);

                         
                        int index213_83 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_83);
                        if ( s>=0 ) return s;
                        break;
                    case 72 : 
                        int LA213_84 = input.LA(1);

                         
                        int index213_84 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_84);
                        if ( s>=0 ) return s;
                        break;
                    case 73 : 
                        int LA213_85 = input.LA(1);

                         
                        int index213_85 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_85);
                        if ( s>=0 ) return s;
                        break;
                    case 74 : 
                        int LA213_86 = input.LA(1);

                         
                        int index213_86 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_86);
                        if ( s>=0 ) return s;
                        break;
                    case 75 : 
                        int LA213_87 = input.LA(1);

                         
                        int index213_87 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_87);
                        if ( s>=0 ) return s;
                        break;
                    case 76 : 
                        int LA213_88 = input.LA(1);

                         
                        int index213_88 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_88);
                        if ( s>=0 ) return s;
                        break;
                    case 77 : 
                        int LA213_89 = input.LA(1);

                         
                        int index213_89 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_89);
                        if ( s>=0 ) return s;
                        break;
                    case 78 : 
                        int LA213_90 = input.LA(1);

                         
                        int index213_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_90);
                        if ( s>=0 ) return s;
                        break;
                    case 79 : 
                        int LA213_91 = input.LA(1);

                         
                        int index213_91 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_91);
                        if ( s>=0 ) return s;
                        break;
                    case 80 : 
                        int LA213_92 = input.LA(1);

                         
                        int index213_92 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_92);
                        if ( s>=0 ) return s;
                        break;
                    case 81 : 
                        int LA213_93 = input.LA(1);

                         
                        int index213_93 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_93);
                        if ( s>=0 ) return s;
                        break;
                    case 82 : 
                        int LA213_94 = input.LA(1);

                         
                        int index213_94 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_94);
                        if ( s>=0 ) return s;
                        break;
                    case 83 : 
                        int LA213_95 = input.LA(1);

                         
                        int index213_95 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_95);
                        if ( s>=0 ) return s;
                        break;
                    case 84 : 
                        int LA213_96 = input.LA(1);

                         
                        int index213_96 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_96);
                        if ( s>=0 ) return s;
                        break;
                    case 85 : 
                        int LA213_97 = input.LA(1);

                         
                        int index213_97 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_97);
                        if ( s>=0 ) return s;
                        break;
                    case 86 : 
                        int LA213_98 = input.LA(1);

                         
                        int index213_98 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_98);
                        if ( s>=0 ) return s;
                        break;
                    case 87 : 
                        int LA213_99 = input.LA(1);

                         
                        int index213_99 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_99);
                        if ( s>=0 ) return s;
                        break;
                    case 88 : 
                        int LA213_100 = input.LA(1);

                         
                        int index213_100 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_100);
                        if ( s>=0 ) return s;
                        break;
                    case 89 : 
                        int LA213_101 = input.LA(1);

                         
                        int index213_101 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_101);
                        if ( s>=0 ) return s;
                        break;
                    case 90 : 
                        int LA213_102 = input.LA(1);

                         
                        int index213_102 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_102);
                        if ( s>=0 ) return s;
                        break;
                    case 91 : 
                        int LA213_103 = input.LA(1);

                         
                        int index213_103 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_103);
                        if ( s>=0 ) return s;
                        break;
                    case 92 : 
                        int LA213_104 = input.LA(1);

                         
                        int index213_104 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_104);
                        if ( s>=0 ) return s;
                        break;
                    case 93 : 
                        int LA213_105 = input.LA(1);

                         
                        int index213_105 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_105);
                        if ( s>=0 ) return s;
                        break;
                    case 94 : 
                        int LA213_106 = input.LA(1);

                         
                        int index213_106 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_106);
                        if ( s>=0 ) return s;
                        break;
                    case 95 : 
                        int LA213_107 = input.LA(1);

                         
                        int index213_107 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_107);
                        if ( s>=0 ) return s;
                        break;
                    case 96 : 
                        int LA213_108 = input.LA(1);

                         
                        int index213_108 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_108);
                        if ( s>=0 ) return s;
                        break;
                    case 97 : 
                        int LA213_109 = input.LA(1);

                         
                        int index213_109 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_109);
                        if ( s>=0 ) return s;
                        break;
                    case 98 : 
                        int LA213_110 = input.LA(1);

                         
                        int index213_110 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_110);
                        if ( s>=0 ) return s;
                        break;
                    case 99 : 
                        int LA213_111 = input.LA(1);

                         
                        int index213_111 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_111);
                        if ( s>=0 ) return s;
                        break;
                    case 100 : 
                        int LA213_112 = input.LA(1);

                         
                        int index213_112 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_112);
                        if ( s>=0 ) return s;
                        break;
                    case 101 : 
                        int LA213_113 = input.LA(1);

                         
                        int index213_113 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_113);
                        if ( s>=0 ) return s;
                        break;
                    case 102 : 
                        int LA213_114 = input.LA(1);

                         
                        int index213_114 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_114);
                        if ( s>=0 ) return s;
                        break;
                    case 103 : 
                        int LA213_115 = input.LA(1);

                         
                        int index213_115 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_115);
                        if ( s>=0 ) return s;
                        break;
                    case 104 : 
                        int LA213_116 = input.LA(1);

                         
                        int index213_116 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_116);
                        if ( s>=0 ) return s;
                        break;
                    case 105 : 
                        int LA213_117 = input.LA(1);

                         
                        int index213_117 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_117);
                        if ( s>=0 ) return s;
                        break;
                    case 106 : 
                        int LA213_118 = input.LA(1);

                         
                        int index213_118 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_118);
                        if ( s>=0 ) return s;
                        break;
                    case 107 : 
                        int LA213_119 = input.LA(1);

                         
                        int index213_119 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_119);
                        if ( s>=0 ) return s;
                        break;
                    case 108 : 
                        int LA213_120 = input.LA(1);

                         
                        int index213_120 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_120);
                        if ( s>=0 ) return s;
                        break;
                    case 109 : 
                        int LA213_121 = input.LA(1);

                         
                        int index213_121 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_121);
                        if ( s>=0 ) return s;
                        break;
                    case 110 : 
                        int LA213_122 = input.LA(1);

                         
                        int index213_122 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_122);
                        if ( s>=0 ) return s;
                        break;
                    case 111 : 
                        int LA213_123 = input.LA(1);

                         
                        int index213_123 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_123);
                        if ( s>=0 ) return s;
                        break;
                    case 112 : 
                        int LA213_124 = input.LA(1);

                         
                        int index213_124 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_124);
                        if ( s>=0 ) return s;
                        break;
                    case 113 : 
                        int LA213_125 = input.LA(1);

                         
                        int index213_125 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_125);
                        if ( s>=0 ) return s;
                        break;
                    case 114 : 
                        int LA213_126 = input.LA(1);

                         
                        int index213_126 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_126);
                        if ( s>=0 ) return s;
                        break;
                    case 115 : 
                        int LA213_127 = input.LA(1);

                         
                        int index213_127 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_127);
                        if ( s>=0 ) return s;
                        break;
                    case 116 : 
                        int LA213_128 = input.LA(1);

                         
                        int index213_128 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_128);
                        if ( s>=0 ) return s;
                        break;
                    case 117 : 
                        int LA213_129 = input.LA(1);

                         
                        int index213_129 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_129);
                        if ( s>=0 ) return s;
                        break;
                    case 118 : 
                        int LA213_130 = input.LA(1);

                         
                        int index213_130 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_130);
                        if ( s>=0 ) return s;
                        break;
                    case 119 : 
                        int LA213_131 = input.LA(1);

                         
                        int index213_131 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_131);
                        if ( s>=0 ) return s;
                        break;
                    case 120 : 
                        int LA213_132 = input.LA(1);

                         
                        int index213_132 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_132);
                        if ( s>=0 ) return s;
                        break;
                    case 121 : 
                        int LA213_133 = input.LA(1);

                         
                        int index213_133 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_133);
                        if ( s>=0 ) return s;
                        break;
                    case 122 : 
                        int LA213_134 = input.LA(1);

                         
                        int index213_134 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_134);
                        if ( s>=0 ) return s;
                        break;
                    case 123 : 
                        int LA213_135 = input.LA(1);

                         
                        int index213_135 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_135);
                        if ( s>=0 ) return s;
                        break;
                    case 124 : 
                        int LA213_136 = input.LA(1);

                         
                        int index213_136 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_136);
                        if ( s>=0 ) return s;
                        break;
                    case 125 : 
                        int LA213_137 = input.LA(1);

                         
                        int index213_137 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_137);
                        if ( s>=0 ) return s;
                        break;
                    case 126 : 
                        int LA213_138 = input.LA(1);

                         
                        int index213_138 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred366_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 139;}

                         
                        input.seek(index213_138);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 213, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_227s = "\15\uffff";
    static final String dfa_228s = "\1\1\14\uffff";
    static final String dfa_229s = "\1\4\14\uffff";
    static final String dfa_230s = "\1\u0100\14\uffff";
    static final String dfa_231s = "\1\uffff\1\14\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13";
    static final String dfa_232s = "\1\0\14\uffff}>";
    static final String[] dfa_233s = {
            "\10\1\1\uffff\2\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\3\6\uffff\15\1\11\uffff\1\4\5\uffff\2\1\5\uffff\15\1\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_227 = DFA.unpackEncodedString(dfa_227s);
    static final short[] dfa_228 = DFA.unpackEncodedString(dfa_228s);
    static final char[] dfa_229 = DFA.unpackEncodedStringToUnsignedChars(dfa_229s);
    static final char[] dfa_230 = DFA.unpackEncodedStringToUnsignedChars(dfa_230s);
    static final short[] dfa_231 = DFA.unpackEncodedString(dfa_231s);
    static final short[] dfa_232 = DFA.unpackEncodedString(dfa_232s);
    static final short[][] dfa_233 = unpackEncodedStringArray(dfa_233s);

    class DFA212 extends DFA {

        public DFA212(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 212;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_229;
            this.max = dfa_230;
            this.accept = dfa_231;
            this.special = dfa_232;
            this.transition = dfa_233;
        }
        public String getDescription() {
            return "()* loopback of 8942:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA212_0 = input.LA(1);

                         
                        int index212_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA212_0==EOF||(LA212_0>=RULE_LOWERCASE_ID && LA212_0<=RULE_LOWERCASE_DASHID)||(LA212_0>=RULE_UPPERCASE_PATH && LA212_0<=RULE_BACKCASE_ID)||LA212_0==RULE_TEMPLATE_VAR||LA212_0==21||LA212_0==26||(LA212_0>=28 && LA212_0<=34)||(LA212_0>=36 && LA212_0<=42)||LA212_0==44||(LA212_0>=47 && LA212_0<=50)||(LA212_0>=53 && LA212_0<=57)||(LA212_0>=59 && LA212_0<=61)||(LA212_0>=67 && LA212_0<=72)||(LA212_0>=81 && LA212_0<=93)||(LA212_0>=109 && LA212_0<=110)||(LA212_0>=116 && LA212_0<=128)||(LA212_0>=138 && LA212_0<=139)||(LA212_0>=146 && LA212_0<=148)||(LA212_0>=150 && LA212_0<=155)||(LA212_0>=157 && LA212_0<=171)||(LA212_0>=181 && LA212_0<=182)||LA212_0==185||(LA212_0>=187 && LA212_0<=195)||(LA212_0>=197 && LA212_0<=205)||(LA212_0>=211 && LA212_0<=212)||LA212_0==217||(LA212_0>=255 && LA212_0<=256)) ) {s = 1;}

                        else if ( LA212_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA212_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA212_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA212_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA212_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA212_0 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA212_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA212_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA212_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA212_0 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA212_0 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index212_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 212, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_234s = "\16\uffff";
    static final String dfa_235s = "\1\4\1\uffff\3\156\2\uffff\3\4\3\156\1\uffff";
    static final String dfa_236s = "\1\u008b\1\uffff\3\161\2\uffff\3\13\3\161\1\uffff";
    static final String dfa_237s = "\1\uffff\1\1\3\uffff\1\2\1\4\6\uffff\1\3";
    static final String dfa_238s = "\16\uffff}>";
    static final String[] dfa_239s = {
            "\1\3\1\2\3\uffff\1\5\1\uffff\1\4\1\uffff\1\1\174\uffff\2\6",
            "",
            "\1\10\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            "",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\3\1\2\uffff\1\15\2\1",
            "\2\1\3\uffff\1\15\1\uffff\1\1",
            "\1\11\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            "\1\11\2\uffff\1\7",
            ""
    };

    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final char[] dfa_235 = DFA.unpackEncodedStringToUnsignedChars(dfa_235s);
    static final char[] dfa_236 = DFA.unpackEncodedStringToUnsignedChars(dfa_236s);
    static final short[] dfa_237 = DFA.unpackEncodedString(dfa_237s);
    static final short[] dfa_238 = DFA.unpackEncodedString(dfa_238s);
    static final short[][] dfa_239 = unpackEncodedStringArray(dfa_239s);

    class DFA216 extends DFA {

        public DFA216(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 216;
            this.eot = dfa_234;
            this.eof = dfa_234;
            this.min = dfa_235;
            this.max = dfa_236;
            this.accept = dfa_237;
            this.special = dfa_238;
            this.transition = dfa_239;
        }
        public String getDescription() {
            return "9446:2: ( ( (lv_name_0_0= ruleAuthorityId ) ) | ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_2_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_3_1= '${' | lv_templateType_3_2= '#{' ) ) ) ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) ) ( (lv_template_34_0= '}' ) ) ) )";
        }
    }
    static final String dfa_240s = "\47\uffff";
    static final String dfa_241s = "\1\4\34\0\12\uffff";
    static final String dfa_242s = "\1\u00a8\34\0\12\uffff";
    static final String dfa_243s = "\35\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12";
    static final String dfa_244s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\12\uffff}>";
    static final String[] dfa_245s = {
            "\1\5\1\4\3\uffff\1\7\1\uffff\1\6\1\uffff\1\3\31\uffff\1\34\142\uffff\1\10\1\11\7\uffff\1\1\1\2\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\uffff\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final char[] dfa_241 = DFA.unpackEncodedStringToUnsignedChars(dfa_241s);
    static final char[] dfa_242 = DFA.unpackEncodedStringToUnsignedChars(dfa_242s);
    static final short[] dfa_243 = DFA.unpackEncodedString(dfa_243s);
    static final short[] dfa_244 = DFA.unpackEncodedString(dfa_244s);
    static final short[][] dfa_245 = unpackEncodedStringArray(dfa_245s);

    class DFA215 extends DFA {

        public DFA215(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 215;
            this.eot = dfa_240;
            this.eof = dfa_240;
            this.min = dfa_241;
            this.max = dfa_242;
            this.accept = dfa_243;
            this.special = dfa_244;
            this.transition = dfa_245;
        }
        public String getDescription() {
            return "9534:4: ( ( ( (lv_extends_4_0= ruleConcept ) ) otherlv_5= ':' ( (lv_name_6_0= 'context' ) ) ) | ( ( (lv_extends_7_0= ruleConcept ) ) otherlv_8= ':' ( (lv_name_9_0= 'inherent' ) ) ) | ( ( (lv_extends_10_0= ruleConcept ) ) otherlv_11= ':' ( (lv_name_12_0= 'compresent' ) ) ) | ( ( (lv_extends_13_0= ruleConcept ) ) otherlv_14= ':' ( (lv_name_15_0= 'adjacent' ) ) ) | ( ( (lv_extends_16_0= ruleConcept ) ) otherlv_17= ':' ( (lv_name_18_0= 'container' ) ) ) | ( ( (lv_extends_19_0= ruleConcept ) ) otherlv_20= ':' ( (lv_name_21_0= 'contained' ) ) ) | ( ( (lv_extends_22_0= ruleConcept ) ) otherlv_23= ':' ( (lv_name_24_0= 'purpose' ) ) ) | ( ( (lv_extends_25_0= ruleConcept ) ) otherlv_26= ':' ( (lv_name_27_0= 'causant' ) ) ) | ( ( (lv_extends_28_0= ruleConcept ) ) otherlv_29= ':' ( (lv_name_30_0= 'caused' ) ) ) | ( ( (lv_extends_31_0= ruleConcept ) ) otherlv_32= ':' ( (lv_name_33_0= 'cooccurrent' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA215_1 = input.LA(1);

                         
                        int index215_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA215_2 = input.LA(1);

                         
                        int index215_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA215_3 = input.LA(1);

                         
                        int index215_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA215_4 = input.LA(1);

                         
                        int index215_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA215_5 = input.LA(1);

                         
                        int index215_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA215_6 = input.LA(1);

                         
                        int index215_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA215_7 = input.LA(1);

                         
                        int index215_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA215_8 = input.LA(1);

                         
                        int index215_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA215_9 = input.LA(1);

                         
                        int index215_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA215_10 = input.LA(1);

                         
                        int index215_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA215_11 = input.LA(1);

                         
                        int index215_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA215_12 = input.LA(1);

                         
                        int index215_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA215_13 = input.LA(1);

                         
                        int index215_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA215_14 = input.LA(1);

                         
                        int index215_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA215_15 = input.LA(1);

                         
                        int index215_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA215_16 = input.LA(1);

                         
                        int index215_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA215_17 = input.LA(1);

                         
                        int index215_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA215_18 = input.LA(1);

                         
                        int index215_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA215_19 = input.LA(1);

                         
                        int index215_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA215_20 = input.LA(1);

                         
                        int index215_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA215_21 = input.LA(1);

                         
                        int index215_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA215_22 = input.LA(1);

                         
                        int index215_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA215_23 = input.LA(1);

                         
                        int index215_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA215_24 = input.LA(1);

                         
                        int index215_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA215_25 = input.LA(1);

                         
                        int index215_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA215_26 = input.LA(1);

                         
                        int index215_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA215_27 = input.LA(1);

                         
                        int index215_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA215_28 = input.LA(1);

                         
                        int index215_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred371_InternalKim()) ) {s = 29;}

                        else if ( (synpred372_InternalKim()) ) {s = 30;}

                        else if ( (synpred373_InternalKim()) ) {s = 31;}

                        else if ( (synpred374_InternalKim()) ) {s = 32;}

                        else if ( (synpred375_InternalKim()) ) {s = 33;}

                        else if ( (synpred376_InternalKim()) ) {s = 34;}

                        else if ( (synpred377_InternalKim()) ) {s = 35;}

                        else if ( (synpred378_InternalKim()) ) {s = 36;}

                        else if ( (synpred379_InternalKim()) ) {s = 37;}

                        else if ( (true) ) {s = 38;}

                         
                        input.seek(index215_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 215, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_246s = "\u0093\uffff";
    static final String dfa_247s = "\1\1\u0092\uffff";
    static final String dfa_248s = "\1\4\31\uffff\1\0\33\uffff\3\0\1\uffff\1\0\1\uffff\27\0\100\uffff";
    static final String dfa_249s = "\1\u0100\31\uffff\1\0\33\uffff\3\0\1\uffff\1\0\1\uffff\27\0\100\uffff";
    static final String dfa_250s = "\1\uffff\1\2\u0090\uffff\1\1";
    static final String dfa_251s = "\32\uffff\1\0\33\uffff\1\1\1\2\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\100\uffff}>";
    static final String[] dfa_252s = {
            "\1\66\1\67\3\1\1\72\1\1\1\70\1\uffff\1\76\1\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\3\1\1\32\3\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\4\1\5\uffff\26\1\1\77\1\100\6\uffff\1\1\1\74\1\75\1\uffff\1\101\1\102\1\103\1\104\1\105\1\106\1\uffff\1\107\1\110\1\111\1\112\1\113\1\114\1\115\1\116\1\117\1\120\1\121\1\122\3\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[] dfa_247 = DFA.unpackEncodedString(dfa_247s);
    static final char[] dfa_248 = DFA.unpackEncodedStringToUnsignedChars(dfa_248s);
    static final char[] dfa_249 = DFA.unpackEncodedStringToUnsignedChars(dfa_249s);
    static final short[] dfa_250 = DFA.unpackEncodedString(dfa_250s);
    static final short[] dfa_251 = DFA.unpackEncodedString(dfa_251s);
    static final short[][] dfa_252 = unpackEncodedStringArray(dfa_252s);

    class DFA236 extends DFA {

        public DFA236(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 236;
            this.eot = dfa_246;
            this.eof = dfa_247;
            this.min = dfa_248;
            this.max = dfa_249;
            this.accept = dfa_250;
            this.special = dfa_251;
            this.transition = dfa_252;
        }
        public String getDescription() {
            return "()+ loopback of 11291:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA236_26 = input.LA(1);

                         
                        int index236_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_26);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA236_54 = input.LA(1);

                         
                        int index236_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_54);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA236_55 = input.LA(1);

                         
                        int index236_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_55);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA236_56 = input.LA(1);

                         
                        int index236_56 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_56);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA236_58 = input.LA(1);

                         
                        int index236_58 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_58);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA236_60 = input.LA(1);

                         
                        int index236_60 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_60);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA236_61 = input.LA(1);

                         
                        int index236_61 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_61);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA236_62 = input.LA(1);

                         
                        int index236_62 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_62);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA236_63 = input.LA(1);

                         
                        int index236_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_63);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA236_64 = input.LA(1);

                         
                        int index236_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_64);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA236_65 = input.LA(1);

                         
                        int index236_65 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_65);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA236_66 = input.LA(1);

                         
                        int index236_66 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_66);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA236_67 = input.LA(1);

                         
                        int index236_67 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_67);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA236_68 = input.LA(1);

                         
                        int index236_68 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_68);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA236_69 = input.LA(1);

                         
                        int index236_69 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_69);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA236_70 = input.LA(1);

                         
                        int index236_70 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_70);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA236_71 = input.LA(1);

                         
                        int index236_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_71);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA236_72 = input.LA(1);

                         
                        int index236_72 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_72);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA236_73 = input.LA(1);

                         
                        int index236_73 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_73);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA236_74 = input.LA(1);

                         
                        int index236_74 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_74);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA236_75 = input.LA(1);

                         
                        int index236_75 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_75);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA236_76 = input.LA(1);

                         
                        int index236_76 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_76);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA236_77 = input.LA(1);

                         
                        int index236_77 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_77);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA236_78 = input.LA(1);

                         
                        int index236_78 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_78);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA236_79 = input.LA(1);

                         
                        int index236_79 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_79);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA236_80 = input.LA(1);

                         
                        int index236_80 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_80);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA236_81 = input.LA(1);

                         
                        int index236_81 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_81);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA236_82 = input.LA(1);

                         
                        int index236_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred429_InternalKim()) ) {s = 146;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index236_82);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 236, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_253s = "\1\4\3\156\2\4\2\uffff\3\156";
    static final String dfa_254s = "\1\13\3\161\1\16\1\13\2\uffff\3\161";
    static final String dfa_255s = "\6\uffff\1\1\1\2\3\uffff";
    static final String[] dfa_256s = {
            "\1\1\1\2\5\uffff\1\3",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5",
            "\1\7\4\uffff\1\6\1\uffff\1\7\2\uffff\1\7",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5",
            "\1\4\2\uffff\1\5"
    };
    static final char[] dfa_253 = DFA.unpackEncodedStringToUnsignedChars(dfa_253s);
    static final char[] dfa_254 = DFA.unpackEncodedStringToUnsignedChars(dfa_254s);
    static final short[] dfa_255 = DFA.unpackEncodedString(dfa_255s);
    static final short[][] dfa_256 = unpackEncodedStringArray(dfa_256s);

    class DFA241 extends DFA {

        public DFA241(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 241;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_253;
            this.max = dfa_254;
            this.accept = dfa_255;
            this.special = dfa_96;
            this.transition = dfa_256;
        }
        public String getDescription() {
            return "11452:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_257s = "\1\4\3\156\2\4\3\156\2\uffff";
    static final String dfa_258s = "\1\13\3\161\1\13\1\16\3\161\2\uffff";
    static final String dfa_259s = "\11\uffff\1\2\1\1";
    static final String[] dfa_260s = {
            "\1\1\1\2\5\uffff\1\3",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\6\1\7\5\uffff\1\10",
            "\1\12\4\uffff\1\11\1\uffff\1\12\2\uffff\1\12",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "\1\5\2\uffff\1\4",
            "",
            ""
    };
    static final char[] dfa_257 = DFA.unpackEncodedStringToUnsignedChars(dfa_257s);
    static final char[] dfa_258 = DFA.unpackEncodedStringToUnsignedChars(dfa_258s);
    static final short[] dfa_259 = DFA.unpackEncodedString(dfa_259s);
    static final short[][] dfa_260 = unpackEncodedStringArray(dfa_260s);

    class DFA242 extends DFA {

        public DFA242(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 242;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_257;
            this.max = dfa_258;
            this.accept = dfa_259;
            this.special = dfa_96;
            this.transition = dfa_260;
        }
        public String getDescription() {
            return "11515:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_261s = "\1\144\12\uffff";
    static final String dfa_262s = "\1\u00fd\12\uffff";
    static final String dfa_263s = "\1\uffff\1\5\1\1\1\2\1\3\6\4";
    static final String dfa_264s = "\1\0\12\uffff}>";
    static final String[] dfa_265s = {
            "\1\1\107\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\1\12\17\uffff\1\1\20\uffff\4\1\5\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_261 = DFA.unpackEncodedStringToUnsignedChars(dfa_261s);
    static final char[] dfa_262 = DFA.unpackEncodedStringToUnsignedChars(dfa_262s);
    static final short[] dfa_263 = DFA.unpackEncodedString(dfa_263s);
    static final short[] dfa_264 = DFA.unpackEncodedString(dfa_264s);
    static final short[][] dfa_265 = unpackEncodedStringArray(dfa_265s);

    class DFA248 extends DFA {

        public DFA248(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 248;
            this.eot = dfa_46;
            this.eof = dfa_46;
            this.min = dfa_261;
            this.max = dfa_262;
            this.accept = dfa_263;
            this.special = dfa_264;
            this.transition = dfa_265;
        }
        public String getDescription() {
            return "()* loopback of 11606:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) | ( (lv_attributeSpecifier_8_0= 'rescaling' ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA248_0 = input.LA(1);

                         
                        int index248_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA248_0==100||(LA248_0>=175 && LA248_0<=176)||LA248_0==196||(LA248_0>=213 && LA248_0<=216)||(LA248_0>=222 && LA248_0<=251)) ) {s = 1;}

                        else if ( LA248_0 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA248_0 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA248_0 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA248_0 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA248_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA248_0 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA248_0 == 252 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA248_0 == 253 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA248_0 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                         
                        input.seek(index248_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 248, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_266s = "\102\uffff";
    static final String dfa_267s = "\1\1\101\uffff";
    static final String dfa_268s = "\1\4\15\uffff\1\4\7\uffff\1\4\53\uffff";
    static final String dfa_269s = "\1\u00d3\15\uffff\1\u00cf\7\uffff\1\u00cf\53\uffff";
    static final String dfa_270s = "\1\uffff\1\30\1\1\2\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\uffff\1\15\1\16\1\17\1\20\1\21\1\22\1\24\1\uffff\1\26\46\27\2\23\1\14\1\25";
    static final String dfa_271s = "\1\0\15\uffff\1\1\7\uffff\1\2\53\uffff}>";
    static final String[] dfa_272s = {
            "\1\30\1\31\1\2\4\uffff\1\32\2\uffff\1\33\6\uffff\1\1\22\uffff\1\1\1\uffff\1\27\120\uffff\1\1\71\uffff\1\3\1\4\2\uffff\1\5\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\2\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\5\uffff\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\46\1\45\1\41\2\uffff\1\50\1\40\1\47\1\uffff\1\44\31\uffff\1\75\57\uffff\1\35\16\uffff\1\76\15\uffff\1\77\25\uffff\1\51\1\52\7\uffff\1\42\1\43\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\uffff\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\33\uffff\1\100\11\uffff\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\46\1\45\1\41\2\uffff\1\50\1\40\1\47\1\uffff\1\44\31\uffff\1\75\57\uffff\1\35\62\uffff\1\51\1\52\7\uffff\1\42\1\43\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\uffff\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\21\uffff\1\101\23\uffff\1\36\1\37",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_266 = DFA.unpackEncodedString(dfa_266s);
    static final short[] dfa_267 = DFA.unpackEncodedString(dfa_267s);
    static final char[] dfa_268 = DFA.unpackEncodedStringToUnsignedChars(dfa_268s);
    static final char[] dfa_269 = DFA.unpackEncodedStringToUnsignedChars(dfa_269s);
    static final short[] dfa_270 = DFA.unpackEncodedString(dfa_270s);
    static final short[] dfa_271 = DFA.unpackEncodedString(dfa_271s);
    static final short[][] dfa_272 = unpackEncodedStringArray(dfa_272s);

    class DFA284 extends DFA {

        public DFA284(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 284;
            this.eot = dfa_266;
            this.eof = dfa_267;
            this.min = dfa_268;
            this.max = dfa_269;
            this.accept = dfa_270;
            this.special = dfa_271;
            this.transition = dfa_272;
        }
        public String getDescription() {
            return "()* loopback of 12064:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' | ( (lv_alias_13_0= 'equals' ) ) ) ( (lv_coreConcept_14_0= 'core' ) )? ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'defines' ( (otherlv_20= 'authority' ( ( (lv_definedAuthority_21_1= RULE_UPPERCASE_ID | lv_definedAuthority_21_2= RULE_UPPERCASE_PATH ) ) ) ) | ( (lv_upperConcept_22_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'requires' ( (lv_requirements_24_0= ruleIdentityRequirement ) ) (otherlv_25= ',' ( (lv_requirements_26_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'describes' ( (lv_describedQuality_28_0= ruleConceptDeclaration ) ) (otherlv_29= 'as' ( (lv_descriptionConstraints_30_0= ruleDescriptionConstraints ) ) )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'increases' otherlv_32= 'with' ( (lv_describedProportionality_33_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_34= 'decreases' otherlv_35= 'with' ( (lv_describedInverseProportionalityQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'marks' ( (lv_describedNonzeroQuality_38_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'classifies' ( (lv_classifiesQuality_40_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_41= 'discretizes' ( (lv_discretizesQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'inherits' ( (lv_actuallyInheritedTraits_44_0= ruleConceptDeclaration ) ) (otherlv_45= ',' ( (lv_actuallyInheritedTraits_46_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'has' otherlv_48= 'role' ( (lv_roles_49_0= ruleConceptDeclaration ) ) (otherlv_50= ',' ( (lv_roles_51_0= ruleConceptDeclaration ) ) )* (otherlv_52= 'targeting' ( (lv_targetObservables_53_0= ruleConceptDeclaration ) ) (otherlv_54= ',' ( (lv_targetObservables_55_0= ruleConceptDeclaration ) ) )* )? (otherlv_56= 'in' ( (lv_restrictedObservables_57_0= ruleConceptDeclaration ) ) (otherlv_58= ',' ( (lv_restrictedObservables_59_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_60= 'confers' ( (lv_conferredTraits_61_0= ruleConceptDeclaration ) ) (otherlv_62= ',' ( (lv_conferredTraits_63_0= ruleConceptDeclaration ) ) )* (otherlv_64= 'to' ( (lv_conferredTargets_65_0= ruleConceptDeclaration ) ) (otherlv_66= ',' ( (lv_conferredTargets_67_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_68= 'emerges' otherlv_69= 'from' ( (lv_emergenceTriggers_70_0= ruleConceptDeclaration ) ) (otherlv_71= ',' ( (lv_emergenceTriggers_72_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_73= 'creates' ( (lv_creates_74_0= ruleConceptDeclaration ) ) (otherlv_75= ',' ( (lv_creates_76_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_77= 'applies' otherlv_78= 'to' ( (lv_traitTargets_79_0= ruleApplicableTarget ) ) (otherlv_80= ',' ( (lv_traitTargets_81_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_82= 'links' ( (lv_domains_83_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_84= 'to' ) ( (lv_ranges_85_0= ruleSimpleConceptDeclaration ) ) (otherlv_86= ',' ( (lv_domains_87_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_88= 'to' ) ( (lv_ranges_89_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_90= 'affects' ( (lv_qualitiesAffected_91_0= ruleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_qualitiesAffected_93_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_94= 'has' ( (lv_disjoint_95_0= 'disjoint' ) )? otherlv_96= 'children' ( (lv_children_97_0= ruleChildConcept ) ) (otherlv_98= ',' ( (lv_children_99_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_100= 'implies' ( (lv_implications_101_0= ruleImplication ) ) (otherlv_102= ',' ( (lv_implications_103_0= ruleImplication ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_104= 'uses' otherlv_105= 'authority' ( ( (lv_authorities_106_1= RULE_UPPERCASE_ID | lv_authorities_106_2= RULE_UPPERCASE_PATH ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_107= 'metadata' ( (lv_metadata_108_0= ruleMap ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+ ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA284_0 = input.LA(1);

                         
                        int index284_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA284_0==EOF||LA284_0==21||LA284_0==40||LA284_0==123) ) {s = 1;}

                        else if ( LA284_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA284_0 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA284_0 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA284_0 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA284_0 == 187 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 6;}

                        else if ( LA284_0 == 188 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 7;}

                        else if ( LA284_0 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 8;}

                        else if ( LA284_0 == 190 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 9;}

                        else if ( LA284_0 == 191 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 10;}

                        else if ( LA284_0 == 192 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 11;}

                        else if ( LA284_0 == 193 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 12;}

                        else if ( LA284_0 == 194 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 13;}

                        else if ( (LA284_0==195) ) {s = 14;}

                        else if ( LA284_0 == 198 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 15;}

                        else if ( LA284_0 == 199 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 16;}

                        else if ( LA284_0 == 200 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 17;}

                        else if ( LA284_0 == 201 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 18;}

                        else if ( LA284_0 == 202 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 19;}

                        else if ( LA284_0 == 203 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 20;}

                        else if ( LA284_0 == 204 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 21;}

                        else if ( (LA284_0==205) ) {s = 22;}

                        else if ( LA284_0 == 42 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 23;}

                        else if ( LA284_0 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 24;}

                        else if ( LA284_0 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 25;}

                        else if ( LA284_0 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 26;}

                        else if ( LA284_0 == RULE_BACKCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 27;}

                        else if ( LA284_0 == 211 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 28;}

                         
                        input.seek(index284_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA284_14 = input.LA(1);

                         
                        int index284_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA284_14 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 29;}

                        else if ( LA284_14 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 30;}

                        else if ( LA284_14 == 207 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 31;}

                        else if ( LA284_14 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 32;}

                        else if ( LA284_14 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 33;}

                        else if ( LA284_14 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 34;}

                        else if ( LA284_14 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 35;}

                        else if ( LA284_14 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 36;}

                        else if ( LA284_14 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 37;}

                        else if ( LA284_14 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 38;}

                        else if ( LA284_14 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 39;}

                        else if ( LA284_14 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 40;}

                        else if ( LA284_14 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 41;}

                        else if ( LA284_14 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 42;}

                        else if ( LA284_14 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 43;}

                        else if ( LA284_14 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 44;}

                        else if ( LA284_14 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 45;}

                        else if ( LA284_14 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 46;}

                        else if ( LA284_14 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 47;}

                        else if ( LA284_14 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 48;}

                        else if ( LA284_14 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 49;}

                        else if ( LA284_14 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 50;}

                        else if ( LA284_14 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 51;}

                        else if ( LA284_14 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 52;}

                        else if ( LA284_14 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 53;}

                        else if ( LA284_14 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 54;}

                        else if ( LA284_14 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 55;}

                        else if ( LA284_14 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 56;}

                        else if ( LA284_14 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 57;}

                        else if ( LA284_14 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 58;}

                        else if ( LA284_14 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 59;}

                        else if ( LA284_14 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 60;}

                        else if ( LA284_14 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 61;}

                        else if ( LA284_14 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 62;}

                        else if ( LA284_14 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 63;}

                        else if ( LA284_14 == 196 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 64;}

                         
                        input.seek(index284_14);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA284_22 = input.LA(1);

                         
                        int index284_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA284_22 == 186 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 65;}

                        else if ( LA284_22 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 29;}

                        else if ( LA284_22 == 206 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 30;}

                        else if ( LA284_22 == 207 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 31;}

                        else if ( LA284_22 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 32;}

                        else if ( LA284_22 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 33;}

                        else if ( LA284_22 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 34;}

                        else if ( LA284_22 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 35;}

                        else if ( LA284_22 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 36;}

                        else if ( LA284_22 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 37;}

                        else if ( LA284_22 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 38;}

                        else if ( LA284_22 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 39;}

                        else if ( LA284_22 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 40;}

                        else if ( LA284_22 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 41;}

                        else if ( LA284_22 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 42;}

                        else if ( LA284_22 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 43;}

                        else if ( LA284_22 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 44;}

                        else if ( LA284_22 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 45;}

                        else if ( LA284_22 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 46;}

                        else if ( LA284_22 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 47;}

                        else if ( LA284_22 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 48;}

                        else if ( LA284_22 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 49;}

                        else if ( LA284_22 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 50;}

                        else if ( LA284_22 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 51;}

                        else if ( LA284_22 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 52;}

                        else if ( LA284_22 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 53;}

                        else if ( LA284_22 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 54;}

                        else if ( LA284_22 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 55;}

                        else if ( LA284_22 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 56;}

                        else if ( LA284_22 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 57;}

                        else if ( LA284_22 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 58;}

                        else if ( LA284_22 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 59;}

                        else if ( LA284_22 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 60;}

                        else if ( LA284_22 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 61;}

                         
                        input.seek(index284_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 284, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_273s = "\1\1\11\uffff";
    static final String dfa_274s = "\1\4\1\uffff\7\0\1\uffff";
    static final String dfa_275s = "\1\u00d3\1\uffff\7\0\1\uffff";
    static final String dfa_276s = "\1\uffff\1\2\7\uffff\1\1";
    static final String dfa_277s = "\2\uffff\1\3\1\2\1\4\1\5\1\0\1\1\1\6\1\uffff}>";
    static final String[] dfa_278s = {
            "\1\4\1\5\1\1\4\uffff\1\6\2\uffff\1\7\6\uffff\1\1\22\uffff\1\1\1\uffff\1\1\120\uffff\1\1\71\uffff\2\1\2\uffff\1\1\1\uffff\10\1\1\2\2\uffff\7\1\1\3\5\uffff\1\10",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_273 = DFA.unpackEncodedString(dfa_273s);
    static final char[] dfa_274 = DFA.unpackEncodedStringToUnsignedChars(dfa_274s);
    static final char[] dfa_275 = DFA.unpackEncodedStringToUnsignedChars(dfa_275s);
    static final short[] dfa_276 = DFA.unpackEncodedString(dfa_276s);
    static final short[] dfa_277 = DFA.unpackEncodedString(dfa_277s);
    static final short[][] dfa_278 = unpackEncodedStringArray(dfa_278s);

    class DFA283 extends DFA {

        public DFA283(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 283;
            this.eot = dfa_111;
            this.eof = dfa_273;
            this.min = dfa_274;
            this.max = dfa_275;
            this.accept = dfa_276;
            this.special = dfa_277;
            this.transition = dfa_278;
        }
        public String getDescription() {
            return "()+ loopback of 13526:9: ({...}? => ( (lv_properties_109_0= rulePropertyStatement ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA283_6 = input.LA(1);

                         
                        int index283_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA283_7 = input.LA(1);

                         
                        int index283_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA283_3 = input.LA(1);

                         
                        int index283_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA283_2 = input.LA(1);

                         
                        int index283_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_2);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA283_4 = input.LA(1);

                         
                        int index283_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA283_5 = input.LA(1);

                         
                        int index283_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA283_8 = input.LA(1);

                         
                        int index283_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( ((synpred507_InternalKim()&&(true))) ) {s = 9;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index283_8);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 283, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_279s = "\1\4\4\uffff\34\0\1\uffff";
    static final String dfa_280s = "\1\u00cf\4\uffff\34\0\1\uffff";
    static final String dfa_281s = "\1\uffff\1\1\37\uffff\1\2";
    static final String dfa_282s = "\5\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\uffff}>";
    static final String[] dfa_283s = {
            "\1\11\1\10\3\uffff\1\13\1\1\1\12\1\uffff\1\7\31\uffff\1\40\57\uffff\1\1\62\uffff\1\14\1\15\7\uffff\1\5\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\45\uffff\2\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final char[] dfa_279 = DFA.unpackEncodedStringToUnsignedChars(dfa_279s);
    static final char[] dfa_280 = DFA.unpackEncodedStringToUnsignedChars(dfa_280s);
    static final short[] dfa_281 = DFA.unpackEncodedString(dfa_281s);
    static final short[] dfa_282 = DFA.unpackEncodedString(dfa_282s);
    static final short[][] dfa_283 = unpackEncodedStringArray(dfa_283s);

    class DFA289 extends DFA {

        public DFA289(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 289;
            this.eot = dfa_118;
            this.eof = dfa_118;
            this.min = dfa_279;
            this.max = dfa_280;
            this.accept = dfa_281;
            this.special = dfa_282;
            this.transition = dfa_283;
        }
        public String getDescription() {
            return "13710:3: ( (lv_quantifier_0_0= ruleQuantification ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA289_5 = input.LA(1);

                         
                        int index289_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_5);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA289_6 = input.LA(1);

                         
                        int index289_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_6);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA289_7 = input.LA(1);

                         
                        int index289_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_7);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA289_8 = input.LA(1);

                         
                        int index289_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_8);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA289_9 = input.LA(1);

                         
                        int index289_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_9);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA289_10 = input.LA(1);

                         
                        int index289_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_10);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA289_11 = input.LA(1);

                         
                        int index289_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_11);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA289_12 = input.LA(1);

                         
                        int index289_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_12);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA289_13 = input.LA(1);

                         
                        int index289_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_13);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA289_14 = input.LA(1);

                         
                        int index289_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_14);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA289_15 = input.LA(1);

                         
                        int index289_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_15);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA289_16 = input.LA(1);

                         
                        int index289_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_16);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA289_17 = input.LA(1);

                         
                        int index289_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_17);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA289_18 = input.LA(1);

                         
                        int index289_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_18);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA289_19 = input.LA(1);

                         
                        int index289_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_19);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA289_20 = input.LA(1);

                         
                        int index289_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_20);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA289_21 = input.LA(1);

                         
                        int index289_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_21);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA289_22 = input.LA(1);

                         
                        int index289_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_22);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA289_23 = input.LA(1);

                         
                        int index289_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_23);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA289_24 = input.LA(1);

                         
                        int index289_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_24);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA289_25 = input.LA(1);

                         
                        int index289_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_25);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA289_26 = input.LA(1);

                         
                        int index289_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_26);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA289_27 = input.LA(1);

                         
                        int index289_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_27);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA289_28 = input.LA(1);

                         
                        int index289_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_28);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA289_29 = input.LA(1);

                         
                        int index289_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_29);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA289_30 = input.LA(1);

                         
                        int index289_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_30);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA289_31 = input.LA(1);

                         
                        int index289_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_31);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA289_32 = input.LA(1);

                         
                        int index289_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred513_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 33;}

                         
                        input.seek(index289_32);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 289, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_284s = "\156\uffff";
    static final String dfa_285s = "\1\2\155\uffff";
    static final String dfa_286s = "\1\4\1\0\154\uffff";
    static final String dfa_287s = "\1\u0100\1\0\154\uffff";
    static final String dfa_288s = "\2\uffff\1\2\152\uffff\1\1";
    static final String dfa_289s = "\1\uffff\1\0\154\uffff}>";
    static final String[] dfa_290s = {
            "\3\2\1\uffff\6\2\1\uffff\1\2\6\uffff\4\2\2\uffff\3\2\10\uffff\1\1\16\uffff\2\2\23\uffff\6\2\15\uffff\3\2\3\uffff\2\2\7\uffff\1\2\4\uffff\1\2\2\uffff\1\2\3\uffff\1\2\1\uffff\1\2\16\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\14\2\3\uffff\11\2\17\uffff\1\2\20\uffff\5\2\4\uffff\40\2\1\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_284 = DFA.unpackEncodedString(dfa_284s);
    static final short[] dfa_285 = DFA.unpackEncodedString(dfa_285s);
    static final char[] dfa_286 = DFA.unpackEncodedStringToUnsignedChars(dfa_286s);
    static final char[] dfa_287 = DFA.unpackEncodedStringToUnsignedChars(dfa_287s);
    static final short[] dfa_288 = DFA.unpackEncodedString(dfa_288s);
    static final short[] dfa_289 = DFA.unpackEncodedString(dfa_289s);
    static final short[][] dfa_290 = unpackEncodedStringArray(dfa_290s);

    class DFA309 extends DFA {

        public DFA309(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 309;
            this.eot = dfa_284;
            this.eof = dfa_285;
            this.min = dfa_286;
            this.max = dfa_287;
            this.accept = dfa_288;
            this.special = dfa_289;
            this.transition = dfa_290;
        }
        public String getDescription() {
            return "14499:3: ( ( ( '(' )=>otherlv_1= '(' ) ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA309_1 = input.LA(1);

                         
                        int index309_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 109;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index309_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 309, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_291s = "\64\uffff";
    static final String dfa_292s = "\1\4\60\0\3\uffff";
    static final String dfa_293s = "\1\u0100\60\0\3\uffff";
    static final String dfa_294s = "\61\uffff\1\2\1\uffff\1\1";
    static final String dfa_295s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\3\uffff}>";
    static final String[] dfa_296s = {
            "\1\11\1\10\1\44\1\uffff\1\47\1\13\1\41\1\12\1\uffff\1\7\2\uffff\1\50\13\uffff\1\61\1\45\1\46\10\uffff\1\40\1\61\6\uffff\1\54\6\uffff\1\60\1\51\31\uffff\1\52\1\57\1\56\1\53\2\uffff\1\4\1\uffff\1\55\33\uffff\1\2\6\uffff\1\3\15\uffff\1\14\1\15\7\uffff\1\5\1\6\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\uffff\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\60\uffff\1\1\45\uffff\1\42\1\43",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_291 = DFA.unpackEncodedString(dfa_291s);
    static final char[] dfa_292 = DFA.unpackEncodedStringToUnsignedChars(dfa_292s);
    static final char[] dfa_293 = DFA.unpackEncodedStringToUnsignedChars(dfa_293s);
    static final short[] dfa_294 = DFA.unpackEncodedString(dfa_294s);
    static final short[] dfa_295 = DFA.unpackEncodedString(dfa_295s);
    static final short[][] dfa_296 = unpackEncodedStringArray(dfa_296s);

    class DFA310 extends DFA {

        public DFA310(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 310;
            this.eot = dfa_291;
            this.eof = dfa_291;
            this.min = dfa_292;
            this.max = dfa_293;
            this.accept = dfa_294;
            this.special = dfa_295;
            this.transition = dfa_296;
        }
        public String getDescription() {
            return "14564:3: ( (lv_contents_2_0= ruleValueWithIdAndConcept ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA310_1 = input.LA(1);

                         
                        int index310_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA310_2 = input.LA(1);

                         
                        int index310_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA310_3 = input.LA(1);

                         
                        int index310_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA310_4 = input.LA(1);

                         
                        int index310_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA310_5 = input.LA(1);

                         
                        int index310_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA310_6 = input.LA(1);

                         
                        int index310_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA310_7 = input.LA(1);

                         
                        int index310_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA310_8 = input.LA(1);

                         
                        int index310_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA310_9 = input.LA(1);

                         
                        int index310_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA310_10 = input.LA(1);

                         
                        int index310_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA310_11 = input.LA(1);

                         
                        int index310_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA310_12 = input.LA(1);

                         
                        int index310_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA310_13 = input.LA(1);

                         
                        int index310_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA310_14 = input.LA(1);

                         
                        int index310_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA310_15 = input.LA(1);

                         
                        int index310_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA310_16 = input.LA(1);

                         
                        int index310_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA310_17 = input.LA(1);

                         
                        int index310_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA310_18 = input.LA(1);

                         
                        int index310_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA310_19 = input.LA(1);

                         
                        int index310_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA310_20 = input.LA(1);

                         
                        int index310_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA310_21 = input.LA(1);

                         
                        int index310_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA310_22 = input.LA(1);

                         
                        int index310_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA310_23 = input.LA(1);

                         
                        int index310_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA310_24 = input.LA(1);

                         
                        int index310_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA310_25 = input.LA(1);

                         
                        int index310_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA310_26 = input.LA(1);

                         
                        int index310_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA310_27 = input.LA(1);

                         
                        int index310_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA310_28 = input.LA(1);

                         
                        int index310_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_28);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA310_29 = input.LA(1);

                         
                        int index310_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_29);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA310_30 = input.LA(1);

                         
                        int index310_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_30);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA310_31 = input.LA(1);

                         
                        int index310_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_31);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA310_32 = input.LA(1);

                         
                        int index310_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_32);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA310_33 = input.LA(1);

                         
                        int index310_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_33);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA310_34 = input.LA(1);

                         
                        int index310_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_34);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA310_35 = input.LA(1);

                         
                        int index310_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_35);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA310_36 = input.LA(1);

                         
                        int index310_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_36);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA310_37 = input.LA(1);

                         
                        int index310_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_37);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA310_38 = input.LA(1);

                         
                        int index310_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_38);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA310_39 = input.LA(1);

                         
                        int index310_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_39);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA310_40 = input.LA(1);

                         
                        int index310_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_40);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA310_41 = input.LA(1);

                         
                        int index310_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_41);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA310_42 = input.LA(1);

                         
                        int index310_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_42);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA310_43 = input.LA(1);

                         
                        int index310_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_43);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA310_44 = input.LA(1);

                         
                        int index310_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_44);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA310_45 = input.LA(1);

                         
                        int index310_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_45);
                        if ( s>=0 ) return s;
                        break;
                    case 45 : 
                        int LA310_46 = input.LA(1);

                         
                        int index310_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_46);
                        if ( s>=0 ) return s;
                        break;
                    case 46 : 
                        int LA310_47 = input.LA(1);

                         
                        int index310_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_47);
                        if ( s>=0 ) return s;
                        break;
                    case 47 : 
                        int LA310_48 = input.LA(1);

                         
                        int index310_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred543_InternalKim()) ) {s = 51;}

                        else if ( (true) ) {s = 49;}

                         
                        input.seek(index310_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 310, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_297s = "\3\uffff\1\12\2\uffff\1\12\5\uffff\1\12\2\uffff\1\12";
    static final String dfa_298s = "\1\6\2\12\1\4\2\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_299s = "\1\u0100\2\12\1\u0103\2\uffff\1\u0103\1\12\2\u0100\2\uffff\1\u0103\2\12\1\u0100";
    static final String dfa_300s = "\4\uffff\1\3\1\4\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_301s = "\20\uffff}>";
    static final String[] dfa_302s = {
            "\1\4\3\uffff\1\3\22\uffff\2\5\u00e0\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\7\12\1\uffff\1\12\1\13\5\12\1\uffff\1\12\2\uffff\1\12\5\uffff\3\12\3\uffff\3\12\5\uffff\6\12\10\uffff\15\12\17\uffff\1\12\3\uffff\1\7\2\uffff\15\12\11\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\45\uffff\2\12\1\6\1\10\1\11",
            "",
            "",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\7\12\1\uffff\1\12\1\13\5\12\1\uffff\1\12\2\uffff\1\12\5\uffff\3\12\3\uffff\3\12\5\uffff\6\12\10\uffff\15\12\17\uffff\1\12\3\uffff\1\7\2\uffff\15\12\11\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\45\uffff\2\12\1\uffff\1\10\1\11",
            "\1\14",
            "\1\17\u00f4\uffff\1\15\1\16",
            "\1\17\u00f4\uffff\1\15\1\16",
            "",
            "",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\7\12\1\uffff\1\12\1\13\5\12\1\uffff\1\12\2\uffff\1\12\5\uffff\3\12\3\uffff\3\12\5\uffff\6\12\10\uffff\15\12\17\uffff\1\12\6\uffff\15\12\11\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\45\uffff\2\12\1\uffff\1\10\1\11",
            "\1\17",
            "\1\17",
            "\3\12\1\uffff\4\12\1\uffff\1\12\2\uffff\1\12\4\uffff\1\12\4\uffff\1\12\1\uffff\7\12\1\uffff\1\12\1\13\5\12\1\uffff\1\12\2\uffff\1\12\5\uffff\3\12\3\uffff\3\12\5\uffff\6\12\10\uffff\15\12\17\uffff\1\12\6\uffff\15\12\11\uffff\2\12\6\uffff\3\12\1\uffff\6\12\1\uffff\14\12\60\uffff\1\12\45\uffff\2\12"
    };
    static final short[] dfa_297 = DFA.unpackEncodedString(dfa_297s);
    static final char[] dfa_298 = DFA.unpackEncodedStringToUnsignedChars(dfa_298s);
    static final char[] dfa_299 = DFA.unpackEncodedStringToUnsignedChars(dfa_299s);
    static final short[] dfa_300 = DFA.unpackEncodedString(dfa_300s);
    static final short[] dfa_301 = DFA.unpackEncodedString(dfa_301s);
    static final short[][] dfa_302 = unpackEncodedStringArray(dfa_302s);

    class DFA314 extends DFA {

        public DFA314(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 314;
            this.eot = dfa_87;
            this.eof = dfa_297;
            this.min = dfa_298;
            this.max = dfa_299;
            this.accept = dfa_300;
            this.special = dfa_301;
            this.transition = dfa_302;
        }
        public String getDescription() {
            return "14632:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
    }
    static final String dfa_303s = "\22\uffff";
    static final String dfa_304s = "\3\uffff\1\14\4\uffff\1\14\5\uffff\1\14\2\uffff\1\14";
    static final String dfa_305s = "\1\6\2\12\1\4\4\uffff\1\4\3\12\2\uffff\1\4\2\12\1\4";
    static final String dfa_306s = "\1\u0100\2\12\1\u0103\4\uffff\1\u0103\1\12\2\u0100\2\uffff\1\u0103\2\12\1\u0100";
    static final String dfa_307s = "\4\uffff\1\3\1\4\1\5\1\6\4\uffff\1\2\1\1\4\uffff";
    static final String dfa_308s = "\22\uffff}>";
    static final String[] dfa_309s = {
            "\1\4\3\uffff\1\3\1\uffff\1\6\17\uffff\1\7\2\5\u00e0\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\14\1\uffff\6\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\30\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\45\uffff\2\14\1\10\1\12\1\13",
            "",
            "",
            "",
            "",
            "\3\14\1\uffff\6\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\3\uffff\1\11\30\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\45\uffff\2\14\1\uffff\1\12\1\13",
            "\1\16",
            "\1\21\u00f4\uffff\1\17\1\20",
            "\1\21\u00f4\uffff\1\17\1\20",
            "",
            "",
            "\3\14\1\uffff\6\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\34\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\45\uffff\2\14\1\uffff\1\12\1\13",
            "\1\21",
            "\1\21",
            "\3\14\1\uffff\6\14\7\uffff\1\14\4\uffff\1\14\1\uffff\3\14\1\uffff\3\14\2\uffff\1\15\5\14\6\uffff\2\14\3\uffff\2\14\3\uffff\3\14\5\uffff\6\14\1\uffff\1\14\42\uffff\1\14\34\uffff\2\14\7\uffff\2\14\1\uffff\6\14\1\uffff\14\14\60\uffff\1\14\45\uffff\2\14"
    };

    static final short[] dfa_303 = DFA.unpackEncodedString(dfa_303s);
    static final short[] dfa_304 = DFA.unpackEncodedString(dfa_304s);
    static final char[] dfa_305 = DFA.unpackEncodedStringToUnsignedChars(dfa_305s);
    static final char[] dfa_306 = DFA.unpackEncodedStringToUnsignedChars(dfa_306s);
    static final short[] dfa_307 = DFA.unpackEncodedString(dfa_307s);
    static final short[] dfa_308 = DFA.unpackEncodedString(dfa_308s);
    static final short[][] dfa_309 = unpackEncodedStringArray(dfa_309s);

    class DFA316 extends DFA {

        public DFA316(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 316;
            this.eot = dfa_303;
            this.eof = dfa_304;
            this.min = dfa_305;
            this.max = dfa_306;
            this.accept = dfa_307;
            this.special = dfa_308;
            this.transition = dfa_309;
        }
        public String getDescription() {
            return "14769:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_310s = "\1\uffff\3\5\4\uffff\3\5";
    static final String dfa_311s = "\1\4\3\34\1\57\1\uffff\1\4\1\uffff\3\34";
    static final String dfa_312s = "\1\u0100\4\u00da\1\uffff\1\13\1\uffff\3\u00da";
    static final String dfa_313s = "\5\uffff\1\2\1\uffff\1\1\3\uffff";
    static final String[] dfa_314s = {
            "\1\1\1\2\1\5\1\uffff\3\5\1\3\1\uffff\1\5\2\uffff\1\5\14\uffff\2\5\10\uffff\1\5\7\uffff\1\5\6\uffff\2\5\31\uffff\4\5\2\uffff\1\5\1\uffff\1\5\33\uffff\1\5\6\uffff\1\5\15\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\12\5\1\4\1\5\60\uffff\1\5\45\uffff\2\5",
            "\1\5\12\uffff\2\5\6\uffff\1\7\76\uffff\1\5\2\uffff\1\6\150\uffff\1\7",
            "\1\5\12\uffff\2\5\6\uffff\1\7\76\uffff\1\5\2\uffff\1\6\150\uffff\1\7",
            "\1\5\12\uffff\2\5\6\uffff\1\7\76\uffff\1\5\2\uffff\1\6\150\uffff\1\7",
            "\1\7\121\uffff\1\5\130\uffff\1\7",
            "",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\5\12\uffff\2\5\6\uffff\1\7\76\uffff\1\5\2\uffff\1\6\150\uffff\1\7",
            "\1\5\12\uffff\2\5\6\uffff\1\7\76\uffff\1\5\2\uffff\1\6\150\uffff\1\7",
            "\1\5\12\uffff\2\5\6\uffff\1\7\76\uffff\1\5\2\uffff\1\6\150\uffff\1\7"
    };
    static final short[] dfa_310 = DFA.unpackEncodedString(dfa_310s);
    static final char[] dfa_311 = DFA.unpackEncodedStringToUnsignedChars(dfa_311s);
    static final char[] dfa_312 = DFA.unpackEncodedStringToUnsignedChars(dfa_312s);
    static final short[] dfa_313 = DFA.unpackEncodedString(dfa_313s);
    static final short[][] dfa_314 = unpackEncodedStringArray(dfa_314s);

    class DFA325 extends DFA {

        public DFA325(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 325;
            this.eot = dfa_46;
            this.eof = dfa_310;
            this.min = dfa_311;
            this.max = dfa_312;
            this.accept = dfa_313;
            this.special = dfa_96;
            this.transition = dfa_314;
        }
        public String getDescription() {
            return "15194:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ( ( ( ',' )=>otherlv_4= ',' ) ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) ) )* ) )";
        }
    }
    static final String dfa_315s = "\2\uffff\3\1\3\uffff\3\1";
    static final String dfa_316s = "\1\4\1\uffff\3\34\1\57\1\4\1\uffff\3\34";
    static final String dfa_317s = "\1\u0100\1\uffff\4\u00da\1\13\1\uffff\3\u00da";
    static final String dfa_318s = "\1\uffff\1\1\5\uffff\1\2\3\uffff";
    static final String[] dfa_319s = {
            "\1\3\1\2\1\1\1\uffff\3\1\1\4\1\uffff\1\1\2\uffff\1\1\14\uffff\2\1\10\uffff\1\1\7\uffff\1\1\6\uffff\2\1\31\uffff\4\1\2\uffff\1\1\1\uffff\1\1\33\uffff\1\1\6\uffff\1\1\15\uffff\2\1\7\uffff\2\1\1\uffff\6\1\1\uffff\12\1\1\5\1\1\60\uffff\1\1\45\uffff\2\1",
            "",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\150\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\150\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\150\uffff\1\7",
            "\1\7\121\uffff\1\1\130\uffff\1\7",
            "\1\10\1\11\5\uffff\1\12",
            "",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\150\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\150\uffff\1\7",
            "\1\1\12\uffff\2\1\6\uffff\1\7\76\uffff\1\1\2\uffff\1\6\150\uffff\1\7"
    };
    static final short[] dfa_315 = DFA.unpackEncodedString(dfa_315s);
    static final char[] dfa_316 = DFA.unpackEncodedStringToUnsignedChars(dfa_316s);
    static final char[] dfa_317 = DFA.unpackEncodedStringToUnsignedChars(dfa_317s);
    static final short[] dfa_318 = DFA.unpackEncodedString(dfa_318s);
    static final short[][] dfa_319 = unpackEncodedStringArray(dfa_319s);

    class DFA323 extends DFA {

        public DFA323(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 323;
            this.eot = dfa_46;
            this.eof = dfa_315;
            this.min = dfa_316;
            this.max = dfa_317;
            this.accept = dfa_318;
            this.special = dfa_96;
            this.transition = dfa_319;
        }
        public String getDescription() {
            return "15273:5: ( ( (lv_singleValue_5_0= ruleValueWithIdAndConcept ) ) | ( (lv_pairs_6_0= ruleKeyValuePair ) ) )";
        }
    }
    static final String dfa_320s = "\1\4\7\uffff\4\0\24\uffff\4\0\22\uffff";
    static final String dfa_321s = "\1\u0100\7\uffff\4\0\24\uffff\4\0\22\uffff";
    static final String dfa_322s = "\1\uffff\1\1\1\2\41\uffff\1\5\2\uffff\1\6\1\7\1\11\1\14\5\uffff\1\15\1\3\1\10\1\12\1\4\1\13";
    static final String dfa_323s = "\10\uffff\1\0\1\1\1\2\1\3\24\uffff\1\4\1\5\1\6\1\7\22\uffff}>";
    static final String[] dfa_324s = {
            "\1\11\1\10\1\44\1\uffff\1\47\1\13\1\41\1\12\1\uffff\1\2\2\uffff\1\50\14\uffff\2\44\10\uffff\1\40\7\uffff\1\52\6\uffff\1\60\1\51\31\uffff\4\52\2\uffff\1\2\1\uffff\1\52\33\uffff\1\2\6\uffff\1\2\15\uffff\2\2\7\uffff\2\2\1\uffff\6\2\1\uffff\14\2\60\uffff\1\1\45\uffff\1\42\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_320 = DFA.unpackEncodedStringToUnsignedChars(dfa_320s);
    static final char[] dfa_321 = DFA.unpackEncodedStringToUnsignedChars(dfa_321s);
    static final short[] dfa_322 = DFA.unpackEncodedString(dfa_322s);
    static final short[] dfa_323 = DFA.unpackEncodedString(dfa_323s);
    static final short[][] dfa_324 = unpackEncodedStringArray(dfa_324s);

    class DFA327 extends DFA {

        public DFA327(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 327;
            this.eot = dfa_98;
            this.eof = dfa_98;
            this.min = dfa_320;
            this.max = dfa_321;
            this.accept = dfa_322;
            this.special = dfa_323;
            this.transition = dfa_324;
        }
        public String getDescription() {
            return "15334:2: ( ( (lv_map_0_0= ruleMap ) ) | ( (lv_concept_1_0= ruleSimpleObservableSemantics ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_date_3_0= ruleDate ) ) | ( (lv_literal_4_0= ruleLiteral ) ) | ( (lv_expr_5_0= RULE_EXPR ) ) | ( (lv_templatevar_6_0= RULE_TEMPLATE_VAR ) ) | ( ( (lv_id_7_1= rulePathName | lv_id_7_2= RULE_LOWERCASE_ID | lv_id_7_3= RULE_UPPERCASE_ID | lv_id_7_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_table_8_0= ruleLookupTable ) ) | ( (lv_list_9_0= ruleList ) ) | ( (lv_quantity_10_0= ruleQuantity ) ) | ( ( (lv_op_11_0= ruleREL_OPERATOR ) ) ( (lv_expression_12_0= ruleNumber ) ) ) | ( (lv_null_13_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA327_8 = input.LA(1);

                         
                        int index327_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 2;}

                        else if ( (synpred574_InternalKim()) ) {s = 49;}

                        else if ( (synpred582_InternalKim()) ) {s = 50;}

                         
                        input.seek(index327_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA327_9 = input.LA(1);

                         
                        int index327_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 2;}

                        else if ( (synpred574_InternalKim()) ) {s = 49;}

                        else if ( (synpred582_InternalKim()) ) {s = 50;}

                         
                        input.seek(index327_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA327_10 = input.LA(1);

                         
                        int index327_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 2;}

                        else if ( (synpred574_InternalKim()) ) {s = 49;}

                        else if ( (synpred582_InternalKim()) ) {s = 50;}

                         
                        input.seek(index327_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA327_11 = input.LA(1);

                         
                        int index327_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 2;}

                        else if ( (synpred582_InternalKim()) ) {s = 50;}

                         
                        input.seek(index327_11);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA327_32 = input.LA(1);

                         
                        int index327_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred573_InternalKim()) ) {s = 2;}

                        else if ( (synpred584_InternalKim()) ) {s = 51;}

                         
                        input.seek(index327_32);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA327_33 = input.LA(1);

                         
                        int index327_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred575_InternalKim()) ) {s = 52;}

                        else if ( (synpred576_InternalKim()) ) {s = 36;}

                        else if ( (synpred585_InternalKim()) ) {s = 53;}

                         
                        input.seek(index327_33);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA327_34 = input.LA(1);

                         
                        int index327_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred576_InternalKim()) ) {s = 36;}

                        else if ( (synpred585_InternalKim()) ) {s = 53;}

                         
                        input.seek(index327_34);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA327_35 = input.LA(1);

                         
                        int index327_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred576_InternalKim()) ) {s = 36;}

                        else if ( (synpred585_InternalKim()) ) {s = 53;}

                         
                        input.seek(index327_35);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 327, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_325s = "\24\uffff";
    static final String dfa_326s = "\1\4\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_327s = "\1\u0100\3\0\5\uffff\2\0\11\uffff";
    static final String dfa_328s = "\4\uffff\1\1\6\uffff\1\2\1\3\1\4\1\5\1\6\1\11\1\12\1\7\1\10";
    static final String dfa_329s = "\1\uffff\1\0\1\1\1\2\5\uffff\1\3\1\4\11\uffff}>";
    static final String[] dfa_330s = {
            "\1\11\1\12\1\4\1\uffff\1\14\1\15\1\3\1\13\1\4\17\uffff\3\4\10\uffff\1\16\16\uffff\1\21\1\17\u00a1\uffff\1\20\45\uffff\1\1\1\2",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_325 = DFA.unpackEncodedString(dfa_325s);
    static final char[] dfa_326 = DFA.unpackEncodedStringToUnsignedChars(dfa_326s);
    static final char[] dfa_327 = DFA.unpackEncodedStringToUnsignedChars(dfa_327s);
    static final short[] dfa_328 = DFA.unpackEncodedString(dfa_328s);
    static final short[] dfa_329 = DFA.unpackEncodedString(dfa_329s);
    static final short[][] dfa_330 = unpackEncodedStringArray(dfa_330s);

    class DFA330 extends DFA {

        public DFA330(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 330;
            this.eot = dfa_325;
            this.eof = dfa_325;
            this.min = dfa_326;
            this.max = dfa_327;
            this.accept = dfa_328;
            this.special = dfa_329;
            this.transition = dfa_330;
        }
        public String getDescription() {
            return "15673:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( (lv_language_4_0= RULE_UPPERCASE_ID ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_table_7_0= ruleLookupTable ) ) | ( (lv_quantity_8_0= ruleQuantity ) ) | ( (lv_date_9_0= ruleDate ) ) | ( (lv_map_10_0= ruleMap ) ) | ( (lv_null_11_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA330_1 = input.LA(1);

                         
                        int index330_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred587_InternalKim()) ) {s = 4;}

                        else if ( (synpred596_InternalKim()) ) {s = 18;}

                         
                        input.seek(index330_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA330_2 = input.LA(1);

                         
                        int index330_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred587_InternalKim()) ) {s = 4;}

                        else if ( (synpred596_InternalKim()) ) {s = 18;}

                         
                        input.seek(index330_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA330_3 = input.LA(1);

                         
                        int index330_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred587_InternalKim()) ) {s = 4;}

                        else if ( (synpred596_InternalKim()) ) {s = 18;}

                        else if ( (synpred597_InternalKim()) ) {s = 19;}

                         
                        input.seek(index330_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA330_9 = input.LA(1);

                         
                        int index330_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred588_InternalKim()) ) {s = 11;}

                        else if ( (synpred593_InternalKim()) ) {s = 13;}

                         
                        input.seek(index330_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA330_10 = input.LA(1);

                         
                        int index330_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred588_InternalKim()) ) {s = 11;}

                        else if ( (synpred593_InternalKim()) ) {s = 13;}

                         
                        input.seek(index330_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 330, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_331s = "\34\uffff";
    static final String dfa_332s = "\3\uffff\1\4\2\uffff\2\22\3\uffff\2\4\1\21\7\uffff\1\4\2\uffff\1\4\3\uffff";
    static final String dfa_333s = "\1\4\2\12\1\32\2\uffff\2\32\1\47\1\0\1\uffff\2\32\1\4\2\12\3\uffff\1\4\1\uffff\1\32\2\12\1\32\3\47";
    static final String dfa_334s = "\1\u0100\2\12\1\u0106\2\uffff\3\161\1\0\1\uffff\2\u0103\1\u0107\2\u0100\3\uffff\1\13\1\uffff\1\u0103\2\12\4\161";
    static final String dfa_335s = "\4\uffff\1\1\1\2\4\uffff\1\4\5\uffff\1\6\1\5\1\7\1\uffff\1\3\7\uffff";
    static final String dfa_336s = "\11\uffff\1\0\22\uffff}>";
    static final String[] dfa_337s = {
            "\1\7\1\6\1\4\1\uffff\1\12\1\11\1\3\1\10\1\uffff\1\5\17\uffff\2\4\10\uffff\1\5\142\uffff\2\5\7\uffff\2\5\1\uffff\6\5\1\uffff\14\5\126\uffff\1\1\1\2",
            "\1\13",
            "\1\13",
            "\1\4\12\uffff\1\4\112\uffff\1\21\1\15\u008e\uffff\1\20\1\14\1\16\1\17\3\20",
            "",
            "",
            "\1\22\14\uffff\1\24\106\uffff\1\5\2\uffff\1\23",
            "\1\22\14\uffff\1\24\106\uffff\1\5\2\uffff\1\23",
            "\1\24\106\uffff\1\5\2\uffff\1\23",
            "\1\uffff",
            "",
            "\1\4\12\uffff\1\4\112\uffff\1\21\1\15\u008f\uffff\1\14\1\16\1\17",
            "\1\4\12\uffff\1\4\112\uffff\1\21\1\15\u0090\uffff\1\16\1\17",
            "\2\21\3\uffff\1\21\1\25\3\uffff\1\21\13\uffff\1\21\14\uffff\1\21\4\uffff\1\21\103\uffff\1\21\u0096\uffff\1\21",
            "\1\30\u00f4\uffff\1\26\1\27",
            "\1\30\u00f4\uffff\1\26\1\27",
            "",
            "",
            "",
            "\1\31\1\32\5\uffff\1\33",
            "",
            "\1\4\12\uffff\1\4\112\uffff\2\21\u0090\uffff\1\16\1\17",
            "\1\30",
            "\1\30",
            "\1\4\12\uffff\1\4\112\uffff\2\21",
            "\1\24\106\uffff\1\5\2\uffff\1\23",
            "\1\24\106\uffff\1\5\2\uffff\1\23",
            "\1\24\106\uffff\1\5\2\uffff\1\23"
    };

    static final short[] dfa_331 = DFA.unpackEncodedString(dfa_331s);
    static final short[] dfa_332 = DFA.unpackEncodedString(dfa_332s);
    static final char[] dfa_333 = DFA.unpackEncodedStringToUnsignedChars(dfa_333s);
    static final char[] dfa_334 = DFA.unpackEncodedStringToUnsignedChars(dfa_334s);
    static final short[] dfa_335 = DFA.unpackEncodedString(dfa_335s);
    static final short[] dfa_336 = DFA.unpackEncodedString(dfa_336s);
    static final short[][] dfa_337 = unpackEncodedStringArray(dfa_337s);

    class DFA332 extends DFA {

        public DFA332(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 332;
            this.eot = dfa_331;
            this.eof = dfa_332;
            this.min = dfa_333;
            this.max = dfa_334;
            this.accept = dfa_335;
            this.special = dfa_336;
            this.transition = dfa_337;
        }
        public String getDescription() {
            return "15942:2: ( ( (lv_literal_0_0= ruleLiteral ) ) | ( (lv_concept_1_0= ruleConceptDeclaration ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( (lv_quantity_4_0= ruleQuantity ) ) | ( (lv_date_5_0= ruleDate ) ) | ( ( (lv_id_6_1= RULE_LOWERCASE_ID | lv_id_6_2= RULE_UPPERCASE_ID | lv_id_6_3= RULE_CAMELCASE_ID ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA332_9 = input.LA(1);

                         
                        int index332_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred600_InternalKim()) ) {s = 5;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index332_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 332, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA342 extends DFA {

        public DFA342(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 342;
            this.eot = dfa_138;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "16663:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA342_7 = input.LA(1);

                         
                        int index342_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA342_8 = input.LA(1);

                         
                        int index342_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA342_9 = input.LA(1);

                         
                        int index342_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA342_10 = input.LA(1);

                         
                        int index342_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA342_11 = input.LA(1);

                         
                        int index342_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA342_12 = input.LA(1);

                         
                        int index342_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA342_13 = input.LA(1);

                         
                        int index342_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA342_14 = input.LA(1);

                         
                        int index342_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA342_15 = input.LA(1);

                         
                        int index342_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA342_16 = input.LA(1);

                         
                        int index342_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA342_17 = input.LA(1);

                         
                        int index342_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA342_18 = input.LA(1);

                         
                        int index342_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA342_19 = input.LA(1);

                         
                        int index342_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA342_20 = input.LA(1);

                         
                        int index342_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA342_21 = input.LA(1);

                         
                        int index342_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA342_22 = input.LA(1);

                         
                        int index342_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA342_23 = input.LA(1);

                         
                        int index342_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA342_24 = input.LA(1);

                         
                        int index342_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA342_25 = input.LA(1);

                         
                        int index342_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA342_26 = input.LA(1);

                         
                        int index342_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA342_27 = input.LA(1);

                         
                        int index342_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA342_28 = input.LA(1);

                         
                        int index342_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA342_29 = input.LA(1);

                         
                        int index342_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA342_30 = input.LA(1);

                         
                        int index342_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA342_31 = input.LA(1);

                         
                        int index342_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA342_32 = input.LA(1);

                         
                        int index342_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA342_33 = input.LA(1);

                         
                        int index342_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA342_34 = input.LA(1);

                         
                        int index342_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred648_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index342_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 342, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_338s = "\1\12\1\uffff\1\4\34\uffff\1\25\2\47\34\uffff\3\4\3\47\3\uffff\1\0\4\uffff";
    static final String dfa_339s = "\1\u0100\1\uffff\1\u0100\34\uffff\3\161\34\uffff\3\13\3\161\3\uffff\1\0\4\uffff";
    static final String dfa_340s = "\1\uffff\1\10\1\uffff\1\1\2\2\3\3\22\4\2\5\1\6\1\7\3\uffff\34\4\6\uffff\3\4\1\uffff\4\4";
    static final String dfa_341s = "\1\1\1\uffff\1\0\74\uffff\1\2\1\3\6\uffff\1\4\4\uffff}>";
    static final String[] dfa_342s = {
            "\1\10\12\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\3\1\uffff\1\1\2\uffff\2\1\4\uffff\1\17\5\uffff\1\4\5\uffff\1\1\1\2\1\1\5\uffff\6\1\10\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\20\1\21\1\22\1\23\1\24\1\25\1\26\30\uffff\1\5\1\33\1\34\1\35\1\uffff\1\36\1\uffff\1\27\1\30\1\31\1\32\176\uffff\1\6\1\7",
            "",
            "\1\37\1\40\3\uffff\1\50\1\44\1\41\1\uffff\1\47\31\uffff\1\75\142\uffff\1\51\1\52\7\uffff\1\45\1\46\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\uffff\1\61\1\62\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\74\126\uffff\1\42\1\43",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\1\6\uffff\1\1\12\uffff\1\1\2\uffff\1\1\20\uffff\3\1\5\uffff\6\1\45\uffff\1\77\2\uffff\1\76",
            "\1\1\106\uffff\1\100\2\uffff\1\76",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\101\1\102\5\uffff\1\103",
            "\1\104\1\105\3\uffff\1\107\1\uffff\1\106",
            "\1\110\1\111\1\113\2\uffff\1\107\1\112\1\106",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "\1\1\106\uffff\1\77\2\uffff\1\76",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_338 = DFA.unpackEncodedStringToUnsignedChars(dfa_338s);
    static final char[] dfa_339 = DFA.unpackEncodedStringToUnsignedChars(dfa_339s);
    static final short[] dfa_340 = DFA.unpackEncodedString(dfa_340s);
    static final short[] dfa_341 = DFA.unpackEncodedString(dfa_341s);
    static final short[][] dfa_342 = unpackEncodedStringArray(dfa_342s);

    class DFA352 extends DFA {

        public DFA352(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 352;
            this.eot = dfa_144;
            this.eof = dfa_182;
            this.min = dfa_338;
            this.max = dfa_339;
            this.accept = dfa_340;
            this.special = dfa_341;
            this.transition = dfa_342;
        }
        public String getDescription() {
            return "()* loopback of 16727:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_18_0= 'optional' ) ) | otherlv_19= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_default_20_0= 'default' ) ) otherlv_21= 'to' ( ( (lv_defaultLiteral_22_0= ruleLiteral ) ) | ( (lv_defaultConcept_23_0= ruleConceptDeclaration ) ) ) (otherlv_24= 'when' ( (lv_causes_25_0= ruleRESOLUTION_EXCEPTION ) ) (otherlv_26= ',' ( (lv_causes_27_0= ruleRESOLUTION_EXCEPTION ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_28= 'named' ( ( (lv_name_29_1= RULE_LOWERCASE_ID | lv_name_29_2= RULE_STRING ) ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA352_2 = input.LA(1);

                         
                        int index352_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA352_2==RULE_LOWERCASE_ID) ) {s = 31;}

                        else if ( (LA352_2==RULE_UPPERCASE_ID) ) {s = 32;}

                        else if ( (LA352_2==RULE_LOWERCASE_DASHID) ) {s = 33;}

                        else if ( LA352_2 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 34;}

                        else if ( LA352_2 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 35;}

                        else if ( LA352_2 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 36;}

                        else if ( LA352_2 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 37;}

                        else if ( LA352_2 == 148 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 38;}

                        else if ( LA352_2 == RULE_UPPERCASE_PATH && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 39;}

                        else if ( LA352_2 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 40;}

                        else if ( LA352_2 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 41;}

                        else if ( LA352_2 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 42;}

                        else if ( LA352_2 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 43;}

                        else if ( LA352_2 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 44;}

                        else if ( LA352_2 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 45;}

                        else if ( LA352_2 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 46;}

                        else if ( LA352_2 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 47;}

                        else if ( LA352_2 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 48;}

                        else if ( LA352_2 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 49;}

                        else if ( LA352_2 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 50;}

                        else if ( LA352_2 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 51;}

                        else if ( LA352_2 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 52;}

                        else if ( LA352_2 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 53;}

                        else if ( LA352_2 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 54;}

                        else if ( LA352_2 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 55;}

                        else if ( LA352_2 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 56;}

                        else if ( LA352_2 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 57;}

                        else if ( LA352_2 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 58;}

                        else if ( LA352_2 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 59;}

                        else if ( LA352_2 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 60;}

                        else if ( LA352_2 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 61;}

                         
                        input.seek(index352_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA352_0 = input.LA(1);

                         
                        int index352_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA352_0==EOF||LA352_0==21||LA352_0==28||(LA352_0>=32 && LA352_0<=34)||LA352_0==38||(LA352_0>=41 && LA352_0<=42)||LA352_0==59||LA352_0==61||(LA352_0>=67 && LA352_0<=72)) ) {s = 1;}

                        else if ( (LA352_0==60) ) {s = 2;}

                        else if ( LA352_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA352_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA352_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 5;}

                        else if ( LA352_0 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA352_0 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA352_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 8;}

                        else if ( LA352_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA352_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA352_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA352_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA352_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA352_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA352_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA352_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA352_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA352_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA352_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA352_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA352_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA352_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA352_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA352_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA352_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA352_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                        else if ( LA352_0 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 27;}

                        else if ( LA352_0 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 28;}

                        else if ( LA352_0 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 29;}

                        else if ( LA352_0 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 30;}

                         
                        input.seek(index352_0);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA352_63 = input.LA(1);

                         
                        int index352_63 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA352_63 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 68;}

                        else if ( LA352_63 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 69;}

                        else if ( LA352_63 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 70;}

                        else if ( (LA352_63==RULE_CAMELCASE_ID) ) {s = 71;}

                         
                        input.seek(index352_63);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA352_64 = input.LA(1);

                         
                        int index352_64 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA352_64 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 72;}

                        else if ( LA352_64 == RULE_UPPERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 73;}

                        else if ( LA352_64 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 70;}

                        else if ( LA352_64 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 74;}

                        else if ( LA352_64 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 75;}

                        else if ( (LA352_64==RULE_CAMELCASE_ID) ) {s = 71;}

                         
                        input.seek(index352_64);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA352_71 = input.LA(1);

                         
                        int index352_71 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred656_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 75;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index352_71);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 352, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_343s = "\1\1\57\uffff";
    static final String dfa_344s = "\1\12\7\uffff\1\0\20\uffff\22\0\5\uffff";
    static final String dfa_345s = "\1\u0100\7\uffff\1\0\20\uffff\22\0\5\uffff";
    static final String dfa_346s = "\1\uffff\1\2\55\uffff\1\1";
    static final String dfa_347s = "\10\uffff\1\0\20\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\5\uffff}>";
    static final String[] dfa_348s = {
            "\1\1\12\uffff\1\1\6\uffff\1\1\3\uffff\3\1\1\uffff\1\1\1\uffff\1\1\2\uffff\2\1\4\uffff\1\37\5\uffff\1\1\5\uffff\1\1\1\10\1\1\5\uffff\6\1\10\uffff\1\31\1\32\1\33\1\34\1\35\1\36\1\40\1\41\1\42\1\43\1\44\1\45\1\46\30\uffff\4\1\1\uffff\1\1\1\uffff\1\47\1\50\1\51\1\52\176\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_343 = DFA.unpackEncodedString(dfa_343s);
    static final char[] dfa_344 = DFA.unpackEncodedStringToUnsignedChars(dfa_344s);
    static final char[] dfa_345 = DFA.unpackEncodedStringToUnsignedChars(dfa_345s);
    static final short[] dfa_346 = DFA.unpackEncodedString(dfa_346s);
    static final short[] dfa_347 = DFA.unpackEncodedString(dfa_347s);
    static final short[][] dfa_348 = unpackEncodedStringArray(dfa_348s);

    class DFA346 extends DFA {

        public DFA346(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 346;
            this.eot = dfa_53;
            this.eof = dfa_343;
            this.min = dfa_344;
            this.max = dfa_345;
            this.accept = dfa_346;
            this.special = dfa_347;
            this.transition = dfa_348;
        }
        public String getDescription() {
            return "()* loopback of 16927:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA346_8 = input.LA(1);

                         
                        int index346_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA346_25 = input.LA(1);

                         
                        int index346_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_25);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA346_26 = input.LA(1);

                         
                        int index346_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_26);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA346_27 = input.LA(1);

                         
                        int index346_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_27);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA346_28 = input.LA(1);

                         
                        int index346_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_28);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA346_29 = input.LA(1);

                         
                        int index346_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_29);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA346_30 = input.LA(1);

                         
                        int index346_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_30);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA346_31 = input.LA(1);

                         
                        int index346_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_31);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA346_32 = input.LA(1);

                         
                        int index346_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_32);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA346_33 = input.LA(1);

                         
                        int index346_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_33);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA346_34 = input.LA(1);

                         
                        int index346_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_34);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA346_35 = input.LA(1);

                         
                        int index346_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_35);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA346_36 = input.LA(1);

                         
                        int index346_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_36);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA346_37 = input.LA(1);

                         
                        int index346_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_37);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA346_38 = input.LA(1);

                         
                        int index346_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_38);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA346_39 = input.LA(1);

                         
                        int index346_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_39);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA346_40 = input.LA(1);

                         
                        int index346_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_40);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA346_41 = input.LA(1);

                         
                        int index346_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_41);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA346_42 = input.LA(1);

                         
                        int index346_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred655_InternalKim()) ) {s = 47;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index346_42);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 346, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA353 extends DFA {

        public DFA353(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 353;
            this.eot = dfa_138;
            this.eof = dfa_138;
            this.min = dfa_139;
            this.max = dfa_140;
            this.accept = dfa_141;
            this.special = dfa_142;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "17191:3: ( ( (lv_value_0_0= ruleLiteralValueWithConcept ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA353_7 = input.LA(1);

                         
                        int index353_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA353_8 = input.LA(1);

                         
                        int index353_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_8);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA353_9 = input.LA(1);

                         
                        int index353_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_9);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA353_10 = input.LA(1);

                         
                        int index353_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_10);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA353_11 = input.LA(1);

                         
                        int index353_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA353_12 = input.LA(1);

                         
                        int index353_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_12);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA353_13 = input.LA(1);

                         
                        int index353_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_13);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA353_14 = input.LA(1);

                         
                        int index353_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_14);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA353_15 = input.LA(1);

                         
                        int index353_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_15);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA353_16 = input.LA(1);

                         
                        int index353_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_16);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA353_17 = input.LA(1);

                         
                        int index353_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_17);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA353_18 = input.LA(1);

                         
                        int index353_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_18);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA353_19 = input.LA(1);

                         
                        int index353_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_19);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA353_20 = input.LA(1);

                         
                        int index353_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_20);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA353_21 = input.LA(1);

                         
                        int index353_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_21);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA353_22 = input.LA(1);

                         
                        int index353_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_22);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA353_23 = input.LA(1);

                         
                        int index353_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_23);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA353_24 = input.LA(1);

                         
                        int index353_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_24);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA353_25 = input.LA(1);

                         
                        int index353_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_25);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA353_26 = input.LA(1);

                         
                        int index353_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_26);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA353_27 = input.LA(1);

                         
                        int index353_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_27);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA353_28 = input.LA(1);

                         
                        int index353_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_28);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA353_29 = input.LA(1);

                         
                        int index353_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_29);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA353_30 = input.LA(1);

                         
                        int index353_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_30);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA353_31 = input.LA(1);

                         
                        int index353_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_31);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA353_32 = input.LA(1);

                         
                        int index353_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_32);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA353_33 = input.LA(1);

                         
                        int index353_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_33);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA353_34 = input.LA(1);

                         
                        int index353_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred665_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 36;}

                         
                        input.seek(index353_34);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 353, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_349s = "\33\uffff";
    static final String dfa_350s = "\1\1\32\uffff";
    static final String dfa_351s = "\1\12\32\uffff";
    static final String dfa_352s = "\1\u0100\32\uffff";
    static final String dfa_353s = "\1\uffff\1\5\1\1\2\2\3\3\23\4";
    static final String dfa_354s = "\1\0\32\uffff}>";
    static final String[] dfa_355s = {
            "\1\7\21\uffff\1\1\7\uffff\1\2\3\uffff\1\1\6\uffff\1\16\1\uffff\1\1\3\uffff\1\3\6\uffff\1\25\24\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\17\1\20\1\21\1\22\1\23\1\24\1\26\30\uffff\1\4\6\uffff\1\27\1\30\1\31\1\32\176\uffff\1\5\1\6",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_349 = DFA.unpackEncodedString(dfa_349s);
    static final short[] dfa_350 = DFA.unpackEncodedString(dfa_350s);
    static final char[] dfa_351 = DFA.unpackEncodedStringToUnsignedChars(dfa_351s);
    static final char[] dfa_352 = DFA.unpackEncodedStringToUnsignedChars(dfa_352s);
    static final short[] dfa_353 = DFA.unpackEncodedString(dfa_353s);
    static final short[] dfa_354 = DFA.unpackEncodedString(dfa_354s);
    static final short[][] dfa_355 = unpackEncodedStringArray(dfa_355s);

    class DFA358 extends DFA {

        public DFA358(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 358;
            this.eot = dfa_349;
            this.eof = dfa_350;
            this.min = dfa_351;
            this.max = dfa_352;
            this.accept = dfa_353;
            this.special = dfa_354;
            this.transition = dfa_355;
        }
        public String getDescription() {
            return "()* loopback of 17255:6: ( ({...}? => ( ({...}? => (otherlv_5= 'according' otherlv_6= 'to' ( (lv_accordingTo_7_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_8= 'in' ( ( (lv_unit_9_0= ruleUnit ) ) | ( (lv_currency_10_0= ruleCurrency ) ) ) ) | (otherlv_11= 'per' ( (lv_unit_12_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_13_0= ruleNumber ) ) otherlv_14= 'to' ( (lv_to_15_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_valueOperators_16_0= ruleValueOperator ) ) ( (lv_valueOperators_17_0= ruleValueOperator ) )* ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA358_0 = input.LA(1);

                         
                        int index358_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA358_0==EOF||LA358_0==28||LA358_0==40||LA358_0==49) ) {s = 1;}

                        else if ( LA358_0 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA358_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA358_0 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA358_0 == 255 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA358_0 == 256 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA358_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 7;}

                        else if ( LA358_0 == 81 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 8;}

                        else if ( LA358_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 9;}

                        else if ( LA358_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 10;}

                        else if ( LA358_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 11;}

                        else if ( LA358_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 12;}

                        else if ( LA358_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 13;}

                        else if ( LA358_0 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 14;}

                        else if ( LA358_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 15;}

                        else if ( LA358_0 == 88 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 16;}

                        else if ( LA358_0 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 17;}

                        else if ( LA358_0 == 90 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 18;}

                        else if ( LA358_0 == 91 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 19;}

                        else if ( LA358_0 == 92 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 20;}

                        else if ( LA358_0 == 60 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 21;}

                        else if ( LA358_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 22;}

                        else if ( LA358_0 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 23;}

                        else if ( LA358_0 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 24;}

                        else if ( LA358_0 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 25;}

                        else if ( LA358_0 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getAlternativeDependencyObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 26;}

                         
                        input.seek(index358_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 358, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_356s = "\37\uffff";
    static final String dfa_357s = "\1\1\36\uffff";
    static final String dfa_358s = "\1\12\12\uffff\23\0\1\uffff";
    static final String dfa_359s = "\1\u0100\12\uffff\23\0\1\uffff";
    static final String dfa_360s = "\1\uffff\1\2\34\uffff\1\1";
    static final String dfa_361s = "\13\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\uffff}>";
    static final String[] dfa_362s = {
            "\1\1\21\uffff\1\1\7\uffff\1\1\3\uffff\1\1\6\uffff\1\21\1\uffff\1\1\3\uffff\1\1\6\uffff\1\30\24\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\22\1\23\1\24\1\25\1\26\1\27\1\31\30\uffff\1\1\6\uffff\1\32\1\33\1\34\1\35\176\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_356 = DFA.unpackEncodedString(dfa_356s);
    static final short[] dfa_357 = DFA.unpackEncodedString(dfa_357s);
    static final char[] dfa_358 = DFA.unpackEncodedStringToUnsignedChars(dfa_358s);
    static final char[] dfa_359 = DFA.unpackEncodedStringToUnsignedChars(dfa_359s);
    static final short[] dfa_360 = DFA.unpackEncodedString(dfa_360s);
    static final short[] dfa_361 = DFA.unpackEncodedString(dfa_361s);
    static final short[][] dfa_362 = unpackEncodedStringArray(dfa_362s);

    class DFA357 extends DFA {

        public DFA357(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 357;
            this.eot = dfa_356;
            this.eof = dfa_357;
            this.min = dfa_358;
            this.max = dfa_359;
            this.accept = dfa_360;
            this.special = dfa_361;
            this.transition = dfa_362;
        }
        public String getDescription() {
            return "()* loopback of 17455:9: ( (lv_valueOperators_17_0= ruleValueOperator ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA357_11 = input.LA(1);

                         
                        int index357_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_11);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA357_12 = input.LA(1);

                         
                        int index357_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA357_13 = input.LA(1);

                         
                        int index357_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_13);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA357_14 = input.LA(1);

                         
                        int index357_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_14);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA357_15 = input.LA(1);

                         
                        int index357_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_15);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA357_16 = input.LA(1);

                         
                        int index357_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_16);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA357_17 = input.LA(1);

                         
                        int index357_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_17);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA357_18 = input.LA(1);

                         
                        int index357_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA357_19 = input.LA(1);

                         
                        int index357_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA357_20 = input.LA(1);

                         
                        int index357_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_20);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA357_21 = input.LA(1);

                         
                        int index357_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_21);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA357_22 = input.LA(1);

                         
                        int index357_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_22);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA357_23 = input.LA(1);

                         
                        int index357_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_23);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA357_24 = input.LA(1);

                         
                        int index357_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_24);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA357_25 = input.LA(1);

                         
                        int index357_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_25);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA357_26 = input.LA(1);

                         
                        int index357_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_26);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA357_27 = input.LA(1);

                         
                        int index357_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_27);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA357_28 = input.LA(1);

                         
                        int index357_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_28);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA357_29 = input.LA(1);

                         
                        int index357_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred672_InternalKim()) ) {s = 30;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index357_29);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 357, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_363s = "\174\uffff";
    static final String dfa_364s = "\1\6\173\uffff";
    static final String dfa_365s = "\1\4\5\0\166\uffff";
    static final String dfa_366s = "\1\u0107\5\0\166\uffff";
    static final String dfa_367s = "\6\uffff\1\2\164\uffff\1\1";
    static final String dfa_368s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\166\uffff}>";
    static final String[] dfa_369s = {
            "\1\2\1\3\3\6\1\1\4\6\1\4\1\uffff\1\6\4\uffff\1\6\4\uffff\1\6\1\uffff\7\6\1\uffff\1\6\1\uffff\1\6\1\5\3\6\1\uffff\1\6\2\uffff\1\6\1\uffff\2\6\2\uffff\5\6\1\uffff\3\6\5\uffff\6\6\1\uffff\1\6\6\uffff\15\6\17\uffff\1\6\2\uffff\1\6\3\uffff\6\6\1\uffff\6\6\11\uffff\2\6\6\uffff\3\6\1\uffff\6\6\1\uffff\14\6\14\uffff\2\6\2\uffff\1\6\1\uffff\11\6\2\uffff\10\6\5\uffff\1\6\5\uffff\1\6\45\uffff\2\6\6\uffff\1\6",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_363 = DFA.unpackEncodedString(dfa_363s);
    static final short[] dfa_364 = DFA.unpackEncodedString(dfa_364s);
    static final char[] dfa_365 = DFA.unpackEncodedStringToUnsignedChars(dfa_365s);
    static final char[] dfa_366 = DFA.unpackEncodedStringToUnsignedChars(dfa_366s);
    static final short[] dfa_367 = DFA.unpackEncodedString(dfa_367s);
    static final short[] dfa_368 = DFA.unpackEncodedString(dfa_368s);
    static final short[][] dfa_369 = unpackEncodedStringArray(dfa_369s);

    class DFA364 extends DFA {

        public DFA364(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 364;
            this.eot = dfa_363;
            this.eof = dfa_364;
            this.min = dfa_365;
            this.max = dfa_366;
            this.accept = dfa_367;
            this.special = dfa_368;
            this.transition = dfa_369;
        }
        public String getDescription() {
            return "17857:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA364_1 = input.LA(1);

                         
                        int index364_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred686_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index364_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA364_2 = input.LA(1);

                         
                        int index364_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred686_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index364_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA364_3 = input.LA(1);

                         
                        int index364_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred686_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index364_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA364_4 = input.LA(1);

                         
                        int index364_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred686_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index364_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA364_5 = input.LA(1);

                         
                        int index364_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred686_InternalKim()) ) {s = 123;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index364_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 364, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_370s = "\41\uffff";
    static final String dfa_371s = "\5\uffff\2\1\2\uffff\5\1\3\uffff\3\1\3\uffff\2\1\6\uffff\2\1";
    static final String dfa_372s = "\1\4\1\uffff\1\156\1\uffff\20\4\3\72\5\4\3\72\2\4";
    static final String dfa_373s = "\1\15\1\uffff\1\161\1\uffff\1\13\2\u0100\1\13\6\u0100\3\13\3\u0100\3\161\2\u0100\3\13\3\161\2\u0100";
    static final String dfa_374s = "\1\uffff\1\1\1\uffff\1\2\35\uffff";
    static final String dfa_375s = "\41\uffff}>";
    static final String[] dfa_376s = {
            "\1\3\1\2\5\uffff\1\3\1\uffff\1\1",
            "",
            "\1\4\2\uffff\1\3",
            "",
            "\1\5\1\6\1\1\3\uffff\1\1\1\3",
            "\10\1\1\uffff\2\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\3\1\1\10\2\uffff\1\7\2\uffff\30\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "\10\1\1\uffff\2\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\3\1\1\10\2\uffff\1\7\2\uffff\30\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "\1\11\1\12\1\1\3\uffff\1\1\1\3",
            "\1\13\1\14\1\1\1\uffff\3\1\1\15\1\uffff\1\1\2\uffff\1\1\14\uffff\2\1\10\uffff\1\1\7\uffff\1\1\6\uffff\2\1\11\uffff\1\1\17\uffff\4\1\2\uffff\1\1\1\uffff\1\1\33\uffff\1\1\6\uffff\1\1\5\uffff\3\1\5\uffff\10\1\1\uffff\2\1\1\uffff\6\1\1\uffff\14\1\60\uffff\1\1\45\uffff\2\1",
            "\10\1\1\uffff\2\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\3\1\1\10\2\uffff\1\7\2\uffff\30\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "\10\1\1\uffff\2\1\1\uffff\1\1\4\uffff\1\1\4\uffff\1\1\1\uffff\7\1\1\uffff\7\1\1\uffff\1\1\2\uffff\4\1\2\uffff\5\1\1\uffff\3\1\5\uffff\6\1\1\uffff\1\1\6\uffff\15\1\4\uffff\2\1\2\uffff\4\1\1\uffff\3\1\1\10\2\uffff\1\7\2\uffff\30\1\6\uffff\12\1\1\uffff\17\1\11\uffff\2\1\2\uffff\1\1\1\uffff\11\1\1\uffff\11\1\5\uffff\2\1\4\uffff\1\1\45\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\17\2\uffff\1\16\30\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\20\2\uffff\1\16\30\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\17\2\uffff\1\16\30\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "\1\21\1\22\5\uffff\1\23",
            "\1\24\1\25\3\uffff\1\1\1\uffff\1\26",
            "\1\27\1\30\1\1\2\uffff\2\1\1\26",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\17\2\uffff\1\16\30\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\17\2\uffff\1\16\30\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\6\uffff\1\1\32\uffff\4\1\4\uffff\1\1\24\uffff\1\17\2\uffff\1\16\30\uffff\2\1\6\uffff\3\1\1\uffff\6\1\1\uffff\14\1\126\uffff\2\1",
            "\1\3\63\uffff\1\32\2\uffff\1\31",
            "\1\3\63\uffff\1\32\2\uffff\1\31",
            "\1\3\63\uffff\1\32\2\uffff\1\31",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\33\4\uffff\1\1\6\uffff\17\1\6\uffff\12\1\1\uffff\14\1\126\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\33\4\uffff\1\1\6\uffff\17\1\6\uffff\12\1\1\uffff\14\1\126\uffff\2\1",
            "\1\34\1\35\5\uffff\1\36",
            "\2\1\4\uffff\1\3\1\1",
            "\1\37\1\40\1\1\3\uffff\1\1\1\36",
            "\1\3\63\uffff\1\32\2\uffff\1\31",
            "\1\3\63\uffff\1\32\2\uffff\1\31",
            "\1\3\63\uffff\1\32\2\uffff\1\31",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\33\4\uffff\1\1\6\uffff\17\1\6\uffff\12\1\1\uffff\14\1\126\uffff\2\1",
            "\3\1\2\uffff\3\1\1\uffff\1\1\16\uffff\3\1\10\uffff\1\1\4\uffff\1\1\2\uffff\1\1\5\uffff\2\1\3\uffff\1\3\1\uffff\1\1\15\uffff\1\1\6\uffff\15\1\11\uffff\1\1\6\uffff\1\32\2\uffff\1\33\4\uffff\1\1\6\uffff\17\1\6\uffff\12\1\1\uffff\14\1\126\uffff\2\1"
    };

    static final short[] dfa_370 = DFA.unpackEncodedString(dfa_370s);
    static final short[] dfa_371 = DFA.unpackEncodedString(dfa_371s);
    static final char[] dfa_372 = DFA.unpackEncodedStringToUnsignedChars(dfa_372s);
    static final char[] dfa_373 = DFA.unpackEncodedStringToUnsignedChars(dfa_373s);
    static final short[] dfa_374 = DFA.unpackEncodedString(dfa_374s);
    static final short[] dfa_375 = DFA.unpackEncodedString(dfa_375s);
    static final short[][] dfa_376 = unpackEncodedStringArray(dfa_376s);

    class DFA390 extends DFA {

        public DFA390(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 390;
            this.eot = dfa_370;
            this.eof = dfa_371;
            this.min = dfa_372;
            this.max = dfa_373;
            this.accept = dfa_374;
            this.special = dfa_375;
            this.transition = dfa_376;
        }
        public String getDescription() {
            return "18754:2: ( ( (this_UPPERCASE_PATH_0= RULE_UPPERCASE_PATH | this_UPPERCASE_ID_1= RULE_UPPERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_UPPERCASE_ID_4= RULE_UPPERCASE_ID | this_INT_5= RULE_INT | this_STRING_6= RULE_STRING ) (kw= '.' (this_LOWERCASE_ID_8= RULE_LOWERCASE_ID | this_UPPERCASE_ID_9= RULE_UPPERCASE_ID | this_INT_10= RULE_INT | this_STRING_11= RULE_STRING ) )* ) | this_WellFormedUrnIdWithFragment_12= ruleWellFormedUrnIdWithFragment )";
        }
    }

    class DFA406 extends DFA {

        public DFA406(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 406;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "693:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_number_4_0= ruleNumber ) ) | ( (lv_concept_5_0= ruleConceptDeclaration ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA406_49 = input.LA(1);

                         
                        int index406_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index406_49);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA406_5 = input.LA(1);

                         
                        int index406_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index406_5);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA406_48 = input.LA(1);

                         
                        int index406_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred20_InternalKim()) ) {s = 4;}

                        else if ( (synpred22_InternalKim()) ) {s = 7;}

                         
                        input.seek(index406_48);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 406, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA497 extends DFA {

        public DFA497(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 497;
            this.eot = dfa_125;
            this.eof = dfa_125;
            this.min = dfa_126;
            this.max = dfa_127;
            this.accept = dfa_128;
            this.special = dfa_129;
            this.transition = dfa_130;
        }
        public String getDescription() {
            return "6496:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_377s = "\1\4\3\156\4\uffff\1\4\3\156";
    static final String[] dfa_378s = {
            "\1\1\1\2\1\5\4\uffff\1\3\141\uffff\1\4",
            "\1\4\2\uffff\1\4",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "",
            "",
            "",
            "",
            "\1\11\1\12\5\uffff\1\13",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10",
            "\1\4\2\uffff\1\10"
    };
    static final char[] dfa_377 = DFA.unpackEncodedStringToUnsignedChars(dfa_377s);
    static final short[][] dfa_378 = unpackEncodedStringArray(dfa_378s);

    class DFA533 extends DFA {

        public DFA533(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 533;
            this.eot = dfa_131;
            this.eof = dfa_208;
            this.min = dfa_377;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_378;
        }
        public String getDescription() {
            return "8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA533_1 = input.LA(1);

                         
                        int index533_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA533_1==110||LA533_1==113) ) {s = 4;}

                        else if ( (synpred335_InternalKim()) ) {s = 6;}

                        else if ( (synpred336_InternalKim()) ) {s = 7;}

                         
                        input.seek(index533_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 533, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_379s = "\1\4\2\32\1\47\1\uffff\1\32\1\uffff\3\4\3\47\3\156\5\4\6\156\4\4\3\156\3\72\1\4\1\12\1\4\3\72\1\4\2\0\1\12\1\4\2\72\1\4\1\12\1\4";
    static final String dfa_380s = "\1\u0100\3\161\1\uffff\1\32\1\uffff\3\13\6\161\2\u0100\3\13\6\161\2\u0100\2\13\6\161\1\13\1\12\1\13\3\161\1\u0100\2\0\1\12\3\72\1\u0100\1\12\1\u0100";
    static final String dfa_381s = "\54\uffff\1\0\1\1\7\uffff}>";
    static final String[] dfa_382s = {
            "\1\1\1\2\1\5\1\uffff\3\6\1\3\1\uffff\1\6\17\uffff\2\6\10\uffff\1\6\105\uffff\1\4\7\uffff\1\6\24\uffff\2\6\7\uffff\2\6\1\uffff\6\6\1\uffff\14\6\126\uffff\2\6",
            "\1\6\14\uffff\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\6\14\uffff\1\6\106\uffff\1\11\2\uffff\1\7",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "",
            "\1\6",
            "",
            "\1\12\1\13\5\uffff\1\14",
            "\1\15\1\16\3\uffff\1\6\1\uffff\1\17",
            "\1\20\1\21\1\6\2\uffff\2\6\1\17",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\6\106\uffff\1\10\2\uffff\1\7",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\2\6\3\uffff\3\6\1\uffff\1\6\14\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\14\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\1\25\1\26\5\uffff\1\27",
            "\1\30\1\31\5\uffff\1\32",
            "\1\33\1\34\1\6\3\uffff\1\6\1\27",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\23\2\uffff\1\22",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\2\6\3\uffff\3\6\1\uffff\1\6\14\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\2\6\3\uffff\3\6\1\uffff\1\6\14\uffff\1\6\11\uffff\1\6\2\uffff\1\6\7\uffff\1\6\5\uffff\1\6\6\uffff\1\6\15\uffff\1\6\6\uffff\15\6\11\uffff\1\6\6\uffff\1\23\2\uffff\1\24\4\uffff\4\6\1\uffff\1\6\1\uffff\17\6\7\uffff\11\6\1\uffff\14\6\126\uffff\2\6",
            "\1\37\1\40\5\uffff\1\41",
            "\1\42\1\43\4\uffff\1\4\1\44",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\36\2\uffff\1\35",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\50\1\51\5\uffff\1\52",
            "\1\53",
            "\1\54\1\55\1\6\3\uffff\1\6\1\4",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\47\63\uffff\1\46\1\uffff\1\4\1\45",
            "\1\60\1\61\64\uffff\1\47\66\uffff\1\56\u008e\uffff\1\57",
            "\1\uffff",
            "\1\uffff",
            "\1\62",
            "\1\60\1\61\64\uffff\1\47",
            "\1\47",
            "\1\47",
            "\1\60\1\61\64\uffff\1\47\66\uffff\1\63\u008e\uffff\1\57",
            "\1\64",
            "\1\60\1\61\64\uffff\1\47\u00c5\uffff\1\57"
    };
    static final char[] dfa_379 = DFA.unpackEncodedStringToUnsignedChars(dfa_379s);
    static final char[] dfa_380 = DFA.unpackEncodedStringToUnsignedChars(dfa_380s);
    static final short[] dfa_381 = DFA.unpackEncodedString(dfa_381s);
    static final short[][] dfa_382 = unpackEncodedStringArray(dfa_382s);

    class DFA535 extends DFA {

        public DFA535(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 535;
            this.eot = dfa_201;
            this.eof = dfa_202;
            this.min = dfa_379;
            this.max = dfa_380;
            this.accept = dfa_205;
            this.special = dfa_381;
            this.transition = dfa_382;
        }
        public String getDescription() {
            return "8525:4: ( ( ( (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING ) ) ) | ( (lv_observable_2_0= ruleDependencyObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA535_44 = input.LA(1);

                         
                        int index535_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred338_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index535_44);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA535_45 = input.LA(1);

                         
                        int index535_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred338_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 6;}

                         
                        input.seek(index535_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 535, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA534 extends DFA {

        public DFA534(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 534;
            this.eot = dfa_131;
            this.eof = dfa_208;
            this.min = dfa_377;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_378;
        }
        public String getDescription() {
            return "8528:7: (lv_modelReference_1_1= RULE_LOWERCASE_ID | lv_modelReference_1_2= rulePathName | lv_modelReference_1_3= ruleUrnId | lv_modelReference_1_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA534_1 = input.LA(1);

                         
                        int index534_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA534_1==110||LA534_1==113) ) {s = 4;}

                        else if ( (synpred335_InternalKim()) ) {s = 6;}

                        else if ( (synpred336_InternalKim()) ) {s = 7;}

                         
                        input.seek(index534_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 534, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_383s = "\1\112\14\uffff";
    static final String dfa_384s = "\1\u0089\14\uffff";
    static final String[] dfa_385s = {
            "\1\3\34\uffff\1\4\31\uffff\1\2\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_383 = DFA.unpackEncodedStringToUnsignedChars(dfa_383s);
    static final char[] dfa_384 = DFA.unpackEncodedStringToUnsignedChars(dfa_384s);
    static final short[][] dfa_385 = unpackEncodedStringArray(dfa_385s);

    class DFA551 extends DFA {

        public DFA551(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 551;
            this.eot = dfa_227;
            this.eof = dfa_228;
            this.min = dfa_383;
            this.max = dfa_384;
            this.accept = dfa_231;
            this.special = dfa_232;
            this.transition = dfa_385;
        }
        public String getDescription() {
            return "()* loopback of 8942:6: ( ({...}? => ( ({...}? => ( (otherlv_2= 'of' ( ( (lv_distributedOfInherency_3_0= 'each' ) )? ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( ( (lv_distributedForInherency_6_0= 'each' ) )? ( (lv_motivation_7_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_8= 'with' ( (lv_compresent_9_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'caused' otherlv_11= 'by' ( (lv_causant_12_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_13= 'adjacent' otherlv_14= 'to' ( (lv_adjacent_15_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_16= 'contained' otherlv_17= 'in' ( (lv_container_18_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_19= 'containing' ( (lv_contained_20_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_21= 'causing' ( (lv_caused_22_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_23= 'during' ( ( (lv_distributedTemporalInherency_24_0= 'each' ) )? ( (lv_during_25_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'within' ( ( (lv_distributedWithinInherency_27_0= 'each' ) )? ( (lv_context_28_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_29= 'linking' ( (lv_relationshipSource_30_0= ruleSimpleConceptDeclaration ) ) otherlv_31= 'to' ( (lv_relationshipTarget_32_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA551_0 = input.LA(1);

                         
                        int index551_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA551_0==EOF) ) {s = 1;}

                        else if ( LA551_0 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA551_0 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA551_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA551_0 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA551_0 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 4) ) {s = 6;}

                        else if ( LA551_0 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 5) ) {s = 7;}

                        else if ( LA551_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 6) ) {s = 8;}

                        else if ( LA551_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 7) ) {s = 9;}

                        else if ( LA551_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 8) ) {s = 10;}

                        else if ( LA551_0 == 136 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 9) ) {s = 11;}

                        else if ( LA551_0 == 137 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_1(), 10) ) {s = 12;}

                         
                        input.seek(index551_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 551, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000003C08002L,0x000400100001F800L,0x001FF00000000000L,0x3FFFFFFFC1E00010L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000200000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000001C08000L,0x000000000001F800L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000001C00000L,0x000000000001F800L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x00C000807800BF70L,0x0020200000000000L,0x000001FFEFD80C00L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000002008000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000030L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000004000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00C0008070001F70L,0x0000000000000000L,0x0000000000000000L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000014000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000A70L,0x0000200000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x3800064780000042L,0x00000000000001F8L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x3800064790000042L,0x00000000000001F8L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x3800064780000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x000000806000AF70L,0x0A20200000000000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x3800064710000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000970L,0x0000200000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x3800064610000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000001800000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000008000002A30L,0x0000000000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x3800064000000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000002000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000830L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000008800000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000188000002A30L,0x0000000000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000010010000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000800000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0460908060002F70L,0x00000000021E0000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x3800040000000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x000000A000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000608000002A30L,0x0000000000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000800000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0007000000000002L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0060908060002E70L,0x00000000021E0000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0018002000000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000400L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0018000000000002L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000042L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0560908060002F70L,0x00000000021E0000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0200000000000002L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x1000000000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x3800000010000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x3800000000000000L,0x00000000000001F8L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0xC000008000002A30L,0x0000000000000001L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x3800008000000000L,0x00000000000001F8L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x3820008000000000L,0x00000000000001F8L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000006L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x004000A070001F70L,0x0000000000000000L,0x0000000000000000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0006000010000002L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x00C0008070001F70L,0x0000000000000200L,0x0000000000000000L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x00C0008070001F72L,0x0000000000000000L,0x0000000000000000L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000400L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0006000000000002L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0026000000000002L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000001C08000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000001C00000L,0x00000001C0000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0020040100200040L,0x00001B4C00000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0020040100200000L,0x00001B4C00000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000108000000830L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0020040110200000L,0x00001B4C00000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000008000000870L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000008000002A30L,0x0000002000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0020040100200000L,0x00001F4C00000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0020040100200830L,0x00001B4C00000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000040000200000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000000000000830L,0x0000200000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000000000C30L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0400000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0400000000000002L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x0000000000000002L,0x0000800000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0400000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0400000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000470L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0400000000000002L,0x0003000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000A10L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000008000L,0x0004000000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000048100002A70L,0x0000200000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000008000002A70L,0x0000200000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x3800048180002A72L,0x00182000000001F8L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x3800048190002A72L,0x00102000000001F8L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000008060002F70L,0x0020000000000000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x3800048100002A72L,0x00002000000001F8L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000048100002A72L,0x0000200000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000008000002A30L,0x0020000000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x1020801000000402L,0xEBC000003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x1020909000004630L,0xEBC100003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000081L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000008060002E70L,0x0000000000000000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x1020801000000402L,0xEFC000003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000038000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x1020801010000402L,0xEBC000003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x1020800000000402L,0xE04000003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x1020908000004630L,0xE04100003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000081L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000008000002E30L,0x0000000000000000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x00C000807000BF70L,0x0020000000000000L,0x000001FFEFD80C00L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000008000000002L,0x0B80000000000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000008000000002L,0x0A00000000000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000008000000002L,0x0E00000000000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000008010000002L,0x0A00000000000000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000008000002A32L,0x0000008000000400L,0x000001FFEFD80FFEL});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000008008002A70L,0x0000000000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000400L,0x00000000000003FEL});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0020000000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000002000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000002A30L,0x0000000000000000L,0x0000000000180C00L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000001660L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000002020L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000002L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000002000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0020000000000000L,0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x1000000000000002L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x00000C0000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000008000002A32L,0x0000000000000000L,0x000001FFEFD80C00L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000100000000L,0x0000000000000002L,0x000070000003F01CL,0x3000000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0001000000000000L,0x3000000000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000008000L,0x0000001000000000L,0x001FF00000000000L,0x3FFFFFFFC1E00010L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000008200L,0x0000002000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000000000000002L,0x0800000000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000000000000200L,0x0000002000000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000040000004872L,0x0000000000000000L,0xFA60000000000000L,0x0000000000083FCFL});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000040000004872L,0x0000000000000000L,0xFA60000000200000L,0x0000000000083FCFL});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000001440L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000008000002A30L,0x0000000000000000L,0x018001FFEFD80C00L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000008000002A30L,0x0000000000000000L,0x010001FFEFD80C00L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000040010004872L,0x0000000000000000L,0xFA60060000000000L,0x0000000000083FCFL});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000008000002A30L,0x0000000000000000L,0x040001FFEFD80C00L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0400000000000000L,0x0000000001E00000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000040010004872L,0x0000000000000000L,0xFA60000000000000L,0x0000000000083FCFL});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000040004004872L,0x0000000000000000L,0xFA60000000000000L,0x0000000000083FCFL});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000008008002E70L,0x0000000000000000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000010L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0020000010000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0020000010000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000042010004872L,0x0000000000000000L,0xFA60000000000000L,0x0000000000083FCFL});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000000L,0x0010004000000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000008000000200L,0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000008000002E30L,0x0000000000800000L,0x000001FFEFD80C00L,0x000000000000C000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0020002000000002L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000004000002L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000030000L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000008008002E70L,0x0000000000800000L,0x000001FFEFD80C00L,0x000000000000C000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x0000008008002A70L,0x0000000000000000L,0x000003FFEFD80C00L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x00C0818060012F70L,0x10200000029E0000L,0x000001FFEFD80C00L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x00C0818070012F70L,0x10200000029E0000L,0x000001FFEFD80C00L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x00C0808060012F70L,0x10200000029E0000L,0x000001FFEFD80C00L,0x8000000002000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0040908060002E70L,0x00000000021E0000L,0x000001FFEFDC0C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0040908070002E70L,0x00000000021E0000L,0x000001FFEFDC0C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0040908060002E70L,0x00000000021E0000L,0x000001FFEFD80C00L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_193 = new BitSet(new long[]{0x0000800000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_194 = new BitSet(new long[]{0x0000000000000830L,0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_195 = new BitSet(new long[]{0x1022801000000402L,0xE04000003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_196 = new BitSet(new long[]{0x1022909000004630L,0xEBC100003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000081L});
    public static final BitSet FOLLOW_197 = new BitSet(new long[]{0x1022909000004630L,0xE04100003FFE0000L,0x0000000000000001L,0x8000000000000000L,0x0000000000000081L});
    public static final BitSet FOLLOW_198 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_199 = new BitSet(new long[]{0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_200 = new BitSet(new long[]{0x0000000000000850L});
    public static final BitSet FOLLOW_201 = new BitSet(new long[]{0x0000118000004230L,0x0001000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_202 = new BitSet(new long[]{0x0000100000000002L,0x0001000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_203 = new BitSet(new long[]{0x0000008000004230L});
    public static final BitSet FOLLOW_204 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_205 = new BitSet(new long[]{0x0000000000000002L,0x0001000000000000L});
    public static final BitSet FOLLOW_206 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000000000000EL});
    public static final BitSet FOLLOW_207 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_208 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_209 = new BitSet(new long[]{0x0000000000000000L,0x0003000000000000L});
    public static final BitSet FOLLOW_210 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000071L});
    public static final BitSet FOLLOW_211 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_212 = new BitSet(new long[]{0x0000000000000402L});
    public static final BitSet FOLLOW_213 = new BitSet(new long[]{0x0000000000000002L,0x0000400000000000L});
    public static final BitSet FOLLOW_214 = new BitSet(new long[]{0x0000000000000002L,0x0002000000000000L});
    public static final BitSet FOLLOW_215 = new BitSet(new long[]{0x0000000000000002L,0x0003000000000000L});
    public static final BitSet FOLLOW_216 = new BitSet(new long[]{0x0000000000004810L});
    public static final BitSet FOLLOW_217 = new BitSet(new long[]{0x0000000000000032L,0x0002000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_218 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_219 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_220 = new BitSet(new long[]{0x0000000001C00002L});
    public static final BitSet FOLLOW_221 = new BitSet(new long[]{0x0000000000000002L,0x0000040000000000L});
    public static final BitSet FOLLOW_222 = new BitSet(new long[]{0x0000000000000832L});
    public static final BitSet FOLLOW_223 = new BitSet(new long[]{0x0000000100000002L,0x00000E0000000000L});
    public static final BitSet FOLLOW_224 = new BitSet(new long[]{0x0000000100000832L,0x00000A0000000000L});
    public static final BitSet FOLLOW_225 = new BitSet(new long[]{0x0000000100000002L,0x00000A0000000000L});
    public static final BitSet FOLLOW_226 = new BitSet(new long[]{0x3800000080000042L,0x00180000000001F8L});
    public static final BitSet FOLLOW_227 = new BitSet(new long[]{0x3800000080000002L,0x00180000000001F8L});
    public static final BitSet FOLLOW_228 = new BitSet(new long[]{0x3800000090000002L,0x00100000000001F8L});
    public static final BitSet FOLLOW_229 = new BitSet(new long[]{0x3800000000000002L,0x00000000000001F8L});
    public static final BitSet FOLLOW_230 = new BitSet(new long[]{0x0000108000004230L,0x0001000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_231 = new BitSet(new long[]{0x1000800000000002L,0xE00000003FFE0000L,0x0000000000000001L});
    public static final BitSet FOLLOW_232 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L});
    public static final BitSet FOLLOW_233 = new BitSet(new long[]{0x0000000000000002L,0x0180000000000000L});
    public static final BitSet FOLLOW_234 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x3000000000000000L});
    public static final BitSet FOLLOW_235 = new BitSet(new long[]{0x0000000010000002L,0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_236 = new BitSet(new long[]{0x0000002010000002L});

}
