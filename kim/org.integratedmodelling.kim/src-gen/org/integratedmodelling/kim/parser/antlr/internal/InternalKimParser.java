package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_UPPERCASE_ID", "RULE_LOWERCASE_ID", "RULE_STRING", "RULE_SEPARATOR", "RULE_EXPR", "RULE_CAMELCASE_ID", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_INT", "RULE_UPPERCASE_PATH", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'private'", "'define'", "'as'", "'each'", "','", "'true'", "'false'", "'observing'", "'using'", "'classified'", "'discretized'", "'into'", "'according'", "'to'", "'lookup'", "'('", "'?'", "'*'", "')'", "'with'", "'metadata'", "'documentation'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'{{'", "'}}'", "'|'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'resolution'", "'instantiation'", "'termination'", "'initialization'", "'context'", "'related'", "'change'", "'set'", "'integrate'", "'do'", "'move'", "'away'", "'model'", "'assess'", "'learn'", "'number'", "'text'", "'boolean'", "'namespace'", "'scenario'", "'worldview'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'version'", "'resolve'", "'from'", "'outside'", "'parameters'", "'urn:klab:'", "':'", "'/'", "'.'", "'observe'", "'extends'", "'any'", "'by'", "'down'", "'per'", "'optional'", "'required'", "'named'", "'of'", "'for'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'during'", "'within'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'concomitant'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'uncertainty'", "'magnitude'", "'type'", "'observability'", "'proportion'", "'ratio'", "'value'", "'occurrence'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'is'", "'core'", "'equals'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'children'", "'between'", "'identity'", "'attribute'", "'realm'", "'extent'", "'uses'", "'contains'", "'implies'", "'only'", "'exactly'", "'at'", "'least'", "'most'", "'inheriting'", "'{'", "'transition'", "'?='", "'='", "'quality'", "'class'", "'quantity'", "'configuration'", "'bond'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'structural'", "'>'", "'<'", "'!='", "'<='", "'>='", "'@'", "'+'", "'-'", "'e'", "'E'", "'integer'", "'float'", "'date'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=11;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=12;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=8;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__19=19;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=9;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SEPARATOR=7;
    public static final int RULE_SL_COMMENT=16;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__238=238;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=14;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=4;
    public static final int RULE_ML_COMMENT=15;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=13;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=10;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=6;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=17;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=18;
    public static final int RULE_LOWERCASE_ID=5;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_UPPERCASE_ID && LA3_0<=RULE_STRING)||(LA3_0>=RULE_EXPR && LA3_0<=RULE_INT)||(LA3_0>=25 && LA3_0<=27)||LA3_0==36||(LA3_0>=49 && LA3_0<=50)||LA3_0==95||(LA3_0>=111 && LA3_0<=112)||(LA3_0>=120 && LA3_0<=121)||(LA3_0>=123 && LA3_0<=135)||LA3_0==189||(LA3_0>=231 && LA3_0<=232)) ) {
                alt3=1;
            }
            else if ( (LA3_0==EOF||LA3_0==RULE_ANNOTATION_ID||(LA3_0>=20 && LA3_0<=22)||(LA3_0>=70 && LA3_0<=78)||LA3_0==81||LA3_0==93||(LA3_0>=139 && LA3_0<=146)||LA3_0==164||(LA3_0>=176 && LA3_0<=179)||(LA3_0>=193 && LA3_0<=224)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=20 && LA2_0<=22)||(LA2_0>=70 && LA2_0<=75)||LA2_0==81||LA2_0==93||(LA2_0>=139 && LA2_0<=146)||LA2_0==164||(LA2_0>=176 && LA2_0<=179)||(LA2_0>=193 && LA2_0<=224)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_defineStatement_6_0 = null;

        EObject lv_observeStatement_8_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )
            int alt4=5;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    {
                    // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
                    // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_defineStatement_6_0=ruleDefineStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"defineStatement",
                      							lv_defineStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.DefineStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    {
                    // InternalKim.g:271:3: ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' )
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';'
                    {
                    // InternalKim.g:272:4: ( (lv_observeStatement_8_0= ruleObserveStatement ) )
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    {
                    // InternalKim.g:273:5: (lv_observeStatement_8_0= ruleObserveStatement )
                    // InternalKim.g:274:6: lv_observeStatement_8_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_4_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_8_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_8_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getStatementAccess().getSemicolonKeyword_4_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:300:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:304:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:305:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:314:1: ruleModelStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_2_0=null;
        Token lv_private_3_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_model_4_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:323:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:324:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:324:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:325:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:325:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalKim.g:326:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:326:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:327:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalKim.g:344:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) )
            // InternalKim.g:345:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:345:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) )
            // InternalKim.g:346:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:349:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* )
            // InternalKim.g:350:6: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )*
            {
            // InternalKim.g:350:6: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )*
            loop6:
            do {
                int alt6=3;
                int LA6_0 = input.LA(1);

                if ( LA6_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    alt6=1;
                }
                else if ( LA6_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    alt6=2;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalKim.g:351:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:351:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
            	    // InternalKim.g:352:5: {...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:352:111: ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
            	    // InternalKim.g:353:6: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:356:9: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
            	    // InternalKim.g:356:10: {...}? => ( (lv_inactive_2_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
            	    }
            	    // InternalKim.g:356:19: ( (lv_inactive_2_0= 'void' ) )
            	    // InternalKim.g:356:20: (lv_inactive_2_0= 'void' )
            	    {
            	    // InternalKim.g:356:20: (lv_inactive_2_0= 'void' )
            	    // InternalKim.g:357:10: lv_inactive_2_0= 'void'
            	    {
            	    lv_inactive_2_0=(Token)match(input,20,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_2_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getModelStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:374:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:374:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    // InternalKim.g:375:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:375:111: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    // InternalKim.g:376:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:379:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    // InternalKim.g:379:10: {...}? => ( (lv_private_3_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
            	    }
            	    // InternalKim.g:379:19: ( (lv_private_3_0= 'private' ) )
            	    // InternalKim.g:379:20: (lv_private_3_0= 'private' )
            	    {
            	    // InternalKim.g:379:20: (lv_private_3_0= 'private' )
            	    // InternalKim.g:380:10: lv_private_3_0= 'private'
            	    {
            	    lv_private_3_0=(Token)match(input,21,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_3_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getModelStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:404:3: ( (lv_model_4_0= ruleMODEL_TYPE ) )
            // InternalKim.g:405:4: (lv_model_4_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:405:4: (lv_model_4_0= ruleMODEL_TYPE )
            // InternalKim.g:406:5: lv_model_4_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_model_4_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_4_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:423:3: ( (lv_body_5_0= ruleModelBodyStatement ) )
            // InternalKim.g:424:4: (lv_body_5_0= ruleModelBodyStatement )
            {
            // InternalKim.g:424:4: (lv_body_5_0= ruleModelBodyStatement )
            // InternalKim.g:425:5: lv_body_5_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleDefineStatement"
    // InternalKim.g:449:1: entryRuleDefineStatement returns [EObject current=null] : iv_ruleDefineStatement= ruleDefineStatement EOF ;
    public final EObject entryRuleDefineStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefineStatement = null;


        try {
            // InternalKim.g:449:56: (iv_ruleDefineStatement= ruleDefineStatement EOF )
            // InternalKim.g:450:2: iv_ruleDefineStatement= ruleDefineStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefineStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefineStatement=ruleDefineStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefineStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefineStatement"


    // $ANTLR start "ruleDefineStatement"
    // InternalKim.g:456:1: ruleDefineStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'define' ( (lv_defineBody_2_0= ruleDefinitionBody ) ) ) ;
    public final EObject ruleDefineStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_defineBody_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:462:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'define' ( (lv_defineBody_2_0= ruleDefinitionBody ) ) ) )
            // InternalKim.g:463:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'define' ( (lv_defineBody_2_0= ruleDefinitionBody ) ) )
            {
            // InternalKim.g:463:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'define' ( (lv_defineBody_2_0= ruleDefinitionBody ) ) )
            // InternalKim.g:464:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'define' ( (lv_defineBody_2_0= ruleDefinitionBody ) )
            {
            // InternalKim.g:464:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop7:
            do {
                int alt7=2;
                int LA7_0 = input.LA(1);

                if ( (LA7_0==RULE_ANNOTATION_ID) ) {
                    alt7=1;
                }


                switch (alt7) {
            	case 1 :
            	    // InternalKim.g:465:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:465:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:466:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getDefineStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_7);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop7;
                }
            } while (true);

            otherlv_1=(Token)match(input,22,FOLLOW_8); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDefineStatementAccess().getDefineKeyword_1());
              		
            }
            // InternalKim.g:487:3: ( (lv_defineBody_2_0= ruleDefinitionBody ) )
            // InternalKim.g:488:4: (lv_defineBody_2_0= ruleDefinitionBody )
            {
            // InternalKim.g:488:4: (lv_defineBody_2_0= ruleDefinitionBody )
            // InternalKim.g:489:5: lv_defineBody_2_0= ruleDefinitionBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefineStatementAccess().getDefineBodyDefinitionBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_defineBody_2_0=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefineStatementRule());
              					}
              					set(
              						current,
              						"defineBody",
              						lv_defineBody_2_0,
              						"org.integratedmodelling.kim.Kim.DefinitionBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefineStatement"


    // $ANTLR start "entryRuleDefinitionBody"
    // InternalKim.g:510:1: entryRuleDefinitionBody returns [EObject current=null] : iv_ruleDefinitionBody= ruleDefinitionBody EOF ;
    public final EObject entryRuleDefinitionBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDefinitionBody = null;


        try {
            // InternalKim.g:510:55: (iv_ruleDefinitionBody= ruleDefinitionBody EOF )
            // InternalKim.g:511:2: iv_ruleDefinitionBody= ruleDefinitionBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDefinitionBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDefinitionBody=ruleDefinitionBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDefinitionBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDefinitionBody"


    // $ANTLR start "ruleDefinitionBody"
    // InternalKim.g:517:1: ruleDefinitionBody returns [EObject current=null] : ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) ;
    public final EObject ruleDefinitionBody() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:523:2: ( ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) ) )
            // InternalKim.g:524:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            {
            // InternalKim.g:524:2: ( ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) ) )
            // InternalKim.g:525:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) ) otherlv_1= 'as' ( (lv_value_2_0= ruleValue ) )
            {
            // InternalKim.g:525:3: ( (lv_name_0_0= RULE_UPPERCASE_ID ) )
            // InternalKim.g:526:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            {
            // InternalKim.g:526:4: (lv_name_0_0= RULE_UPPERCASE_ID )
            // InternalKim.g:527:5: lv_name_0_0= RULE_UPPERCASE_ID
            {
            lv_name_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getDefinitionBodyAccess().getNameUPPERCASE_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getDefinitionBodyRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
              				
            }

            }


            }

            otherlv_1=(Token)match(input,23,FOLLOW_10); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDefinitionBodyAccess().getAsKeyword_1());
              		
            }
            // InternalKim.g:547:3: ( (lv_value_2_0= ruleValue ) )
            // InternalKim.g:548:4: (lv_value_2_0= ruleValue )
            {
            // InternalKim.g:548:4: (lv_value_2_0= ruleValue )
            // InternalKim.g:549:5: lv_value_2_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getDefinitionBodyAccess().getValueValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getDefinitionBodyRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDefinitionBody"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:570:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:570:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:571:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:577:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        Token lv_name_9_0=null;
        Token otherlv_11=null;
        Token lv_docstring_13_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token lv_discretization_23_0=null;
        Token otherlv_24=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_30=null;
        Token lv_lookupTableArgs_31_1=null;
        Token lv_lookupTableArgs_31_2=null;
        Token lv_lookupTableArgs_31_3=null;
        Token otherlv_32=null;
        Token lv_lookupTableArgs_33_1=null;
        Token lv_lookupTableArgs_33_2=null;
        Token lv_lookupTableArgs_33_3=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token lv_lookupTableId_37_0=null;
        Token otherlv_39=null;
        Token otherlv_40=null;
        Token otherlv_42=null;
        Token otherlv_43=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;

        EObject lv_observables_10_0 = null;

        EObject lv_observables_12_0 = null;

        EObject lv_dependencies_15_0 = null;

        EObject lv_dependencies_17_0 = null;

        EObject lv_contextualizers_19_0 = null;

        EObject lv_contextualizers_21_0 = null;

        EObject lv_classification_25_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_28_0 = null;

        EObject lv_lookupTable_36_0 = null;

        EObject lv_actions_38_0 = null;

        EObject lv_metadata_41_0 = null;

        EObject lv_documentation_44_0 = null;



        	enterRule();

        try {
            // InternalKim.g:583:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? ) )
            // InternalKim.g:584:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? )
            {
            // InternalKim.g:584:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )? )
            // InternalKim.g:585:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )? ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) ) ( (lv_docstring_13_0= RULE_STRING ) )? (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )? (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )? ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )? (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )? ( (lv_actions_38_0= ruleActionSpecification ) )* (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )? (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )?
            {
            // InternalKim.g:585:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==24) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // InternalKim.g:586:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:586:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:587:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,24,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:599:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?
            int alt12=2;
            alt12 = dfa12.predict(input);
            switch (alt12) {
                case 1 :
                    // InternalKim.g:600:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
                    {
                    // InternalKim.g:600:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
                    int alt11=5;
                    alt11 = dfa11.predict(input);
                    switch (alt11) {
                        case 1 :
                            // InternalKim.g:601:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            {
                            // InternalKim.g:601:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                            // InternalKim.g:602:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            {
                            // InternalKim.g:602:6: ( (lv_urns_1_0= ruleUrn ) )
                            // InternalKim.g:603:7: (lv_urns_1_0= ruleUrn )
                            {
                            // InternalKim.g:603:7: (lv_urns_1_0= ruleUrn )
                            // InternalKim.g:604:8: lv_urns_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                              							
                            }
                            pushFollow(FOLLOW_11);
                            lv_urns_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								add(
                              									current,
                              									"urns",
                              									lv_urns_1_0,
                              									"org.integratedmodelling.kim.Kim.Urn");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:621:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                            loop9:
                            do {
                                int alt9=2;
                                int LA9_0 = input.LA(1);

                                if ( (LA9_0==25) ) {
                                    alt9=1;
                                }


                                switch (alt9) {
                            	case 1 :
                            	    // InternalKim.g:622:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                            	    {
                            	    otherlv_2=(Token)match(input,25,FOLLOW_12); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_2, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_1_0_0_1_0());
                            	      						
                            	    }
                            	    // InternalKim.g:626:7: ( (lv_urns_3_0= ruleUrn ) )
                            	    // InternalKim.g:627:8: (lv_urns_3_0= ruleUrn )
                            	    {
                            	    // InternalKim.g:627:8: (lv_urns_3_0= ruleUrn )
                            	    // InternalKim.g:628:9: lv_urns_3_0= ruleUrn
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                            	      								
                            	    }
                            	    pushFollow(FOLLOW_11);
                            	    lv_urns_3_0=ruleUrn();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      									if (current==null) {
                            	      										current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                            	      									}
                            	      									add(
                            	      										current,
                            	      										"urns",
                            	      										lv_urns_3_0,
                            	      										"org.integratedmodelling.kim.Kim.Urn");
                            	      									afterParserOrEnumRuleCall();
                            	      								
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop9;
                                }
                            } while (true);


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:648:5: ( (lv_function_4_0= ruleFunction ) )
                            {
                            // InternalKim.g:648:5: ( (lv_function_4_0= ruleFunction ) )
                            // InternalKim.g:649:6: (lv_function_4_0= ruleFunction )
                            {
                            // InternalKim.g:649:6: (lv_function_4_0= ruleFunction )
                            // InternalKim.g:650:7: lv_function_4_0= ruleFunction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_9);
                            lv_function_4_0=ruleFunction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"function",
                              								lv_function_4_0,
                              								"org.integratedmodelling.kim.Kim.Function");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:668:5: ( (lv_number_5_0= ruleNumber ) )
                            {
                            // InternalKim.g:668:5: ( (lv_number_5_0= ruleNumber ) )
                            // InternalKim.g:669:6: (lv_number_5_0= ruleNumber )
                            {
                            // InternalKim.g:669:6: (lv_number_5_0= ruleNumber )
                            // InternalKim.g:670:7: lv_number_5_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_9);
                            lv_number_5_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_5_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:688:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            {
                            // InternalKim.g:688:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                            // InternalKim.g:689:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            {
                            // InternalKim.g:689:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                            // InternalKim.g:690:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            {
                            // InternalKim.g:690:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                            int alt10=2;
                            int LA10_0 = input.LA(1);

                            if ( (LA10_0==26) ) {
                                alt10=1;
                            }
                            else if ( (LA10_0==27) ) {
                                alt10=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 10, 0, input);

                                throw nvae;
                            }
                            switch (alt10) {
                                case 1 :
                                    // InternalKim.g:691:8: lv_boolean_6_1= 'true'
                                    {
                                    lv_boolean_6_1=(Token)match(input,26,FOLLOW_9); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:702:8: lv_boolean_6_2= 'false'
                                    {
                                    lv_boolean_6_2=(Token)match(input,27,FOLLOW_9); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_6_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_6_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:716:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            {
                            // InternalKim.g:716:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                            // InternalKim.g:717:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            {
                            // InternalKim.g:717:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                            // InternalKim.g:718:7: lv_concept_7_0= ruleSimpleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                              						
                            }
                            pushFollow(FOLLOW_9);
                            lv_concept_7_0=ruleSimpleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_7_0,
                              								"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_8=(Token)match(input,23,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_8, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:741:3: ( ( (lv_name_9_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==RULE_LOWERCASE_ID) ) {
                int LA14_1 = input.LA(2);

                if ( (LA14_1==23||LA14_1==36||LA14_1==90||LA14_1==92) ) {
                    alt14=2;
                }
                else if ( (LA14_1==EOF||LA14_1==RULE_STRING||LA14_1==19||(LA14_1>=28 && LA14_1<=31)||LA14_1==35||LA14_1==40||(LA14_1>=54 && LA14_1<=56)) ) {
                    alt14=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 14, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA14_0==RULE_UPPERCASE_ID||LA14_0==RULE_STRING||(LA14_0>=RULE_EXPR && LA14_0<=RULE_INT)||(LA14_0>=25 && LA14_0<=27)||LA14_0==36||(LA14_0>=49 && LA14_0<=50)||LA14_0==95||(LA14_0>=111 && LA14_0<=112)||(LA14_0>=120 && LA14_0<=121)||(LA14_0>=123 && LA14_0<=135)||LA14_0==189||(LA14_0>=231 && LA14_0<=232)) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalKim.g:742:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:742:4: ( (lv_name_9_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:743:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:743:5: (lv_name_9_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:744:6: lv_name_9_0= RULE_LOWERCASE_ID
                    {
                    lv_name_9_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_13); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_9_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_9_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:761:4: ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:761:4: ( ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )* )
                    // InternalKim.g:762:5: ( (lv_observables_10_0= ruleObservableSemantics ) ) (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )*
                    {
                    // InternalKim.g:762:5: ( (lv_observables_10_0= ruleObservableSemantics ) )
                    // InternalKim.g:763:6: (lv_observables_10_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:763:6: (lv_observables_10_0= ruleObservableSemantics )
                    // InternalKim.g:764:7: lv_observables_10_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_14);
                    lv_observables_10_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_10_0,
                      								"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:781:5: (otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==25) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalKim.g:782:6: otherlv_11= ',' ( (lv_observables_12_0= ruleObservableSemantics ) )
                    	    {
                    	    otherlv_11=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_11, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:786:6: ( (lv_observables_12_0= ruleObservableSemantics ) )
                    	    // InternalKim.g:787:7: (lv_observables_12_0= ruleObservableSemantics )
                    	    {
                    	    // InternalKim.g:787:7: (lv_observables_12_0= ruleObservableSemantics )
                    	    // InternalKim.g:788:8: lv_observables_12_0= ruleObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_14);
                    	    lv_observables_12_0=ruleObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_12_0,
                    	      									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:808:3: ( (lv_docstring_13_0= RULE_STRING ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==RULE_STRING) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // InternalKim.g:809:4: (lv_docstring_13_0= RULE_STRING )
                    {
                    // InternalKim.g:809:4: (lv_docstring_13_0= RULE_STRING )
                    // InternalKim.g:810:5: lv_docstring_13_0= RULE_STRING
                    {
                    lv_docstring_13_0=(Token)match(input,RULE_STRING,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_13_0, grammarAccess.getModelBodyStatementAccess().getDocstringSTRINGTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_13_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:826:3: (otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )* )?
            int alt17=2;
            int LA17_0 = input.LA(1);

            if ( (LA17_0==28) ) {
                alt17=1;
            }
            switch (alt17) {
                case 1 :
                    // InternalKim.g:827:4: otherlv_14= 'observing' ( (lv_dependencies_15_0= ruleDependency ) ) (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )*
                    {
                    otherlv_14=(Token)match(input,28,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:831:4: ( (lv_dependencies_15_0= ruleDependency ) )
                    // InternalKim.g:832:5: (lv_dependencies_15_0= ruleDependency )
                    {
                    // InternalKim.g:832:5: (lv_dependencies_15_0= ruleDependency )
                    // InternalKim.g:833:6: lv_dependencies_15_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_dependencies_15_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_15_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:850:4: (otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) ) )*
                    loop16:
                    do {
                        int alt16=2;
                        int LA16_0 = input.LA(1);

                        if ( (LA16_0==25) ) {
                            alt16=1;
                        }


                        switch (alt16) {
                    	case 1 :
                    	    // InternalKim.g:851:5: otherlv_16= ',' ( (lv_dependencies_17_0= ruleDependency ) )
                    	    {
                    	    otherlv_16=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_16, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:855:5: ( (lv_dependencies_17_0= ruleDependency ) )
                    	    // InternalKim.g:856:6: (lv_dependencies_17_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:856:6: (lv_dependencies_17_0= ruleDependency )
                    	    // InternalKim.g:857:7: lv_dependencies_17_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_16);
                    	    lv_dependencies_17_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_17_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop16;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:876:3: (otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )* )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==29) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalKim.g:877:4: otherlv_18= 'using' ( (lv_contextualizers_19_0= ruleValueExecution ) ) (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )*
                    {
                    otherlv_18=(Token)match(input,29,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_5_0());
                      			
                    }
                    // InternalKim.g:881:4: ( (lv_contextualizers_19_0= ruleValueExecution ) )
                    // InternalKim.g:882:5: (lv_contextualizers_19_0= ruleValueExecution )
                    {
                    // InternalKim.g:882:5: (lv_contextualizers_19_0= ruleValueExecution )
                    // InternalKim.g:883:6: lv_contextualizers_19_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_1_0());
                      					
                    }
                    pushFollow(FOLLOW_18);
                    lv_contextualizers_19_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_19_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:900:4: (otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) ) )*
                    loop18:
                    do {
                        int alt18=2;
                        int LA18_0 = input.LA(1);

                        if ( (LA18_0==25) ) {
                            alt18=1;
                        }


                        switch (alt18) {
                    	case 1 :
                    	    // InternalKim.g:901:5: otherlv_20= ',' ( (lv_contextualizers_21_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_20=(Token)match(input,25,FOLLOW_17); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_20, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_5_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:905:5: ( (lv_contextualizers_21_0= ruleValueExecution ) )
                    	    // InternalKim.g:906:6: (lv_contextualizers_21_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:906:6: (lv_contextualizers_21_0= ruleValueExecution )
                    	    // InternalKim.g:907:7: lv_contextualizers_21_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersValueExecutionParserRuleCall_5_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_18);
                    	    lv_contextualizers_21_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_21_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop18;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:926:3: ( (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( ((LA22_0>=30 && LA22_0<=31)) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // InternalKim.g:927:4: (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) ) ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:927:4: (otherlv_22= 'classified' | ( (lv_discretization_23_0= 'discretized' ) ) )
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==30) ) {
                        alt20=1;
                    }
                    else if ( (LA20_0==31) ) {
                        alt20=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 0, input);

                        throw nvae;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalKim.g:928:5: otherlv_22= 'classified'
                            {
                            otherlv_22=(Token)match(input,30,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_22, grammarAccess.getModelBodyStatementAccess().getClassifiedKeyword_6_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:933:5: ( (lv_discretization_23_0= 'discretized' ) )
                            {
                            // InternalKim.g:933:5: ( (lv_discretization_23_0= 'discretized' ) )
                            // InternalKim.g:934:6: (lv_discretization_23_0= 'discretized' )
                            {
                            // InternalKim.g:934:6: (lv_discretization_23_0= 'discretized' )
                            // InternalKim.g:935:7: lv_discretization_23_0= 'discretized'
                            {
                            lv_discretization_23_0=(Token)match(input,31,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_23_0, grammarAccess.getModelBodyStatementAccess().getDiscretizationDiscretizedKeyword_6_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:948:4: ( (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) ) | (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) ) )
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==32) ) {
                        alt21=1;
                    }
                    else if ( (LA21_0==33) ) {
                        alt21=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 21, 0, input);

                        throw nvae;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalKim.g:949:5: (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) )
                            {
                            // InternalKim.g:949:5: (otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) ) )
                            // InternalKim.g:950:6: otherlv_24= 'into' ( (lv_classification_25_0= ruleClassification ) )
                            {
                            otherlv_24=(Token)match(input,32,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_24, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_6_1_0_0());
                              					
                            }
                            // InternalKim.g:954:6: ( (lv_classification_25_0= ruleClassification ) )
                            // InternalKim.g:955:7: (lv_classification_25_0= ruleClassification )
                            {
                            // InternalKim.g:955:7: (lv_classification_25_0= ruleClassification )
                            // InternalKim.g:956:8: lv_classification_25_0= ruleClassification
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationClassificationParserRuleCall_6_1_0_1_0());
                              							
                            }
                            pushFollow(FOLLOW_21);
                            lv_classification_25_0=ruleClassification();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classification",
                              									lv_classification_25_0,
                              									"org.integratedmodelling.kim.Kim.Classification");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:975:5: (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) )
                            {
                            // InternalKim.g:975:5: (otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) ) )
                            // InternalKim.g:976:6: otherlv_26= 'according' otherlv_27= 'to' ( (lv_classificationProperty_28_0= rulePropertyId ) )
                            {
                            otherlv_26=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_26, grammarAccess.getModelBodyStatementAccess().getAccordingKeyword_6_1_1_0());
                              					
                            }
                            otherlv_27=(Token)match(input,34,FOLLOW_23); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_27, grammarAccess.getModelBodyStatementAccess().getToKeyword_6_1_1_1());
                              					
                            }
                            // InternalKim.g:984:6: ( (lv_classificationProperty_28_0= rulePropertyId ) )
                            // InternalKim.g:985:7: (lv_classificationProperty_28_0= rulePropertyId )
                            {
                            // InternalKim.g:985:7: (lv_classificationProperty_28_0= rulePropertyId )
                            // InternalKim.g:986:8: lv_classificationProperty_28_0= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getClassificationPropertyPropertyIdParserRuleCall_6_1_1_2_0());
                              							
                            }
                            pushFollow(FOLLOW_21);
                            lv_classificationProperty_28_0=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              								}
                              								set(
                              									current,
                              									"classificationProperty",
                              									lv_classificationProperty_28_0,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1006:3: (otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==35) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalKim.g:1007:4: otherlv_29= 'lookup' (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )? otherlv_35= 'into' ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) )
                    {
                    otherlv_29=(Token)match(input,35,FOLLOW_24); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_29, grammarAccess.getModelBodyStatementAccess().getLookupKeyword_7_0());
                      			
                    }
                    // InternalKim.g:1011:4: (otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')' )?
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==36) ) {
                        alt26=1;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalKim.g:1012:5: otherlv_30= '(' ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) ) (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )* otherlv_34= ')'
                            {
                            otherlv_30=(Token)match(input,36,FOLLOW_25); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_30, grammarAccess.getModelBodyStatementAccess().getLeftParenthesisKeyword_7_1_0());
                              				
                            }
                            // InternalKim.g:1016:5: ( ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) ) )
                            // InternalKim.g:1017:6: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            {
                            // InternalKim.g:1017:6: ( (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' ) )
                            // InternalKim.g:1018:7: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            {
                            // InternalKim.g:1018:7: (lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_31_2= '?' | lv_lookupTableArgs_31_3= '*' )
                            int alt23=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt23=1;
                                }
                                break;
                            case 37:
                                {
                                alt23=2;
                                }
                                break;
                            case 38:
                                {
                                alt23=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 23, 0, input);

                                throw nvae;
                            }

                            switch (alt23) {
                                case 1 :
                                    // InternalKim.g:1019:8: lv_lookupTableArgs_31_1= RULE_LOWERCASE_ID
                                    {
                                    lv_lookupTableArgs_31_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_26); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(
                                      									current,
                                      									"lookupTableArgs",
                                      									lv_lookupTableArgs_31_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:1034:8: lv_lookupTableArgs_31_2= '?'
                                    {
                                    lv_lookupTableArgs_31_2=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_2, null);
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:1045:8: lv_lookupTableArgs_31_3= '*'
                                    {
                                    lv_lookupTableArgs_31_3=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_lookupTableArgs_31_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_31_3, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:1058:5: (otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) ) )*
                            loop25:
                            do {
                                int alt25=2;
                                int LA25_0 = input.LA(1);

                                if ( (LA25_0==25) ) {
                                    alt25=1;
                                }


                                switch (alt25) {
                            	case 1 :
                            	    // InternalKim.g:1059:6: otherlv_32= ',' ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) )
                            	    {
                            	    otherlv_32=(Token)match(input,25,FOLLOW_25); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      						newLeafNode(otherlv_32, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_7_1_2_0());
                            	      					
                            	    }
                            	    // InternalKim.g:1063:6: ( ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) ) )
                            	    // InternalKim.g:1064:7: ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) )
                            	    {
                            	    // InternalKim.g:1064:7: ( (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' ) )
                            	    // InternalKim.g:1065:8: (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' )
                            	    {
                            	    // InternalKim.g:1065:8: (lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID | lv_lookupTableArgs_33_2= '?' | lv_lookupTableArgs_33_3= '*' )
                            	    int alt24=3;
                            	    switch ( input.LA(1) ) {
                            	    case RULE_LOWERCASE_ID:
                            	        {
                            	        alt24=1;
                            	        }
                            	        break;
                            	    case 37:
                            	        {
                            	        alt24=2;
                            	        }
                            	        break;
                            	    case 38:
                            	        {
                            	        alt24=3;
                            	        }
                            	        break;
                            	    default:
                            	        if (state.backtracking>0) {state.failed=true; return current;}
                            	        NoViableAltException nvae =
                            	            new NoViableAltException("", 24, 0, input);

                            	        throw nvae;
                            	    }

                            	    switch (alt24) {
                            	        case 1 :
                            	            // InternalKim.g:1066:9: lv_lookupTableArgs_33_1= RULE_LOWERCASE_ID
                            	            {
                            	            lv_lookupTableArgs_33_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_26); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_1, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsLOWERCASE_IDTerminalRuleCall_7_1_2_1_0_0());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(
                            	              										current,
                            	              										"lookupTableArgs",
                            	              										lv_lookupTableArgs_33_1,
                            	              										"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 2 :
                            	            // InternalKim.g:1081:9: lv_lookupTableArgs_33_2= '?'
                            	            {
                            	            lv_lookupTableArgs_33_2=(Token)match(input,37,FOLLOW_26); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_2, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsQuestionMarkKeyword_7_1_2_1_0_1());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_33_2, null);
                            	              								
                            	            }

                            	            }
                            	            break;
                            	        case 3 :
                            	            // InternalKim.g:1092:9: lv_lookupTableArgs_33_3= '*'
                            	            {
                            	            lv_lookupTableArgs_33_3=(Token)match(input,38,FOLLOW_26); if (state.failed) return current;
                            	            if ( state.backtracking==0 ) {

                            	              									newLeafNode(lv_lookupTableArgs_33_3, grammarAccess.getModelBodyStatementAccess().getLookupTableArgsAsteriskKeyword_7_1_2_1_0_2());
                            	              								
                            	            }
                            	            if ( state.backtracking==0 ) {

                            	              									if (current==null) {
                            	              										current = createModelElement(grammarAccess.getModelBodyStatementRule());
                            	              									}
                            	              									addWithLastConsumed(current, "lookupTableArgs", lv_lookupTableArgs_33_3, null);
                            	              								
                            	            }

                            	            }
                            	            break;

                            	    }


                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop25;
                                }
                            } while (true);

                            otherlv_34=(Token)match(input,39,FOLLOW_27); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_34, grammarAccess.getModelBodyStatementAccess().getRightParenthesisKeyword_7_1_3());
                              				
                            }

                            }
                            break;

                    }

                    otherlv_35=(Token)match(input,32,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_35, grammarAccess.getModelBodyStatementAccess().getIntoKeyword_7_2());
                      			
                    }
                    // InternalKim.g:1115:4: ( ( (lv_lookupTable_36_0= ruleTable ) ) | ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) ) )
                    int alt27=2;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==RULE_LOWERCASE_ID) ) {
                        int LA27_1 = input.LA(2);

                        if ( (LA27_1==EOF||LA27_1==19||LA27_1==40||(LA27_1>=54 && LA27_1<=56)) ) {
                            alt27=2;
                        }
                        else if ( (LA27_1==RULE_SEPARATOR||LA27_1==52||LA27_1==90||LA27_1==92) ) {
                            alt27=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 27, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA27_0==RULE_STRING||(LA27_0>=RULE_EXPR && LA27_0<=RULE_LOWERCASE_DASHID)||LA27_0==RULE_INT||(LA27_0>=26 && LA27_0<=27)||LA27_0==36||LA27_0==38||(LA27_0>=48 && LA27_0<=49)||LA27_0==53||(LA27_0>=111 && LA27_0<=112)||(LA27_0>=120 && LA27_0<=121)||(LA27_0>=123 && LA27_0<=135)||LA27_0==192||(LA27_0>=225 && LA27_0<=229)||(LA27_0>=231 && LA27_0<=232)) ) {
                        alt27=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 27, 0, input);

                        throw nvae;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalKim.g:1116:5: ( (lv_lookupTable_36_0= ruleTable ) )
                            {
                            // InternalKim.g:1116:5: ( (lv_lookupTable_36_0= ruleTable ) )
                            // InternalKim.g:1117:6: (lv_lookupTable_36_0= ruleTable )
                            {
                            // InternalKim.g:1117:6: (lv_lookupTable_36_0= ruleTable )
                            // InternalKim.g:1118:7: lv_lookupTable_36_0= ruleTable
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getLookupTableTableParserRuleCall_7_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_29);
                            lv_lookupTable_36_0=ruleTable();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"lookupTable",
                              								lv_lookupTable_36_0,
                              								"org.integratedmodelling.kim.Kim.Table");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1136:5: ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) )
                            {
                            // InternalKim.g:1136:5: ( (lv_lookupTableId_37_0= RULE_LOWERCASE_ID ) )
                            // InternalKim.g:1137:6: (lv_lookupTableId_37_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:1137:6: (lv_lookupTableId_37_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:1138:7: lv_lookupTableId_37_0= RULE_LOWERCASE_ID
                            {
                            lv_lookupTableId_37_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_29); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_lookupTableId_37_0, grammarAccess.getModelBodyStatementAccess().getLookupTableIdLOWERCASE_IDTerminalRuleCall_7_3_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getModelBodyStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"lookupTableId",
                              								lv_lookupTableId_37_0,
                              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:1156:3: ( (lv_actions_38_0= ruleActionSpecification ) )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( ((LA29_0>=54 && LA29_0<=56)) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalKim.g:1157:4: (lv_actions_38_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:1157:4: (lv_actions_38_0= ruleActionSpecification )
            	    // InternalKim.g:1158:5: lv_actions_38_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_8_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_29);
            	    lv_actions_38_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_38_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            // InternalKim.g:1175:3: (otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) ) )?
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==40) ) {
                int LA30_1 = input.LA(2);

                if ( (LA30_1==41) ) {
                    alt30=1;
                }
            }
            switch (alt30) {
                case 1 :
                    // InternalKim.g:1176:4: otherlv_39= 'with' otherlv_40= 'metadata' ( (lv_metadata_41_0= ruleMetadata ) )
                    {
                    otherlv_39=(Token)match(input,40,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getModelBodyStatementAccess().getWithKeyword_9_0());
                      			
                    }
                    otherlv_40=(Token)match(input,41,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_40, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_9_1());
                      			
                    }
                    // InternalKim.g:1184:4: ( (lv_metadata_41_0= ruleMetadata ) )
                    // InternalKim.g:1185:5: (lv_metadata_41_0= ruleMetadata )
                    {
                    // InternalKim.g:1185:5: (lv_metadata_41_0= ruleMetadata )
                    // InternalKim.g:1186:6: lv_metadata_41_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMetadataParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_32);
                    lv_metadata_41_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_41_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:1204:3: (otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==40) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalKim.g:1205:4: otherlv_42= 'with' otherlv_43= 'documentation' ( (lv_documentation_44_0= ruleDocumentation ) )
                    {
                    otherlv_42=(Token)match(input,40,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getModelBodyStatementAccess().getWithKeyword_10_0());
                      			
                    }
                    otherlv_43=(Token)match(input,42,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_43, grammarAccess.getModelBodyStatementAccess().getDocumentationKeyword_10_1());
                      			
                    }
                    // InternalKim.g:1213:4: ( (lv_documentation_44_0= ruleDocumentation ) )
                    // InternalKim.g:1214:5: (lv_documentation_44_0= ruleDocumentation )
                    {
                    // InternalKim.g:1214:5: (lv_documentation_44_0= ruleDocumentation )
                    // InternalKim.g:1215:6: lv_documentation_44_0= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDocumentationDocumentationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_documentation_44_0=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_44_0,
                      							"org.integratedmodelling.kim.Kim.Documentation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:1237:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:1237:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:1238:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:1244:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1250:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:1251:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:1251:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:1252:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:1252:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:1253:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:1253:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:1254:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1271:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==25) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalKim.g:1272:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1272:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1273:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1279:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1280:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1280:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1281:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1303:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1303:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1304:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1310:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1316:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1317:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1317:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1318:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1318:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1319:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1319:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1320:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_35);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1337:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt34=3;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==43) ) {
                alt34=1;
            }
            else if ( ((LA34_0>=44 && LA34_0<=45)) ) {
                alt34=2;
            }
            switch (alt34) {
                case 1 :
                    // InternalKim.g:1338:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1338:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1339:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1339:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1340:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1353:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1353:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1354:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1354:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt33=2;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==44) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==45) ) {
                        alt33=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 33, 0, input);

                        throw nvae;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalKim.g:1355:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,44,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1360:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1360:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1361:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1361:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1362:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,45,FOLLOW_36); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1375:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1376:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1376:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1377:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1400:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1400:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1401:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1407:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1413:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1414:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1414:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt39=10;
            alt39 = dfa39.predict(input);
            switch (alt39) {
                case 1 :
                    // InternalKim.g:1415:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1415:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt35=2;
                    int LA35_0 = input.LA(1);

                    if ( (LA35_0==26) ) {
                        alt35=1;
                    }
                    else if ( (LA35_0==27) ) {
                        alt35=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 35, 0, input);

                        throw nvae;
                    }
                    switch (alt35) {
                        case 1 :
                            // InternalKim.g:1416:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1416:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1417:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1417:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1418:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1431:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1431:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1432:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1432:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1433:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1447:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1447:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1448:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1448:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1449:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1449:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1450:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1467:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt36=3;
                    int LA36_0 = input.LA(1);

                    if ( (LA36_0==46) ) {
                        alt36=1;
                    }
                    else if ( (LA36_0==47) ) {
                        alt36=2;
                    }
                    switch (alt36) {
                        case 1 :
                            // InternalKim.g:1468:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1468:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1469:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1469:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1470:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1483:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1488:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1489:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1495:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1496:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1500:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1501:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1518:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt37=3;
                    int LA37_0 = input.LA(1);

                    if ( (LA37_0==46) ) {
                        alt37=1;
                    }
                    else if ( (LA37_0==47) ) {
                        alt37=2;
                    }
                    switch (alt37) {
                        case 1 :
                            // InternalKim.g:1519:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1519:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1520:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1520:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1521:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1534:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1541:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1541:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1542:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1542:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1543:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1561:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1561:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1562:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1566:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1567:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1567:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1568:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1587:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1587:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1588:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1588:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1589:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1606:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1606:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1607:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1607:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1608:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1626:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1626:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1627:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,36,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1631:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1632:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1632:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1633:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_26);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1650:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop38:
                    do {
                        int alt38=2;
                        int LA38_0 = input.LA(1);

                        if ( (LA38_0==25) ) {
                            alt38=1;
                        }


                        switch (alt38) {
                    	case 1 :
                    	    // InternalKim.g:1651:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1651:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1652:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1658:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1659:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1659:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1660:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_26);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop38;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1684:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1684:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1685:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1685:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1686:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1686:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1687:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1704:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1705:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1705:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1706:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1725:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1725:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1726:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1726:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1727:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1740:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1740:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1741:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1741:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1742:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithId"
    // InternalKim.g:1758:1: entryRuleClassifierRHSWithId returns [EObject current=null] : iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF ;
    public final EObject entryRuleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithId = null;


        try {
            // InternalKim.g:1758:60: (iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF )
            // InternalKim.g:1759:2: iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithId=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithId"


    // $ANTLR start "ruleClassifierRHSWithId"
    // InternalKim.g:1765:1: ruleClassifierRHSWithId returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_id_14_1=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        AntlrDatatypeRuleToken lv_id_14_2 = null;

        EObject lv_op_15_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1771:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) )
            // InternalKim.g:1772:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            {
            // InternalKim.g:1772:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            int alt44=10;
            alt44 = dfa44.predict(input);
            switch (alt44) {
                case 1 :
                    // InternalKim.g:1773:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1773:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt40=2;
                    int LA40_0 = input.LA(1);

                    if ( (LA40_0==26) ) {
                        alt40=1;
                    }
                    else if ( (LA40_0==27) ) {
                        alt40=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 0, input);

                        throw nvae;
                    }
                    switch (alt40) {
                        case 1 :
                            // InternalKim.g:1774:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1774:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1775:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1775:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1776:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1789:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1789:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1790:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1790:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1791:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1805:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1805:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1806:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1806:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1807:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1807:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1808:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1825:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt41=3;
                    int LA41_0 = input.LA(1);

                    if ( (LA41_0==46) ) {
                        alt41=1;
                    }
                    else if ( (LA41_0==47) ) {
                        alt41=2;
                    }
                    switch (alt41) {
                        case 1 :
                            // InternalKim.g:1826:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1826:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1827:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1827:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1828:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1841:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1846:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1847:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1853:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1854:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1858:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1859:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1876:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt42=3;
                    int LA42_0 = input.LA(1);

                    if ( (LA42_0==46) ) {
                        alt42=1;
                    }
                    else if ( (LA42_0==47) ) {
                        alt42=2;
                    }
                    switch (alt42) {
                        case 1 :
                            // InternalKim.g:1877:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1877:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1878:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1878:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1879:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1892:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1899:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1899:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1900:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1900:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1901:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1919:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1919:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1920:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSWithIdAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1924:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1925:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1925:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1926:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1945:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1945:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1946:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1946:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1947:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSWithIdAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1964:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1964:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1965:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1965:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1966:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1984:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:1984:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    // InternalKim.g:1985:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    {
                    // InternalKim.g:1985:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    // InternalKim.g:1986:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    {
                    // InternalKim.g:1986:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    int alt43=2;
                    alt43 = dfa43.predict(input);
                    switch (alt43) {
                        case 1 :
                            // InternalKim.g:1987:6: lv_id_14_1= RULE_LOWERCASE_ID
                            {
                            lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_14_1, grammarAccess.getClassifierRHSWithIdAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_14_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2002:6: lv_id_14_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_14_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_14_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2021:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2021:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    // InternalKim.g:2022:4: ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) )
                    {
                    // InternalKim.g:2022:4: ( (lv_op_15_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2023:5: (lv_op_15_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2023:5: (lv_op_15_0= ruleREL_OPERATOR )
                    // InternalKim.g:2024:6: lv_op_15_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_15_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_15_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2041:4: ( (lv_expression_16_0= ruleNumber ) )
                    // InternalKim.g:2042:5: (lv_expression_16_0= ruleNumber )
                    {
                    // InternalKim.g:2042:5: (lv_expression_16_0= ruleNumber )
                    // InternalKim.g:2043:6: lv_expression_16_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_16_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2062:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2062:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2063:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2063:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2064:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierRHSWithIdAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2077:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2077:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2078:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2078:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2079:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getClassifierRHSWithIdAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithId"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:2095:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:2095:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:2096:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:2102:1: ruleUrn returns [EObject current=null] : ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:2108:2: ( ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) )
            // InternalKim.g:2109:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            {
            // InternalKim.g:2109:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            // InternalKim.g:2110:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            {
            // InternalKim.g:2110:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            // InternalKim.g:2111:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            {
            // InternalKim.g:2111:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            int alt45=3;
            switch ( input.LA(1) ) {
            case 89:
                {
                alt45=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case 23:
                case 25:
                case 53:
                case 91:
                    {
                    alt45=3;
                    }
                    break;
                case 92:
                    {
                    int LA45_6 = input.LA(3);

                    if ( (LA45_6==RULE_LOWERCASE_ID) ) {
                        int LA45_7 = input.LA(4);

                        if ( (LA45_7==90||LA45_7==92) ) {
                            alt45=1;
                        }
                        else if ( (LA45_7==EOF||LA45_7==23||LA45_7==25||LA45_7==53) ) {
                            alt45=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 45, 7, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA45_6==RULE_LOWERCASE_DASHID) ) {
                        alt45=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    alt45=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                switch ( input.LA(2) ) {
                case 92:
                    {
                    int LA45_6 = input.LA(3);

                    if ( (LA45_6==RULE_LOWERCASE_ID) ) {
                        int LA45_7 = input.LA(4);

                        if ( (LA45_7==90||LA45_7==92) ) {
                            alt45=1;
                        }
                        else if ( (LA45_7==EOF||LA45_7==23||LA45_7==25||LA45_7==53) ) {
                            alt45=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 45, 7, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA45_6==RULE_LOWERCASE_DASHID) ) {
                        alt45=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 6, input);

                        throw nvae;
                    }
                    }
                    break;
                case 90:
                    {
                    alt45=1;
                    }
                    break;
                case EOF:
                case 23:
                case 25:
                case 53:
                case 91:
                    {
                    alt45=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 3, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt45=2;
                }
                break;
            case RULE_CAMELCASE_ID:
                {
                alt45=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;
            }

            switch (alt45) {
                case 1 :
                    // InternalKim.g:2112:5: lv_name_0_1= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_1=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2128:5: lv_name_0_2= RULE_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_2, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUrnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:2143:5: lv_name_0_3= ruleLocalFilePath
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_2());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_3=ruleLocalFilePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.integratedmodelling.kim.Kim.LocalFilePath");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:2164:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:2164:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:2165:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:2171:1: ruleLookupTable returns [EObject current=null] : ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_table_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2177:2: ( ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' ) )
            // InternalKim.g:2178:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            {
            // InternalKim.g:2178:2: ( () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}' )
            // InternalKim.g:2179:3: () otherlv_1= '{{' ( (lv_table_2_0= ruleTable ) )? otherlv_3= '}}'
            {
            // InternalKim.g:2179:3: ()
            // InternalKim.g:2180:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getLookupTableAccess().getLookupTableAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,50,FOLLOW_41); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getLookupTableAccess().getLeftCurlyBracketLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:2193:3: ( (lv_table_2_0= ruleTable ) )?
            int alt46=2;
            int LA46_0 = input.LA(1);

            if ( ((LA46_0>=RULE_LOWERCASE_ID && LA46_0<=RULE_STRING)||(LA46_0>=RULE_EXPR && LA46_0<=RULE_LOWERCASE_DASHID)||LA46_0==RULE_INT||(LA46_0>=26 && LA46_0<=27)||LA46_0==36||LA46_0==38||(LA46_0>=48 && LA46_0<=49)||LA46_0==53||(LA46_0>=111 && LA46_0<=112)||(LA46_0>=120 && LA46_0<=121)||(LA46_0>=123 && LA46_0<=135)||LA46_0==192||(LA46_0>=225 && LA46_0<=229)||(LA46_0>=231 && LA46_0<=232)) ) {
                alt46=1;
            }
            switch (alt46) {
                case 1 :
                    // InternalKim.g:2194:4: (lv_table_2_0= ruleTable )
                    {
                    // InternalKim.g:2194:4: (lv_table_2_0= ruleTable )
                    // InternalKim.g:2195:5: lv_table_2_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_42);
                    lv_table_2_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_2_0,
                      						"org.integratedmodelling.kim.Kim.Table");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,51,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getLookupTableAccess().getRightCurlyBracketRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2220:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2220:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2221:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2227:1: ruleTable returns [EObject current=null] : ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token this_SEPARATOR_1=null;
        Token otherlv_3=null;
        EObject lv_headers_0_0 = null;

        EObject lv_rows_2_0 = null;

        EObject lv_rows_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2233:2: ( ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* ) )
            // InternalKim.g:2234:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            {
            // InternalKim.g:2234:2: ( ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )* )
            // InternalKim.g:2235:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )? ( (lv_rows_2_0= ruleTableRow ) ) (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            {
            // InternalKim.g:2235:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?
            int alt47=2;
            alt47 = dfa47.predict(input);
            switch (alt47) {
                case 1 :
                    // InternalKim.g:2236:4: ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR
                    {
                    // InternalKim.g:2236:4: ( (lv_headers_0_0= ruleHeaderRow ) )
                    // InternalKim.g:2237:5: (lv_headers_0_0= ruleHeaderRow )
                    {
                    // InternalKim.g:2237:5: (lv_headers_0_0= ruleHeaderRow )
                    // InternalKim.g:2238:6: lv_headers_0_0= ruleHeaderRow
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableAccess().getHeadersHeaderRowParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_43);
                    lv_headers_0_0=ruleHeaderRow();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableRule());
                      						}
                      						set(
                      							current,
                      							"headers",
                      							lv_headers_0_0,
                      							"org.integratedmodelling.kim.Kim.HeaderRow");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    this_SEPARATOR_1=(Token)match(input,RULE_SEPARATOR,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_SEPARATOR_1, grammarAccess.getTableAccess().getSEPARATORTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:2260:3: ( (lv_rows_2_0= ruleTableRow ) )
            // InternalKim.g:2261:4: (lv_rows_2_0= ruleTableRow )
            {
            // InternalKim.g:2261:4: (lv_rows_2_0= ruleTableRow )
            // InternalKim.g:2262:5: lv_rows_2_0= ruleTableRow
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_34);
            lv_rows_2_0=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"rows",
              						lv_rows_2_0,
              						"org.integratedmodelling.kim.Kim.TableRow");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2279:3: (otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==25) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalKim.g:2280:4: otherlv_3= ',' ( (lv_rows_4_0= ruleTableRow ) )
            	    {
            	    otherlv_3=(Token)match(input,25,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_3, grammarAccess.getTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:2284:4: ( (lv_rows_4_0= ruleTableRow ) )
            	    // InternalKim.g:2285:5: (lv_rows_4_0= ruleTableRow )
            	    {
            	    // InternalKim.g:2285:5: (lv_rows_4_0= ruleTableRow )
            	    // InternalKim.g:2286:6: lv_rows_4_0= ruleTableRow
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getRowsTableRowParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_34);
            	    lv_rows_4_0=ruleTableRow();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"rows",
            	      							lv_rows_4_0,
            	      							"org.integratedmodelling.kim.Kim.TableRow");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleHeaderRow"
    // InternalKim.g:2308:1: entryRuleHeaderRow returns [EObject current=null] : iv_ruleHeaderRow= ruleHeaderRow EOF ;
    public final EObject entryRuleHeaderRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleHeaderRow = null;


        try {
            // InternalKim.g:2308:50: (iv_ruleHeaderRow= ruleHeaderRow EOF )
            // InternalKim.g:2309:2: iv_ruleHeaderRow= ruleHeaderRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getHeaderRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleHeaderRow=ruleHeaderRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleHeaderRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleHeaderRow"


    // $ANTLR start "ruleHeaderRow"
    // InternalKim.g:2315:1: ruleHeaderRow returns [EObject current=null] : ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) ;
    public final EObject ruleHeaderRow() throws RecognitionException {
        EObject current = null;

        Token lv_elements_0_1=null;
        Token lv_elements_0_2=null;
        Token otherlv_1=null;
        Token lv_elements_2_1=null;
        Token lv_elements_2_2=null;


        	enterRule();

        try {
            // InternalKim.g:2321:2: ( ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* ) )
            // InternalKim.g:2322:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            {
            // InternalKim.g:2322:2: ( ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )* )
            // InternalKim.g:2323:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) ) (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            {
            // InternalKim.g:2323:3: ( ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) ) )
            // InternalKim.g:2324:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            {
            // InternalKim.g:2324:4: ( (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING ) )
            // InternalKim.g:2325:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            {
            // InternalKim.g:2325:5: (lv_elements_0_1= RULE_LOWERCASE_ID | lv_elements_0_2= RULE_STRING )
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==RULE_LOWERCASE_ID) ) {
                alt49=1;
            }
            else if ( (LA49_0==RULE_STRING) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;
            }
            switch (alt49) {
                case 1 :
                    // InternalKim.g:2326:6: lv_elements_0_1= RULE_LOWERCASE_ID
                    {
                    lv_elements_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2341:6: lv_elements_0_2= RULE_STRING
                    {
                    lv_elements_0_2=(Token)match(input,RULE_STRING,FOLLOW_44); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_elements_0_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getHeaderRowRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"elements",
                      							lv_elements_0_2,
                      							"org.eclipse.xtext.common.Terminals.STRING");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:2358:3: (otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) ) )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==52) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalKim.g:2359:4: otherlv_1= '|' ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_45); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getHeaderRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2363:4: ( ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) ) )
            	    // InternalKim.g:2364:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    {
            	    // InternalKim.g:2364:5: ( (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING ) )
            	    // InternalKim.g:2365:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    {
            	    // InternalKim.g:2365:6: (lv_elements_2_1= RULE_LOWERCASE_ID | lv_elements_2_2= RULE_STRING )
            	    int alt50=2;
            	    int LA50_0 = input.LA(1);

            	    if ( (LA50_0==RULE_LOWERCASE_ID) ) {
            	        alt50=1;
            	    }
            	    else if ( (LA50_0==RULE_STRING) ) {
            	        alt50=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 50, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt50) {
            	        case 1 :
            	            // InternalKim.g:2366:7: lv_elements_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_elements_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_1, grammarAccess.getHeaderRowAccess().getElementsLOWERCASE_IDTerminalRuleCall_1_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:2381:7: lv_elements_2_2= RULE_STRING
            	            {
            	            lv_elements_2_2=(Token)match(input,RULE_STRING,FOLLOW_44); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_elements_2_2, grammarAccess.getHeaderRowAccess().getElementsSTRINGTerminalRuleCall_1_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getHeaderRowRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"elements",
            	              								lv_elements_2_2,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleHeaderRow"


    // $ANTLR start "entryRuleTableRow"
    // InternalKim.g:2403:1: entryRuleTableRow returns [EObject current=null] : iv_ruleTableRow= ruleTableRow EOF ;
    public final EObject entryRuleTableRow() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableRow = null;


        try {
            // InternalKim.g:2403:49: (iv_ruleTableRow= ruleTableRow EOF )
            // InternalKim.g:2404:2: iv_ruleTableRow= ruleTableRow EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRowRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableRow=ruleTableRow();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableRow; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableRow"


    // $ANTLR start "ruleTableRow"
    // InternalKim.g:2410:1: ruleTableRow returns [EObject current=null] : ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTableRow() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_elements_0_0 = null;

        EObject lv_elements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2416:2: ( ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2417:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2417:2: ( ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2418:3: ( (lv_elements_0_0= ruleTableClassifier ) ) (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            {
            // InternalKim.g:2418:3: ( (lv_elements_0_0= ruleTableClassifier ) )
            // InternalKim.g:2419:4: (lv_elements_0_0= ruleTableClassifier )
            {
            // InternalKim.g:2419:4: (lv_elements_0_0= ruleTableClassifier )
            // InternalKim.g:2420:5: lv_elements_0_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_44);
            lv_elements_0_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRowRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_0_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2437:3: (otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==52) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalKim.g:2438:4: otherlv_1= '|' ( (lv_elements_2_0= ruleTableClassifier ) )
            	    {
            	    otherlv_1=(Token)match(input,52,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_1, grammarAccess.getTableRowAccess().getVerticalLineKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:2442:4: ( (lv_elements_2_0= ruleTableClassifier ) )
            	    // InternalKim.g:2443:5: (lv_elements_2_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2443:5: (lv_elements_2_0= ruleTableClassifier )
            	    // InternalKim.g:2444:6: lv_elements_2_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableRowAccess().getElementsTableClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_44);
            	    lv_elements_2_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRowRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_2_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableRow"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2466:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2466:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2467:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2473:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_expr_16_0=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        Token lv_anything_19_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_op_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2479:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) ) )
            // InternalKim.g:2480:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            {
            // InternalKim.g:2480:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )
            int alt56=11;
            alt56 = dfa56.predict(input);
            switch (alt56) {
                case 1 :
                    // InternalKim.g:2481:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2481:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt53=2;
                    int LA53_0 = input.LA(1);

                    if ( (LA53_0==26) ) {
                        alt53=1;
                    }
                    else if ( (LA53_0==27) ) {
                        alt53=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 53, 0, input);

                        throw nvae;
                    }
                    switch (alt53) {
                        case 1 :
                            // InternalKim.g:2482:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2482:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2483:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2483:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2484:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2497:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2497:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2498:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2498:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2499:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2513:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2513:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2514:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2514:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2515:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2515:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2516:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_37);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2533:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt54=3;
                    int LA54_0 = input.LA(1);

                    if ( (LA54_0==46) ) {
                        alt54=1;
                    }
                    else if ( (LA54_0==47) ) {
                        alt54=2;
                    }
                    switch (alt54) {
                        case 1 :
                            // InternalKim.g:2534:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2534:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2535:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2535:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2536:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2549:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,47,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2554:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2555:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2561:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2562:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2566:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2567:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_39);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2584:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt55=3;
                    int LA55_0 = input.LA(1);

                    if ( (LA55_0==46) ) {
                        alt55=1;
                    }
                    else if ( (LA55_0==47) ) {
                        alt55=2;
                    }
                    switch (alt55) {
                        case 1 :
                            // InternalKim.g:2585:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2585:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2586:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2586:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2587:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2600:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2607:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2607:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2608:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2608:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2609:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2627:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:2627:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:2628:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,48,FOLLOW_40); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTableClassifierAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:2632:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:2633:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:2633:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:2634:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2653:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2653:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:2654:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:2654:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:2655:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2672:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2672:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2673:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2673:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:2674:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2692:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2692:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    // InternalKim.g:2693:4: ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) )
                    {
                    // InternalKim.g:2693:4: ( (lv_op_14_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2694:5: (lv_op_14_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2694:5: (lv_op_14_0= ruleREL_OPERATOR )
                    // InternalKim.g:2695:6: lv_op_14_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_38);
                    lv_op_14_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_14_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2712:4: ( (lv_expression_15_0= ruleNumber ) )
                    // InternalKim.g:2713:5: (lv_expression_15_0= ruleNumber )
                    {
                    // InternalKim.g:2713:5: (lv_expression_15_0= ruleNumber )
                    // InternalKim.g:2714:6: lv_expression_15_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_15_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_15_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2733:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:2733:3: ( (lv_expr_16_0= RULE_EXPR ) )
                    // InternalKim.g:2734:4: (lv_expr_16_0= RULE_EXPR )
                    {
                    // InternalKim.g:2734:4: (lv_expr_16_0= RULE_EXPR )
                    // InternalKim.g:2735:5: lv_expr_16_0= RULE_EXPR
                    {
                    lv_expr_16_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_16_0, grammarAccess.getTableClassifierAccess().getExprEXPRTerminalRuleCall_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_16_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2752:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:2752:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:2753:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:2753:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:2754:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2767:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:2767:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:2768:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:2768:4: (lv_star_18_0= '*' )
                    // InternalKim.g:2769:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:2782:3: ( (lv_anything_19_0= '#' ) )
                    {
                    // InternalKim.g:2782:3: ( (lv_anything_19_0= '#' ) )
                    // InternalKim.g:2783:4: (lv_anything_19_0= '#' )
                    {
                    // InternalKim.g:2783:4: (lv_anything_19_0= '#' )
                    // InternalKim.g:2784:5: lv_anything_19_0= '#'
                    {
                    lv_anything_19_0=(Token)match(input,53,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_19_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_10_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2800:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2800:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2801:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2807:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_resolution_10_0=null;
        Token lv_instantiation_11_0=null;
        Token lv_termination_12_0=null;
        Token lv_stateInitialization_13_0=null;
        Token otherlv_15=null;
        Token lv_anyContextEvent_16_0=null;
        Token lv_relatedEventContext_17_0=null;
        Token otherlv_21=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_14_0 = null;

        EObject lv_eventContext_18_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_actions_22_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2813:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) )
            // InternalKim.g:2814:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            {
            // InternalKim.g:2814:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            int alt67=2;
            int LA67_0 = input.LA(1);

            if ( ((LA67_0>=54 && LA67_0<=55)) ) {
                alt67=1;
            }
            else if ( (LA67_0==56) ) {
                alt67=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;
            }
            switch (alt67) {
                case 1 :
                    // InternalKim.g:2815:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2815:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2816:4: ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2816:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt57=2;
                    int LA57_0 = input.LA(1);

                    if ( (LA57_0==54) ) {
                        alt57=1;
                    }
                    switch (alt57) {
                        case 1 :
                            // InternalKim.g:2817:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2817:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2818:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,54,FOLLOW_46); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,55,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getActionSpecificationAccess().getOverKeyword_0_1());
                      			
                    }
                    // InternalKim.g:2834:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2835:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2835:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2836:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_47);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2853:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop58:
                    do {
                        int alt58=2;
                        alt58 = dfa58.predict(input);
                        switch (alt58) {
                    	case 1 :
                    	    // InternalKim.g:2854:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2854:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2855:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2861:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2862:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2862:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2863:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_47);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);

                    // InternalKim.g:2881:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( ((LA60_0>=64 && LA60_0<=68)) ) {
                        alt60=1;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2882:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2882:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2883:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2883:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2884:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2901:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop59:
                            do {
                                int alt59=2;
                                int LA59_0 = input.LA(1);

                                if ( (LA59_0==25) ) {
                                    int LA59_2 = input.LA(2);

                                    if ( ((LA59_2>=64 && LA59_2<=68)) ) {
                                        alt59=1;
                                    }


                                }


                                switch (alt59) {
                            	case 1 :
                            	    // InternalKim.g:2902:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2902:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2903:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,25,FOLLOW_48); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2909:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2910:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2910:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2911:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_34);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop59;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2932:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2932:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2933:4: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2933:4: ( (lv_trigger_8_0= 'on' ) )
                    // InternalKim.g:2934:5: (lv_trigger_8_0= 'on' )
                    {
                    // InternalKim.g:2934:5: (lv_trigger_8_0= 'on' )
                    // InternalKim.g:2935:6: lv_trigger_8_0= 'on'
                    {
                    lv_trigger_8_0=(Token)match(input,56,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "trigger", true, "on");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2947:4: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) )
                    int alt63=6;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        alt63=1;
                        }
                        break;
                    case 58:
                        {
                        alt63=2;
                        }
                        break;
                    case 59:
                        {
                        alt63=3;
                        }
                        break;
                    case 60:
                        {
                        alt63=4;
                        }
                        break;
                    case 61:
                        {
                        alt63=5;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                    case RULE_STRING:
                    case RULE_CAMELCASE_ID:
                    case RULE_LOWERCASE_DASHID:
                    case 36:
                    case 111:
                    case 112:
                    case 120:
                    case 121:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 127:
                    case 128:
                    case 129:
                    case 130:
                    case 131:
                    case 132:
                    case 133:
                    case 134:
                    case 135:
                        {
                        alt63=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 63, 0, input);

                        throw nvae;
                    }

                    switch (alt63) {
                        case 1 :
                            // InternalKim.g:2948:5: ( (lv_initialization_9_0= 'definition' ) )
                            {
                            // InternalKim.g:2948:5: ( (lv_initialization_9_0= 'definition' ) )
                            // InternalKim.g:2949:6: (lv_initialization_9_0= 'definition' )
                            {
                            // InternalKim.g:2949:6: (lv_initialization_9_0= 'definition' )
                            // InternalKim.g:2950:7: lv_initialization_9_0= 'definition'
                            {
                            lv_initialization_9_0=(Token)match(input,57,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2963:5: ( (lv_resolution_10_0= 'resolution' ) )
                            {
                            // InternalKim.g:2963:5: ( (lv_resolution_10_0= 'resolution' ) )
                            // InternalKim.g:2964:6: (lv_resolution_10_0= 'resolution' )
                            {
                            // InternalKim.g:2964:6: (lv_resolution_10_0= 'resolution' )
                            // InternalKim.g:2965:7: lv_resolution_10_0= 'resolution'
                            {
                            lv_resolution_10_0=(Token)match(input,58,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_resolution_10_0, grammarAccess.getActionSpecificationAccess().getResolutionResolutionKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "resolution", true, "resolution");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:2978:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            {
                            // InternalKim.g:2978:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            // InternalKim.g:2979:6: (lv_instantiation_11_0= 'instantiation' )
                            {
                            // InternalKim.g:2979:6: (lv_instantiation_11_0= 'instantiation' )
                            // InternalKim.g:2980:7: lv_instantiation_11_0= 'instantiation'
                            {
                            lv_instantiation_11_0=(Token)match(input,59,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_instantiation_11_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "instantiation", true, "instantiation");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:2993:5: ( (lv_termination_12_0= 'termination' ) )
                            {
                            // InternalKim.g:2993:5: ( (lv_termination_12_0= 'termination' ) )
                            // InternalKim.g:2994:6: (lv_termination_12_0= 'termination' )
                            {
                            // InternalKim.g:2994:6: (lv_termination_12_0= 'termination' )
                            // InternalKim.g:2995:7: lv_termination_12_0= 'termination'
                            {
                            lv_termination_12_0=(Token)match(input,60,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_12_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:3008:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            {
                            // InternalKim.g:3008:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            // InternalKim.g:3009:6: (lv_stateInitialization_13_0= 'initialization' )
                            {
                            // InternalKim.g:3009:6: (lv_stateInitialization_13_0= 'initialization' )
                            // InternalKim.g:3010:7: lv_stateInitialization_13_0= 'initialization'
                            {
                            lv_stateInitialization_13_0=(Token)match(input,61,FOLLOW_50); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_stateInitialization_13_0, grammarAccess.getActionSpecificationAccess().getStateInitializationInitializationKeyword_1_1_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "stateInitialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:3023:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            {
                            // InternalKim.g:3023:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            // InternalKim.g:3024:6: ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            {
                            // InternalKim.g:3024:6: ( (lv_event_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:3025:7: (lv_event_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:3025:7: (lv_event_14_0= ruleConceptDeclaration )
                            // InternalKim.g:3026:8: lv_event_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_1_5_0_0());
                              							
                            }
                            pushFollow(FOLLOW_51);
                            lv_event_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              								}
                              								set(
                              									current,
                              									"event",
                              									lv_event_14_0,
                              									"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:3043:6: (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            int alt62=2;
                            int LA62_0 = input.LA(1);

                            if ( (LA62_0==48) ) {
                                alt62=1;
                            }
                            switch (alt62) {
                                case 1 :
                                    // InternalKim.g:3044:7: otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    {
                                    otherlv_15=(Token)match(input,48,FOLLOW_52); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_15, grammarAccess.getActionSpecificationAccess().getInKeyword_1_1_5_1_0());
                                      						
                                    }
                                    // InternalKim.g:3048:7: ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    int alt61=2;
                                    int LA61_0 = input.LA(1);

                                    if ( (LA61_0==62) ) {
                                        alt61=1;
                                    }
                                    else if ( (LA61_0==63) ) {
                                        alt61=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 61, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt61) {
                                        case 1 :
                                            // InternalKim.g:3049:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            {
                                            // InternalKim.g:3049:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            // InternalKim.g:3050:9: (lv_anyContextEvent_16_0= 'context' )
                                            {
                                            // InternalKim.g:3050:9: (lv_anyContextEvent_16_0= 'context' )
                                            // InternalKim.g:3051:10: lv_anyContextEvent_16_0= 'context'
                                            {
                                            lv_anyContextEvent_16_0=(Token)match(input,62,FOLLOW_50); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_anyContextEvent_16_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_1_5_1_1_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										setWithLastConsumed(current, "anyContextEvent", true, "context");
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:3064:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            {
                                            // InternalKim.g:3064:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            // InternalKim.g:3065:9: ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            {
                                            // InternalKim.g:3065:9: ( (lv_relatedEventContext_17_0= 'related' ) )
                                            // InternalKim.g:3066:10: (lv_relatedEventContext_17_0= 'related' )
                                            {
                                            // InternalKim.g:3066:10: (lv_relatedEventContext_17_0= 'related' )
                                            // InternalKim.g:3067:11: lv_relatedEventContext_17_0= 'related'
                                            {
                                            lv_relatedEventContext_17_0=(Token)match(input,63,FOLLOW_20); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_relatedEventContext_17_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_1_5_1_1_1_0_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                              										
                                            }

                                            }


                                            }

                                            // InternalKim.g:3079:9: ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:3080:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:3080:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            // InternalKim.g:3081:11: lv_eventContext_18_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_1_5_1_1_1_1_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_50);
                                            lv_eventContext_18_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											set(
                                              												current,
                                              												"eventContext",
                                              												lv_eventContext_18_0,
                                              												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }


                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3103:4: ( (lv_parameters_19_0= ruleList ) )?
                    int alt64=2;
                    alt64 = dfa64.predict(input);
                    switch (alt64) {
                        case 1 :
                            // InternalKim.g:3104:5: (lv_parameters_19_0= ruleList )
                            {
                            // InternalKim.g:3104:5: (lv_parameters_19_0= ruleList )
                            // InternalKim.g:3105:6: lv_parameters_19_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_53);
                            lv_parameters_19_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_19_0,
                              							"org.integratedmodelling.kim.Kim.List");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:3122:4: ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    int alt66=2;
                    int LA66_0 = input.LA(1);

                    if ( ((LA66_0>=64 && LA66_0<=68)) ) {
                        alt66=1;
                    }
                    switch (alt66) {
                        case 1 :
                            // InternalKim.g:3123:5: ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:3123:5: ( (lv_actions_20_0= ruleAction ) )
                            // InternalKim.g:3124:6: (lv_actions_20_0= ruleAction )
                            {
                            // InternalKim.g:3124:6: (lv_actions_20_0= ruleAction )
                            // InternalKim.g:3125:7: lv_actions_20_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_34);
                            lv_actions_20_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_20_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:3142:5: ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            loop65:
                            do {
                                int alt65=2;
                                int LA65_0 = input.LA(1);

                                if ( (LA65_0==25) ) {
                                    int LA65_2 = input.LA(2);

                                    if ( ((LA65_2>=64 && LA65_2<=68)) ) {
                                        alt65=1;
                                    }


                                }


                                switch (alt65) {
                            	case 1 :
                            	    // InternalKim.g:3143:6: ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:3143:6: ( ( ',' )=>otherlv_21= ',' )
                            	    // InternalKim.g:3144:7: ( ',' )=>otherlv_21= ','
                            	    {
                            	    otherlv_21=(Token)match(input,25,FOLLOW_48); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_21, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_3_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:3150:6: ( (lv_actions_22_0= ruleAction ) )
                            	    // InternalKim.g:3151:7: (lv_actions_22_0= ruleAction )
                            	    {
                            	    // InternalKim.g:3151:7: (lv_actions_22_0= ruleAction )
                            	    // InternalKim.g:3152:8: lv_actions_22_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_34);
                            	    lv_actions_22_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_22_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop65;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:3176:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:3176:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:3177:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:3183:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:3189:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:3190:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:3190:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==RULE_LOWERCASE_ID) ) {
                int LA69_1 = input.LA(2);

                if ( (synpred125_InternalKim()) ) {
                    alt69=1;
                }
                else if ( (true) ) {
                    alt69=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA69_0==RULE_LOWERCASE_DASHID) ) {
                int LA69_2 = input.LA(2);

                if ( (synpred125_InternalKim()) ) {
                    alt69=1;
                }
                else if ( (true) ) {
                    alt69=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 69, 2, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;
            }
            switch (alt69) {
                case 1 :
                    // InternalKim.g:3191:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3191:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3192:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3192:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3193:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3211:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:3211:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:3212:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:3212:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:3213:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:3213:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( (LA68_0==RULE_LOWERCASE_ID) ) {
                        int LA68_1 = input.LA(2);

                        if ( (LA68_1==90||LA68_1==92) ) {
                            alt68=2;
                        }
                        else if ( (LA68_1==EOF||(LA68_1>=RULE_LOWERCASE_ID && LA68_1<=RULE_STRING)||(LA68_1>=RULE_CAMELCASE_ID && LA68_1<=RULE_LOWERCASE_DASHID)||LA68_1==19||LA68_1==25||(LA68_1>=28 && LA68_1<=29)||LA68_1==36||LA68_1==40||(LA68_1>=54 && LA68_1<=56)||(LA68_1>=64 && LA68_1<=68)||LA68_1==89||(LA68_1>=111 && LA68_1<=112)||(LA68_1>=120 && LA68_1<=121)||(LA68_1>=123 && LA68_1<=135)) ) {
                            alt68=1;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 68, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA68_0==RULE_LOWERCASE_DASHID) ) {
                        alt68=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 68, 0, input);

                        throw nvae;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalKim.g:3214:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3229:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:3251:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:3251:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:3252:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:3258:1: ruleAction returns [EObject current=null] : ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_change_0_0=null;
        Token lv_set_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_conditionNegative_6_0=null;
        Token lv_integrate_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_conditionNegative_13_0=null;
        Token lv_do_15_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_conditionNegative_20_0=null;
        Token lv_move_22_0=null;
        Token lv_away_24_0=null;
        EObject lv_assignments_2_0 = null;

        EObject lv_assignments_4_0 = null;

        EObject lv_condition_7_0 = null;

        EObject lv_assignments_9_0 = null;

        EObject lv_assignments_11_0 = null;

        EObject lv_condition_14_0 = null;

        EObject lv_executed_16_0 = null;

        EObject lv_executed_18_0 = null;

        EObject lv_condition_21_0 = null;

        EObject lv_where_23_0 = null;

        EObject lv_condition_25_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3264:2: ( ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) )
            // InternalKim.g:3265:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            {
            // InternalKim.g:3265:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            int alt82=4;
            switch ( input.LA(1) ) {
            case 64:
            case 65:
                {
                alt82=1;
                }
                break;
            case 66:
                {
                alt82=2;
                }
                break;
            case 67:
                {
                alt82=3;
                }
                break;
            case 68:
                {
                alt82=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 82, 0, input);

                throw nvae;
            }

            switch (alt82) {
                case 1 :
                    // InternalKim.g:3266:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3266:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    // InternalKim.g:3267:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3267:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) )
                    int alt70=2;
                    int LA70_0 = input.LA(1);

                    if ( (LA70_0==64) ) {
                        alt70=1;
                    }
                    else if ( (LA70_0==65) ) {
                        alt70=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 70, 0, input);

                        throw nvae;
                    }
                    switch (alt70) {
                        case 1 :
                            // InternalKim.g:3268:5: ( (lv_change_0_0= 'change' ) )
                            {
                            // InternalKim.g:3268:5: ( (lv_change_0_0= 'change' ) )
                            // InternalKim.g:3269:6: (lv_change_0_0= 'change' )
                            {
                            // InternalKim.g:3269:6: (lv_change_0_0= 'change' )
                            // InternalKim.g:3270:7: lv_change_0_0= 'change'
                            {
                            lv_change_0_0=(Token)match(input,64,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_change_0_0, grammarAccess.getActionAccess().getChangeChangeKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "change", true, "change");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3283:5: ( (lv_set_1_0= 'set' ) )
                            {
                            // InternalKim.g:3283:5: ( (lv_set_1_0= 'set' ) )
                            // InternalKim.g:3284:6: (lv_set_1_0= 'set' )
                            {
                            // InternalKim.g:3284:6: (lv_set_1_0= 'set' )
                            // InternalKim.g:3285:7: lv_set_1_0= 'set'
                            {
                            lv_set_1_0=(Token)match(input,65,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_set_1_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "set", true, "set");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3298:4: ( (lv_assignments_2_0= ruleValueAssignment ) )
                    // InternalKim.g:3299:5: (lv_assignments_2_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3299:5: (lv_assignments_2_0= ruleValueAssignment )
                    // InternalKim.g:3300:6: lv_assignments_2_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_assignments_2_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_2_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3317:4: (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )*
                    loop71:
                    do {
                        int alt71=2;
                        alt71 = dfa71.predict(input);
                        switch (alt71) {
                    	case 1 :
                    	    // InternalKim.g:3318:5: otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3322:5: ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3323:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3323:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    // InternalKim.g:3324:7: lv_assignments_4_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_assignments_4_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_4_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop71;
                        }
                    } while (true);

                    // InternalKim.g:3342:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    int alt73=2;
                    int LA73_0 = input.LA(1);

                    if ( ((LA73_0>=44 && LA73_0<=45)) ) {
                        alt73=1;
                    }
                    switch (alt73) {
                        case 1 :
                            // InternalKim.g:3343:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) )
                            {
                            // InternalKim.g:3343:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) )
                            // InternalKim.g:3344:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3354:6: (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            int alt72=2;
                            int LA72_0 = input.LA(1);

                            if ( (LA72_0==44) ) {
                                alt72=1;
                            }
                            else if ( (LA72_0==45) ) {
                                alt72=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 72, 0, input);

                                throw nvae;
                            }
                            switch (alt72) {
                                case 1 :
                                    // InternalKim.g:3355:7: otherlv_5= 'if'
                                    {
                                    otherlv_5=(Token)match(input,44,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3360:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3360:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    // InternalKim.g:3361:8: (lv_conditionNegative_6_0= 'unless' )
                                    {
                                    // InternalKim.g:3361:8: (lv_conditionNegative_6_0= 'unless' )
                                    // InternalKim.g:3362:9: lv_conditionNegative_6_0= 'unless'
                                    {
                                    lv_conditionNegative_6_0=(Token)match(input,45,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_6_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3376:5: ( (lv_condition_7_0= ruleValue ) )
                            // InternalKim.g:3377:6: (lv_condition_7_0= ruleValue )
                            {
                            // InternalKim.g:3377:6: (lv_condition_7_0= ruleValue )
                            // InternalKim.g:3378:7: lv_condition_7_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_7_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_7_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3398:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3398:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    // InternalKim.g:3399:4: ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3399:4: ( (lv_integrate_8_0= 'integrate' ) )
                    // InternalKim.g:3400:5: (lv_integrate_8_0= 'integrate' )
                    {
                    // InternalKim.g:3400:5: (lv_integrate_8_0= 'integrate' )
                    // InternalKim.g:3401:6: lv_integrate_8_0= 'integrate'
                    {
                    lv_integrate_8_0=(Token)match(input,66,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_8_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3413:4: ( (lv_assignments_9_0= ruleValueAssignment ) )
                    // InternalKim.g:3414:5: (lv_assignments_9_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3414:5: (lv_assignments_9_0= ruleValueAssignment )
                    // InternalKim.g:3415:6: lv_assignments_9_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_assignments_9_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_9_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3432:4: (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )*
                    loop74:
                    do {
                        int alt74=2;
                        alt74 = dfa74.predict(input);
                        switch (alt74) {
                    	case 1 :
                    	    // InternalKim.g:3433:5: otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_10=(Token)match(input,25,FOLLOW_54); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3437:5: ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3438:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3438:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    // InternalKim.g:3439:7: lv_assignments_11_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_assignments_11_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_11_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop74;
                        }
                    } while (true);

                    // InternalKim.g:3457:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    int alt76=2;
                    int LA76_0 = input.LA(1);

                    if ( ((LA76_0>=44 && LA76_0<=45)) ) {
                        alt76=1;
                    }
                    switch (alt76) {
                        case 1 :
                            // InternalKim.g:3458:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) )
                            {
                            // InternalKim.g:3458:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) )
                            // InternalKim.g:3459:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3469:6: (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            int alt75=2;
                            int LA75_0 = input.LA(1);

                            if ( (LA75_0==44) ) {
                                alt75=1;
                            }
                            else if ( (LA75_0==45) ) {
                                alt75=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 75, 0, input);

                                throw nvae;
                            }
                            switch (alt75) {
                                case 1 :
                                    // InternalKim.g:3470:7: otherlv_12= 'if'
                                    {
                                    otherlv_12=(Token)match(input,44,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_12, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3475:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3475:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    // InternalKim.g:3476:8: (lv_conditionNegative_13_0= 'unless' )
                                    {
                                    // InternalKim.g:3476:8: (lv_conditionNegative_13_0= 'unless' )
                                    // InternalKim.g:3477:9: lv_conditionNegative_13_0= 'unless'
                                    {
                                    lv_conditionNegative_13_0=(Token)match(input,45,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_13_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3491:5: ( (lv_condition_14_0= ruleValue ) )
                            // InternalKim.g:3492:6: (lv_condition_14_0= ruleValue )
                            {
                            // InternalKim.g:3492:6: (lv_condition_14_0= ruleValue )
                            // InternalKim.g:3493:7: lv_condition_14_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_14_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_14_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3513:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3513:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    // InternalKim.g:3514:4: ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3514:4: ( (lv_do_15_0= 'do' ) )
                    // InternalKim.g:3515:5: (lv_do_15_0= 'do' )
                    {
                    // InternalKim.g:3515:5: (lv_do_15_0= 'do' )
                    // InternalKim.g:3516:6: lv_do_15_0= 'do'
                    {
                    lv_do_15_0=(Token)match(input,67,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_do_15_0, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "do", true, "do");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3528:4: ( (lv_executed_16_0= ruleValueExecution ) )
                    // InternalKim.g:3529:5: (lv_executed_16_0= ruleValueExecution )
                    {
                    // InternalKim.g:3529:5: (lv_executed_16_0= ruleValueExecution )
                    // InternalKim.g:3530:6: lv_executed_16_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_55);
                    lv_executed_16_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_16_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3547:4: (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )*
                    loop77:
                    do {
                        int alt77=2;
                        alt77 = dfa77.predict(input);
                        switch (alt77) {
                    	case 1 :
                    	    // InternalKim.g:3548:5: otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_17=(Token)match(input,25,FOLLOW_17); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_17, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3552:5: ( (lv_executed_18_0= ruleValueExecution ) )
                    	    // InternalKim.g:3553:6: (lv_executed_18_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3553:6: (lv_executed_18_0= ruleValueExecution )
                    	    // InternalKim.g:3554:7: lv_executed_18_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_55);
                    	    lv_executed_18_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_18_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop77;
                        }
                    } while (true);

                    // InternalKim.g:3572:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    int alt79=2;
                    int LA79_0 = input.LA(1);

                    if ( ((LA79_0>=44 && LA79_0<=45)) ) {
                        alt79=1;
                    }
                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3573:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) )
                            {
                            // InternalKim.g:3573:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) )
                            // InternalKim.g:3574:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3584:6: (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            int alt78=2;
                            int LA78_0 = input.LA(1);

                            if ( (LA78_0==44) ) {
                                alt78=1;
                            }
                            else if ( (LA78_0==45) ) {
                                alt78=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 78, 0, input);

                                throw nvae;
                            }
                            switch (alt78) {
                                case 1 :
                                    // InternalKim.g:3585:7: otherlv_19= 'if'
                                    {
                                    otherlv_19=(Token)match(input,44,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_19, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3590:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3590:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    // InternalKim.g:3591:8: (lv_conditionNegative_20_0= 'unless' )
                                    {
                                    // InternalKim.g:3591:8: (lv_conditionNegative_20_0= 'unless' )
                                    // InternalKim.g:3592:9: lv_conditionNegative_20_0= 'unless'
                                    {
                                    lv_conditionNegative_20_0=(Token)match(input,45,FOLLOW_10); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_20_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3606:5: ( (lv_condition_21_0= ruleValue ) )
                            // InternalKim.g:3607:6: (lv_condition_21_0= ruleValue )
                            {
                            // InternalKim.g:3607:6: (lv_condition_21_0= ruleValue )
                            // InternalKim.g:3608:7: lv_condition_21_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_21_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_21_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3628:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3628:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    // InternalKim.g:3629:4: ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    {
                    // InternalKim.g:3629:4: ( (lv_move_22_0= 'move' ) )
                    // InternalKim.g:3630:5: (lv_move_22_0= 'move' )
                    {
                    // InternalKim.g:3630:5: (lv_move_22_0= 'move' )
                    // InternalKim.g:3631:6: lv_move_22_0= 'move'
                    {
                    lv_move_22_0=(Token)match(input,68,FOLLOW_56); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_22_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3643:4: ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) )
                    int alt80=2;
                    int LA80_0 = input.LA(1);

                    if ( ((LA80_0>=RULE_UPPERCASE_ID && LA80_0<=RULE_STRING)||(LA80_0>=RULE_EXPR && LA80_0<=RULE_INT)||(LA80_0>=25 && LA80_0<=27)||LA80_0==36||(LA80_0>=49 && LA80_0<=50)||LA80_0==189||(LA80_0>=231 && LA80_0<=232)) ) {
                        alt80=1;
                    }
                    else if ( (LA80_0==69) ) {
                        alt80=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 80, 0, input);

                        throw nvae;
                    }
                    switch (alt80) {
                        case 1 :
                            // InternalKim.g:3644:5: ( (lv_where_23_0= ruleValue ) )
                            {
                            // InternalKim.g:3644:5: ( (lv_where_23_0= ruleValue ) )
                            // InternalKim.g:3645:6: (lv_where_23_0= ruleValue )
                            {
                            // InternalKim.g:3645:6: (lv_where_23_0= ruleValue )
                            // InternalKim.g:3646:7: lv_where_23_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_57);
                            lv_where_23_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_23_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3664:5: ( (lv_away_24_0= 'away' ) )
                            {
                            // InternalKim.g:3664:5: ( (lv_away_24_0= 'away' ) )
                            // InternalKim.g:3665:6: (lv_away_24_0= 'away' )
                            {
                            // InternalKim.g:3665:6: (lv_away_24_0= 'away' )
                            // InternalKim.g:3666:7: lv_away_24_0= 'away'
                            {
                            lv_away_24_0=(Token)match(input,69,FOLLOW_57); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_24_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3679:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    int alt81=2;
                    alt81 = dfa81.predict(input);
                    switch (alt81) {
                        case 1 :
                            // InternalKim.g:3680:5: ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue )
                            {
                            // InternalKim.g:3684:5: (lv_condition_25_0= ruleValue )
                            // InternalKim.g:3685:6: lv_condition_25_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_25_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_25_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3707:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3707:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3708:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3714:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3720:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3721:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3721:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3722:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3722:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RULE_LOWERCASE_ID) ) {
                int LA84_1 = input.LA(2);

                if ( (LA84_1==34) ) {
                    alt84=1;
                }
            }
            else if ( (LA84_0==34) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalKim.g:3723:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3723:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==RULE_LOWERCASE_ID) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3724:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3724:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3725:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,34,FOLLOW_54); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3746:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3747:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3747:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3748:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3769:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3769:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3770:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3776:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3782:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3783:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3783:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt88=6;
            alt88 = dfa88.predict(input);
            switch (alt88) {
                case 1 :
                    // InternalKim.g:3784:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3784:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3785:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3785:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3786:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3804:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3804:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3805:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3805:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3806:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3824:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3824:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3825:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3825:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3826:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3826:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3827:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3843:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt86=2;
                    int LA86_0 = input.LA(1);

                    if ( (LA86_0==48) ) {
                        alt86=1;
                    }
                    switch (alt86) {
                        case 1 :
                            // InternalKim.g:3844:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,48,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3848:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3849:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3849:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3850:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3850:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt85=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt85=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt85=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt85=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 85, 0, input);

                                throw nvae;
                            }

                            switch (alt85) {
                                case 1 :
                                    // InternalKim.g:3851:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3866:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3881:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3901:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3901:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3902:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3902:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3903:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3903:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt87=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt87=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt87=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt87=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 87, 0, input);

                        throw nvae;
                    }

                    switch (alt87) {
                        case 1 :
                            // InternalKim.g:3904:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3919:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3934:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3952:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:3952:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:3953:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:3953:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:3954:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3972:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:3972:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:3973:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:3973:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:3974:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:3990:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:3990:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:3991:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:3997:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4003:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:4004:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:4004:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:4005:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:4005:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:4006:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:4006:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:4007:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_60);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4024:3: (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==23) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalKim.g:4025:4: otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,23,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalKim.g:4029:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:4030:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:4030:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:4031:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:4052:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:4052:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:4053:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:4059:1: ruleExecutableValue returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4065:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) )
            // InternalKim.g:4066:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            {
            // InternalKim.g:4066:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            int alt92=3;
            alt92 = dfa92.predict(input);
            switch (alt92) {
                case 1 :
                    // InternalKim.g:4067:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:4067:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:4068:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:4068:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:4069:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:4087:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:4087:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:4088:4: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:4088:4: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:4089:5: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:4089:5: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:4090:6: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_58); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExecutableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:4106:4: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt91=2;
                    int LA91_0 = input.LA(1);

                    if ( (LA91_0==48) ) {
                        alt91=1;
                    }
                    switch (alt91) {
                        case 1 :
                            // InternalKim.g:4107:5: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,48,FOLLOW_59); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:4111:5: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:4112:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:4112:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:4113:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:4113:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt90=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt90=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt90=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt90=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 90, 0, input);

                                throw nvae;
                            }

                            switch (alt90) {
                                case 1 :
                                    // InternalKim.g:4114:8: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_1_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:4129:8: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_1_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:4144:8: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_1_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4164:3: ( (lv_urn_4_0= ruleUrnId ) )
                    {
                    // InternalKim.g:4164:3: ( (lv_urn_4_0= ruleUrnId ) )
                    // InternalKim.g:4165:4: (lv_urn_4_0= ruleUrnId )
                    {
                    // InternalKim.g:4165:4: (lv_urn_4_0= ruleUrnId )
                    // InternalKim.g:4166:5: lv_urn_4_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_urn_4_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"urn",
                      						lv_urn_4_0,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:4187:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:4187:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:4188:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:4194:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:4200:2: ( (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:4201:2: (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:4201:2: (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            int alt93=6;
            switch ( input.LA(1) ) {
            case 70:
                {
                alt93=1;
                }
                break;
            case 71:
                {
                alt93=2;
                }
                break;
            case 72:
                {
                alt93=3;
                }
                break;
            case 73:
                {
                alt93=4;
                }
                break;
            case 74:
                {
                alt93=5;
                }
                break;
            case 75:
                {
                alt93=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 93, 0, input);

                throw nvae;
            }

            switch (alt93) {
                case 1 :
                    // InternalKim.g:4202:3: kw= 'model'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4208:3: kw= 'assess'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getAssessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4214:3: kw= 'learn'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:4220:3: kw= 'number'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:4226:3: kw= 'text'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:4232:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:4241:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:4247:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:4248:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:4257:1: ruleNamespace returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_inactive_3_0=null;
        Token otherlv_4=null;
        Token lv_scenario_5_0=null;
        Token lv_worldviewBound_6_0=null;
        Token lv_docstring_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_rootDomain_24_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_48=null;
        Token otherlv_50=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_imported_11_0 = null;

        EObject lv_imported_13_0 = null;

        EObject lv_owlImports_15_0 = null;

        EObject lv_owlImports_17_0 = null;

        EObject lv_coverage_19_0 = null;

        EObject lv_coverage_21_0 = null;

        EObject lv_domainConcept_25_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_28_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_30_0 = null;

        AntlrDatatypeRuleToken lv_version_32_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;

        EObject lv_weights_40_0 = null;

        EObject lv_parameters_43_0 = null;

        EObject lv_metadata_46_0 = null;

        EObject lv_documentation_49_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:4268:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' ) )
            // InternalKim.g:4269:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            {
            // InternalKim.g:4269:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';' )
            // InternalKim.g:4270:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )? (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )? otherlv_50= ';'
            {
            // InternalKim.g:4270:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==RULE_ANNOTATION_ID) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // InternalKim.g:4271:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:4271:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:4272:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_62);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop94;
                }
            } while (true);

            // InternalKim.g:4289:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4290:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4290:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4291:5: ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4294:5: ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4295:6: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4295:6: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )*
            loop95:
            do {
                int alt95=3;
                int LA95_0 = input.LA(1);

                if ( LA95_0 == 21 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt95=1;
                }
                else if ( LA95_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt95=2;
                }


                switch (alt95) {
            	case 1 :
            	    // InternalKim.g:4296:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:4296:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4297:5: {...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4297:106: ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
            	    // InternalKim.g:4298:6: ({...}? => ( (lv_private_2_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4301:9: ({...}? => ( (lv_private_2_0= 'private' ) ) )
            	    // InternalKim.g:4301:10: {...}? => ( (lv_private_2_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4301:19: ( (lv_private_2_0= 'private' ) )
            	    // InternalKim.g:4301:20: (lv_private_2_0= 'private' )
            	    {
            	    // InternalKim.g:4301:20: (lv_private_2_0= 'private' )
            	    // InternalKim.g:4302:10: lv_private_2_0= 'private'
            	    {
            	    lv_private_2_0=(Token)match(input,21,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_2_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4319:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4319:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4320:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4320:106: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
            	    // InternalKim.g:4321:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4324:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
            	    // InternalKim.g:4324:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4324:19: ( (lv_inactive_3_0= 'void' ) )
            	    // InternalKim.g:4324:20: (lv_inactive_3_0= 'void' )
            	    {
            	    // InternalKim.g:4324:20: (lv_inactive_3_0= 'void' )
            	    // InternalKim.g:4325:10: lv_inactive_3_0= 'void'
            	    {
            	    lv_inactive_3_0=(Token)match(input,20,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_3_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop95;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4349:3: (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) )
            int alt96=3;
            switch ( input.LA(1) ) {
            case 76:
                {
                alt96=1;
                }
                break;
            case 77:
                {
                alt96=2;
                }
                break;
            case 78:
                {
                alt96=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }

            switch (alt96) {
                case 1 :
                    // InternalKim.g:4350:4: otherlv_4= 'namespace'
                    {
                    otherlv_4=(Token)match(input,76,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4355:4: ( (lv_scenario_5_0= 'scenario' ) )
                    {
                    // InternalKim.g:4355:4: ( (lv_scenario_5_0= 'scenario' ) )
                    // InternalKim.g:4356:5: (lv_scenario_5_0= 'scenario' )
                    {
                    // InternalKim.g:4356:5: (lv_scenario_5_0= 'scenario' )
                    // InternalKim.g:4357:6: lv_scenario_5_0= 'scenario'
                    {
                    lv_scenario_5_0=(Token)match(input,77,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_5_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4370:4: ( (lv_worldviewBound_6_0= 'worldview' ) )
                    {
                    // InternalKim.g:4370:4: ( (lv_worldviewBound_6_0= 'worldview' ) )
                    // InternalKim.g:4371:5: (lv_worldviewBound_6_0= 'worldview' )
                    {
                    // InternalKim.g:4371:5: (lv_worldviewBound_6_0= 'worldview' )
                    // InternalKim.g:4372:6: lv_worldviewBound_6_0= 'worldview'
                    {
                    lv_worldviewBound_6_0=(Token)match(input,78,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_6_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4385:3: ( (lv_name_7_0= rulePathName ) )
            // InternalKim.g:4386:4: (lv_name_7_0= rulePathName )
            {
            // InternalKim.g:4386:4: (lv_name_7_0= rulePathName )
            // InternalKim.g:4387:5: lv_name_7_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_64);
            lv_name_7_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_7_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4404:3: ( (lv_docstring_8_0= RULE_STRING ) )?
            int alt97=2;
            int LA97_0 = input.LA(1);

            if ( (LA97_0==RULE_STRING) ) {
                alt97=1;
            }
            switch (alt97) {
                case 1 :
                    // InternalKim.g:4405:4: (lv_docstring_8_0= RULE_STRING )
                    {
                    // InternalKim.g:4405:4: (lv_docstring_8_0= RULE_STRING )
                    // InternalKim.g:4406:5: lv_docstring_8_0= RULE_STRING
                    {
                    lv_docstring_8_0=(Token)match(input,RULE_STRING,FOLLOW_65); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_8_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_8_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4422:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4423:4: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4423:4: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4424:5: ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4427:5: ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4428:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4428:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop107:
            do {
                int alt107=8;
                alt107 = dfa107.predict(input);
                switch (alt107) {
            	case 1 :
            	    // InternalKim.g:4429:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4429:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4430:5: {...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4430:106: ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4431:6: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4434:9: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4434:10: {...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4434:19: (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
            	    // InternalKim.g:4434:20: otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
            	    {
            	    otherlv_10=(Token)match(input,29,FOLLOW_66); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    // InternalKim.g:4438:9: ( (lv_imported_11_0= ruleImport ) )
            	    // InternalKim.g:4439:10: (lv_imported_11_0= ruleImport )
            	    {
            	    // InternalKim.g:4439:10: (lv_imported_11_0= ruleImport )
            	    // InternalKim.g:4440:11: lv_imported_11_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_imported_11_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_11_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4457:9: ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
            	    loop98:
            	    do {
            	        int alt98=2;
            	        int LA98_0 = input.LA(1);

            	        if ( (LA98_0==25) ) {
            	            alt98=1;
            	        }


            	        switch (alt98) {
            	    	case 1 :
            	    	    // InternalKim.g:4458:10: ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4458:10: ( ( ',' )=>otherlv_12= ',' )
            	    	    // InternalKim.g:4459:11: ( ',' )=>otherlv_12= ','
            	    	    {
            	    	    otherlv_12=(Token)match(input,25,FOLLOW_66); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getCommaKeyword_5_0_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4465:10: ( (lv_imported_13_0= ruleImport ) )
            	    	    // InternalKim.g:4466:11: (lv_imported_13_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4466:11: (lv_imported_13_0= ruleImport )
            	    	    // InternalKim.g:4467:12: lv_imported_13_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_67);
            	    	    lv_imported_13_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_13_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop98;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4491:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4491:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4492:5: {...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4492:106: ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4493:6: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4496:9: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4496:10: {...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4496:19: (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4496:20: otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_14=(Token)match(input,79,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getNamespaceAccess().getImportsKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4500:9: ( (lv_owlImports_15_0= ruleOwlImport ) )
            	    // InternalKim.g:4501:10: (lv_owlImports_15_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4501:10: (lv_owlImports_15_0= ruleOwlImport )
            	    // InternalKim.g:4502:11: lv_owlImports_15_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_owlImports_15_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_15_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4519:9: (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
            	    loop99:
            	    do {
            	        int alt99=2;
            	        int LA99_0 = input.LA(1);

            	        if ( (LA99_0==25) ) {
            	            alt99=1;
            	        }


            	        switch (alt99) {
            	    	case 1 :
            	    	    // InternalKim.g:4520:10: otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,25,FOLLOW_68); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_16, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4524:10: ( (lv_owlImports_17_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4525:11: (lv_owlImports_17_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4525:11: (lv_owlImports_17_0= ruleOwlImport )
            	    	    // InternalKim.g:4526:12: lv_owlImports_17_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_67);
            	    	    lv_owlImports_17_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_17_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop99;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4550:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4550:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4551:5: {...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4551:106: ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4552:6: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4555:9: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4555:10: {...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4555:19: (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4555:20: otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
            	    {
            	    otherlv_18=(Token)match(input,80,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4559:9: ( (lv_coverage_19_0= ruleFunction ) )
            	    // InternalKim.g:4560:10: (lv_coverage_19_0= ruleFunction )
            	    {
            	    // InternalKim.g:4560:10: (lv_coverage_19_0= ruleFunction )
            	    // InternalKim.g:4561:11: lv_coverage_19_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_67);
            	    lv_coverage_19_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_19_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4578:9: ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
            	    loop100:
            	    do {
            	        int alt100=2;
            	        int LA100_0 = input.LA(1);

            	        if ( (LA100_0==25) ) {
            	            alt100=1;
            	        }


            	        switch (alt100) {
            	    	case 1 :
            	    	    // InternalKim.g:4579:10: ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4579:10: ( ( ',' )=>otherlv_20= ',' )
            	    	    // InternalKim.g:4580:11: ( ',' )=>otherlv_20= ','
            	    	    {
            	    	    otherlv_20=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_20, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4586:10: ( (lv_coverage_21_0= ruleFunction ) )
            	    	    // InternalKim.g:4587:11: (lv_coverage_21_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4587:11: (lv_coverage_21_0= ruleFunction )
            	    	    // InternalKim.g:4588:12: lv_coverage_21_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_67);
            	    	    lv_coverage_21_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_21_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop100;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4612:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4612:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4613:5: {...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4613:106: ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4614:6: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4617:9: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4617:10: {...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4617:19: (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4617:20: otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
            	    {
            	    otherlv_22=(Token)match(input,48,FOLLOW_69); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_22, grammarAccess.getNamespaceAccess().getInKeyword_5_3_0());
            	      								
            	    }
            	    otherlv_23=(Token)match(input,81,FOLLOW_70); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getDomainKeyword_5_3_1());
            	      								
            	    }
            	    // InternalKim.g:4625:9: ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
            	    int alt101=2;
            	    int LA101_0 = input.LA(1);

            	    if ( (LA101_0==82) ) {
            	        alt101=1;
            	    }
            	    else if ( (LA101_0==RULE_LOWERCASE_ID||(LA101_0>=RULE_CAMELCASE_ID && LA101_0<=RULE_LOWERCASE_DASHID)||LA101_0==36||(LA101_0>=111 && LA101_0<=112)||(LA101_0>=120 && LA101_0<=121)||(LA101_0>=123 && LA101_0<=135)) ) {
            	        alt101=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 101, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt101) {
            	        case 1 :
            	            // InternalKim.g:4626:10: ( (lv_rootDomain_24_0= 'root' ) )
            	            {
            	            // InternalKim.g:4626:10: ( (lv_rootDomain_24_0= 'root' ) )
            	            // InternalKim.g:4627:11: (lv_rootDomain_24_0= 'root' )
            	            {
            	            // InternalKim.g:4627:11: (lv_rootDomain_24_0= 'root' )
            	            // InternalKim.g:4628:12: lv_rootDomain_24_0= 'root'
            	            {
            	            lv_rootDomain_24_0=(Token)match(input,82,FOLLOW_65); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_24_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_3_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4641:10: ( (lv_domainConcept_25_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4641:10: ( (lv_domainConcept_25_0= ruleConcept ) )
            	            // InternalKim.g:4642:11: (lv_domainConcept_25_0= ruleConcept )
            	            {
            	            // InternalKim.g:4642:11: (lv_domainConcept_25_0= ruleConcept )
            	            // InternalKim.g:4643:12: lv_domainConcept_25_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_65);
            	            lv_domainConcept_25_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_25_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4667:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4667:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4668:5: {...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4668:106: ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4669:6: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4672:9: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4672:10: {...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4672:19: (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
            	    // InternalKim.g:4672:20: otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
            	    {
            	    otherlv_26=(Token)match(input,83,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_27=(Token)match(input,40,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getWithKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4680:9: ( (lv_disjointNamespaces_28_0= rulePathName ) )
            	    // InternalKim.g:4681:10: (lv_disjointNamespaces_28_0= rulePathName )
            	    {
            	    // InternalKim.g:4681:10: (lv_disjointNamespaces_28_0= rulePathName )
            	    // InternalKim.g:4682:11: lv_disjointNamespaces_28_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_72);
            	    lv_disjointNamespaces_28_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_28_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4699:9: (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
            	    // InternalKim.g:4700:10: otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )*
            	    {
            	    otherlv_29=(Token)match(input,25,FOLLOW_73); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_29, grammarAccess.getNamespaceAccess().getCommaKeyword_5_4_3_0());
            	      									
            	    }
            	    // InternalKim.g:4704:10: ( (lv_disjointNamespaces_30_0= rulePathName ) )*
            	    loop102:
            	    do {
            	        int alt102=2;
            	        int LA102_0 = input.LA(1);

            	        if ( (LA102_0==RULE_LOWERCASE_ID||LA102_0==RULE_LOWERCASE_DASHID) ) {
            	            alt102=1;
            	        }


            	        switch (alt102) {
            	    	case 1 :
            	    	    // InternalKim.g:4705:11: (lv_disjointNamespaces_30_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:4705:11: (lv_disjointNamespaces_30_0= rulePathName )
            	    	    // InternalKim.g:4706:12: lv_disjointNamespaces_30_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_73);
            	    	    lv_disjointNamespaces_30_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_30_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop102;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4730:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4730:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:4731:5: {...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4731:106: ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:4732:6: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4735:9: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:4735:10: {...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4735:19: (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:4735:20: otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) )
            	    {
            	    otherlv_31=(Token)match(input,84,FOLLOW_74); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getVersionKeyword_5_5_0());
            	      								
            	    }
            	    // InternalKim.g:4739:9: ( (lv_version_32_0= ruleVersionNumber ) )
            	    // InternalKim.g:4740:10: (lv_version_32_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:4740:10: (lv_version_32_0= ruleVersionNumber )
            	    // InternalKim.g:4741:11: lv_version_32_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_65);
            	    lv_version_32_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_32_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:4764:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:4764:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:4765:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:4765:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:4766:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:4769:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:4769:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4769:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:4769:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:4769:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:4770:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
            	    // InternalKim.g:4773:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:4774:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:4774:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+
            	    int cnt106=0;
            	    loop106:
            	    do {
            	        int alt106=4;
            	        switch ( input.LA(1) ) {
            	        case 29:
            	            {
            	            int LA106_2 = input.LA(2);

            	            if ( synpred195_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	                alt106=3;
            	            }


            	            }
            	            break;
            	        case 85:
            	            {
            	            int LA106_3 = input.LA(2);

            	            if ( synpred192_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	                alt106=1;
            	            }


            	            }
            	            break;
            	        case 87:
            	            {
            	            int LA106_4 = input.LA(2);

            	            if ( synpred194_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	                alt106=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt106) {
            	    	case 1 :
            	    	    // InternalKim.g:4775:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4775:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:4776:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
            	    	    }
            	    	    // InternalKim.g:4776:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:4777:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
            	    	    // InternalKim.g:4780:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:4780:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4780:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:4780:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_34=(Token)match(input,85,FOLLOW_75); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getResolveKeyword_5_6_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4784:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
            	    	    int alt104=2;
            	    	    int LA104_0 = input.LA(1);

            	    	    if ( (LA104_0==86) ) {
            	    	        alt104=1;
            	    	    }
            	    	    switch (alt104) {
            	    	        case 1 :
            	    	            // InternalKim.g:4785:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_35=(Token)match(input,86,FOLLOW_73); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_35, grammarAccess.getNamespaceAccess().getFromKeyword_5_6_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:4789:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
            	    	            loop103:
            	    	            do {
            	    	                int alt103=2;
            	    	                int LA103_0 = input.LA(1);

            	    	                if ( (LA103_0==RULE_LOWERCASE_ID||LA103_0==RULE_LOWERCASE_DASHID) ) {
            	    	                    alt103=1;
            	    	                }


            	    	                switch (alt103) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:4790:16: (lv_lookupNamespace_36_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:4790:16: (lv_lookupNamespace_36_0= rulePathName )
            	    	            	    // InternalKim.g:4791:17: lv_lookupNamespace_36_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_73);
            	    	            	    lv_lookupNamespace_36_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_36_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop103;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:4815:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4815:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:4816:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
            	    	    }
            	    	    // InternalKim.g:4816:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:4817:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
            	    	    // InternalKim.g:4820:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:4820:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4820:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
            	    	    // InternalKim.g:4820:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_37=(Token)match(input,87,FOLLOW_73); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_37, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_6_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4824:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
            	    	    loop105:
            	    	    do {
            	    	        int alt105=2;
            	    	        int LA105_0 = input.LA(1);

            	    	        if ( (LA105_0==RULE_LOWERCASE_ID||LA105_0==RULE_LOWERCASE_DASHID) ) {
            	    	            alt105=1;
            	    	        }


            	    	        switch (alt105) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:4825:15: (lv_blacklistNamespace_38_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:4825:15: (lv_blacklistNamespace_38_0= rulePathName )
            	    	    	    // InternalKim.g:4826:16: lv_blacklistNamespace_38_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_73);
            	    	    	    lv_blacklistNamespace_38_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_38_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop105;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:4849:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4849:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
            	    	    // InternalKim.g:4850:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
            	    	    }
            	    	    // InternalKim.g:4850:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
            	    	    // InternalKim.g:4851:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
            	    	    // InternalKim.g:4854:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
            	    	    // InternalKim.g:4854:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4854:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
            	    	    // InternalKim.g:4854:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
            	    	    {
            	    	    otherlv_39=(Token)match(input,29,FOLLOW_31); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getUsingKeyword_5_6_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4858:14: ( (lv_weights_40_0= ruleMetadata ) )
            	    	    // InternalKim.g:4859:15: (lv_weights_40_0= ruleMetadata )
            	    	    {
            	    	    // InternalKim.g:4859:15: (lv_weights_40_0= ruleMetadata )
            	    	    // InternalKim.g:4860:16: lv_weights_40_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_65);
            	    	    lv_weights_40_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_40_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Metadata");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt106 >= 1 ) break loop106;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(106, input);
            	                throw eee;
            	        }
            	        cnt106++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop107;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:4903:3: (otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) ) )?
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==40) ) {
                int LA108_1 = input.LA(2);

                if ( (LA108_1==88) ) {
                    alt108=1;
                }
            }
            switch (alt108) {
                case 1 :
                    // InternalKim.g:4904:4: otherlv_41= 'with' otherlv_42= 'parameters' ( (lv_parameters_43_0= ruleMetadata ) )
                    {
                    otherlv_41=(Token)match(input,40,FOLLOW_76); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getNamespaceAccess().getWithKeyword_6_0());
                      			
                    }
                    otherlv_42=(Token)match(input,88,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getParametersKeyword_6_1());
                      			
                    }
                    // InternalKim.g:4912:4: ( (lv_parameters_43_0= ruleMetadata ) )
                    // InternalKim.g:4913:5: (lv_parameters_43_0= ruleMetadata )
                    {
                    // InternalKim.g:4913:5: (lv_parameters_43_0= ruleMetadata )
                    // InternalKim.g:4914:6: lv_parameters_43_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getParametersMetadataParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_parameters_43_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"parameters",
                      							lv_parameters_43_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4932:3: (otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) ) )?
            int alt109=2;
            int LA109_0 = input.LA(1);

            if ( (LA109_0==40) ) {
                int LA109_1 = input.LA(2);

                if ( (LA109_1==41) ) {
                    alt109=1;
                }
            }
            switch (alt109) {
                case 1 :
                    // InternalKim.g:4933:4: otherlv_44= 'with' otherlv_45= 'metadata' ( (lv_metadata_46_0= ruleMetadata ) )
                    {
                    otherlv_44=(Token)match(input,40,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getWithKeyword_7_0());
                      			
                    }
                    otherlv_45=(Token)match(input,41,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getNamespaceAccess().getMetadataKeyword_7_1());
                      			
                    }
                    // InternalKim.g:4941:4: ( (lv_metadata_46_0= ruleMetadata ) )
                    // InternalKim.g:4942:5: (lv_metadata_46_0= ruleMetadata )
                    {
                    // InternalKim.g:4942:5: (lv_metadata_46_0= ruleMetadata )
                    // InternalKim.g:4943:6: lv_metadata_46_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMetadataParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_77);
                    lv_metadata_46_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_46_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4961:3: (otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) ) )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==40) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalKim.g:4962:4: otherlv_47= 'with' otherlv_48= 'documentation' ( (lv_documentation_49_0= ruleMetadata ) )
                    {
                    otherlv_47=(Token)match(input,40,FOLLOW_33); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getNamespaceAccess().getWithKeyword_8_0());
                      			
                    }
                    otherlv_48=(Token)match(input,42,FOLLOW_31); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_48, grammarAccess.getNamespaceAccess().getDocumentationKeyword_8_1());
                      			
                    }
                    // InternalKim.g:4970:4: ( (lv_documentation_49_0= ruleMetadata ) )
                    // InternalKim.g:4971:5: (lv_documentation_49_0= ruleMetadata )
                    {
                    // InternalKim.g:4971:5: (lv_documentation_49_0= ruleMetadata )
                    // InternalKim.g:4972:6: lv_documentation_49_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getDocumentationMetadataParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_documentation_49_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_49_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_50=(Token)match(input,19,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_50, grammarAccess.getNamespaceAccess().getSemicolonKeyword_9());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:5001:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:5001:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:5002:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:5008:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:5014:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:5015:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:5015:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:5016:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:5016:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:5017:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:5017:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:5018:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_9); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:5034:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:5035:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,23,FOLLOW_61); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:5039:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:5040:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:5040:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:5041:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:5062:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:5062:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:5063:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:5069:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5075:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:5076:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:5076:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:5077:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:5077:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt112=2;
            int LA112_0 = input.LA(1);

            if ( (LA112_0==36||LA112_0==38) ) {
                alt112=1;
            }
            switch (alt112) {
                case 1 :
                    // InternalKim.g:5078:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:5078:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt111=2;
                    int LA111_0 = input.LA(1);

                    if ( (LA111_0==36) ) {
                        alt111=1;
                    }
                    else if ( (LA111_0==38) ) {
                        alt111=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 111, 0, input);

                        throw nvae;
                    }
                    switch (alt111) {
                        case 1 :
                            // InternalKim.g:5079:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:5079:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:5080:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:5080:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:5081:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_78);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:5099:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:5099:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:5100:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:5100:6: (lv_star_1_0= '*' )
                            // InternalKim.g:5101:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,38,FOLLOW_78); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,86,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5119:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:5120:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:5120:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:5121:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:5142:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:5142:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:5143:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:5149:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID ) )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_LOWERCASE_ID_11=null;
        Token this_LOWERCASE_DASHID_12=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_9 = null;



        	enterRule();

        try {
            // InternalKim.g:5155:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID ) )? ) )
            // InternalKim.g:5156:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID ) )? )
            {
            // InternalKim.g:5156:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID ) )? )
            // InternalKim.g:5157:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID ) )?
            {
            // InternalKim.g:5157:3: (kw= 'urn:klab:' )?
            int alt113=2;
            int LA113_0 = input.LA(1);

            if ( (LA113_0==89) ) {
                alt113=1;
            }
            switch (alt113) {
                case 1 :
                    // InternalKim.g:5158:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,89,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,90,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,90,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,90,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7());
              		
            }
            pushFollow(FOLLOW_81);
            this_Path_7=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Path_7);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:5219:3: (kw= ':' this_VersionNumber_9= ruleVersionNumber )?
            int alt114=2;
            int LA114_0 = input.LA(1);

            if ( (LA114_0==90) ) {
                alt114=1;
            }
            switch (alt114) {
                case 1 :
                    // InternalKim.g:5220:4: kw= ':' this_VersionNumber_9= ruleVersionNumber
                    {
                    kw=(Token)match(input,90,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_82);
                    this_VersionNumber_9=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_9);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5236:3: (kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID ) )?
            int alt116=2;
            int LA116_0 = input.LA(1);

            if ( (LA116_0==53) ) {
                alt116=1;
            }
            switch (alt116) {
                case 1 :
                    // InternalKim.g:5237:4: kw= '#' (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID )
                    {
                    kw=(Token)match(input,53,FOLLOW_80); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    // InternalKim.g:5242:4: (this_LOWERCASE_ID_11= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID )
                    int alt115=2;
                    int LA115_0 = input.LA(1);

                    if ( (LA115_0==RULE_LOWERCASE_ID) ) {
                        alt115=1;
                    }
                    else if ( (LA115_0==RULE_LOWERCASE_DASHID) ) {
                        alt115=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 115, 0, input);

                        throw nvae;
                    }
                    switch (alt115) {
                        case 1 :
                            // InternalKim.g:5243:5: this_LOWERCASE_ID_11= RULE_LOWERCASE_ID
                            {
                            this_LOWERCASE_ID_11=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_LOWERCASE_ID_11);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_LOWERCASE_ID_11, grammarAccess.getUrnIdAccess().getLOWERCASE_IDTerminalRuleCall_9_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5251:5: this_LOWERCASE_DASHID_12= RULE_LOWERCASE_DASHID
                            {
                            this_LOWERCASE_DASHID_12=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_LOWERCASE_DASHID_12);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_LOWERCASE_DASHID_12, grammarAccess.getUrnIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_9_1_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:5264:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:5264:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:5265:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:5271:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:5277:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:5278:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:5278:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:5279:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:5279:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt117=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt117=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt117=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt117=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 117, 0, input);

                throw nvae;
            }

            switch (alt117) {
                case 1 :
                    // InternalKim.g:5280:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:5288:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:5296:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5304:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop119:
            do {
                int alt119=2;
                int LA119_0 = input.LA(1);

                if ( (LA119_0==91) ) {
                    alt119=1;
                }


                switch (alt119) {
            	case 1 :
            	    // InternalKim.g:5305:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,91,FOLLOW_84); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5310:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt118=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt118=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt118=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt118=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 118, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt118) {
            	        case 1 :
            	            // InternalKim.g:5311:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_83); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5319:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_83); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5327:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_83); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop119;
                }
            } while (true);

            // InternalKim.g:5336:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt120=2;
            int LA120_0 = input.LA(1);

            if ( (LA120_0==92) ) {
                alt120=1;
            }
            switch (alt120) {
                case 1 :
                    // InternalKim.g:5337:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,92,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_82); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5350:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt121=2;
            int LA121_0 = input.LA(1);

            if ( (LA121_0==53) ) {
                alt121=1;
            }
            switch (alt121) {
                case 1 :
                    // InternalKim.g:5351:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,53,FOLLOW_61); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5368:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5368:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5369:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5375:1: ruleObserveStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_body_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5381:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5382:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5382:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5383:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5383:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop122:
            do {
                int alt122=2;
                int LA122_0 = input.LA(1);

                if ( (LA122_0==RULE_ANNOTATION_ID) ) {
                    alt122=1;
                }


                switch (alt122) {
            	case 1 :
            	    // InternalKim.g:5384:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:5384:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:5385:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_85);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop122;
                }
            } while (true);

            otherlv_1=(Token)match(input,93,FOLLOW_86); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5406:3: ( (lv_body_2_0= ruleObserveStatementBody ) )
            // InternalKim.g:5407:4: (lv_body_2_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5407:4: (lv_body_2_0= ruleObserveStatementBody )
            // InternalKim.g:5408:5: lv_body_2_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5429:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5433:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5434:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5443:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_actions_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_15_0 = null;

        EObject lv_observations_17_0 = null;

        EObject lv_accessor_19_0 = null;

        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5452:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5453:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5453:2: ( ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5454:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5454:3: ( ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            // InternalKim.g:5455:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5458:4: ( ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            // InternalKim.g:5459:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5459:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+
            int cnt136=0;
            loop136:
            do {
                int alt136=3;
                alt136 = dfa136.predict(input);
                switch (alt136) {
            	case 1 :
            	    // InternalKim.g:5460:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) )
            	    {
            	    // InternalKim.g:5460:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) )
            	    // InternalKim.g:5461:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5461:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) )
            	    // InternalKim.g:5462:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5465:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) )
            	    // InternalKim.g:5465:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5465:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? )
            	    // InternalKim.g:5465:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )?
            	    {
            	    // InternalKim.g:5465:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
            	    int alt123=2;
            	    alt123 = dfa123.predict(input);
            	    switch (alt123) {
            	        case 1 :
            	            // InternalKim.g:5466:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
            	            {
            	            // InternalKim.g:5466:9: ( (lv_urn_1_0= ruleUrn ) )
            	            // InternalKim.g:5467:10: (lv_urn_1_0= ruleUrn )
            	            {
            	            // InternalKim.g:5467:10: (lv_urn_1_0= ruleUrn )
            	            // InternalKim.g:5468:11: lv_urn_1_0= ruleUrn
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_9);
            	            lv_urn_1_0=ruleUrn();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"urn",
            	              												lv_urn_1_0,
            	              												"org.integratedmodelling.kim.Kim.Urn");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            otherlv_2=(Token)match(input,23,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_2, grammarAccess.getObserveStatementBodyAccess().getAsKeyword_0_0_1());
            	              								
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:5490:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5491:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5491:9: (lv_concept_3_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5492:10: lv_concept_3_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_87);
            	    lv_concept_3_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_3_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5509:8: ( (lv_docstring_4_0= RULE_STRING ) )?
            	    int alt124=2;
            	    int LA124_0 = input.LA(1);

            	    if ( (LA124_0==RULE_STRING) ) {
            	        int LA124_1 = input.LA(2);

            	        if ( (synpred215_InternalKim()) ) {
            	            alt124=1;
            	        }
            	    }
            	    switch (alt124) {
            	        case 1 :
            	            // InternalKim.g:5510:9: (lv_docstring_4_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5510:9: (lv_docstring_4_0= RULE_STRING )
            	            // InternalKim.g:5511:10: lv_docstring_4_0= RULE_STRING
            	            {
            	            lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_87); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_4_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_2_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_4_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5527:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
            	    int alt126=2;
            	    int LA126_0 = input.LA(1);

            	    if ( (LA126_0==94) ) {
            	        alt126=1;
            	    }
            	    switch (alt126) {
            	        case 1 :
            	            // InternalKim.g:5528:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            {
            	            otherlv_5=(Token)match(input,94,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5532:9: ( (lv_parents_6_0= rulePathName ) )
            	            // InternalKim.g:5533:10: (lv_parents_6_0= rulePathName )
            	            {
            	            // InternalKim.g:5533:10: (lv_parents_6_0= rulePathName )
            	            // InternalKim.g:5534:11: lv_parents_6_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_88);
            	            lv_parents_6_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_6_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5551:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
            	            loop125:
            	            do {
            	                int alt125=2;
            	                alt125 = dfa125.predict(input);
            	                switch (alt125) {
            	            	case 1 :
            	            	    // InternalKim.g:5552:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
            	            	    {
            	            	    otherlv_7=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5556:10: ( (lv_parents_8_0= rulePathName ) )
            	            	    // InternalKim.g:5557:11: (lv_parents_8_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5557:11: (lv_parents_8_0= rulePathName )
            	            	    // InternalKim.g:5558:12: lv_parents_8_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_88);
            	            	    lv_parents_8_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_8_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop125;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5577:8: ( (lv_actions_9_0= ruleActionSpecification ) )*
            	    loop127:
            	    do {
            	        int alt127=2;
            	        int LA127_0 = input.LA(1);

            	        if ( ((LA127_0>=54 && LA127_0<=56)) ) {
            	            alt127=1;
            	        }


            	        switch (alt127) {
            	    	case 1 :
            	    	    // InternalKim.g:5578:9: (lv_actions_9_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:5578:9: (lv_actions_9_0= ruleActionSpecification )
            	    	    // InternalKim.g:5579:10: lv_actions_9_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_4_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_89);
            	    	    lv_actions_9_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_9_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop127;
            	        }
            	    } while (true);

            	    // InternalKim.g:5596:8: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )?
            	    int alt129=2;
            	    int LA129_0 = input.LA(1);

            	    if ( (LA129_0==28) ) {
            	        alt129=1;
            	    }
            	    switch (alt129) {
            	        case 1 :
            	            // InternalKim.g:5597:9: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_10=(Token)match(input,28,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_5_0());
            	              								
            	            }
            	            // InternalKim.g:5601:9: ( (lv_states_11_0= ruleObservableSemantics ) )
            	            // InternalKim.g:5602:10: (lv_states_11_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:5602:10: (lv_states_11_0= ruleObservableSemantics )
            	            // InternalKim.g:5603:11: lv_states_11_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_90);
            	            lv_states_11_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"states",
            	              												lv_states_11_0,
            	              												"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5620:9: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
            	            loop128:
            	            do {
            	                int alt128=2;
            	                alt128 = dfa128.predict(input);
            	                switch (alt128) {
            	            	case 1 :
            	            	    // InternalKim.g:5621:10: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_12=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_5_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5625:10: ( (lv_states_13_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:5626:11: (lv_states_13_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:5626:11: (lv_states_13_0= ruleObservableSemantics )
            	            	    // InternalKim.g:5627:12: lv_states_13_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_90);
            	            	    lv_states_13_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"states",
            	            	      													lv_states_13_0,
            	            	      													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop128;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5646:8: (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )?
            	    int alt131=2;
            	    int LA131_0 = input.LA(1);

            	    if ( (LA131_0==40) ) {
            	        int LA131_1 = input.LA(2);

            	        if ( (LA131_1==EOF||(LA131_1>=RULE_LOWERCASE_ID && LA131_1<=RULE_STRING)||(LA131_1>=RULE_CAMELCASE_ID && LA131_1<=RULE_LOWERCASE_DASHID)||LA131_1==19||LA131_1==25||LA131_1==29||LA131_1==36||LA131_1==40||LA131_1==89||(LA131_1>=111 && LA131_1<=112)||(LA131_1>=120 && LA131_1<=121)||(LA131_1>=123 && LA131_1<=135)) ) {
            	            alt131=1;
            	        }
            	    }
            	    switch (alt131) {
            	        case 1 :
            	            // InternalKim.g:5647:9: otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )*
            	            {
            	            otherlv_14=(Token)match(input,40,FOLLOW_91); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_14, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_0_6_0());
            	              								
            	            }
            	            // InternalKim.g:5651:9: ( (lv_observations_15_0= ruleObserveStatementBody ) )
            	            // InternalKim.g:5652:10: (lv_observations_15_0= ruleObserveStatementBody )
            	            {
            	            // InternalKim.g:5652:10: (lv_observations_15_0= ruleObserveStatementBody )
            	            // InternalKim.g:5653:11: lv_observations_15_0= ruleObserveStatementBody
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_90);
            	            lv_observations_15_0=ruleObserveStatementBody();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"observations",
            	              												lv_observations_15_0,
            	              												"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5670:9: (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )*
            	            loop130:
            	            do {
            	                int alt130=2;
            	                int LA130_0 = input.LA(1);

            	                if ( (LA130_0==25) ) {
            	                    int LA130_2 = input.LA(2);

            	                    if ( (synpred221_InternalKim()) ) {
            	                        alt130=1;
            	                    }


            	                }


            	                switch (alt130) {
            	            	case 1 :
            	            	    // InternalKim.g:5671:10: otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) )
            	            	    {
            	            	    otherlv_16=(Token)match(input,25,FOLLOW_91); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_16, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_6_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5675:10: ( (lv_observations_17_0= ruleObserveStatementBody ) )
            	            	    // InternalKim.g:5676:11: (lv_observations_17_0= ruleObserveStatementBody )
            	            	    {
            	            	    // InternalKim.g:5676:11: (lv_observations_17_0= ruleObserveStatementBody )
            	            	    // InternalKim.g:5677:12: lv_observations_17_0= ruleObserveStatementBody
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_90);
            	            	    lv_observations_17_0=ruleObserveStatementBody();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"observations",
            	            	      													lv_observations_17_0,
            	            	      													"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop130;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5696:8: (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )?
            	    int alt133=2;
            	    int LA133_0 = input.LA(1);

            	    if ( (LA133_0==29) ) {
            	        int LA133_1 = input.LA(2);

            	        if ( (synpred224_InternalKim()) ) {
            	            alt133=1;
            	        }
            	    }
            	    switch (alt133) {
            	        case 1 :
            	            // InternalKim.g:5697:9: otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )?
            	            {
            	            otherlv_18=(Token)match(input,29,FOLLOW_92); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_18, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_0_7_0());
            	              								
            	            }
            	            // InternalKim.g:5701:9: ( (lv_accessor_19_0= ruleFunction ) )?
            	            int alt132=2;
            	            alt132 = dfa132.predict(input);
            	            switch (alt132) {
            	                case 1 :
            	                    // InternalKim.g:5702:10: (lv_accessor_19_0= ruleFunction )
            	                    {
            	                    // InternalKim.g:5702:10: (lv_accessor_19_0= ruleFunction )
            	                    // InternalKim.g:5703:11: lv_accessor_19_0= ruleFunction
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_7_1_0());
            	                      										
            	                    }
            	                    pushFollow(FOLLOW_92);
            	                    lv_accessor_19_0=ruleFunction();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											if (current==null) {
            	                      												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      											}
            	                      											set(
            	                      												current,
            	                      												"accessor",
            	                      												lv_accessor_19_0,
            	                      												"org.integratedmodelling.kim.Kim.Function");
            	                      											afterParserOrEnumRuleCall();
            	                      										
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5727:3: ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
            	    {
            	    // InternalKim.g:5727:3: ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
            	    // InternalKim.g:5728:4: {...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:5728:114: ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
            	    // InternalKim.g:5729:5: ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:5732:8: ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
            	    // InternalKim.g:5732:9: {...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5732:18: ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
            	    // InternalKim.g:5732:19: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
            	    {
            	    // InternalKim.g:5732:19: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
            	    int alt134=2;
            	    int LA134_0 = input.LA(1);

            	    if ( (LA134_0==40) ) {
            	        int LA134_1 = input.LA(2);

            	        if ( (synpred226_InternalKim()) ) {
            	            alt134=1;
            	        }
            	    }
            	    switch (alt134) {
            	        case 1 :
            	            // InternalKim.g:5733:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
            	            {
            	            otherlv_20=(Token)match(input,40,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_20, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_0_0());
            	              								
            	            }
            	            otherlv_21=(Token)match(input,41,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_1_0_1());
            	              								
            	            }
            	            // InternalKim.g:5741:9: ( (lv_metadata_22_0= ruleMetadata ) )
            	            // InternalKim.g:5742:10: (lv_metadata_22_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5742:10: (lv_metadata_22_0= ruleMetadata )
            	            // InternalKim.g:5743:11: lv_metadata_22_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_0_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_92);
            	            lv_metadata_22_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"metadata",
            	              												lv_metadata_22_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5761:8: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
            	    int alt135=2;
            	    int LA135_0 = input.LA(1);

            	    if ( (LA135_0==40) ) {
            	        int LA135_1 = input.LA(2);

            	        if ( (synpred227_InternalKim()) ) {
            	            alt135=1;
            	        }
            	    }
            	    switch (alt135) {
            	        case 1 :
            	            // InternalKim.g:5762:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
            	            {
            	            otherlv_23=(Token)match(input,40,FOLLOW_33); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_1_0());
            	              								
            	            }
            	            otherlv_24=(Token)match(input,42,FOLLOW_31); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_24, grammarAccess.getObserveStatementBodyAccess().getDocumentationKeyword_1_1_1());
            	              								
            	            }
            	            // InternalKim.g:5770:9: ( (lv_documentation_25_0= ruleMetadata ) )
            	            // InternalKim.g:5771:10: (lv_documentation_25_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5771:10: (lv_documentation_25_0= ruleMetadata )
            	            // InternalKim.g:5772:11: lv_documentation_25_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_1_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_92);
            	            lv_documentation_25_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"documentation",
            	              												lv_documentation_25_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt136 >= 1 ) break loop136;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(136, input);
                        throw eee;
                }
                cnt136++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:5810:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:5814:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:5815:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:5824:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token lv_optional_20_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_name_26_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        EObject lv_by_6_0 = null;

        EObject lv_downTo_9_0 = null;

        EObject lv_role_11_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;

        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;

        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:5833:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:5834:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:5834:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:5835:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:5835:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt137=2;
            alt137 = dfa137.predict(input);
            switch (alt137) {
                case 1 :
                    // InternalKim.g:5836:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:5836:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:5837:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:5837:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:5838:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_9);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,23,FOLLOW_93); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5860:3: ( (lv_generic_2_0= 'any' ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==95) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalKim.g:5861:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:5861:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:5862:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,95,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:5874:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:5875:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:5875:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:5876:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_94);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:5893:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:5894:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:5894:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:5895:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:5898:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:5899:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:5899:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop142:
            do {
                int alt142=9;
                alt142 = dfa142.predict(input);
                switch (alt142) {
            	case 1 :
            	    // InternalKim.g:5900:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5900:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5901:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:5901:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5902:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:5905:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5905:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5905:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    // InternalKim.g:5905:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
            	    {
            	    otherlv_5=(Token)match(input,96,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getByKeyword_3_0_0());
            	      								
            	    }
            	    // InternalKim.g:5909:9: ( (lv_by_6_0= ruleConcept ) )
            	    // InternalKim.g:5910:10: (lv_by_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:5910:10: (lv_by_6_0= ruleConcept )
            	    // InternalKim.g:5911:11: lv_by_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_by_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5934:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5934:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5935:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:5935:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5936:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:5939:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5939:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5939:19: (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
            	    // InternalKim.g:5939:20: otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) )
            	    {
            	    otherlv_7=(Token)match(input,97,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getObservableSemanticsAccess().getDownKeyword_3_1_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_1_1());
            	      								
            	    }
            	    // InternalKim.g:5947:9: ( (lv_downTo_9_0= ruleConcept ) )
            	    // InternalKim.g:5948:10: (lv_downTo_9_0= ruleConcept )
            	    {
            	    // InternalKim.g:5948:10: (lv_downTo_9_0= ruleConcept )
            	    // InternalKim.g:5949:11: lv_downTo_9_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToConceptParserRuleCall_3_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_downTo_9_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"downTo",
            	      												lv_downTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:5972:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5972:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5973:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:5973:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5974:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:5977:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5977:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5977:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    // InternalKim.g:5977:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
            	    {
            	    otherlv_10=(Token)match(input,23,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getObservableSemanticsAccess().getAsKeyword_3_2_0());
            	      								
            	    }
            	    // InternalKim.g:5981:9: ( (lv_role_11_0= ruleConcept ) )
            	    // InternalKim.g:5982:10: (lv_role_11_0= ruleConcept )
            	    {
            	    // InternalKim.g:5982:10: (lv_role_11_0= ruleConcept )
            	    // InternalKim.g:5983:11: lv_role_11_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_role_11_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"role",
            	      												lv_role_11_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6006:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6006:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:6007:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:6007:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:6008:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:6011:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:6011:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6011:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    // InternalKim.g:6011:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    {
            	    otherlv_12=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_3_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,34,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_3_1());
            	      								
            	    }
            	    // InternalKim.g:6019:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    // InternalKim.g:6020:10: (lv_accordingTo_14_0= rulePropertyId )
            	    {
            	    // InternalKim.g:6020:10: (lv_accordingTo_14_0= rulePropertyId )
            	    // InternalKim.g:6021:11: lv_accordingTo_14_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_accordingTo_14_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_14_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6044:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6044:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:6045:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:6045:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:6046:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:6049:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:6049:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6049:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    int alt140=2;
            	    int LA140_0 = input.LA(1);

            	    if ( (LA140_0==48) ) {
            	        alt140=1;
            	    }
            	    else if ( (LA140_0==98) ) {
            	        alt140=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 140, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt140) {
            	        case 1 :
            	            // InternalKim.g:6049:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:6049:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:6050:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            {
            	            otherlv_15=(Token)match(input,48,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_15, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_4_0_0());
            	              									
            	            }
            	            // InternalKim.g:6054:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            int alt139=2;
            	            alt139 = dfa139.predict(input);
            	            switch (alt139) {
            	                case 1 :
            	                    // InternalKim.g:6055:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:6055:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    // InternalKim.g:6056:12: (lv_unit_16_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:6056:12: (lv_unit_16_0= ruleUnit )
            	                    // InternalKim.g:6057:13: lv_unit_16_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_unit_16_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_16_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:6075:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:6075:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    // InternalKim.g:6076:12: (lv_currency_17_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:6076:12: (lv_currency_17_0= ruleCurrency )
            	                    // InternalKim.g:6077:13: lv_currency_17_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_94);
            	                    lv_currency_17_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_17_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6097:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:6097:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            // InternalKim.g:6098:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
            	            {
            	            otherlv_18=(Token)match(input,98,FOLLOW_96); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_4_1_0());
            	              									
            	            }
            	            // InternalKim.g:6102:10: ( (lv_unit_19_0= ruleUnit ) )
            	            // InternalKim.g:6103:11: (lv_unit_19_0= ruleUnit )
            	            {
            	            // InternalKim.g:6103:11: (lv_unit_19_0= ruleUnit )
            	            // InternalKim.g:6104:12: lv_unit_19_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_94);
            	            lv_unit_19_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_19_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6128:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:6128:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    // InternalKim.g:6129:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:6129:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    // InternalKim.g:6130:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:6133:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    // InternalKim.g:6133:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6133:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    int alt141=2;
            	    int LA141_0 = input.LA(1);

            	    if ( (LA141_0==99) ) {
            	        alt141=1;
            	    }
            	    else if ( (LA141_0==100) ) {
            	        alt141=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 141, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt141) {
            	        case 1 :
            	            // InternalKim.g:6133:20: ( (lv_optional_20_0= 'optional' ) )
            	            {
            	            // InternalKim.g:6133:20: ( (lv_optional_20_0= 'optional' ) )
            	            // InternalKim.g:6134:10: (lv_optional_20_0= 'optional' )
            	            {
            	            // InternalKim.g:6134:10: (lv_optional_20_0= 'optional' )
            	            // InternalKim.g:6135:11: lv_optional_20_0= 'optional'
            	            {
            	            lv_optional_20_0=(Token)match(input,99,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_20_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_5_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:6148:9: otherlv_21= 'required'
            	            {
            	            otherlv_21=(Token)match(input,100,FOLLOW_94); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_5_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:6158:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6158:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:6159:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:6159:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:6160:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:6163:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    // InternalKim.g:6163:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6163:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    // InternalKim.g:6163:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:6163:20: ( (lv_from_22_0= ruleNumber ) )
            	    // InternalKim.g:6164:10: (lv_from_22_0= ruleNumber )
            	    {
            	    // InternalKim.g:6164:10: (lv_from_22_0= ruleNumber )
            	    // InternalKim.g:6165:11: lv_from_22_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_from_22_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_22_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_23=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:6186:9: ( (lv_to_24_0= ruleNumber ) )
            	    // InternalKim.g:6187:10: (lv_to_24_0= ruleNumber )
            	    {
            	    // InternalKim.g:6187:10: (lv_to_24_0= ruleNumber )
            	    // InternalKim.g:6188:11: lv_to_24_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_94);
            	    lv_to_24_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_24_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:6211:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6211:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:6212:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:6212:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:6213:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:6216:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:6216:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:6216:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:6216:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_25=(Token)match(input,101,FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_25, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_7_0());
            	      								
            	    }
            	    // InternalKim.g:6220:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:6221:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:6221:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:6222:11: lv_name_26_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_94); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_26_0, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_26_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop142;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:6258:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalKim.g:6258:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:6259:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:6265:1: ruleDependency returns [EObject current=null] : ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_0_1=null;
        AntlrDatatypeRuleToken lv_modelReference_0_2 = null;

        EObject lv_observable_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6271:2: ( ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) )
            // InternalKim.g:6272:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            {
            // InternalKim.g:6272:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            int alt144=2;
            alt144 = dfa144.predict(input);
            switch (alt144) {
                case 1 :
                    // InternalKim.g:6273:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    {
                    // InternalKim.g:6273:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    // InternalKim.g:6274:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    {
                    // InternalKim.g:6274:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    // InternalKim.g:6275:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    {
                    // InternalKim.g:6275:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    int alt143=2;
                    int LA143_0 = input.LA(1);

                    if ( (LA143_0==RULE_LOWERCASE_ID) ) {
                        int LA143_1 = input.LA(2);

                        if ( (synpred242_InternalKim()) ) {
                            alt143=1;
                        }
                        else if ( (true) ) {
                            alt143=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 143, 1, input);

                            throw nvae;
                        }
                    }
                    else if ( (LA143_0==RULE_LOWERCASE_DASHID) ) {
                        alt143=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 143, 0, input);

                        throw nvae;
                    }
                    switch (alt143) {
                        case 1 :
                            // InternalKim.g:6276:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
                            {
                            lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_modelReference_0_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDependencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6291:6: lv_modelReference_0_2= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_modelReference_0_2=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getDependencyRule());
                              						}
                              						set(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_2,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6310:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:6310:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    // InternalKim.g:6311:4: (lv_observable_1_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:6311:4: (lv_observable_1_0= ruleObservableSemantics )
                    // InternalKim.g:6312:5: lv_observable_1_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDependencyAccess().getObservableObservableSemanticsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_1_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDependencyRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_1_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:6333:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6337:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:6338:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:6347:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_24=null;
        EObject lv_main_1_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_6_0 = null;

        EObject lv_compresent_8_0 = null;

        EObject lv_causant_11_0 = null;

        EObject lv_adjacent_14_0 = null;

        EObject lv_container_17_0 = null;

        EObject lv_contained_19_0 = null;

        EObject lv_caused_21_0 = null;

        EObject lv_during_23_0 = null;

        EObject lv_context_25_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6356:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) ) )? ) )
            // InternalKim.g:6357:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:6357:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) ) )? )
            // InternalKim.g:6358:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) ) )?
            {
            // InternalKim.g:6358:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt145=2;
            int LA145_0 = input.LA(1);

            if ( (LA145_0==RULE_STRING) ) {
                alt145=1;
            }
            switch (alt145) {
                case 1 :
                    // InternalKim.g:6359:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:6359:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:6360:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6376:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt146=0;
            loop146:
            do {
                int alt146=2;
                alt146 = dfa146.predict(input);
                switch (alt146) {
            	case 1 :
            	    // InternalKim.g:6377:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:6377:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:6378:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_97);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt146 >= 1 ) break loop146;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(146, input);
                        throw eee;
                }
                cnt146++;
            } while (true);

            // InternalKim.g:6395:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6396:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6396:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
            // InternalKim.g:6397:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());
            // InternalKim.g:6400:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
            // InternalKim.g:6401:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
            {
            // InternalKim.g:6401:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
            loop147:
            do {
                int alt147=10;
                alt147 = dfa147.predict(input);
                switch (alt147) {
            	case 1 :
            	    // InternalKim.g:6402:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6402:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6403:5: {...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalKim.g:6403:115: ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6404:6: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0);
            	    // InternalKim.g:6407:9: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6407:10: {...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6407:19: (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6407:20: otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_3=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getConceptDeclarationAccess().getOfKeyword_2_0_0());
            	      								
            	    }
            	    // InternalKim.g:6411:9: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6412:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6412:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6413:11: lv_inherency_4_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inherency",
            	      												lv_inherency_4_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6436:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6436:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6437:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalKim.g:6437:115: ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6438:6: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1);
            	    // InternalKim.g:6441:9: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6441:10: {...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6441:19: (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6441:20: otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_5=(Token)match(input,103,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_2_1_0());
            	      								
            	    }
            	    // InternalKim.g:6445:9: ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6446:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6446:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6447:11: lv_motivation_6_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_motivation_6_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"motivation",
            	      												lv_motivation_6_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6470:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6470:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6471:5: {...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalKim.g:6471:115: ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6472:6: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2);
            	    // InternalKim.g:6475:9: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6475:10: {...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6475:19: (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6475:20: otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_7=(Token)match(input,40,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getConceptDeclarationAccess().getWithKeyword_2_2_0());
            	      								
            	    }
            	    // InternalKim.g:6479:9: ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6480:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6480:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6481:11: lv_compresent_8_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_compresent_8_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"compresent",
            	      												lv_compresent_8_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6504:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6504:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6505:5: {...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalKim.g:6505:115: ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6506:6: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3);
            	    // InternalKim.g:6509:9: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6509:10: {...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6509:19: (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6509:20: otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_9=(Token)match(input,104,FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_2_3_0());
            	      								
            	    }
            	    otherlv_10=(Token)match(input,96,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getByKeyword_2_3_1());
            	      								
            	    }
            	    // InternalKim.g:6517:9: ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6518:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6518:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6519:11: lv_causant_11_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_2_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_causant_11_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"causant",
            	      												lv_causant_11_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6542:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6542:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6543:5: {...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalKim.g:6543:115: ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6544:6: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4);
            	    // InternalKim.g:6547:9: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6547:10: {...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6547:19: (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6547:20: otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_12=(Token)match(input,105,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_2_4_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getToKeyword_2_4_1());
            	      								
            	    }
            	    // InternalKim.g:6555:9: ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6556:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6556:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6557:11: lv_adjacent_14_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_2_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_adjacent_14_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"adjacent",
            	      												lv_adjacent_14_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6580:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6580:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6581:5: {...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // InternalKim.g:6581:115: ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6582:6: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5);
            	    // InternalKim.g:6585:9: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6585:10: {...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6585:19: (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6585:20: otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_15=(Token)match(input,106,FOLLOW_100); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_2_5_0());
            	      								
            	    }
            	    otherlv_16=(Token)match(input,48,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getInKeyword_2_5_1());
            	      								
            	    }
            	    // InternalKim.g:6593:9: ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6594:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6594:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6595:11: lv_container_17_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_2_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_container_17_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"container",
            	      												lv_container_17_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6619:5: {...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6)");
            	    }
            	    // InternalKim.g:6619:115: ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6620:6: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6);
            	    // InternalKim.g:6623:9: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6623:10: {...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6623:19: (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6623:20: otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_18=(Token)match(input,107,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_2_6_0());
            	      								
            	    }
            	    // InternalKim.g:6627:9: ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6628:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6628:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6629:11: lv_contained_19_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_2_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_contained_19_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"contained",
            	      												lv_contained_19_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6653:5: {...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7)");
            	    }
            	    // InternalKim.g:6653:115: ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6654:6: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7);
            	    // InternalKim.g:6657:9: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6657:10: {...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6657:19: (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6657:20: otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_20=(Token)match(input,108,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_2_7_0());
            	      								
            	    }
            	    // InternalKim.g:6661:9: ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6662:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6662:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6663:11: lv_caused_21_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_2_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_caused_21_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"caused",
            	      												lv_caused_21_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6687:5: {...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8)");
            	    }
            	    // InternalKim.g:6687:115: ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6688:6: ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8);
            	    // InternalKim.g:6691:9: ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6691:10: {...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6691:19: (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6691:20: otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_22=(Token)match(input,109,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_22, grammarAccess.getConceptDeclarationAccess().getDuringKeyword_2_8_0());
            	      								
            	    }
            	    // InternalKim.g:6695:9: ( (lv_during_23_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6696:10: (lv_during_23_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6696:10: (lv_during_23_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6697:11: lv_during_23_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_2_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_98);
            	    lv_during_23_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"during",
            	      												lv_during_23_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop147;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            }

            // InternalKim.g:6727:3: (otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) ) )?
            int alt148=2;
            int LA148_0 = input.LA(1);

            if ( (LA148_0==110) ) {
                alt148=1;
            }
            switch (alt148) {
                case 1 :
                    // InternalKim.g:6728:4: otherlv_24= 'within' ( (lv_context_25_0= ruleSimpleConceptDeclaration ) )
                    {
                    otherlv_24=(Token)match(input,110,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_3_0());
                      			
                    }
                    // InternalKim.g:6732:4: ( (lv_context_25_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:6733:5: (lv_context_25_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:6733:5: (lv_context_25_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:6734:6: lv_context_25_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_context_25_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"context",
                      							lv_context_25_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:6759:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:6759:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:6760:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:6766:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_templateType_2_1=null;
        Token lv_templateType_2_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_name_11_0=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_19_0=null;
        Token otherlv_21=null;
        Token lv_name_23_0=null;
        Token otherlv_25=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_31_0=null;
        Token otherlv_33=null;
        Token lv_name_35_0=null;
        Token otherlv_37=null;
        Token lv_name_39_0=null;
        Token otherlv_41=null;
        Token lv_template_43_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_4_0 = null;

        EObject lv_extends_6_0 = null;

        AntlrDatatypeRuleToken lv_type_8_0 = null;

        EObject lv_extends_10_0 = null;

        AntlrDatatypeRuleToken lv_type_12_0 = null;

        EObject lv_extends_14_0 = null;

        AntlrDatatypeRuleToken lv_type_16_0 = null;

        EObject lv_extends_18_0 = null;

        AntlrDatatypeRuleToken lv_type_20_0 = null;

        EObject lv_extends_22_0 = null;

        AntlrDatatypeRuleToken lv_type_24_0 = null;

        EObject lv_extends_26_0 = null;

        AntlrDatatypeRuleToken lv_type_28_0 = null;

        EObject lv_extends_30_0 = null;

        AntlrDatatypeRuleToken lv_type_32_0 = null;

        EObject lv_extends_34_0 = null;

        AntlrDatatypeRuleToken lv_type_36_0 = null;

        EObject lv_extends_38_0 = null;

        AntlrDatatypeRuleToken lv_type_40_0 = null;

        EObject lv_extends_42_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6772:2: ( ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) ) )
            // InternalKim.g:6773:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            {
            // InternalKim.g:6773:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) ) )
            int alt161=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt161=1;
                }
                break;
            case RULE_LOWERCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt161=2;
                }
                break;
            case 111:
            case 112:
                {
                alt161=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }

            switch (alt161) {
                case 1 :
                    // InternalKim.g:6774:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:6774:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:6775:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:6775:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:6776:5: lv_name_0_0= RULE_CAMELCASE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6793:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:6793:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    // InternalKim.g:6794:4: (lv_name_1_0= ruleNamespaceId )
                    {
                    // InternalKim.g:6794:4: (lv_name_1_0= ruleNamespaceId )
                    // InternalKim.g:6795:5: lv_name_1_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:6813:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    {
                    // InternalKim.g:6813:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) ) )
                    // InternalKim.g:6814:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) ) ( (lv_template_43_0= '}' ) )
                    {
                    // InternalKim.g:6814:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) )
                    // InternalKim.g:6815:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    {
                    // InternalKim.g:6815:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    // InternalKim.g:6816:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    {
                    // InternalKim.g:6816:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    int alt149=2;
                    int LA149_0 = input.LA(1);

                    if ( (LA149_0==111) ) {
                        alt149=1;
                    }
                    else if ( (LA149_0==112) ) {
                        alt149=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 149, 0, input);

                        throw nvae;
                    }
                    switch (alt149) {
                        case 1 :
                            // InternalKim.g:6817:7: lv_templateType_2_1= '${'
                            {
                            lv_templateType_2_1=(Token)match(input,111,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6828:7: lv_templateType_2_2= '#{'
                            {
                            lv_templateType_2_2=(Token)match(input,112,FOLLOW_101); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:6841:4: ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) ) )
                    int alt160=10;
                    switch ( input.LA(1) ) {
                    case 62:
                        {
                        alt160=1;
                        }
                        break;
                    case 113:
                        {
                        alt160=2;
                        }
                        break;
                    case 114:
                        {
                        alt160=3;
                        }
                        break;
                    case 105:
                        {
                        alt160=4;
                        }
                        break;
                    case 115:
                        {
                        alt160=5;
                        }
                        break;
                    case 106:
                        {
                        alt160=6;
                        }
                        break;
                    case 116:
                        {
                        alt160=7;
                        }
                        break;
                    case 117:
                        {
                        alt160=8;
                        }
                        break;
                    case 104:
                        {
                        alt160=9;
                        }
                        break;
                    case 118:
                        {
                        alt160=10;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 160, 0, input);

                        throw nvae;
                    }

                    switch (alt160) {
                        case 1 :
                            // InternalKim.g:6842:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6842:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6843:6: ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6843:6: ( (lv_name_3_0= 'context' ) )
                            // InternalKim.g:6844:7: (lv_name_3_0= 'context' )
                            {
                            // InternalKim.g:6844:7: (lv_name_3_0= 'context' )
                            // InternalKim.g:6845:8: lv_name_3_0= 'context'
                            {
                            lv_name_3_0=(Token)match(input,62,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_3_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_2_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_3_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6857:6: ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            int alt150=2;
                            int LA150_0 = input.LA(1);

                            if ( (LA150_0==81||(LA150_0>=142 && LA150_0<=143)||LA150_0==164||(LA150_0>=176 && LA150_0<=179)||(LA150_0>=193 && LA150_0<=222)) ) {
                                alt150=1;
                            }
                            else if ( (LA150_0==94) ) {
                                alt150=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 150, 0, input);

                                throw nvae;
                            }
                            switch (alt150) {
                                case 1 :
                                    // InternalKim.g:6858:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6858:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6859:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6859:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6860:9: lv_type_4_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_4_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_4_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6878:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6878:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    // InternalKim.g:6879:8: otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) )
                                    {
                                    otherlv_5=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6883:8: ( (lv_extends_6_0= ruleConcept ) )
                                    // InternalKim.g:6884:9: (lv_extends_6_0= ruleConcept )
                                    {
                                    // InternalKim.g:6884:9: (lv_extends_6_0= ruleConcept )
                                    // InternalKim.g:6885:10: lv_extends_6_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_6_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_6_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6906:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6906:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6907:6: ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6907:6: ( (lv_name_7_0= 'inherent' ) )
                            // InternalKim.g:6908:7: (lv_name_7_0= 'inherent' )
                            {
                            // InternalKim.g:6908:7: (lv_name_7_0= 'inherent' )
                            // InternalKim.g:6909:8: lv_name_7_0= 'inherent'
                            {
                            lv_name_7_0=(Token)match(input,113,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_7_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_2_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_7_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6921:6: ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            int alt151=2;
                            int LA151_0 = input.LA(1);

                            if ( (LA151_0==81||(LA151_0>=142 && LA151_0<=143)||LA151_0==164||(LA151_0>=176 && LA151_0<=179)||(LA151_0>=193 && LA151_0<=222)) ) {
                                alt151=1;
                            }
                            else if ( (LA151_0==94) ) {
                                alt151=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 151, 0, input);

                                throw nvae;
                            }
                            switch (alt151) {
                                case 1 :
                                    // InternalKim.g:6922:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6922:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6923:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6923:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6924:9: lv_type_8_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_8_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_8_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6942:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6942:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    // InternalKim.g:6943:8: otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) )
                                    {
                                    otherlv_9=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6947:8: ( (lv_extends_10_0= ruleConcept ) )
                                    // InternalKim.g:6948:9: (lv_extends_10_0= ruleConcept )
                                    {
                                    // InternalKim.g:6948:9: (lv_extends_10_0= ruleConcept )
                                    // InternalKim.g:6949:10: lv_extends_10_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_10_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_10_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:6970:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6970:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6971:6: ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6971:6: ( (lv_name_11_0= 'compresent' ) )
                            // InternalKim.g:6972:7: (lv_name_11_0= 'compresent' )
                            {
                            // InternalKim.g:6972:7: (lv_name_11_0= 'compresent' )
                            // InternalKim.g:6973:8: lv_name_11_0= 'compresent'
                            {
                            lv_name_11_0=(Token)match(input,114,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_11_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_2_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_11_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6985:6: ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            int alt152=2;
                            int LA152_0 = input.LA(1);

                            if ( (LA152_0==81||(LA152_0>=142 && LA152_0<=143)||LA152_0==164||(LA152_0>=176 && LA152_0<=179)||(LA152_0>=193 && LA152_0<=222)) ) {
                                alt152=1;
                            }
                            else if ( (LA152_0==94) ) {
                                alt152=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 152, 0, input);

                                throw nvae;
                            }
                            switch (alt152) {
                                case 1 :
                                    // InternalKim.g:6986:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6986:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6987:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6987:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6988:9: lv_type_12_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_12_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_12_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7006:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7006:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    // InternalKim.g:7007:8: otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) )
                                    {
                                    otherlv_13=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_13, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7011:8: ( (lv_extends_14_0= ruleConcept ) )
                                    // InternalKim.g:7012:9: (lv_extends_14_0= ruleConcept )
                                    {
                                    // InternalKim.g:7012:9: (lv_extends_14_0= ruleConcept )
                                    // InternalKim.g:7013:10: lv_extends_14_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_14_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_14_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:7034:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7034:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7035:6: ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7035:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:7036:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:7036:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:7037:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,105,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_2_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7049:6: ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            int alt153=2;
                            int LA153_0 = input.LA(1);

                            if ( (LA153_0==81||(LA153_0>=142 && LA153_0<=143)||LA153_0==164||(LA153_0>=176 && LA153_0<=179)||(LA153_0>=193 && LA153_0<=222)) ) {
                                alt153=1;
                            }
                            else if ( (LA153_0==94) ) {
                                alt153=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 153, 0, input);

                                throw nvae;
                            }
                            switch (alt153) {
                                case 1 :
                                    // InternalKim.g:7050:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7050:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7051:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7051:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7052:9: lv_type_16_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_16_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_16_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7070:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7070:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    // InternalKim.g:7071:8: otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) )
                                    {
                                    otherlv_17=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7075:8: ( (lv_extends_18_0= ruleConcept ) )
                                    // InternalKim.g:7076:9: (lv_extends_18_0= ruleConcept )
                                    {
                                    // InternalKim.g:7076:9: (lv_extends_18_0= ruleConcept )
                                    // InternalKim.g:7077:10: lv_extends_18_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_18_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_18_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:7098:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7098:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7099:6: ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7099:6: ( (lv_name_19_0= 'container' ) )
                            // InternalKim.g:7100:7: (lv_name_19_0= 'container' )
                            {
                            // InternalKim.g:7100:7: (lv_name_19_0= 'container' )
                            // InternalKim.g:7101:8: lv_name_19_0= 'container'
                            {
                            lv_name_19_0=(Token)match(input,115,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_19_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_2_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_19_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7113:6: ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            int alt154=2;
                            int LA154_0 = input.LA(1);

                            if ( (LA154_0==81||(LA154_0>=142 && LA154_0<=143)||LA154_0==164||(LA154_0>=176 && LA154_0<=179)||(LA154_0>=193 && LA154_0<=222)) ) {
                                alt154=1;
                            }
                            else if ( (LA154_0==94) ) {
                                alt154=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 154, 0, input);

                                throw nvae;
                            }
                            switch (alt154) {
                                case 1 :
                                    // InternalKim.g:7114:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7114:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7115:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7115:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7116:9: lv_type_20_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_20_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_20_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7134:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7134:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    // InternalKim.g:7135:8: otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) )
                                    {
                                    otherlv_21=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_21, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7139:8: ( (lv_extends_22_0= ruleConcept ) )
                                    // InternalKim.g:7140:9: (lv_extends_22_0= ruleConcept )
                                    {
                                    // InternalKim.g:7140:9: (lv_extends_22_0= ruleConcept )
                                    // InternalKim.g:7141:10: lv_extends_22_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_22_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_22_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:7162:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7162:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7163:6: ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7163:6: ( (lv_name_23_0= 'contained' ) )
                            // InternalKim.g:7164:7: (lv_name_23_0= 'contained' )
                            {
                            // InternalKim.g:7164:7: (lv_name_23_0= 'contained' )
                            // InternalKim.g:7165:8: lv_name_23_0= 'contained'
                            {
                            lv_name_23_0=(Token)match(input,106,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_23_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_2_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_23_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7177:6: ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            int alt155=2;
                            int LA155_0 = input.LA(1);

                            if ( (LA155_0==81||(LA155_0>=142 && LA155_0<=143)||LA155_0==164||(LA155_0>=176 && LA155_0<=179)||(LA155_0>=193 && LA155_0<=222)) ) {
                                alt155=1;
                            }
                            else if ( (LA155_0==94) ) {
                                alt155=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 155, 0, input);

                                throw nvae;
                            }
                            switch (alt155) {
                                case 1 :
                                    // InternalKim.g:7178:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7178:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7179:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7179:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7180:9: lv_type_24_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_24_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_24_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7198:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7198:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    // InternalKim.g:7199:8: otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) )
                                    {
                                    otherlv_25=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_25, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7203:8: ( (lv_extends_26_0= ruleConcept ) )
                                    // InternalKim.g:7204:9: (lv_extends_26_0= ruleConcept )
                                    {
                                    // InternalKim.g:7204:9: (lv_extends_26_0= ruleConcept )
                                    // InternalKim.g:7205:10: lv_extends_26_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_26_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_26_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:7226:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7226:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7227:6: ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7227:6: ( (lv_name_27_0= 'purpose' ) )
                            // InternalKim.g:7228:7: (lv_name_27_0= 'purpose' )
                            {
                            // InternalKim.g:7228:7: (lv_name_27_0= 'purpose' )
                            // InternalKim.g:7229:8: lv_name_27_0= 'purpose'
                            {
                            lv_name_27_0=(Token)match(input,116,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_2_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7241:6: ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            int alt156=2;
                            int LA156_0 = input.LA(1);

                            if ( (LA156_0==81||(LA156_0>=142 && LA156_0<=143)||LA156_0==164||(LA156_0>=176 && LA156_0<=179)||(LA156_0>=193 && LA156_0<=222)) ) {
                                alt156=1;
                            }
                            else if ( (LA156_0==94) ) {
                                alt156=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 156, 0, input);

                                throw nvae;
                            }
                            switch (alt156) {
                                case 1 :
                                    // InternalKim.g:7242:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7242:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7243:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7243:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7244:9: lv_type_28_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_28_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_28_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7262:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7262:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    // InternalKim.g:7263:8: otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) )
                                    {
                                    otherlv_29=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7267:8: ( (lv_extends_30_0= ruleConcept ) )
                                    // InternalKim.g:7268:9: (lv_extends_30_0= ruleConcept )
                                    {
                                    // InternalKim.g:7268:9: (lv_extends_30_0= ruleConcept )
                                    // InternalKim.g:7269:10: lv_extends_30_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_30_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_30_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:7290:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7290:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7291:6: ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7291:6: ( (lv_name_31_0= 'causant' ) )
                            // InternalKim.g:7292:7: (lv_name_31_0= 'causant' )
                            {
                            // InternalKim.g:7292:7: (lv_name_31_0= 'causant' )
                            // InternalKim.g:7293:8: lv_name_31_0= 'causant'
                            {
                            lv_name_31_0=(Token)match(input,117,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_31_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_2_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_31_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7305:6: ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            int alt157=2;
                            int LA157_0 = input.LA(1);

                            if ( (LA157_0==81||(LA157_0>=142 && LA157_0<=143)||LA157_0==164||(LA157_0>=176 && LA157_0<=179)||(LA157_0>=193 && LA157_0<=222)) ) {
                                alt157=1;
                            }
                            else if ( (LA157_0==94) ) {
                                alt157=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 157, 0, input);

                                throw nvae;
                            }
                            switch (alt157) {
                                case 1 :
                                    // InternalKim.g:7306:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7306:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7307:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7307:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7308:9: lv_type_32_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_32_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_32_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7326:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7326:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    // InternalKim.g:7327:8: otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) )
                                    {
                                    otherlv_33=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_33, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7331:8: ( (lv_extends_34_0= ruleConcept ) )
                                    // InternalKim.g:7332:9: (lv_extends_34_0= ruleConcept )
                                    {
                                    // InternalKim.g:7332:9: (lv_extends_34_0= ruleConcept )
                                    // InternalKim.g:7333:10: lv_extends_34_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_34_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_34_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:7354:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7354:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7355:6: ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7355:6: ( (lv_name_35_0= 'caused' ) )
                            // InternalKim.g:7356:7: (lv_name_35_0= 'caused' )
                            {
                            // InternalKim.g:7356:7: (lv_name_35_0= 'caused' )
                            // InternalKim.g:7357:8: lv_name_35_0= 'caused'
                            {
                            lv_name_35_0=(Token)match(input,104,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_35_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_2_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_35_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7369:6: ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            int alt158=2;
                            int LA158_0 = input.LA(1);

                            if ( (LA158_0==81||(LA158_0>=142 && LA158_0<=143)||LA158_0==164||(LA158_0>=176 && LA158_0<=179)||(LA158_0>=193 && LA158_0<=222)) ) {
                                alt158=1;
                            }
                            else if ( (LA158_0==94) ) {
                                alt158=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 158, 0, input);

                                throw nvae;
                            }
                            switch (alt158) {
                                case 1 :
                                    // InternalKim.g:7370:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7370:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7371:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7371:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7372:9: lv_type_36_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_36_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_36_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7390:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7390:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    // InternalKim.g:7391:8: otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) )
                                    {
                                    otherlv_37=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_37, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7395:8: ( (lv_extends_38_0= ruleConcept ) )
                                    // InternalKim.g:7396:9: (lv_extends_38_0= ruleConcept )
                                    {
                                    // InternalKim.g:7396:9: (lv_extends_38_0= ruleConcept )
                                    // InternalKim.g:7397:10: lv_extends_38_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_38_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_38_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 10 :
                            // InternalKim.g:7418:5: ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7418:5: ( ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7419:6: ( (lv_name_39_0= 'concomitant' ) ) ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7419:6: ( (lv_name_39_0= 'concomitant' ) )
                            // InternalKim.g:7420:7: (lv_name_39_0= 'concomitant' )
                            {
                            // InternalKim.g:7420:7: (lv_name_39_0= 'concomitant' )
                            // InternalKim.g:7421:8: lv_name_39_0= 'concomitant'
                            {
                            lv_name_39_0=(Token)match(input,118,FOLLOW_102); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_39_0, grammarAccess.getConceptReferenceAccess().getNameConcomitantKeyword_2_1_9_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_39_0, "concomitant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7433:6: ( ( (lv_type_40_0= ruleCONCEPT_TYPE ) ) | (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) ) )
                            int alt159=2;
                            int LA159_0 = input.LA(1);

                            if ( (LA159_0==81||(LA159_0>=142 && LA159_0<=143)||LA159_0==164||(LA159_0>=176 && LA159_0<=179)||(LA159_0>=193 && LA159_0<=222)) ) {
                                alt159=1;
                            }
                            else if ( (LA159_0==94) ) {
                                alt159=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 159, 0, input);

                                throw nvae;
                            }
                            switch (alt159) {
                                case 1 :
                                    // InternalKim.g:7434:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7434:7: ( (lv_type_40_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7435:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7435:8: (lv_type_40_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7436:9: lv_type_40_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_9_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_type_40_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_40_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7454:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7454:7: (otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) ) )
                                    // InternalKim.g:7455:8: otherlv_41= 'extends' ( (lv_extends_42_0= ruleConcept ) )
                                    {
                                    otherlv_41=(Token)match(input,94,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_41, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_9_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7459:8: ( (lv_extends_42_0= ruleConcept ) )
                                    // InternalKim.g:7460:9: (lv_extends_42_0= ruleConcept )
                                    {
                                    // InternalKim.g:7460:9: (lv_extends_42_0= ruleConcept )
                                    // InternalKim.g:7461:10: lv_extends_42_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_9_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_103);
                                    lv_extends_42_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_42_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7482:4: ( (lv_template_43_0= '}' ) )
                    // InternalKim.g:7483:5: (lv_template_43_0= '}' )
                    {
                    // InternalKim.g:7483:5: (lv_template_43_0= '}' )
                    // InternalKim.g:7484:6: lv_template_43_0= '}'
                    {
                    lv_template_43_0=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_43_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:7501:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:7501:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:7502:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:7508:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:7514:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) )
            // InternalKim.g:7515:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            {
            // InternalKim.g:7515:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            int alt162=9;
            switch ( input.LA(1) ) {
            case 62:
                {
                alt162=1;
                }
                break;
            case 113:
                {
                alt162=2;
                }
                break;
            case 114:
                {
                alt162=3;
                }
                break;
            case 105:
                {
                alt162=4;
                }
                break;
            case 115:
                {
                alt162=5;
                }
                break;
            case 106:
                {
                alt162=6;
                }
                break;
            case 116:
                {
                alt162=7;
                }
                break;
            case 117:
                {
                alt162=8;
                }
                break;
            case 104:
                {
                alt162=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 162, 0, input);

                throw nvae;
            }

            switch (alt162) {
                case 1 :
                    // InternalKim.g:7516:3: kw= 'context'
                    {
                    kw=(Token)match(input,62,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:7522:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:7528:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:7534:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,105,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:7540:3: kw= 'container'
                    {
                    kw=(Token)match(input,115,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:7546:3: kw= 'contained'
                    {
                    kw=(Token)match(input,106,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:7552:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,116,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:7558:3: kw= 'causant'
                    {
                    kw=(Token)match(input,117,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:7564:3: kw= 'caused'
                    {
                    kw=(Token)match(input,104,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:7573:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:7573:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:7574:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:7580:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token lv_uncertainty_24_0=null;
        Token otherlv_25=null;
        Token lv_magnitude_27_0=null;
        Token otherlv_28=null;
        Token lv_type_30_0=null;
        Token otherlv_31=null;
        Token lv_observability_33_0=null;
        Token otherlv_34=null;
        Token lv_proportion_36_0=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token lv_ratio_41_0=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token lv_value_46_0=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token lv_occurrence_51_0=null;
        Token otherlv_52=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_26_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_concept_38_0 = null;

        EObject lv_other_40_0 = null;

        EObject lv_concept_43_0 = null;

        EObject lv_other_45_0 = null;

        EObject lv_concept_48_0 = null;

        EObject lv_other_50_0 = null;

        EObject lv_concept_53_0 = null;

        EObject lv_declaration_55_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7586:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) ) )
            // InternalKim.g:7587:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) )
            {
            // InternalKim.g:7587:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' ) )
            int alt172=15;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case 111:
            case 112:
            case 120:
            case 121:
                {
                alt172=1;
                }
                break;
            case 123:
                {
                alt172=2;
                }
                break;
            case 124:
                {
                alt172=3;
                }
                break;
            case 125:
                {
                alt172=4;
                }
                break;
            case 126:
                {
                alt172=5;
                }
                break;
            case 127:
                {
                alt172=6;
                }
                break;
            case 128:
                {
                alt172=7;
                }
                break;
            case 129:
                {
                alt172=8;
                }
                break;
            case 130:
                {
                alt172=9;
                }
                break;
            case 131:
                {
                alt172=10;
                }
                break;
            case 132:
                {
                alt172=11;
                }
                break;
            case 133:
                {
                alt172=12;
                }
                break;
            case 134:
                {
                alt172=13;
                }
                break;
            case 135:
                {
                alt172=14;
                }
                break;
            case 36:
                {
                alt172=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 172, 0, input);

                throw nvae;
            }

            switch (alt172) {
                case 1 :
                    // InternalKim.g:7588:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:7588:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:7589:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:7589:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt164=2;
                    int LA164_0 = input.LA(1);

                    if ( ((LA164_0>=120 && LA164_0<=121)) ) {
                        alt164=1;
                    }
                    switch (alt164) {
                        case 1 :
                            // InternalKim.g:7590:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:7590:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:7591:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:7591:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt163=2;
                            int LA163_0 = input.LA(1);

                            if ( (LA163_0==120) ) {
                                alt163=1;
                            }
                            else if ( (LA163_0==121) ) {
                                alt163=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 163, 0, input);

                                throw nvae;
                            }
                            switch (alt163) {
                                case 1 :
                                    // InternalKim.g:7592:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,120,FOLLOW_104); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7603:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,121,FOLLOW_104); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7616:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:7617:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:7617:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:7618:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_105);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7635:4: (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt168=2;
                    int LA168_0 = input.LA(1);

                    if ( (LA168_0==122) ) {
                        alt168=1;
                    }
                    switch (alt168) {
                        case 1 :
                            // InternalKim.g:7636:5: otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_2=(Token)match(input,122,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getConceptAccess().getIdentifiedKeyword_0_2_0());
                              				
                            }
                            otherlv_3=(Token)match(input,23,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:7644:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt166=2;
                            int LA166_0 = input.LA(1);

                            if ( (LA166_0==RULE_STRING||LA166_0==RULE_ID) ) {
                                alt166=1;
                            }
                            else if ( (LA166_0==RULE_INT) ) {
                                alt166=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 166, 0, input);

                                throw nvae;
                            }
                            switch (alt166) {
                                case 1 :
                                    // InternalKim.g:7645:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:7645:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    // InternalKim.g:7646:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:7646:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    // InternalKim.g:7647:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    {
                                    // InternalKim.g:7647:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    int alt165=2;
                                    int LA165_0 = input.LA(1);

                                    if ( (LA165_0==RULE_ID) ) {
                                        alt165=1;
                                    }
                                    else if ( (LA165_0==RULE_STRING) ) {
                                        alt165=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 165, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt165) {
                                        case 1 :
                                            // InternalKim.g:7648:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_99); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:7663:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_99); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7681:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:7681:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:7682:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:7682:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:7683:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_99); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,96,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:7704:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:7705:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:7705:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:7706:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:7706:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt167=2;
                            int LA167_0 = input.LA(1);

                            if ( (LA167_0==RULE_UPPERCASE_ID) ) {
                                alt167=1;
                            }
                            else if ( (LA167_0==RULE_UPPERCASE_PATH) ) {
                                alt167=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 167, 0, input);

                                throw nvae;
                            }
                            switch (alt167) {
                                case 1 :
                                    // InternalKim.g:7707:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7722:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7742:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7742:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7743:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7743:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:7744:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:7744:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:7745:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,123,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:7761:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7762:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7762:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7763:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7782:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7782:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7783:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7783:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:7784:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:7784:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:7785:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,124,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:7801:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7802:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7802:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7803:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:7822:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7822:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7823:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7823:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:7824:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:7824:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:7825:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,125,FOLLOW_109); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:7837:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt169=2;
                    int LA169_0 = input.LA(1);

                    if ( (LA169_0==34) ) {
                        alt169=1;
                    }
                    else if ( (LA169_0==86) ) {
                        alt169=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 169, 0, input);

                        throw nvae;
                    }
                    switch (alt169) {
                        case 1 :
                            // InternalKim.g:7838:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:7843:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,86,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:7848:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7849:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7849:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7850:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:7869:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7869:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7870:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7870:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:7871:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:7871:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:7872:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,126,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:7888:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7889:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7889:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7890:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:7909:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7909:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7910:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7910:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:7911:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:7911:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:7912:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,127,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:7928:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7929:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7929:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7930:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:7949:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7949:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7950:4: ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7950:4: ( (lv_uncertainty_24_0= 'uncertainty' ) )
                    // InternalKim.g:7951:5: (lv_uncertainty_24_0= 'uncertainty' )
                    {
                    // InternalKim.g:7951:5: (lv_uncertainty_24_0= 'uncertainty' )
                    // InternalKim.g:7952:6: lv_uncertainty_24_0= 'uncertainty'
                    {
                    lv_uncertainty_24_0=(Token)match(input,128,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_24_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getOfKeyword_6_1());
                      			
                    }
                    // InternalKim.g:7968:4: ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7969:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7969:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7970:6: lv_concept_26_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_26_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_26_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:7989:3: ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7989:3: ( ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7990:4: ( (lv_magnitude_27_0= 'magnitude' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7990:4: ( (lv_magnitude_27_0= 'magnitude' ) )
                    // InternalKim.g:7991:5: (lv_magnitude_27_0= 'magnitude' )
                    {
                    // InternalKim.g:7991:5: (lv_magnitude_27_0= 'magnitude' )
                    // InternalKim.g:7992:6: lv_magnitude_27_0= 'magnitude'
                    {
                    lv_magnitude_27_0=(Token)match(input,129,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_magnitude_27_0, grammarAccess.getConceptAccess().getMagnitudeMagnitudeKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "magnitude", true, "magnitude");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:8008:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8009:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8009:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8010:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:8029:3: ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8029:3: ( ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8030:4: ( (lv_type_30_0= 'type' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8030:4: ( (lv_type_30_0= 'type' ) )
                    // InternalKim.g:8031:5: (lv_type_30_0= 'type' )
                    {
                    // InternalKim.g:8031:5: (lv_type_30_0= 'type' )
                    // InternalKim.g:8032:6: lv_type_30_0= 'type'
                    {
                    lv_type_30_0=(Token)match(input,130,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_30_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:8048:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8049:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8049:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8050:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:8069:3: ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8069:3: ( ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8070:4: ( (lv_observability_33_0= 'observability' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8070:4: ( (lv_observability_33_0= 'observability' ) )
                    // InternalKim.g:8071:5: (lv_observability_33_0= 'observability' )
                    {
                    // InternalKim.g:8071:5: (lv_observability_33_0= 'observability' )
                    // InternalKim.g:8072:6: lv_observability_33_0= 'observability'
                    {
                    lv_observability_33_0=(Token)match(input,131,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_33_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:8088:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8089:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8089:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8090:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:8109:3: ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:8109:3: ( ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:8110:4: ( (lv_proportion_36_0= 'proportion' ) ) otherlv_37= 'of' ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:8110:4: ( (lv_proportion_36_0= 'proportion' ) )
                    // InternalKim.g:8111:5: (lv_proportion_36_0= 'proportion' )
                    {
                    // InternalKim.g:8111:5: (lv_proportion_36_0= 'proportion' )
                    // InternalKim.g:8112:6: lv_proportion_36_0= 'proportion'
                    {
                    lv_proportion_36_0=(Token)match(input,132,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_36_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_37=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_37, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:8128:4: ( (lv_concept_38_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8129:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8129:5: (lv_concept_38_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8130:6: lv_concept_38_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_58);
                    lv_concept_38_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_38_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8147:4: ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( (LA170_0==48) ) {
                        int LA170_1 = input.LA(2);

                        if ( (synpred304_InternalKim()) ) {
                            alt170=1;
                        }
                    }
                    switch (alt170) {
                        case 1 :
                            // InternalKim.g:8148:5: ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:8148:5: ( ( 'in' )=>otherlv_39= 'in' )
                            // InternalKim.g:8149:6: ( 'in' )=>otherlv_39= 'in'
                            {
                            otherlv_39=(Token)match(input,48,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_39, grammarAccess.getConceptAccess().getInKeyword_10_3_0());
                              					
                            }

                            }

                            // InternalKim.g:8155:5: ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:8156:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:8156:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:8157:7: lv_other_40_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_10_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_40_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_40_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:8177:3: ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8177:3: ( ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8178:4: ( (lv_ratio_41_0= 'ratio' ) ) otherlv_42= 'of' ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_44= 'to' ) ( (lv_other_45_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8178:4: ( (lv_ratio_41_0= 'ratio' ) )
                    // InternalKim.g:8179:5: (lv_ratio_41_0= 'ratio' )
                    {
                    // InternalKim.g:8179:5: (lv_ratio_41_0= 'ratio' )
                    // InternalKim.g:8180:6: lv_ratio_41_0= 'ratio'
                    {
                    lv_ratio_41_0=(Token)match(input,133,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_41_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_42=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:8196:4: ( (lv_concept_43_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8197:5: (lv_concept_43_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8197:5: (lv_concept_43_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8198:6: lv_concept_43_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_concept_43_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_43_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8215:4: ( ( 'to' )=>otherlv_44= 'to' )
                    // InternalKim.g:8216:5: ( 'to' )=>otherlv_44= 'to'
                    {
                    otherlv_44=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_44, grammarAccess.getConceptAccess().getToKeyword_11_3());
                      				
                    }

                    }

                    // InternalKim.g:8222:4: ( (lv_other_45_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8223:5: (lv_other_45_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8223:5: (lv_other_45_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8224:6: lv_other_45_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_45_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_45_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:8243:3: ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:8243:3: ( ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:8244:4: ( (lv_value_46_0= 'value' ) ) otherlv_47= 'of' ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:8244:4: ( (lv_value_46_0= 'value' ) )
                    // InternalKim.g:8245:5: (lv_value_46_0= 'value' )
                    {
                    // InternalKim.g:8245:5: (lv_value_46_0= 'value' )
                    // InternalKim.g:8246:6: lv_value_46_0= 'value'
                    {
                    lv_value_46_0=(Token)match(input,134,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_46_0, grammarAccess.getConceptAccess().getValueValueKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_47=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_47, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:8262:4: ( (lv_concept_48_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8263:5: (lv_concept_48_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8263:5: (lv_concept_48_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8264:6: lv_concept_48_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_110);
                    lv_concept_48_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_48_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:8281:4: ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt171=2;
                    int LA171_0 = input.LA(1);

                    if ( (LA171_0==55) ) {
                        int LA171_1 = input.LA(2);

                        if ( (synpred309_InternalKim()) ) {
                            alt171=1;
                        }
                    }
                    switch (alt171) {
                        case 1 :
                            // InternalKim.g:8282:5: ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:8282:5: ( ( 'over' )=>otherlv_49= 'over' )
                            // InternalKim.g:8283:6: ( 'over' )=>otherlv_49= 'over'
                            {
                            otherlv_49=(Token)match(input,55,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_49, grammarAccess.getConceptAccess().getOverKeyword_12_3_0());
                              					
                            }

                            }

                            // InternalKim.g:8289:5: ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:8290:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:8290:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:8291:7: lv_other_50_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_50_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_50_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:8311:3: ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:8311:3: ( ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:8312:4: ( (lv_occurrence_51_0= 'occurrence' ) ) otherlv_52= 'of' ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:8312:4: ( (lv_occurrence_51_0= 'occurrence' ) )
                    // InternalKim.g:8313:5: (lv_occurrence_51_0= 'occurrence' )
                    {
                    // InternalKim.g:8313:5: (lv_occurrence_51_0= 'occurrence' )
                    // InternalKim.g:8314:6: lv_occurrence_51_0= 'occurrence'
                    {
                    lv_occurrence_51_0=(Token)match(input,135,FOLLOW_108); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_51_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_13_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_52=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_52, grammarAccess.getConceptAccess().getOfKeyword_13_1());
                      			
                    }
                    // InternalKim.g:8330:4: ( (lv_concept_53_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:8331:5: (lv_concept_53_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:8331:5: (lv_concept_53_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:8332:6: lv_concept_53_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_13_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_53_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_53_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 15 :
                    // InternalKim.g:8351:3: (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' )
                    {
                    // InternalKim.g:8351:3: (otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')' )
                    // InternalKim.g:8352:4: otherlv_54= '(' ( (lv_declaration_55_0= ruleExpression ) ) otherlv_56= ')'
                    {
                    otherlv_54=(Token)match(input,36,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_54, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_14_0());
                      			
                    }
                    // InternalKim.g:8356:4: ( (lv_declaration_55_0= ruleExpression ) )
                    // InternalKim.g:8357:5: (lv_declaration_55_0= ruleExpression )
                    {
                    // InternalKim.g:8357:5: (lv_declaration_55_0= ruleExpression )
                    // InternalKim.g:8358:6: lv_declaration_55_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_14_1_0());
                      					
                    }
                    pushFollow(FOLLOW_111);
                    lv_declaration_55_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_55_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_56=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_56, grammarAccess.getConceptAccess().getRightParenthesisKeyword_14_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:8384:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:8384:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:8385:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:8391:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8397:2: (this_Term_0= ruleTerm )
            // InternalKim.g:8398:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:8412:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:8412:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:8413:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:8419:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8425:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:8426:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:8426:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:8427:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_112);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:8438:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop173:
            do {
                int alt173=2;
                int LA173_0 = input.LA(1);

                if ( (LA173_0==136) ) {
                    int LA173_2 = input.LA(2);

                    if ( (synpred312_InternalKim()) ) {
                        alt173=1;
                    }


                }


                switch (alt173) {
            	case 1 :
            	    // InternalKim.g:8439:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:8439:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:8440:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:8440:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:8441:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,136,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:8453:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:8454:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:8454:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:8455:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_112);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop173;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:8477:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:8477:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:8478:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:8484:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8490:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:8491:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:8491:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:8492:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_113);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:8503:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop175:
            do {
                int alt175=2;
                int LA175_0 = input.LA(1);

                if ( (LA175_0==137) ) {
                    int LA175_2 = input.LA(2);

                    if ( (synpred314_InternalKim()) ) {
                        alt175=1;
                    }


                }
                else if ( (LA175_0==138) ) {
                    int LA175_3 = input.LA(2);

                    if ( (synpred314_InternalKim()) ) {
                        alt175=1;
                    }


                }


                switch (alt175) {
            	case 1 :
            	    // InternalKim.g:8504:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:8504:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:8505:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:8505:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:8506:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:8506:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt174=2;
            	    int LA174_0 = input.LA(1);

            	    if ( (LA174_0==137) ) {
            	        alt174=1;
            	    }
            	    else if ( (LA174_0==138) ) {
            	        alt174=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 174, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt174) {
            	        case 1 :
            	            // InternalKim.g:8507:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,137,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8518:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,138,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:8531:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:8532:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:8532:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:8533:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop175;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:8555:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:8555:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:8556:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:8562:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8568:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:8569:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:8569:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:8570:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:8570:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt176=2;
            int LA176_0 = input.LA(1);

            if ( (LA176_0==RULE_STRING) ) {
                alt176=1;
            }
            switch (alt176) {
                case 1 :
                    // InternalKim.g:8571:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:8571:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:8572:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8588:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt177=0;
            loop177:
            do {
                int alt177=2;
                alt177 = dfa177.predict(input);
                switch (alt177) {
            	case 1 :
            	    // InternalKim.g:8589:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:8589:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:8590:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_114);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt177 >= 1 ) break loop177;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(177, input);
                        throw eee;
                }
                cnt177++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:8611:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:8611:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:8612:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:8618:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:8624:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:8625:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:8625:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:8626:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,70,FOLLOW_115); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:8630:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt184=2;
            int LA184_0 = input.LA(1);

            if ( (LA184_0==29||(LA184_0>=139 && LA184_0<=141)||(LA184_0>=223 && LA184_0<=224)) ) {
                alt184=1;
            }
            else if ( (LA184_0==62||(LA184_0>=104 && LA184_0<=106)||(LA184_0>=113 && LA184_0<=117)) ) {
                alt184=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 184, 0, input);

                throw nvae;
            }
            switch (alt184) {
                case 1 :
                    // InternalKim.g:8631:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:8631:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:8632:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:8632:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt181=2;
                    int LA181_0 = input.LA(1);

                    if ( ((LA181_0>=139 && LA181_0<=141)) ) {
                        alt181=1;
                    }
                    else if ( (LA181_0==29||(LA181_0>=223 && LA181_0<=224)) ) {
                        alt181=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 181, 0, input);

                        throw nvae;
                    }
                    switch (alt181) {
                        case 1 :
                            // InternalKim.g:8633:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:8633:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:8634:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:8634:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:8635:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:8635:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:8636:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:8636:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt178=3;
                            switch ( input.LA(1) ) {
                            case 139:
                                {
                                alt178=1;
                                }
                                break;
                            case 140:
                                {
                                alt178=2;
                                }
                                break;
                            case 141:
                                {
                                alt178=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 178, 0, input);

                                throw nvae;
                            }

                            switch (alt178) {
                                case 1 :
                                    // InternalKim.g:8637:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,139,FOLLOW_116); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8648:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,140,FOLLOW_116); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:8659:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,141,FOLLOW_116); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:8672:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:8673:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:8673:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:8674:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,142,FOLLOW_117); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8688:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:8688:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt180=2;
                            int LA180_0 = input.LA(1);

                            if ( ((LA180_0>=223 && LA180_0<=224)) ) {
                                alt180=1;
                            }
                            switch (alt180) {
                                case 1 :
                                    // InternalKim.g:8689:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:8689:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:8690:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:8690:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:8691:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_118);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:8708:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop179:
                                    do {
                                        int alt179=2;
                                        int LA179_0 = input.LA(1);

                                        if ( ((LA179_0>=223 && LA179_0<=224)) ) {
                                            alt179=1;
                                        }


                                        switch (alt179) {
                                    	case 1 :
                                    	    // InternalKim.g:8709:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:8709:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:8710:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_118);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop179;
                                        }
                                    } while (true);

                                    // InternalKim.g:8727:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:8728:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:8728:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:8729:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,143,FOLLOW_117); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:8747:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:8748:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:8748:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:8749:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:8749:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt182=2;
                    alt182 = dfa182.predict(input);
                    switch (alt182) {
                        case 1 :
                            // InternalKim.g:8750:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8766:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8786:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:8786:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:8787:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:8787:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:8788:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:8788:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:8789:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_117);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,29,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:8810:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:8811:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:8811:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:8812:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:8812:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt183=2;
                    alt183 = dfa183.predict(input);
                    switch (alt183) {
                        case 1 :
                            // InternalKim.g:8813:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8829:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:8853:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8857:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:8858:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:8867:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_8_0 = null;

        EObject lv_body_9_0 = null;

        AntlrDatatypeRuleToken lv_name_11_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8876:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:8877:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:8877:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:8878:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:8878:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop185:
            do {
                int alt185=2;
                int LA185_0 = input.LA(1);

                if ( (LA185_0==RULE_ANNOTATION_ID) ) {
                    alt185=1;
                }


                switch (alt185) {
            	case 1 :
            	    // InternalKim.g:8879:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8879:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8880:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_119);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop185;
                }
            } while (true);

            // InternalKim.g:8897:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) )
            // InternalKim.g:8898:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            {
            // InternalKim.g:8898:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            // InternalKim.g:8899:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:8902:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            // InternalKim.g:8903:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            {
            // InternalKim.g:8903:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            loop189:
            do {
                int alt189=5;
                alt189 = dfa189.predict(input);
                switch (alt189) {
            	case 1 :
            	    // InternalKim.g:8904:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:8904:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:8905:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:8905:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:8906:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:8909:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:8909:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8909:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:8909:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:8909:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:8910:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,144,FOLLOW_119); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:8927:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:8927:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:8928:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:8928:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:8929:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:8932:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:8932:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8932:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:8932:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:8932:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:8933:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,145,FOLLOW_119); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:8950:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:8950:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:8951:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:8951:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:8952:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:8955:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:8955:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8955:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:8955:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:8955:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:8956:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,146,FOLLOW_119); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:8973:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:8973:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    // InternalKim.g:8974:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:8974:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    // InternalKim.g:8975:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:8978:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    // InternalKim.g:8978:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8978:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    int alt188=2;
            	    int LA188_0 = input.LA(1);

            	    if ( ((LA188_0>=139 && LA188_0<=141)) ) {
            	        alt188=1;
            	    }
            	    else if ( ((LA188_0>=223 && LA188_0<=224)) ) {
            	        alt188=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 188, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt188) {
            	        case 1 :
            	            // InternalKim.g:8978:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:8978:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:8979:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:8979:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:8980:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:8980:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt186=3;
            	            switch ( input.LA(1) ) {
            	            case 139:
            	                {
            	                alt186=1;
            	                }
            	                break;
            	            case 140:
            	                {
            	                alt186=2;
            	                }
            	                break;
            	            case 141:
            	                {
            	                alt186=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 186, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt186) {
            	                case 1 :
            	                    // InternalKim.g:8981:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,139,FOLLOW_119); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:8992:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,140,FOLLOW_119); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:9003:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,141,FOLLOW_119); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9017:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:9017:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:9018:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:9018:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:9019:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:9019:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:9020:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_119);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9037:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop187:
            	            do {
            	                int alt187=2;
            	                int LA187_0 = input.LA(1);

            	                if ( (LA187_0==223) ) {
            	                    int LA187_2 = input.LA(2);

            	                    if ( (synpred332_InternalKim()) ) {
            	                        alt187=1;
            	                    }


            	                }
            	                else if ( (LA187_0==224) ) {
            	                    int LA187_3 = input.LA(2);

            	                    if ( (synpred332_InternalKim()) ) {
            	                        alt187=1;
            	                    }


            	                }


            	                switch (alt187) {
            	            	case 1 :
            	            	    // InternalKim.g:9038:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:9038:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:9039:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_119);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop187;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop189;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:9070:3: ( (lv_concept_8_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:9071:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:9071:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            // InternalKim.g:9072:5: lv_concept_8_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_120);
            lv_concept_8_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_8_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:9089:3: ( (lv_body_9_0= ruleConceptStatementBody ) )
            // InternalKim.g:9090:4: (lv_body_9_0= ruleConceptStatementBody )
            {
            // InternalKim.g:9090:4: (lv_body_9_0= ruleConceptStatementBody )
            // InternalKim.g:9091:5: lv_body_9_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_121);
            lv_body_9_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:9108:3: (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            int alt190=2;
            int LA190_0 = input.LA(1);

            if ( (LA190_0==101) ) {
                alt190=1;
            }
            switch (alt190) {
                case 1 :
                    // InternalKim.g:9109:4: otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) )
                    {
                    otherlv_10=(Token)match(input,101,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:9113:4: ( (lv_name_11_0= ruleNamespaceId ) )
                    // InternalKim.g:9114:5: (lv_name_11_0= ruleNamespaceId )
                    {
                    // InternalKim.g:9114:5: (lv_name_11_0= ruleNamespaceId )
                    // InternalKim.g:9115:6: lv_name_11_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_11_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_11_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:9140:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:9144:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:9145:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:9154:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_restrictions_109_0 = null;

        EObject lv_metadata_112_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:9163:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:9164:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:9164:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:9165:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:9165:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop191:
            do {
                int alt191=2;
                int LA191_0 = input.LA(1);

                if ( (LA191_0==RULE_ANNOTATION_ID) ) {
                    alt191=1;
                }


                switch (alt191) {
            	case 1 :
            	    // InternalKim.g:9166:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:9166:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:9167:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_120);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop191;
                }
            } while (true);

            // InternalKim.g:9184:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt192=2;
            int LA192_0 = input.LA(1);

            if ( (LA192_0==144) ) {
                alt192=1;
            }
            switch (alt192) {
                case 1 :
                    // InternalKim.g:9185:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:9185:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:9186:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,144,FOLLOW_122); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:9198:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt197=2;
            int LA197_0 = input.LA(1);

            if ( (LA197_0==82) ) {
                alt197=1;
            }
            else if ( (LA197_0==RULE_CAMELCASE_ID) ) {
                alt197=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 197, 0, input);

                throw nvae;
            }
            switch (alt197) {
                case 1 :
                    // InternalKim.g:9199:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:9199:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:9200:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:9200:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:9201:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,82,FOLLOW_123); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:9214:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:9214:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:9215:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:9215:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:9216:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:9216:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:9217:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_124); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:9233:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt196=2;
                    int LA196_0 = input.LA(1);

                    if ( (LA196_0==122) ) {
                        alt196=1;
                    }
                    switch (alt196) {
                        case 1 :
                            // InternalKim.g:9234:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,122,FOLLOW_9); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,23,FOLLOW_106); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:9242:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt194=2;
                            int LA194_0 = input.LA(1);

                            if ( (LA194_0==RULE_STRING||LA194_0==RULE_ID) ) {
                                alt194=1;
                            }
                            else if ( (LA194_0==RULE_INT) ) {
                                alt194=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 194, 0, input);

                                throw nvae;
                            }
                            switch (alt194) {
                                case 1 :
                                    // InternalKim.g:9243:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:9243:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:9244:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:9244:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:9245:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:9245:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt193=2;
                                    int LA193_0 = input.LA(1);

                                    if ( (LA193_0==RULE_ID) ) {
                                        alt193=1;
                                    }
                                    else if ( (LA193_0==RULE_STRING) ) {
                                        alt193=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 193, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt193) {
                                        case 1 :
                                            // InternalKim.g:9246:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_99); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:9261:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_99); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9279:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:9279:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:9280:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:9280:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:9281:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_99); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,96,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:9302:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:9303:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:9303:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:9304:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:9304:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt195=2;
                            int LA195_0 = input.LA(1);

                            if ( (LA195_0==RULE_UPPERCASE_ID) ) {
                                alt195=1;
                            }
                            else if ( (LA195_0==RULE_UPPERCASE_PATH) ) {
                                alt195=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 195, 0, input);

                                throw nvae;
                            }
                            switch (alt195) {
                                case 1 :
                                    // InternalKim.g:9305:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:9320:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_123); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:9340:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:9341:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:9341:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            // InternalKim.g:9342:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:9345:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            // InternalKim.g:9346:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            {
            // InternalKim.g:9346:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            loop224:
            do {
                int alt224=24;
                alt224 = dfa224.predict(input);
                switch (alt224) {
            	case 1 :
            	    // InternalKim.g:9347:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:9347:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:9348:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:9348:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:9349:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:9352:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:9352:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9352:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:9352:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:9352:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:9353:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_123); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:9374:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9374:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:9375:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:9375:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9376:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:9379:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9379:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9379:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9379:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:9379:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
            	    int alt199=2;
            	    int LA199_0 = input.LA(1);

            	    if ( (LA199_0==147) ) {
            	        alt199=1;
            	    }
            	    else if ( (LA199_0==149) ) {
            	        alt199=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 199, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt199) {
            	        case 1 :
            	            // InternalKim.g:9380:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            {
            	            // InternalKim.g:9380:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            // InternalKim.g:9381:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
            	            {
            	            otherlv_12=(Token)match(input,147,FOLLOW_125); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }
            	            // InternalKim.g:9385:11: ( (lv_coreConcept_13_0= 'core' ) )?
            	            int alt198=2;
            	            int LA198_0 = input.LA(1);

            	            if ( (LA198_0==148) ) {
            	                alt198=1;
            	            }
            	            switch (alt198) {
            	                case 1 :
            	                    // InternalKim.g:9386:12: (lv_coreConcept_13_0= 'core' )
            	                    {
            	                    // InternalKim.g:9386:12: (lv_coreConcept_13_0= 'core' )
            	                    // InternalKim.g:9387:13: lv_coreConcept_13_0= 'core'
            	                    {
            	                    lv_coreConcept_13_0=(Token)match(input,148,FOLLOW_126); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(lv_coreConcept_13_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_0_1_0());
            	                      												
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      													}
            	                      													setWithLastConsumed(current, "coreConcept", true, "core");
            	                      												
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9401:10: ( (lv_alias_14_0= 'equals' ) )
            	            {
            	            // InternalKim.g:9401:10: ( (lv_alias_14_0= 'equals' ) )
            	            // InternalKim.g:9402:11: (lv_alias_14_0= 'equals' )
            	            {
            	            // InternalKim.g:9402:11: (lv_alias_14_0= 'equals' )
            	            // InternalKim.g:9403:12: lv_alias_14_0= 'equals'
            	            {
            	            lv_alias_14_0=(Token)match(input,149,FOLLOW_126); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_alias_14_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "alias", true, "equals");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:9416:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt202=2;
            	    int LA202_0 = input.LA(1);

            	    if ( (LA202_0==150) ) {
            	        alt202=1;
            	    }
            	    else if ( ((LA202_0>=RULE_LOWERCASE_ID && LA202_0<=RULE_STRING)||(LA202_0>=RULE_CAMELCASE_ID && LA202_0<=RULE_LOWERCASE_DASHID)||LA202_0==36||(LA202_0>=111 && LA202_0<=112)||(LA202_0>=120 && LA202_0<=121)||(LA202_0>=123 && LA202_0<=135)) ) {
            	        alt202=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 202, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt202) {
            	        case 1 :
            	            // InternalKim.g:9417:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:9417:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:9418:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:9418:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:9419:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,150,FOLLOW_123); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9432:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:9432:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:9433:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:9433:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9434:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9434:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:9435:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_127);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:9452:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop201:
            	            do {
            	                int alt201=2;
            	                int LA201_0 = input.LA(1);

            	                if ( (LA201_0==25||(LA201_0>=136 && LA201_0<=137)) ) {
            	                    alt201=1;
            	                }


            	                switch (alt201) {
            	            	case 1 :
            	            	    // InternalKim.g:9453:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:9453:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:9454:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:9454:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:9455:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:9455:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt200=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 25:
            	            	        {
            	            	        alt200=1;
            	            	        }
            	            	        break;
            	            	    case 136:
            	            	        {
            	            	        alt200=2;
            	            	        }
            	            	        break;
            	            	    case 137:
            	            	        {
            	            	        alt200=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 200, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt200) {
            	            	        case 1 :
            	            	            // InternalKim.g:9456:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:9467:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,136,FOLLOW_20); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:9478:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,137,FOLLOW_20); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:9491:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9492:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9492:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9493:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_127);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop201;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:9519:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9519:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9520:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:9520:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9521:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:9524:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9524:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9524:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt205=2;
            	    int LA205_0 = input.LA(1);

            	    if ( (LA205_0==151) ) {
            	        alt205=1;
            	    }
            	    else if ( (LA205_0==152) ) {
            	        alt205=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 205, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt205) {
            	        case 1 :
            	            // InternalKim.g:9524:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:9524:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:9525:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,151,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:9529:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:9530:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:9530:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:9531:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_128);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9548:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop203:
            	            do {
            	                int alt203=2;
            	                int LA203_0 = input.LA(1);

            	                if ( (LA203_0==25) ) {
            	                    alt203=1;
            	                }


            	                switch (alt203) {
            	            	case 1 :
            	            	    // InternalKim.g:9549:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9553:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:9554:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:9554:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:9555:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_128);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop203;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9575:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:9575:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:9576:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:9576:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:9577:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:9577:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:9578:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,152,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9590:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9591:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9591:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:9592:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_128);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9609:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop204:
            	            do {
            	                int alt204=2;
            	                int LA204_0 = input.LA(1);

            	                if ( (LA204_0==25) ) {
            	                    alt204=1;
            	                }


            	                switch (alt204) {
            	            	case 1 :
            	            	    // InternalKim.g:9610:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9614:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9615:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9615:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9616:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_128);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop204;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:9641:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9641:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:9642:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:9642:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:9643:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:9646:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:9646:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9646:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:9646:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,153,FOLLOW_129); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:9650:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt206=2;
            	    int LA206_0 = input.LA(1);

            	    if ( (LA206_0==154) ) {
            	        alt206=1;
            	    }
            	    else if ( (LA206_0==RULE_LOWERCASE_ID||(LA206_0>=RULE_CAMELCASE_ID && LA206_0<=RULE_LOWERCASE_DASHID)||LA206_0==36||(LA206_0>=111 && LA206_0<=112)||(LA206_0>=120 && LA206_0<=121)||(LA206_0>=123 && LA206_0<=135)) ) {
            	        alt206=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 206, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt206) {
            	        case 1 :
            	            // InternalKim.g:9651:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            // InternalKim.g:9651:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:9652:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            {
            	            otherlv_28=(Token)match(input,154,FOLLOW_130); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:9656:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:9657:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:9657:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            // InternalKim.g:9658:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
            	            {
            	            lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_123); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_definedAuthority_29_0, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(
            	              														current,
            	              														"definedAuthority",
            	              														lv_definedAuthority_29_0,
            	              														"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9676:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:9676:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:9677:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:9677:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:9678:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_123);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:9702:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9702:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:9703:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:9703:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:9704:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:9707:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:9707:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9707:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:9707:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,155,FOLLOW_131); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:9711:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:9712:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:9712:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:9713:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9730:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop207:
            	    do {
            	        int alt207=2;
            	        int LA207_0 = input.LA(1);

            	        if ( (LA207_0==25) ) {
            	            alt207=1;
            	        }


            	        switch (alt207) {
            	    	case 1 :
            	    	    // InternalKim.g:9731:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,25,FOLLOW_131); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9735:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:9736:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:9736:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:9737:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop207;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:9761:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9761:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9762:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:9762:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9763:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:9766:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9766:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9766:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9766:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,156,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:9770:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9771:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9771:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:9772:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:9795:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9795:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9796:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:9796:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9797:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:9800:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9800:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9800:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9800:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,157,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,40,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:9808:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9809:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9809:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:9810:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:9833:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9833:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9834:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:9834:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9835:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:9838:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9838:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9838:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9838:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,158,FOLLOW_71); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,40,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:9846:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9847:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9847:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:9848:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:9871:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9871:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9872:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:9872:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9873:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:9876:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9876:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9876:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9876:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,159,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:9880:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9881:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9881:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:9882:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:9905:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9905:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9906:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:9906:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9907:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:9910:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9910:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9910:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9910:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,160,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:9914:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9915:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9915:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:9916:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:9939:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9939:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9940:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:9940:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9941:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:9944:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9944:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9944:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9944:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,161,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:9948:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9949:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9949:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:9950:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:9973:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9973:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9974:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:9974:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9975:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:9978:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9978:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9978:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9978:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,162,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:9982:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9983:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9983:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:9984:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10001:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop208:
            	    do {
            	        int alt208=2;
            	        int LA208_0 = input.LA(1);

            	        if ( (LA208_0==25) ) {
            	            alt208=1;
            	        }


            	        switch (alt208) {
            	    	case 1 :
            	    	    // InternalKim.g:10002:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10006:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10007:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10007:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10008:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop208;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:10032:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:10032:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:10033:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:10033:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10034:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:10037:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10037:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10037:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10037:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,163,FOLLOW_132); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,164,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:10045:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10046:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10046:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:10047:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_133);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10064:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop209:
            	    do {
            	        int alt209=2;
            	        int LA209_0 = input.LA(1);

            	        if ( (LA209_0==25) ) {
            	            alt209=1;
            	        }


            	        switch (alt209) {
            	    	case 1 :
            	    	    // InternalKim.g:10065:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10069:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10070:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10070:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10071:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_133);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop209;
            	        }
            	    } while (true);

            	    // InternalKim.g:10089:9: (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt211=2;
            	    int LA211_0 = input.LA(1);

            	    if ( (LA211_0==103) ) {
            	        alt211=1;
            	    }
            	    switch (alt211) {
            	        case 1 :
            	            // InternalKim.g:10090:10: otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,103,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getForKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:10094:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:10095:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:10095:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:10096:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_134);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:10113:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop210:
            	            do {
            	                int alt210=2;
            	                int LA210_0 = input.LA(1);

            	                if ( (LA210_0==25) ) {
            	                    alt210=1;
            	                }


            	                switch (alt210) {
            	            	case 1 :
            	            	    // InternalKim.g:10114:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:10118:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:10119:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:10119:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:10120:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_134);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop210;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:10139:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10140:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,48,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:10144:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10145:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10145:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:10146:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:10163:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop212:
            	    do {
            	        int alt212=2;
            	        int LA212_0 = input.LA(1);

            	        if ( (LA212_0==25) ) {
            	            alt212=1;
            	        }


            	        switch (alt212) {
            	    	case 1 :
            	    	    // InternalKim.g:10164:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:10168:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10169:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10169:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10170:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop212;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:10195:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:10195:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:10196:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:10196:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:10197:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:10200:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:10200:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10200:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:10200:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,165,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:10204:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10205:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10205:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:10206:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_135);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10223:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop213:
            	    do {
            	        int alt213=2;
            	        int LA213_0 = input.LA(1);

            	        if ( (LA213_0==25) ) {
            	            alt213=1;
            	        }


            	        switch (alt213) {
            	    	case 1 :
            	    	    // InternalKim.g:10224:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10228:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10229:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10229:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10230:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_135);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop213;
            	        }
            	    } while (true);

            	    // InternalKim.g:10248:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt215=2;
            	    int LA215_0 = input.LA(1);

            	    if ( (LA215_0==34) ) {
            	        alt215=1;
            	    }
            	    switch (alt215) {
            	        case 1 :
            	            // InternalKim.g:10249:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:10253:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:10254:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:10254:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:10255:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_128);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:10272:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop214:
            	            do {
            	                int alt214=2;
            	                int LA214_0 = input.LA(1);

            	                if ( (LA214_0==25) ) {
            	                    alt214=1;
            	                }


            	                switch (alt214) {
            	            	case 1 :
            	            	    // InternalKim.g:10273:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:10277:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:10278:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:10278:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:10279:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_128);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop214;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:10304:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10304:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10305:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:10305:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10306:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:10309:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10309:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10309:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10309:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:10309:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt216=3;
            	    switch ( input.LA(1) ) {
            	    case 166:
            	        {
            	        alt216=1;
            	        }
            	        break;
            	    case 167:
            	        {
            	        alt216=2;
            	        }
            	        break;
            	    case 168:
            	        {
            	        alt216=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 216, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt216) {
            	        case 1 :
            	            // InternalKim.g:10310:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,166,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:10315:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:10315:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:10316:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:10316:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:10317:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,167,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:10330:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:10330:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:10331:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:10331:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:10332:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,168,FOLLOW_108); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:10345:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:10346:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:10346:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:10347:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10359:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10360:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10360:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:10361:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:10384:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10384:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10385:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:10385:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10386:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:10389:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10389:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10389:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10389:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,169,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:10393:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10394:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10394:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:10395:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10412:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop217:
            	    do {
            	        int alt217=2;
            	        int LA217_0 = input.LA(1);

            	        if ( (LA217_0==25) ) {
            	            alt217=1;
            	        }


            	        switch (alt217) {
            	    	case 1 :
            	    	    // InternalKim.g:10413:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10417:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10418:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10418:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10419:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop217;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:10443:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10443:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:10444:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:10444:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:10445:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:10448:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:10448:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10448:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:10448:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,170,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:10456:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:10457:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:10457:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:10458:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10475:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop218:
            	    do {
            	        int alt218=2;
            	        int LA218_0 = input.LA(1);

            	        if ( (LA218_0==25) ) {
            	            alt218=1;
            	        }


            	        switch (alt218) {
            	    	case 1 :
            	    	    // InternalKim.g:10476:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10480:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:10481:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:10481:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:10482:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop218;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:10506:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10506:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10507:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:10507:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10508:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:10511:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10511:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10511:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10511:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,171,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:10515:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10516:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10516:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10517:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10534:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:10535:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:10541:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10542:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10542:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10543:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10560:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop219:
            	    do {
            	        int alt219=2;
            	        int LA219_0 = input.LA(1);

            	        if ( (LA219_0==25) ) {
            	            alt219=1;
            	        }


            	        switch (alt219) {
            	    	case 1 :
            	    	    // InternalKim.g:10561:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10565:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10566:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10566:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10567:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_22);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:10584:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:10585:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:10591:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10592:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10592:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10593:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop219;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:10617:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10617:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10618:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:10618:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10619:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:10622:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10622:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10622:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10622:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,172,FOLLOW_108); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,102,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:10630:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10631:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10631:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:10632:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:10655:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10655:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10656:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:10656:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10657:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:10660:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10660:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10660:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10660:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,173,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:10664:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10665:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10665:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:10666:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10683:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop220:
            	    do {
            	        int alt220=2;
            	        int LA220_0 = input.LA(1);

            	        if ( (LA220_0==25) ) {
            	            alt220=1;
            	        }


            	        switch (alt220) {
            	    	case 1 :
            	    	    // InternalKim.g:10684:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10688:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10689:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10689:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10690:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop220;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:10714:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10714:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:10715:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:10715:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:10716:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:10719:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:10719:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10719:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:10719:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,163,FOLLOW_136); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:10723:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt221=2;
            	    int LA221_0 = input.LA(1);

            	    if ( (LA221_0==83) ) {
            	        alt221=1;
            	    }
            	    switch (alt221) {
            	        case 1 :
            	            // InternalKim.g:10724:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:10724:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:10725:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,83,FOLLOW_137); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,174,FOLLOW_138); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:10741:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:10742:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:10742:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:10743:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_128);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10760:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop222:
            	    do {
            	        int alt222=2;
            	        int LA222_0 = input.LA(1);

            	        if ( (LA222_0==25) ) {
            	            alt222=1;
            	        }


            	        switch (alt222) {
            	    	case 1 :
            	    	    // InternalKim.g:10761:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,25,FOLLOW_138); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10765:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:10766:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:10766:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:10767:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_128);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop222;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:10791:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:10791:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    // InternalKim.g:10792:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:10792:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    // InternalKim.g:10793:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:10796:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    int cnt223=0;
            	    loop223:
            	    do {
            	        int alt223=2;
            	        switch ( input.LA(1) ) {
            	        case 163:
            	            {
            	            int LA223_2 = input.LA(2);

            	            if ( ((synpred392_InternalKim()&&(true))) ) {
            	                alt223=1;
            	            }


            	            }
            	            break;
            	        case 180:
            	            {
            	            int LA223_3 = input.LA(2);

            	            if ( ((synpred392_InternalKim()&&(true))) ) {
            	                alt223=1;
            	            }


            	            }
            	            break;
            	        case 181:
            	            {
            	            int LA223_4 = input.LA(2);

            	            if ( ((synpred392_InternalKim()&&(true))) ) {
            	                alt223=1;
            	            }


            	            }
            	            break;
            	        case 182:
            	            {
            	            int LA223_5 = input.LA(2);

            	            if ( ((synpred392_InternalKim()&&(true))) ) {
            	                alt223=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt223) {
            	    	case 1 :
            	    	    // InternalKim.g:10796:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:10796:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    // InternalKim.g:10796:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    {
            	    	    // InternalKim.g:10796:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    // InternalKim.g:10797:10: lv_restrictions_109_0= ruleRestrictionStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_123);
            	    	    lv_restrictions_109_0=ruleRestrictionStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"restrictions",
            	    	      											lv_restrictions_109_0,
            	    	      											"org.integratedmodelling.kim.Kim.RestrictionStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt223 >= 1 ) break loop223;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(223, input);
            	                throw eee;
            	        }
            	        cnt223++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:10819:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10819:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:10820:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:10820:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:10821:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:10824:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:10824:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10824:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    // InternalKim.g:10824:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
            	    {
            	    otherlv_110=(Token)match(input,40,FOLLOW_30); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_110, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_22_0());
            	      								
            	    }
            	    otherlv_111=(Token)match(input,41,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_111, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_22_1());
            	      								
            	    }
            	    // InternalKim.g:10832:9: ( (lv_metadata_112_0= ruleMetadata ) )
            	    // InternalKim.g:10833:10: (lv_metadata_112_0= ruleMetadata )
            	    {
            	    // InternalKim.g:10833:10: (lv_metadata_112_0= ruleMetadata )
            	    // InternalKim.g:10834:11: lv_metadata_112_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_metadata_112_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_112_0,
            	      												"org.integratedmodelling.kim.Kim.Metadata");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop224;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:10871:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:10871:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:10872:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:10878:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10884:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:10885:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:10885:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:10886:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:10886:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:10887:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:10887:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:10888:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_139);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10905:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt225=2;
            int LA225_0 = input.LA(1);

            if ( (LA225_0==175) ) {
                alt225=1;
            }
            switch (alt225) {
                case 1 :
                    // InternalKim.g:10906:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,175,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:10910:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10911:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10911:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:10912:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_140);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,137,FOLLOW_20); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:10933:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10934:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10934:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:10935:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:10957:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:10957:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:10958:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:10964:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:10970:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:10971:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:10971:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt227=2;
            int LA227_0 = input.LA(1);

            if ( (LA227_0==RULE_CAMELCASE_ID||LA227_0==144) ) {
                alt227=1;
            }
            else if ( (LA227_0==36) ) {
                alt227=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 227, 0, input);

                throw nvae;
            }
            switch (alt227) {
                case 1 :
                    // InternalKim.g:10972:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:10972:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:10973:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:10973:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==144) ) {
                        alt226=1;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalKim.g:10974:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:10974:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:10975:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,144,FOLLOW_141); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10987:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:10988:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:10988:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:10989:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11007:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:11007:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:11008:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,36,FOLLOW_120); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_111);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:11032:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:11032:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:11033:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:11039:1: ruleIdentityRequirement returns [EObject current=null] : ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_authority_8_1=null;
        Token lv_authority_8_2=null;
        EObject lv_identities_4_0 = null;

        EObject lv_identities_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11045:2: ( ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:11046:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:11046:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt231=2;
            int LA231_0 = input.LA(1);

            if ( ((LA231_0>=176 && LA231_0<=179)) ) {
                alt231=1;
            }
            else if ( (LA231_0==154) ) {
                alt231=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 231, 0, input);

                throw nvae;
            }
            switch (alt231) {
                case 1 :
                    // InternalKim.g:11047:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:11047:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:11048:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:11048:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' )
                    int alt228=4;
                    switch ( input.LA(1) ) {
                    case 176:
                        {
                        alt228=1;
                        }
                        break;
                    case 177:
                        {
                        alt228=2;
                        }
                        break;
                    case 178:
                        {
                        alt228=3;
                        }
                        break;
                    case 179:
                        {
                        alt228=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 228, 0, input);

                        throw nvae;
                    }

                    switch (alt228) {
                        case 1 :
                            // InternalKim.g:11049:5: otherlv_0= 'identity'
                            {
                            otherlv_0=(Token)match(input,176,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getIdentityRequirementAccess().getIdentityKeyword_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11054:5: otherlv_1= 'attribute'
                            {
                            otherlv_1=(Token)match(input,177,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getIdentityRequirementAccess().getAttributeKeyword_0_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:11059:5: otherlv_2= 'realm'
                            {
                            otherlv_2=(Token)match(input,178,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getRealmKeyword_0_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:11064:5: otherlv_3= 'extent'
                            {
                            otherlv_3=(Token)match(input,179,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getIdentityRequirementAccess().getExtentKeyword_0_0_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:11069:4: ( (lv_identities_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:11070:5: (lv_identities_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:11070:5: (lv_identities_4_0= ruleConceptDeclaration )
                    // InternalKim.g:11071:6: lv_identities_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_identities_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11088:4: (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    loop229:
                    do {
                        int alt229=2;
                        int LA229_0 = input.LA(1);

                        if ( (LA229_0==25) ) {
                            int LA229_1 = input.LA(2);

                            if ( ((LA229_1>=RULE_LOWERCASE_ID && LA229_1<=RULE_STRING)||(LA229_1>=RULE_CAMELCASE_ID && LA229_1<=RULE_LOWERCASE_DASHID)||LA229_1==36||(LA229_1>=111 && LA229_1<=112)||(LA229_1>=120 && LA229_1<=121)||(LA229_1>=123 && LA229_1<=135)) ) {
                                alt229=1;
                            }


                        }


                        switch (alt229) {
                    	case 1 :
                    	    // InternalKim.g:11089:5: otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,25,FOLLOW_20); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:11093:5: ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:11094:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:11094:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    // InternalKim.g:11095:7: lv_identities_6_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_identities_6_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_6_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop229;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11115:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:11115:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:11116:4: otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_7=(Token)match(input,154,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11120:4: ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:11121:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:11121:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:11122:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:11122:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( (LA230_0==RULE_UPPERCASE_ID) ) {
                        alt230=1;
                    }
                    else if ( (LA230_0==RULE_UPPERCASE_PATH) ) {
                        alt230=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 230, 0, input);

                        throw nvae;
                    }
                    switch (alt230) {
                        case 1 :
                            // InternalKim.g:11123:7: lv_authority_8_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11138:7: lv_authority_8_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleRestrictionStatement"
    // InternalKim.g:11160:1: entryRuleRestrictionStatement returns [EObject current=null] : iv_ruleRestrictionStatement= ruleRestrictionStatement EOF ;
    public final EObject entryRuleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionStatement = null;


        try {
            // InternalKim.g:11160:61: (iv_ruleRestrictionStatement= ruleRestrictionStatement EOF )
            // InternalKim.g:11161:2: iv_ruleRestrictionStatement= ruleRestrictionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionStatement=ruleRestrictionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionStatement"


    // $ANTLR start "ruleRestrictionStatement"
    // InternalKim.g:11167:1: ruleRestrictionStatement returns [EObject current=null] : ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) ;
    public final EObject ruleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        Token lv_relType_0_1=null;
        Token lv_relType_0_2=null;
        Token lv_relType_0_3=null;
        Token lv_relType_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_authorities_6_1=null;
        Token lv_authorities_6_2=null;
        Token otherlv_7=null;
        Token lv_authorities_8_1=null;
        Token lv_authorities_8_2=null;
        Token otherlv_9=null;
        Token lv_literal_11_0=null;
        Token lv_subject_12_1=null;
        EObject lv_definitions_1_0 = null;

        EObject lv_definitions_3_0 = null;

        EObject lv_value_10_0 = null;

        AntlrDatatypeRuleToken lv_subject_12_2 = null;



        	enterRule();

        try {
            // InternalKim.g:11173:2: ( ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:11174:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            {
            // InternalKim.g:11174:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            int alt238=3;
            alt238 = dfa238.predict(input);
            switch (alt238) {
                case 1 :
                    // InternalKim.g:11175:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    {
                    // InternalKim.g:11175:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    // InternalKim.g:11176:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    {
                    // InternalKim.g:11176:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) )
                    // InternalKim.g:11177:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    {
                    // InternalKim.g:11177:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    // InternalKim.g:11178:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    {
                    // InternalKim.g:11178:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    int alt232=4;
                    switch ( input.LA(1) ) {
                    case 180:
                        {
                        alt232=1;
                        }
                        break;
                    case 163:
                        {
                        alt232=2;
                        }
                        break;
                    case 181:
                        {
                        alt232=3;
                        }
                        break;
                    case 182:
                        {
                        alt232=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 232, 0, input);

                        throw nvae;
                    }

                    switch (alt232) {
                        case 1 :
                            // InternalKim.g:11179:7: lv_relType_0_1= 'uses'
                            {
                            lv_relType_0_1=(Token)match(input,180,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_1, grammarAccess.getRestrictionStatementAccess().getRelTypeUsesKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11190:7: lv_relType_0_2= 'has'
                            {
                            lv_relType_0_2=(Token)match(input,163,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_2, grammarAccess.getRestrictionStatementAccess().getRelTypeHasKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:11201:7: lv_relType_0_3= 'contains'
                            {
                            lv_relType_0_3=(Token)match(input,181,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_3, grammarAccess.getRestrictionStatementAccess().getRelTypeContainsKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:11212:7: lv_relType_0_4= 'implies'
                            {
                            lv_relType_0_4=(Token)match(input,182,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_4, grammarAccess.getRestrictionStatementAccess().getRelTypeImpliesKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:11225:4: ( (lv_definitions_1_0= ruleRestrictionDefinition ) )
                    // InternalKim.g:11226:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    {
                    // InternalKim.g:11226:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    // InternalKim.g:11227:6: lv_definitions_1_0= ruleRestrictionDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_definitions_1_0=ruleRestrictionDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						add(
                      							current,
                      							"definitions",
                      							lv_definitions_1_0,
                      							"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11244:4: (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    loop233:
                    do {
                        int alt233=2;
                        int LA233_0 = input.LA(1);

                        if ( (LA233_0==25) ) {
                            alt233=1;
                        }


                        switch (alt233) {
                    	case 1 :
                    	    // InternalKim.g:11245:5: otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_142); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:11249:5: ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    // InternalKim.g:11250:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    {
                    	    // InternalKim.g:11250:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    // InternalKim.g:11251:7: lv_definitions_3_0= ruleRestrictionDefinition
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_definitions_3_0=ruleRestrictionDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"definitions",
                    	      								lv_definitions_3_0,
                    	      								"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop233;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11271:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    {
                    // InternalKim.g:11271:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    // InternalKim.g:11272:4: otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    {
                    otherlv_4=(Token)match(input,180,FOLLOW_143); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,154,FOLLOW_107); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRestrictionStatementAccess().getAuthorityKeyword_1_1());
                      			
                    }
                    // InternalKim.g:11280:4: ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:11281:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:11281:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:11282:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:11282:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    int alt234=2;
                    int LA234_0 = input.LA(1);

                    if ( (LA234_0==RULE_UPPERCASE_ID) ) {
                        alt234=1;
                    }
                    else if ( (LA234_0==RULE_UPPERCASE_PATH) ) {
                        alt234=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 234, 0, input);

                        throw nvae;
                    }
                    switch (alt234) {
                        case 1 :
                            // InternalKim.g:11283:7: lv_authorities_6_1= RULE_UPPERCASE_ID
                            {
                            lv_authorities_6_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11298:7: lv_authorities_6_2= RULE_UPPERCASE_PATH
                            {
                            lv_authorities_6_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_34); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:11315:4: ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    loop236:
                    do {
                        int alt236=2;
                        int LA236_0 = input.LA(1);

                        if ( (LA236_0==25) ) {
                            alt236=1;
                        }


                        switch (alt236) {
                    	case 1 :
                    	    // InternalKim.g:11316:5: ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    {
                    	    // InternalKim.g:11316:5: ( ( ',' )=>otherlv_7= ',' )
                    	    // InternalKim.g:11317:6: ( ',' )=>otherlv_7= ','
                    	    {
                    	    otherlv_7=(Token)match(input,25,FOLLOW_107); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_1_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:11323:5: ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    // InternalKim.g:11324:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    {
                    	    // InternalKim.g:11324:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    // InternalKim.g:11325:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    {
                    	    // InternalKim.g:11325:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    int alt235=2;
                    	    int LA235_0 = input.LA(1);

                    	    if ( (LA235_0==RULE_UPPERCASE_ID) ) {
                    	        alt235=1;
                    	    }
                    	    else if ( (LA235_0==RULE_UPPERCASE_PATH) ) {
                    	        alt235=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 235, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt235) {
                    	        case 1 :
                    	            // InternalKim.g:11326:8: lv_authorities_8_1= RULE_UPPERCASE_ID
                    	            {
                    	            lv_authorities_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_34); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_3_1_0_0());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_1,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:11341:8: lv_authorities_8_2= RULE_UPPERCASE_PATH
                    	            {
                    	            lv_authorities_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_34); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_3_1_0_1());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_2,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop236;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11361:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:11361:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:11362:4: otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    {
                    otherlv_9=(Token)match(input,180,FOLLOW_142); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_2_0());
                      			
                    }
                    // InternalKim.g:11366:4: ( (lv_value_10_0= ruleLiteral ) )
                    // InternalKim.g:11367:5: (lv_value_10_0= ruleLiteral )
                    {
                    // InternalKim.g:11367:5: (lv_value_10_0= ruleLiteral )
                    // InternalKim.g:11368:6: lv_value_10_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getValueLiteralParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_144);
                    lv_value_10_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_10_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11385:4: ( (lv_literal_11_0= 'for' ) )
                    // InternalKim.g:11386:5: (lv_literal_11_0= 'for' )
                    {
                    // InternalKim.g:11386:5: (lv_literal_11_0= 'for' )
                    // InternalKim.g:11387:6: lv_literal_11_0= 'for'
                    {
                    lv_literal_11_0=(Token)match(input,103,FOLLOW_145); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literal_11_0, grammarAccess.getRestrictionStatementAccess().getLiteralForKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestrictionStatementRule());
                      						}
                      						setWithLastConsumed(current, "literal", true, "for");
                      					
                    }

                    }


                    }

                    // InternalKim.g:11399:4: ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    // InternalKim.g:11400:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:11400:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    // InternalKim.g:11401:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    {
                    // InternalKim.g:11401:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    int alt237=2;
                    int LA237_0 = input.LA(1);

                    if ( (LA237_0==RULE_CAMELCASE_ID) ) {
                        alt237=1;
                    }
                    else if ( (LA237_0==RULE_LOWERCASE_ID||LA237_0==RULE_LOWERCASE_DASHID) ) {
                        alt237=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 237, 0, input);

                        throw nvae;
                    }
                    switch (alt237) {
                        case 1 :
                            // InternalKim.g:11402:7: lv_subject_12_1= RULE_CAMELCASE_ID
                            {
                            lv_subject_12_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_subject_12_1, grammarAccess.getRestrictionStatementAccess().getSubjectCAMELCASE_IDTerminalRuleCall_2_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"subject",
                              								lv_subject_12_1,
                              								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11417:7: lv_subject_12_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getSubjectNamespaceIdParserRuleCall_2_3_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_12_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_12_2,
                              								"org.integratedmodelling.kim.Kim.NamespaceId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionStatement"


    // $ANTLR start "entryRuleRestrictionDefinition"
    // InternalKim.g:11440:1: entryRuleRestrictionDefinition returns [EObject current=null] : iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF ;
    public final EObject entryRuleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionDefinition = null;


        try {
            // InternalKim.g:11440:62: (iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF )
            // InternalKim.g:11441:2: iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionDefinition=ruleRestrictionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionDefinition"


    // $ANTLR start "ruleRestrictionDefinition"
    // InternalKim.g:11447:1: ruleRestrictionDefinition returns [EObject current=null] : ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) ) ;
    public final EObject ruleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_only_0_0=null;
        Token lv_none_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token otherlv_5=null;
        Token lv_atMost_6_0=null;
        Token lv_howmany_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_source_8_0 = null;

        Enumerator lv_dataType_9_0 = null;

        EObject lv_traitType_11_0 = null;

        EObject lv_subject_14_0 = null;

        EObject lv_value_15_0 = null;

        EObject lv_maxValue_17_0 = null;

        AntlrDatatypeRuleToken lv_property_19_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11453:2: ( ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) ) )
            // InternalKim.g:11454:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) )
            {
            // InternalKim.g:11454:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) )
            int alt246=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
            case 36:
            case 74:
            case 75:
            case 111:
            case 112:
            case 120:
            case 121:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 183:
            case 184:
            case 185:
            case 235:
            case 236:
            case 237:
                {
                alt246=1;
                }
                break;
            case RULE_STRING:
                {
                int LA246_2 = input.LA(2);

                if ( (LA246_2==34||LA246_2==103) ) {
                    alt246=2;
                }
                else if ( (LA246_2==RULE_LOWERCASE_ID||(LA246_2>=RULE_CAMELCASE_ID && LA246_2<=RULE_LOWERCASE_DASHID)||LA246_2==36||(LA246_2>=111 && LA246_2<=112)||(LA246_2>=120 && LA246_2<=121)||(LA246_2>=123 && LA246_2<=135)) ) {
                    alt246=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 246, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case 26:
            case 27:
            case 231:
            case 232:
                {
                alt246=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 246, 0, input);

                throw nvae;
            }

            switch (alt246) {
                case 1 :
                    // InternalKim.g:11455:3: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:11455:3: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? )
                    // InternalKim.g:11456:4: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:11456:4: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )?
                    int alt240=4;
                    switch ( input.LA(1) ) {
                        case 183:
                            {
                            alt240=1;
                            }
                            break;
                        case 121:
                            {
                            int LA240_2 = input.LA(2);

                            if ( (synpred416_InternalKim()) ) {
                                alt240=2;
                            }
                            }
                            break;
                        case 184:
                        case 185:
                            {
                            alt240=3;
                            }
                            break;
                    }

                    switch (alt240) {
                        case 1 :
                            // InternalKim.g:11457:5: ( (lv_only_0_0= 'only' ) )
                            {
                            // InternalKim.g:11457:5: ( (lv_only_0_0= 'only' ) )
                            // InternalKim.g:11458:6: (lv_only_0_0= 'only' )
                            {
                            // InternalKim.g:11458:6: (lv_only_0_0= 'only' )
                            // InternalKim.g:11459:7: lv_only_0_0= 'only'
                            {
                            lv_only_0_0=(Token)match(input,183,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_only_0_0, grammarAccess.getRestrictionDefinitionAccess().getOnlyOnlyKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "only", true, "only");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11472:5: ( (lv_none_1_0= 'no' ) )
                            {
                            // InternalKim.g:11472:5: ( (lv_none_1_0= 'no' ) )
                            // InternalKim.g:11473:6: (lv_none_1_0= 'no' )
                            {
                            // InternalKim.g:11473:6: (lv_none_1_0= 'no' )
                            // InternalKim.g:11474:7: lv_none_1_0= 'no'
                            {
                            lv_none_1_0=(Token)match(input,121,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_none_1_0, grammarAccess.getRestrictionDefinitionAccess().getNoneNoKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "none", true, "no");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:11487:5: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                            {
                            // InternalKim.g:11487:5: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                            // InternalKim.g:11488:6: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) )
                            {
                            // InternalKim.g:11488:6: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) )
                            int alt239=3;
                            int LA239_0 = input.LA(1);

                            if ( (LA239_0==184) ) {
                                alt239=1;
                            }
                            else if ( (LA239_0==185) ) {
                                int LA239_2 = input.LA(2);

                                if ( (LA239_2==186) ) {
                                    alt239=2;
                                }
                                else if ( (LA239_2==187) ) {
                                    alt239=3;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 239, 2, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 239, 0, input);

                                throw nvae;
                            }
                            switch (alt239) {
                                case 1 :
                                    // InternalKim.g:11489:7: ( (lv_exactly_2_0= 'exactly' ) )
                                    {
                                    // InternalKim.g:11489:7: ( (lv_exactly_2_0= 'exactly' ) )
                                    // InternalKim.g:11490:8: (lv_exactly_2_0= 'exactly' )
                                    {
                                    // InternalKim.g:11490:8: (lv_exactly_2_0= 'exactly' )
                                    // InternalKim.g:11491:9: lv_exactly_2_0= 'exactly'
                                    {
                                    lv_exactly_2_0=(Token)match(input,184,FOLLOW_74); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_exactly_2_0, grammarAccess.getRestrictionDefinitionAccess().getExactlyExactlyKeyword_0_0_2_0_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "exactly", true, "exactly");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11504:7: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                                    {
                                    // InternalKim.g:11504:7: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                                    // InternalKim.g:11505:8: otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    otherlv_3=(Token)match(input,185,FOLLOW_146); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_3, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_0_2_0_1_0());
                                      							
                                    }
                                    // InternalKim.g:11509:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:11510:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:11510:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:11511:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,186,FOLLOW_74); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getRestrictionDefinitionAccess().getAtLeastLeastKeyword_0_0_2_0_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:11525:7: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                                    {
                                    // InternalKim.g:11525:7: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                                    // InternalKim.g:11526:8: otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) )
                                    {
                                    otherlv_5=(Token)match(input,185,FOLLOW_147); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_0_2_0_2_0());
                                      							
                                    }
                                    // InternalKim.g:11530:8: ( (lv_atMost_6_0= 'most' ) )
                                    // InternalKim.g:11531:9: (lv_atMost_6_0= 'most' )
                                    {
                                    // InternalKim.g:11531:9: (lv_atMost_6_0= 'most' )
                                    // InternalKim.g:11532:10: lv_atMost_6_0= 'most'
                                    {
                                    lv_atMost_6_0=(Token)match(input,187,FOLLOW_74); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_6_0, grammarAccess.getRestrictionDefinitionAccess().getAtMostMostKeyword_0_0_2_0_2_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:11546:6: ( (lv_howmany_7_0= RULE_INT ) )
                            // InternalKim.g:11547:7: (lv_howmany_7_0= RULE_INT )
                            {
                            // InternalKim.g:11547:7: (lv_howmany_7_0= RULE_INT )
                            // InternalKim.g:11548:8: lv_howmany_7_0= RULE_INT
                            {
                            lv_howmany_7_0=(Token)match(input,RULE_INT,FOLLOW_142); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_howmany_7_0, grammarAccess.getRestrictionDefinitionAccess().getHowmanyINTTerminalRuleCall_0_0_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"howmany",
                              									lv_howmany_7_0,
                              									"org.eclipse.xtext.common.Terminals.INT");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11566:4: ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) )
                    int alt241=2;
                    int LA241_0 = input.LA(1);

                    if ( ((LA241_0>=RULE_LOWERCASE_ID && LA241_0<=RULE_STRING)||(LA241_0>=RULE_CAMELCASE_ID && LA241_0<=RULE_LOWERCASE_DASHID)||LA241_0==36||(LA241_0>=111 && LA241_0<=112)||(LA241_0>=120 && LA241_0<=121)||(LA241_0>=123 && LA241_0<=135)) ) {
                        alt241=1;
                    }
                    else if ( ((LA241_0>=74 && LA241_0<=75)||(LA241_0>=235 && LA241_0<=237)) ) {
                        alt241=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 241, 0, input);

                        throw nvae;
                    }
                    switch (alt241) {
                        case 1 :
                            // InternalKim.g:11567:5: ( (lv_source_8_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:11567:5: ( (lv_source_8_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11568:6: (lv_source_8_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11568:6: (lv_source_8_0= ruleConceptDeclaration )
                            // InternalKim.g:11569:7: lv_source_8_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSourceConceptDeclarationParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_148);
                            lv_source_8_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"source",
                              								lv_source_8_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11587:5: ( (lv_dataType_9_0= ruleDataType ) )
                            {
                            // InternalKim.g:11587:5: ( (lv_dataType_9_0= ruleDataType ) )
                            // InternalKim.g:11588:6: (lv_dataType_9_0= ruleDataType )
                            {
                            // InternalKim.g:11588:6: (lv_dataType_9_0= ruleDataType )
                            // InternalKim.g:11589:7: lv_dataType_9_0= ruleDataType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getDataTypeDataTypeEnumRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_148);
                            lv_dataType_9_0=ruleDataType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"dataType",
                              								lv_dataType_9_0,
                              								"org.integratedmodelling.kim.Kim.DataType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11607:4: (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )?
                    int alt242=2;
                    int LA242_0 = input.LA(1);

                    if ( (LA242_0==188) ) {
                        alt242=1;
                    }
                    switch (alt242) {
                        case 1 :
                            // InternalKim.g:11608:5: otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                            {
                            otherlv_10=(Token)match(input,188,FOLLOW_20); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getRestrictionDefinitionAccess().getInheritingKeyword_0_2_0());
                              				
                            }
                            // InternalKim.g:11612:5: ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11613:6: (lv_traitType_11_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11613:6: (lv_traitType_11_0= ruleConceptDeclaration )
                            // InternalKim.g:11614:7: lv_traitType_11_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getTraitTypeConceptDeclarationParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_149);
                            lv_traitType_11_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"traitType",
                              								lv_traitType_11_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11632:4: ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )?
                    int alt244=2;
                    int LA244_0 = input.LA(1);

                    if ( (LA244_0==23||LA244_0==103) ) {
                        alt244=1;
                    }
                    switch (alt244) {
                        case 1 :
                            // InternalKim.g:11633:5: (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:11633:5: (otherlv_12= 'for' | otherlv_13= 'as' )
                            int alt243=2;
                            int LA243_0 = input.LA(1);

                            if ( (LA243_0==103) ) {
                                alt243=1;
                            }
                            else if ( (LA243_0==23) ) {
                                alt243=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 243, 0, input);

                                throw nvae;
                            }
                            switch (alt243) {
                                case 1 :
                                    // InternalKim.g:11634:6: otherlv_12= 'for'
                                    {
                                    otherlv_12=(Token)match(input,103,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_12, grammarAccess.getRestrictionDefinitionAccess().getForKeyword_0_3_0_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11639:6: otherlv_13= 'as'
                                    {
                                    otherlv_13=(Token)match(input,23,FOLLOW_20); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getRestrictionDefinitionAccess().getAsKeyword_0_3_0_1());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalKim.g:11644:5: ( (lv_subject_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11645:6: (lv_subject_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11645:6: (lv_subject_14_0= ruleConceptDeclaration )
                            // InternalKim.g:11646:7: lv_subject_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSubjectConceptDeclarationParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_14_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11666:3: ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) )
                    {
                    // InternalKim.g:11666:3: ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) )
                    // InternalKim.g:11667:4: ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) )
                    {
                    // InternalKim.g:11667:4: ( (lv_value_15_0= ruleLiteral ) )
                    // InternalKim.g:11668:5: (lv_value_15_0= ruleLiteral )
                    {
                    // InternalKim.g:11668:5: (lv_value_15_0= ruleLiteral )
                    // InternalKim.g:11669:6: lv_value_15_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getValueLiteralParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_150);
                    lv_value_15_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_15_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11686:4: (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )?
                    int alt245=2;
                    int LA245_0 = input.LA(1);

                    if ( (LA245_0==34) ) {
                        alt245=1;
                    }
                    switch (alt245) {
                        case 1 :
                            // InternalKim.g:11687:5: otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) )
                            {
                            otherlv_16=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getRestrictionDefinitionAccess().getToKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:11691:5: ( (lv_maxValue_17_0= ruleNumber ) )
                            // InternalKim.g:11692:6: (lv_maxValue_17_0= ruleNumber )
                            {
                            // InternalKim.g:11692:6: (lv_maxValue_17_0= ruleNumber )
                            // InternalKim.g:11693:7: lv_maxValue_17_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getMaxValueNumberParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_144);
                            lv_maxValue_17_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"maxValue",
                              								lv_maxValue_17_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,103,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getRestrictionDefinitionAccess().getForKeyword_1_2());
                      			
                    }
                    // InternalKim.g:11715:4: ( (lv_property_19_0= rulePropertyId ) )
                    // InternalKim.g:11716:5: (lv_property_19_0= rulePropertyId )
                    {
                    // InternalKim.g:11716:5: (lv_property_19_0= rulePropertyId )
                    // InternalKim.g:11717:6: lv_property_19_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_property_19_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"property",
                      							lv_property_19_0,
                      							"org.integratedmodelling.kim.Kim.PropertyId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionDefinition"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:11739:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:11739:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:11740:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:11746:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11752:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:11753:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:11753:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:11754:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:11754:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:11755:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:11755:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:11756:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_151); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:11772:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt248=2;
            int LA248_0 = input.LA(1);

            if ( (LA248_0==36) ) {
                alt248=1;
            }
            switch (alt248) {
                case 1 :
                    // InternalKim.g:11773:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,36,FOLLOW_152); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11777:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt247=2;
                    int LA247_0 = input.LA(1);

                    if ( ((LA247_0>=RULE_UPPERCASE_ID && LA247_0<=RULE_STRING)||(LA247_0>=RULE_EXPR && LA247_0<=RULE_LOWERCASE_DASHID)||LA247_0==RULE_INT||(LA247_0>=26 && LA247_0<=27)||LA247_0==36||(LA247_0>=49 && LA247_0<=50)||(LA247_0>=111 && LA247_0<=112)||(LA247_0>=120 && LA247_0<=121)||(LA247_0>=123 && LA247_0<=135)||LA247_0==189||(LA247_0>=231 && LA247_0<=232)) ) {
                        alt247=1;
                    }
                    switch (alt247) {
                        case 1 :
                            // InternalKim.g:11778:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:11778:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:11779:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_111);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:11805:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:11805:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:11806:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:11812:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_contents_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11818:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) )
            // InternalKim.g:11819:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            {
            // InternalKim.g:11819:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            // InternalKim.g:11820:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')'
            {
            // InternalKim.g:11820:3: ()
            // InternalKim.g:11821:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,36,FOLLOW_153); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:11834:3: ( (lv_contents_2_0= ruleValue ) )*
            loop249:
            do {
                int alt249=2;
                int LA249_0 = input.LA(1);

                if ( ((LA249_0>=RULE_UPPERCASE_ID && LA249_0<=RULE_STRING)||(LA249_0>=RULE_EXPR && LA249_0<=RULE_INT)||(LA249_0>=25 && LA249_0<=27)||LA249_0==36||(LA249_0>=49 && LA249_0<=50)||LA249_0==189||(LA249_0>=231 && LA249_0<=232)) ) {
                    alt249=1;
                }


                switch (alt249) {
            	case 1 :
            	    // InternalKim.g:11835:4: (lv_contents_2_0= ruleValue )
            	    {
            	    // InternalKim.g:11835:4: (lv_contents_2_0= ruleValue )
            	    // InternalKim.g:11836:5: lv_contents_2_0= ruleValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_153);
            	    lv_contents_2_0=ruleValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"contents",
            	      						lv_contents_2_0,
            	      						"org.integratedmodelling.kim.Kim.Value");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop249;
                }
            } while (true);

            otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:11861:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:11861:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:11862:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:11868:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11874:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:11875:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:11875:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt251=4;
            alt251 = dfa251.predict(input);
            switch (alt251) {
                case 1 :
                    // InternalKim.g:11876:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:11876:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:11877:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:11877:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:11878:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:11878:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:11879:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11896:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:11897:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:11903:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:11904:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:11908:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:11909:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11928:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:11928:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:11929:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:11929:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:11930:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11948:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11948:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:11949:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:11949:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:11950:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11967:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:11967:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:11968:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:11968:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:11969:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:11969:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt250=2;
                    int LA250_0 = input.LA(1);

                    if ( (LA250_0==26) ) {
                        alt250=1;
                    }
                    else if ( (LA250_0==27) ) {
                        alt250=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 250, 0, input);

                        throw nvae;
                    }
                    switch (alt250) {
                        case 1 :
                            // InternalKim.g:11970:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11981:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrID"
    // InternalKim.g:11998:1: entryRuleLiteralOrID returns [EObject current=null] : iv_ruleLiteralOrID= ruleLiteralOrID EOF ;
    public final EObject entryRuleLiteralOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrID = null;


        try {
            // InternalKim.g:11998:52: (iv_ruleLiteralOrID= ruleLiteralOrID EOF )
            // InternalKim.g:11999:2: iv_ruleLiteralOrID= ruleLiteralOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrID=ruleLiteralOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrID"


    // $ANTLR start "ruleLiteralOrID"
    // InternalKim.g:12005:1: ruleLiteralOrID returns [EObject current=null] : ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) ;
    public final EObject ruleLiteralOrID() throws RecognitionException {
        EObject current = null;

        Token lv_string_1_0=null;
        Token lv_boolean_2_1=null;
        Token lv_boolean_2_2=null;
        Token lv_id_3_0=null;
        EObject lv_number_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12011:2: ( ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) )
            // InternalKim.g:12012:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            {
            // InternalKim.g:12012:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            int alt253=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case 231:
            case 232:
                {
                alt253=1;
                }
                break;
            case RULE_STRING:
                {
                alt253=2;
                }
                break;
            case 26:
            case 27:
                {
                alt253=3;
                }
                break;
            case RULE_ID:
                {
                alt253=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }

            switch (alt253) {
                case 1 :
                    // InternalKim.g:12013:3: ( (lv_number_0_0= ruleNumber ) )
                    {
                    // InternalKim.g:12013:3: ( (lv_number_0_0= ruleNumber ) )
                    // InternalKim.g:12014:4: (lv_number_0_0= ruleNumber )
                    {
                    // InternalKim.g:12014:4: (lv_number_0_0= ruleNumber )
                    // InternalKim.g:12015:5: lv_number_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12033:3: ( (lv_string_1_0= RULE_STRING ) )
                    {
                    // InternalKim.g:12033:3: ( (lv_string_1_0= RULE_STRING ) )
                    // InternalKim.g:12034:4: (lv_string_1_0= RULE_STRING )
                    {
                    // InternalKim.g:12034:4: (lv_string_1_0= RULE_STRING )
                    // InternalKim.g:12035:5: lv_string_1_0= RULE_STRING
                    {
                    lv_string_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_1_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12052:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    {
                    // InternalKim.g:12052:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    // InternalKim.g:12053:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    {
                    // InternalKim.g:12053:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    // InternalKim.g:12054:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    {
                    // InternalKim.g:12054:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    int alt252=2;
                    int LA252_0 = input.LA(1);

                    if ( (LA252_0==26) ) {
                        alt252=1;
                    }
                    else if ( (LA252_0==27) ) {
                        alt252=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 252, 0, input);

                        throw nvae;
                    }
                    switch (alt252) {
                        case 1 :
                            // InternalKim.g:12055:6: lv_boolean_2_1= 'true'
                            {
                            lv_boolean_2_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12066:6: lv_boolean_2_2= 'false'
                            {
                            lv_boolean_2_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12080:3: ( (lv_id_3_0= RULE_ID ) )
                    {
                    // InternalKim.g:12080:3: ( (lv_id_3_0= RULE_ID ) )
                    // InternalKim.g:12081:4: (lv_id_3_0= RULE_ID )
                    {
                    // InternalKim.g:12081:4: (lv_id_3_0= RULE_ID )
                    // InternalKim.g:12082:5: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_3_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrID"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:12102:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:12102:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:12103:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:12109:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12115:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:12116:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:12116:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt255=6;
            alt255 = dfa255.predict(input);
            switch (alt255) {
                case 1 :
                    // InternalKim.g:12117:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:12117:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:12118:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:12118:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:12119:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:12119:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:12120:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12137:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:12138:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:12144:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:12145:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:12149:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:12150:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12169:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:12169:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:12170:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:12170:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:12171:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12189:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:12189:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:12190:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:12190:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:12191:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12208:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:12208:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:12209:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:12209:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:12210:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:12210:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt254=2;
                    int LA254_0 = input.LA(1);

                    if ( (LA254_0==26) ) {
                        alt254=1;
                    }
                    else if ( (LA254_0==27) ) {
                        alt254=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 254, 0, input);

                        throw nvae;
                    }
                    switch (alt254) {
                        case 1 :
                            // InternalKim.g:12211:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,26,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12222:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,27,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:12236:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:12236:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:12237:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:12237:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:12238:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:12255:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:12255:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:12256:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:12256:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:12257:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMetadata"
    // InternalKim.g:12273:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalKim.g:12273:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalKim.g:12274:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalKim.g:12280:1: ruleMetadata returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_ids_2_2=null;
        Token lv_ids_2_4=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_ids_2_1 = null;

        AntlrDatatypeRuleToken lv_ids_2_3 = null;

        EObject lv_values_3_1 = null;

        EObject lv_values_3_2 = null;

        EObject lv_values_3_3 = null;



        	enterRule();

        try {
            // InternalKim.g:12286:2: ( ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:12287:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:12287:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            // InternalKim.g:12288:3: () otherlv_1= '{' ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:12288:3: ()
            // InternalKim.g:12289:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMetadataAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,189,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12302:3: ( ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )*
            loop258:
            do {
                int alt258=2;
                int LA258_0 = input.LA(1);

                if ( ((LA258_0>=RULE_LOWERCASE_ID && LA258_0<=RULE_STRING)||LA258_0==RULE_LOWERCASE_DASHID) ) {
                    alt258=1;
                }


                switch (alt258) {
            	case 1 :
            	    // InternalKim.g:12303:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    {
            	    // InternalKim.g:12303:4: ( ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) ) )
            	    // InternalKim.g:12304:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    {
            	    // InternalKim.g:12304:5: ( (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING ) )
            	    // InternalKim.g:12305:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    {
            	    // InternalKim.g:12305:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )
            	    int alt256=4;
            	    alt256 = dfa256.predict(input);
            	    switch (alt256) {
            	        case 1 :
            	            // InternalKim.g:12306:7: lv_ids_2_1= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_155);
            	            lv_ids_2_1=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_1,
            	              								"org.integratedmodelling.kim.Kim.PathName");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12322:7: lv_ids_2_2= RULE_LOWERCASE_ID
            	            {
            	            lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_155); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_2, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_2,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:12337:7: lv_ids_2_3= rulePropertyId
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_155);
            	            lv_ids_2_3=rulePropertyId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_3,
            	              								"org.integratedmodelling.kim.Kim.PropertyId");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 4 :
            	            // InternalKim.g:12353:7: lv_ids_2_4= RULE_STRING
            	            {
            	            lv_ids_2_4=(Token)match(input,RULE_STRING,FOLLOW_155); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_4, grammarAccess.getMetadataAccess().getIdsSTRINGTerminalRuleCall_2_0_0_3());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_4,
            	              								"org.eclipse.xtext.common.Terminals.STRING");
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:12370:4: ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    // InternalKim.g:12371:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    {
            	    // InternalKim.g:12371:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    // InternalKim.g:12372:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    {
            	    // InternalKim.g:12372:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    int alt257=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_STRING:
            	    case RULE_ID:
            	    case RULE_INT:
            	    case 26:
            	    case 27:
            	    case 231:
            	    case 232:
            	        {
            	        alt257=1;
            	        }
            	        break;
            	    case 189:
            	        {
            	        alt257=2;
            	        }
            	        break;
            	    case 36:
            	        {
            	        alt257=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 257, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt257) {
            	        case 1 :
            	            // InternalKim.g:12373:7: lv_values_3_1= ruleLiteralOrID
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_154);
            	            lv_values_3_1=ruleLiteralOrID();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_1,
            	              								"org.integratedmodelling.kim.Kim.LiteralOrID");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:12389:7: lv_values_3_2= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_154);
            	            lv_values_3_2=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_2,
            	              								"org.integratedmodelling.kim.Kim.Metadata");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:12405:7: lv_values_3_3= ruleList
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_154);
            	            lv_values_3_3=ruleList();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_3,
            	              								"org.integratedmodelling.kim.Kim.List");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop258;
                }
            } while (true);

            otherlv_4=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKim.g:12432:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKim.g:12432:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKim.g:12433:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKim.g:12439:1: ruleDocumentation returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_selectors_2_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12445:2: ( ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:12446:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:12446:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            // InternalKim.g:12447:3: () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:12447:3: ()
            // InternalKim.g:12448:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDocumentationAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,189,FOLLOW_156); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDocumentationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12461:3: ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )*
            loop259:
            do {
                int alt259=2;
                int LA259_0 = input.LA(1);

                if ( (LA259_0==RULE_LOWERCASE_ID||LA259_0==RULE_LOWERCASE_DASHID||LA259_0==56) ) {
                    alt259=1;
                }


                switch (alt259) {
            	case 1 :
            	    // InternalKim.g:12462:4: ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) )
            	    {
            	    // InternalKim.g:12462:4: ( (lv_selectors_2_0= ruleDocSelector ) )
            	    // InternalKim.g:12463:5: (lv_selectors_2_0= ruleDocSelector )
            	    {
            	    // InternalKim.g:12463:5: (lv_selectors_2_0= ruleDocSelector )
            	    // InternalKim.g:12464:6: lv_selectors_2_0= ruleDocSelector
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getSelectorsDocSelectorParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_selectors_2_0=ruleDocSelector();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"selectors",
            	      							lv_selectors_2_0,
            	      							"org.integratedmodelling.kim.Kim.DocSelector");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:12481:4: ( (lv_values_3_0= ruleLiteralOrID ) )
            	    // InternalKim.g:12482:5: (lv_values_3_0= ruleLiteralOrID )
            	    {
            	    // InternalKim.g:12482:5: (lv_values_3_0= ruleLiteralOrID )
            	    // InternalKim.g:12483:6: lv_values_3_0= ruleLiteralOrID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getValuesLiteralOrIDParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_values_3_0=ruleLiteralOrID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"org.integratedmodelling.kim.Kim.LiteralOrID");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop259;
                }
            } while (true);

            otherlv_4=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDocumentationAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:12509:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:12509:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:12510:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:12516:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12522:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:12523:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:12523:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:12524:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:12524:3: ()
            // InternalKim.g:12525:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,189,FOLLOW_158); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12538:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( ((LA261_0>=RULE_LOWERCASE_ID && LA261_0<=RULE_STRING)||(LA261_0>=RULE_CAMELCASE_ID && LA261_0<=RULE_LOWERCASE_DASHID)||LA261_0==RULE_INT||(LA261_0>=26 && LA261_0<=27)||LA261_0==36||LA261_0==38||(LA261_0>=48 && LA261_0<=49)||(LA261_0>=111 && LA261_0<=112)||(LA261_0>=120 && LA261_0<=121)||(LA261_0>=123 && LA261_0<=135)||LA261_0==192||(LA261_0>=225 && LA261_0<=229)||(LA261_0>=231 && LA261_0<=232)) ) {
                alt261=1;
            }
            switch (alt261) {
                case 1 :
                    // InternalKim.g:12539:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:12539:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:12540:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:12540:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:12541:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_159);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12558:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop260:
                    do {
                        int alt260=2;
                        int LA260_0 = input.LA(1);

                        if ( (LA260_0==25) ) {
                            alt260=1;
                        }


                        switch (alt260) {
                    	case 1 :
                    	    // InternalKim.g:12559:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:12559:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:12560:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12567:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:12568:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:12568:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:12569:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_159);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop260;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,119,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:12596:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:12596:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:12597:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:12603:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12609:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12610:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12610:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:12611:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:12611:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) )
            // InternalKim.g:12612:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            {
            // InternalKim.g:12612:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            // InternalKim.g:12613:5: lv_classifier_0_0= ruleClassifierRHSWithId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_79);
            lv_classifier_0_0=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,90,FOLLOW_160); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:12634:3: ( (lv_value_2_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:12635:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:12635:4: (lv_value_2_0= ruleValueWithIdAndConcept )
            // InternalKim.g:12636:5: lv_value_2_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleDocSelector"
    // InternalKim.g:12657:1: entryRuleDocSelector returns [EObject current=null] : iv_ruleDocSelector= ruleDocSelector EOF ;
    public final EObject entryRuleDocSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocSelector = null;


        try {
            // InternalKim.g:12657:52: (iv_ruleDocSelector= ruleDocSelector EOF )
            // InternalKim.g:12658:2: iv_ruleDocSelector= ruleDocSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocSelector=ruleDocSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocSelector"


    // $ANTLR start "ruleDocSelector"
    // InternalKim.g:12664:1: ruleDocSelector returns [EObject current=null] : ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) ;
    public final EObject ruleDocSelector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_definition_2_0=null;
        Token lv_initialization_3_0=null;
        Token lv_termination_4_0=null;
        Token lv_transition_5_0=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12670:2: ( ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) )
            // InternalKim.g:12671:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            {
            // InternalKim.g:12671:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            int alt263=2;
            int LA263_0 = input.LA(1);

            if ( (LA263_0==RULE_LOWERCASE_ID||LA263_0==RULE_LOWERCASE_DASHID) ) {
                alt263=1;
            }
            else if ( (LA263_0==56) ) {
                alt263=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }
            switch (alt263) {
                case 1 :
                    // InternalKim.g:12672:3: ( (lv_id_0_0= rulePropertyId ) )
                    {
                    // InternalKim.g:12672:3: ( (lv_id_0_0= rulePropertyId ) )
                    // InternalKim.g:12673:4: (lv_id_0_0= rulePropertyId )
                    {
                    // InternalKim.g:12673:4: (lv_id_0_0= rulePropertyId )
                    // InternalKim.g:12674:5: lv_id_0_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDocSelectorAccess().getIdPropertyIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDocSelectorRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.integratedmodelling.kim.Kim.PropertyId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12692:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    {
                    // InternalKim.g:12692:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    // InternalKim.g:12693:4: otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    {
                    otherlv_1=(Token)match(input,56,FOLLOW_161); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDocSelectorAccess().getOnKeyword_1_0());
                      			
                    }
                    // InternalKim.g:12697:4: ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    int alt262=4;
                    switch ( input.LA(1) ) {
                    case 57:
                        {
                        alt262=1;
                        }
                        break;
                    case 61:
                        {
                        alt262=2;
                        }
                        break;
                    case 60:
                        {
                        alt262=3;
                        }
                        break;
                    case 190:
                        {
                        alt262=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 262, 0, input);

                        throw nvae;
                    }

                    switch (alt262) {
                        case 1 :
                            // InternalKim.g:12698:5: ( (lv_definition_2_0= 'definition' ) )
                            {
                            // InternalKim.g:12698:5: ( (lv_definition_2_0= 'definition' ) )
                            // InternalKim.g:12699:6: (lv_definition_2_0= 'definition' )
                            {
                            // InternalKim.g:12699:6: (lv_definition_2_0= 'definition' )
                            // InternalKim.g:12700:7: lv_definition_2_0= 'definition'
                            {
                            lv_definition_2_0=(Token)match(input,57,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_definition_2_0, grammarAccess.getDocSelectorAccess().getDefinitionDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "definition", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12713:5: ( (lv_initialization_3_0= 'initialization' ) )
                            {
                            // InternalKim.g:12713:5: ( (lv_initialization_3_0= 'initialization' ) )
                            // InternalKim.g:12714:6: (lv_initialization_3_0= 'initialization' )
                            {
                            // InternalKim.g:12714:6: (lv_initialization_3_0= 'initialization' )
                            // InternalKim.g:12715:7: lv_initialization_3_0= 'initialization'
                            {
                            lv_initialization_3_0=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_3_0, grammarAccess.getDocSelectorAccess().getInitializationInitializationKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:12728:5: ( (lv_termination_4_0= 'termination' ) )
                            {
                            // InternalKim.g:12728:5: ( (lv_termination_4_0= 'termination' ) )
                            // InternalKim.g:12729:6: (lv_termination_4_0= 'termination' )
                            {
                            // InternalKim.g:12729:6: (lv_termination_4_0= 'termination' )
                            // InternalKim.g:12730:7: lv_termination_4_0= 'termination'
                            {
                            lv_termination_4_0=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_4_0, grammarAccess.getDocSelectorAccess().getTerminationTerminationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:12743:5: ( (lv_transition_5_0= 'transition' ) )
                            {
                            // InternalKim.g:12743:5: ( (lv_transition_5_0= 'transition' ) )
                            // InternalKim.g:12744:6: (lv_transition_5_0= 'transition' )
                            {
                            // InternalKim.g:12744:6: (lv_transition_5_0= 'transition' )
                            // InternalKim.g:12745:7: lv_transition_5_0= 'transition'
                            {
                            lv_transition_5_0=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_transition_5_0, grammarAccess.getDocSelectorAccess().getTransitionTransitionKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "transition", true, "transition");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocSelector"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:12763:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:12763:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:12764:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:12770:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12776:2: ( ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12777:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12777:2: ( ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) ) )
            // InternalKim.g:12778:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            {
            // InternalKim.g:12778:3: ( ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:12779:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) )
            {
            // InternalKim.g:12779:4: ( (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID ) )
            // InternalKim.g:12780:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:12780:5: (lv_name_0_1= rulePathName | lv_name_0_2= RULE_LOWERCASE_ID )
            int alt264=2;
            int LA264_0 = input.LA(1);

            if ( (LA264_0==RULE_LOWERCASE_ID) ) {
                int LA264_1 = input.LA(2);

                if ( (synpred461_InternalKim()) ) {
                    alt264=1;
                }
                else if ( (true) ) {
                    alt264=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 264, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA264_0==RULE_LOWERCASE_DASHID) ) {
                alt264=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }
            switch (alt264) {
                case 1 :
                    // InternalKim.g:12781:6: lv_name_0_1= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_162);
                    lv_name_0_1=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:12797:6: lv_name_0_2= RULE_LOWERCASE_ID
                    {
                    lv_name_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_162); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_2, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:12814:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt265=2;
            int LA265_0 = input.LA(1);

            if ( (LA265_0==191) ) {
                alt265=1;
            }
            else if ( (LA265_0==192) ) {
                alt265=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;
            }
            switch (alt265) {
                case 1 :
                    // InternalKim.g:12815:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:12815:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:12816:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:12816:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:12817:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,191,FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12830:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,192,FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:12835:3: ( (lv_value_3_0= ruleValueWithIdAndConcept ) )
            // InternalKim.g:12836:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            {
            // InternalKim.g:12836:4: (lv_value_3_0= ruleValueWithIdAndConcept )
            // InternalKim.g:12837:5: lv_value_3_0= ruleValueWithIdAndConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueWithIdAndConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:12858:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:12858:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:12859:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:12865:1: ruleParameterList returns [EObject current=null] : ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_pairs_0_0 = null;

        EObject lv_pairs_2_0 = null;

        EObject lv_singleValue_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12871:2: ( ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) ) )
            // InternalKim.g:12872:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) )
            {
            // InternalKim.g:12872:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) )
            int alt267=2;
            alt267 = dfa267.predict(input);
            switch (alt267) {
                case 1 :
                    // InternalKim.g:12873:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:12873:3: ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:12874:4: ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:12874:4: ( (lv_pairs_0_0= ruleKeyValuePair ) )
                    // InternalKim.g:12875:5: (lv_pairs_0_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:12875:5: (lv_pairs_0_0= ruleKeyValuePair )
                    // InternalKim.g:12876:6: lv_pairs_0_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_34);
                    lv_pairs_0_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_0_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12893:4: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )*
                    loop266:
                    do {
                        int alt266=2;
                        int LA266_0 = input.LA(1);

                        if ( (LA266_0==25) ) {
                            alt266=1;
                        }


                        switch (alt266) {
                    	case 1 :
                    	    // InternalKim.g:12894:5: ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:12894:5: ( ( ',' )=>otherlv_1= ',' )
                    	    // InternalKim.g:12895:6: ( ',' )=>otherlv_1= ','
                    	    {
                    	    otherlv_1=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_1, grammarAccess.getParameterListAccess().getCommaKeyword_0_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12901:5: ( (lv_pairs_2_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:12902:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:12902:6: (lv_pairs_2_0= ruleKeyValuePair )
                    	    // InternalKim.g:12903:7: lv_pairs_2_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_0_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_34);
                    	    lv_pairs_2_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_2_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop266;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12923:3: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    {
                    // InternalKim.g:12923:3: ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) )
                    // InternalKim.g:12924:4: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    {
                    // InternalKim.g:12924:4: (lv_singleValue_3_0= ruleValueWithIdAndConcept )
                    // InternalKim.g:12925:5: lv_singleValue_3_0= ruleValueWithIdAndConcept
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueWithIdAndConceptParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_singleValue_3_0=ruleValueWithIdAndConcept();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterListRule());
                      					}
                      					set(
                      						current,
                      						"singleValue",
                      						lv_singleValue_3_0,
                      						"org.integratedmodelling.kim.Kim.ValueWithIdAndConcept");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithIdAndConcept"
    // InternalKim.g:12946:1: entryRuleValueWithIdAndConcept returns [EObject current=null] : iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF ;
    public final EObject entryRuleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithIdAndConcept = null;


        try {
            // InternalKim.g:12946:62: (iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF )
            // InternalKim.g:12947:2: iv_ruleValueWithIdAndConcept= ruleValueWithIdAndConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithIdAndConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithIdAndConcept=ruleValueWithIdAndConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithIdAndConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithIdAndConcept"


    // $ANTLR start "ruleValueWithIdAndConcept"
    // InternalKim.g:12953:1: ruleValueWithIdAndConcept returns [EObject current=null] : ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithIdAndConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_3_0=null;
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        Token lv_null_8_0=null;
        EObject lv_concept_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_literal_2_0 = null;

        AntlrDatatypeRuleToken lv_id_4_1 = null;

        EObject lv_list_5_0 = null;

        EObject lv_table_6_0 = null;

        EObject lv_map_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12959:2: ( ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) ) )
            // InternalKim.g:12960:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )
            {
            // InternalKim.g:12960:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )
            int alt269=9;
            alt269 = dfa269.predict(input);
            switch (alt269) {
                case 1 :
                    // InternalKim.g:12961:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:12961:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12962:4: (lv_concept_0_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12962:4: (lv_concept_0_0= ruleConceptDeclaration )
                    // InternalKim.g:12963:5: lv_concept_0_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_0_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_0_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12981:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:12981:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:12982:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:12982:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:12983:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13001:3: ( (lv_literal_2_0= ruleLiteral ) )
                    {
                    // InternalKim.g:13001:3: ( (lv_literal_2_0= ruleLiteral ) )
                    // InternalKim.g:13002:4: (lv_literal_2_0= ruleLiteral )
                    {
                    // InternalKim.g:13002:4: (lv_literal_2_0= ruleLiteral )
                    // InternalKim.g:13003:5: lv_literal_2_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_2_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_2_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13021:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:13021:3: ( (lv_expr_3_0= RULE_EXPR ) )
                    // InternalKim.g:13022:4: (lv_expr_3_0= RULE_EXPR )
                    {
                    // InternalKim.g:13022:4: (lv_expr_3_0= RULE_EXPR )
                    // InternalKim.g:13023:5: lv_expr_3_0= RULE_EXPR
                    {
                    lv_expr_3_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_3_0, grammarAccess.getValueWithIdAndConceptAccess().getExprEXPRTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_3_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13040:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:13040:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:13041:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:13041:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:13042:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:13042:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
                    int alt268=4;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        int LA268_1 = input.LA(2);

                        if ( (synpred470_InternalKim()) ) {
                            alt268=1;
                        }
                        else if ( (synpred471_InternalKim()) ) {
                            alt268=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 268, 1, input);

                            throw nvae;
                        }
                        }
                        break;
                    case RULE_LOWERCASE_DASHID:
                        {
                        alt268=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt268=3;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt268=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 268, 0, input);

                        throw nvae;
                    }

                    switch (alt268) {
                        case 1 :
                            // InternalKim.g:13043:6: lv_id_4_1= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_4_1=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_4_1,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13059:6: lv_id_4_2= RULE_LOWERCASE_ID
                            {
                            lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_2, grammarAccess.getValueWithIdAndConceptAccess().getIdLOWERCASE_IDTerminalRuleCall_4_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:13074:6: lv_id_4_3= RULE_UPPERCASE_ID
                            {
                            lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_3, grammarAccess.getValueWithIdAndConceptAccess().getIdUPPERCASE_IDTerminalRuleCall_4_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_3,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:13089:6: lv_id_4_4= RULE_CAMELCASE_ID
                            {
                            lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_4_4, grammarAccess.getValueWithIdAndConceptAccess().getIdCAMELCASE_IDTerminalRuleCall_4_0_3());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_4_4,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13107:3: ( (lv_list_5_0= ruleList ) )
                    {
                    // InternalKim.g:13107:3: ( (lv_list_5_0= ruleList ) )
                    // InternalKim.g:13108:4: (lv_list_5_0= ruleList )
                    {
                    // InternalKim.g:13108:4: (lv_list_5_0= ruleList )
                    // InternalKim.g:13109:5: lv_list_5_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_5_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_5_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:13127:3: ( (lv_table_6_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:13127:3: ( (lv_table_6_0= ruleLookupTable ) )
                    // InternalKim.g:13128:4: (lv_table_6_0= ruleLookupTable )
                    {
                    // InternalKim.g:13128:4: (lv_table_6_0= ruleLookupTable )
                    // InternalKim.g:13129:5: lv_table_6_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getTableLookupTableParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_6_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_6_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:13147:3: ( (lv_map_7_0= ruleMap ) )
                    {
                    // InternalKim.g:13147:3: ( (lv_map_7_0= ruleMap ) )
                    // InternalKim.g:13148:4: (lv_map_7_0= ruleMap )
                    {
                    // InternalKim.g:13148:4: (lv_map_7_0= ruleMap )
                    // InternalKim.g:13149:5: lv_map_7_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getMapMapParserRuleCall_7_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_7_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_7_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:13167:3: ( (lv_null_8_0= 'unknown' ) )
                    {
                    // InternalKim.g:13167:3: ( (lv_null_8_0= 'unknown' ) )
                    // InternalKim.g:13168:4: (lv_null_8_0= 'unknown' )
                    {
                    // InternalKim.g:13168:4: (lv_null_8_0= 'unknown' )
                    // InternalKim.g:13169:5: lv_null_8_0= 'unknown'
                    {
                    lv_null_8_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_8_0, grammarAccess.getValueWithIdAndConceptAccess().getNullUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithIdAndConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithIdAndConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:13185:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:13185:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:13186:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:13192:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_4_0 = null;

        EObject lv_table_5_0 = null;

        EObject lv_map_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13198:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:13199:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:13199:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt271=8;
            alt271 = dfa271.predict(input);
            switch (alt271) {
                case 1 :
                    // InternalKim.g:13200:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:13200:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:13201:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:13201:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:13202:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13220:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:13220:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:13221:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:13221:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:13222:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13240:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:13240:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:13241:4: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:13241:4: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:13242:5: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13259:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:13259:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:13260:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:13260:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:13261:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:13261:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    int alt270=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt270=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt270=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt270=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 270, 0, input);

                        throw nvae;
                    }

                    switch (alt270) {
                        case 1 :
                            // InternalKim.g:13262:6: lv_id_3_1= RULE_LOWERCASE_ID
                            {
                            lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13277:6: lv_id_3_2= RULE_UPPERCASE_ID
                            {
                            lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:13292:6: lv_id_3_3= RULE_CAMELCASE_ID
                            {
                            lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13310:3: ( (lv_list_4_0= ruleList ) )
                    {
                    // InternalKim.g:13310:3: ( (lv_list_4_0= ruleList ) )
                    // InternalKim.g:13311:4: (lv_list_4_0= ruleList )
                    {
                    // InternalKim.g:13311:4: (lv_list_4_0= ruleList )
                    // InternalKim.g:13312:5: lv_list_4_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_4_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_4_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13330:3: ( (lv_table_5_0= ruleLookupTable ) )
                    {
                    // InternalKim.g:13330:3: ( (lv_table_5_0= ruleLookupTable ) )
                    // InternalKim.g:13331:4: (lv_table_5_0= ruleLookupTable )
                    {
                    // InternalKim.g:13331:4: (lv_table_5_0= ruleLookupTable )
                    // InternalKim.g:13332:5: lv_table_5_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getTableLookupTableParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_5_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"table",
                      						lv_table_5_0,
                      						"org.integratedmodelling.kim.Kim.LookupTable");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:13350:3: ( (lv_map_6_0= ruleMap ) )
                    {
                    // InternalKim.g:13350:3: ( (lv_map_6_0= ruleMap ) )
                    // InternalKim.g:13351:4: (lv_map_6_0= ruleMap )
                    {
                    // InternalKim.g:13351:4: (lv_map_6_0= ruleMap )
                    // InternalKim.g:13352:5: lv_map_6_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_6_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_6_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_6_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:13370:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:13370:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:13371:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:13371:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:13372:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,49,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getValueAccess().getNullUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:13388:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:13388:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:13389:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:13395:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13401:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:13402:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:13402:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:13403:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:13403:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:13404:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:13404:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:13405:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_40);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,36,FOLLOW_152); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:13426:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( ((LA272_0>=RULE_UPPERCASE_ID && LA272_0<=RULE_STRING)||(LA272_0>=RULE_EXPR && LA272_0<=RULE_LOWERCASE_DASHID)||LA272_0==RULE_INT||(LA272_0>=26 && LA272_0<=27)||LA272_0==36||(LA272_0>=49 && LA272_0<=50)||(LA272_0>=111 && LA272_0<=112)||(LA272_0>=120 && LA272_0<=121)||(LA272_0>=123 && LA272_0<=135)||LA272_0==189||(LA272_0>=231 && LA272_0<=232)) ) {
                alt272=1;
            }
            switch (alt272) {
                case 1 :
                    // InternalKim.g:13427:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:13427:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:13428:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_111);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:13453:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:13453:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:13454:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:13460:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:13466:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:13467:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:13467:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt273=2;
            int LA273_0 = input.LA(1);

            if ( (LA273_0==193) ) {
                alt273=1;
            }
            else if ( (LA273_0==81||(LA273_0>=142 && LA273_0<=143)||LA273_0==164||(LA273_0>=176 && LA273_0<=179)||(LA273_0>=194 && LA273_0<=222)) ) {
                alt273=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 273, 0, input);

                throw nvae;
            }
            switch (alt273) {
                case 1 :
                    // InternalKim.g:13468:3: kw= 'quality'
                    {
                    kw=(Token)match(input,193,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13474:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:13488:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:13488:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:13489:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:13495:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_7 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_8 = null;

        AntlrDatatypeRuleToken this_TRAIT_9 = null;



        	enterRule();

        try {
            // InternalKim.g:13501:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT ) )
            // InternalKim.g:13502:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            {
            // InternalKim.g:13502:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'bond' | kw= 'extent' | this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_8= ruleAGENT_TYPE | this_TRAIT_9= ruleTRAIT )
            int alt274=10;
            switch ( input.LA(1) ) {
            case 194:
                {
                alt274=1;
                }
                break;
            case 195:
                {
                alt274=2;
                }
                break;
            case 196:
                {
                alt274=3;
                }
                break;
            case 143:
                {
                alt274=4;
                }
                break;
            case 197:
                {
                alt274=5;
                }
                break;
            case 179:
                {
                alt274=6;
                }
                break;
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
                {
                alt274=7;
                }
                break;
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
            case 219:
                {
                alt274=8;
                }
                break;
            case 142:
            case 220:
            case 221:
            case 222:
                {
                alt274=9;
                }
                break;
            case 81:
            case 164:
            case 176:
            case 177:
            case 178:
            case 198:
                {
                alt274=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 274, 0, input);

                throw nvae;
            }

            switch (alt274) {
                case 1 :
                    // InternalKim.g:13503:3: kw= 'class'
                    {
                    kw=(Token)match(input,194,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13509:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13515:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13521:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,143,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13527:3: kw= 'bond'
                    {
                    kw=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getBondKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13533:3: kw= 'extent'
                    {
                    kw=(Token)match(input,179,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13539:3: this_EXTENSIVE_PROPERTY_6= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_6=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13550:3: this_INTENSIVE_PROPERTY_7= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_7=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13561:3: this_AGENT_TYPE_8= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_8=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13572:3: this_TRAIT_9= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_9());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_9=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_9);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:13586:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:13586:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:13587:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:13593:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13599:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:13600:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:13600:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt275=6;
            switch ( input.LA(1) ) {
            case 198:
                {
                alt275=1;
                }
                break;
            case 177:
                {
                alt275=2;
                }
                break;
            case 176:
                {
                alt275=3;
                }
                break;
            case 164:
                {
                alt275=4;
                }
                break;
            case 178:
                {
                alt275=5;
                }
                break;
            case 81:
                {
                alt275=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;
            }

            switch (alt275) {
                case 1 :
                    // InternalKim.g:13601:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,198,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13607:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,177,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13613:3: kw= 'identity'
                    {
                    kw=(Token)match(input,176,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13619:3: kw= 'role'
                    {
                    kw=(Token)match(input,164,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13625:3: kw= 'realm'
                    {
                    kw=(Token)match(input,178,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13631:3: kw= 'domain'
                    {
                    kw=(Token)match(input,81,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:13640:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13640:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:13641:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:13647:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13653:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:13654:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:13654:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt276=8;
            switch ( input.LA(1) ) {
            case 199:
                {
                alt276=1;
                }
                break;
            case 200:
                {
                alt276=2;
                }
                break;
            case 201:
                {
                alt276=3;
                }
                break;
            case 202:
                {
                alt276=4;
                }
                break;
            case 203:
                {
                alt276=5;
                }
                break;
            case 204:
                {
                alt276=6;
                }
                break;
            case 205:
                {
                alt276=7;
                }
                break;
            case 206:
                {
                alt276=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 276, 0, input);

                throw nvae;
            }

            switch (alt276) {
                case 1 :
                    // InternalKim.g:13655:3: kw= 'amount'
                    {
                    kw=(Token)match(input,199,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13661:3: kw= 'length'
                    {
                    kw=(Token)match(input,200,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13667:3: kw= 'mass'
                    {
                    kw=(Token)match(input,201,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13673:3: kw= 'volume'
                    {
                    kw=(Token)match(input,202,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13679:3: kw= 'weight'
                    {
                    kw=(Token)match(input,203,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13685:3: kw= 'money'
                    {
                    kw=(Token)match(input,204,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13691:3: kw= 'duration'
                    {
                    kw=(Token)match(input,205,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13697:3: kw= 'area'
                    {
                    kw=(Token)match(input,206,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:13706:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13706:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:13707:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:13713:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13719:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:13720:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:13720:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt277=13;
            switch ( input.LA(1) ) {
            case 207:
                {
                alt277=1;
                }
                break;
            case 208:
                {
                alt277=2;
                }
                break;
            case 209:
                {
                alt277=3;
                }
                break;
            case 210:
                {
                alt277=4;
                }
                break;
            case 211:
                {
                alt277=5;
                }
                break;
            case 212:
                {
                alt277=6;
                }
                break;
            case 213:
                {
                alt277=7;
                }
                break;
            case 214:
                {
                alt277=8;
                }
                break;
            case 215:
                {
                alt277=9;
                }
                break;
            case 216:
                {
                alt277=10;
                }
                break;
            case 217:
                {
                alt277=11;
                }
                break;
            case 218:
                {
                alt277=12;
                }
                break;
            case 219:
                {
                alt277=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 277, 0, input);

                throw nvae;
            }

            switch (alt277) {
                case 1 :
                    // InternalKim.g:13721:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,207,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13727:3: kw= 'energy'
                    {
                    kw=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13733:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,209,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13739:3: kw= 'priority'
                    {
                    kw=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13745:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,211,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13751:3: kw= 'charge'
                    {
                    kw=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13757:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13763:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13769:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13775:3: kw= 'angle'
                    {
                    kw=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:13781:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,217,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:13787:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:13793:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:13802:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:13802:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:13803:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:13809:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13815:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:13816:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:13816:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt278=4;
            switch ( input.LA(1) ) {
            case 220:
                {
                alt278=1;
                }
                break;
            case 221:
                {
                alt278=2;
                }
                break;
            case 142:
                {
                alt278=3;
                }
                break;
            case 222:
                {
                alt278=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 278, 0, input);

                throw nvae;
            }

            switch (alt278) {
                case 1 :
                    // InternalKim.g:13817:3: kw= 'thing'
                    {
                    kw=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13823:3: kw= 'process'
                    {
                    kw=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13829:3: kw= 'agent'
                    {
                    kw=(Token)match(input,142,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13835:3: kw= 'event'
                    {
                    kw=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:13844:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:13844:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:13845:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:13851:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13857:2: ( (kw= 'functional' | kw= 'structural' ) )
            // InternalKim.g:13858:2: (kw= 'functional' | kw= 'structural' )
            {
            // InternalKim.g:13858:2: (kw= 'functional' | kw= 'structural' )
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==223) ) {
                alt279=1;
            }
            else if ( (LA279_0==224) ) {
                alt279=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 279, 0, input);

                throw nvae;
            }
            switch (alt279) {
                case 1 :
                    // InternalKim.g:13859:3: kw= 'functional'
                    {
                    kw=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13865:3: kw= 'structural'
                    {
                    kw=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_1());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:13874:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13878:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:13879:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:13888:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_name_19_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_by_3_0 = null;

        EObject lv_downTo_6_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;

        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;

        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13897:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:13898:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:13898:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:13899:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:13899:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13900:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13900:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:13901:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_163);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13918:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:13919:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:13919:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:13920:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());
            // InternalKim.g:13923:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:13924:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:13924:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop282:
            do {
                int alt282=7;
                alt282 = dfa282.predict(input);
                switch (alt282) {
            	case 1 :
            	    // InternalKim.g:13925:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13925:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:13926:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:13926:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:13927:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:13930:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    // InternalKim.g:13930:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13930:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    // InternalKim.g:13930:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
            	    {
            	    otherlv_2=(Token)match(input,96,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getSimpleObservableSemanticsAccess().getByKeyword_1_0_0());
            	      								
            	    }
            	    // InternalKim.g:13934:9: ( (lv_by_3_0= ruleConcept ) )
            	    // InternalKim.g:13935:10: (lv_by_3_0= ruleConcept )
            	    {
            	    // InternalKim.g:13935:10: (lv_by_3_0= ruleConcept )
            	    // InternalKim.g:13936:11: lv_by_3_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_163);
            	    lv_by_3_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_3_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:13959:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13959:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:13960:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:13960:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:13961:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:13964:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:13964:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13964:19: (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
            	    // InternalKim.g:13964:20: otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) )
            	    {
            	    otherlv_4=(Token)match(input,97,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getSimpleObservableSemanticsAccess().getDownKeyword_1_1_0());
            	      								
            	    }
            	    otherlv_5=(Token)match(input,34,FOLLOW_20); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_1_1());
            	      								
            	    }
            	    // InternalKim.g:13972:9: ( (lv_downTo_6_0= ruleConcept ) )
            	    // InternalKim.g:13973:10: (lv_downTo_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:13973:10: (lv_downTo_6_0= ruleConcept )
            	    // InternalKim.g:13974:11: lv_downTo_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToConceptParserRuleCall_1_1_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_163);
            	    lv_downTo_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"downTo",
            	      												lv_downTo_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:13997:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13997:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:13998:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:13998:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:13999:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:14002:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:14002:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14002:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    // InternalKim.g:14002:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    {
            	    otherlv_7=(Token)match(input,33,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getSimpleObservableSemanticsAccess().getAccordingKeyword_1_2_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,34,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_2_1());
            	      								
            	    }
            	    // InternalKim.g:14010:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    // InternalKim.g:14011:10: (lv_accordingTo_9_0= rulePropertyId )
            	    {
            	    // InternalKim.g:14011:10: (lv_accordingTo_9_0= rulePropertyId )
            	    // InternalKim.g:14012:11: lv_accordingTo_9_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_163);
            	    lv_accordingTo_9_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:14035:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14035:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:14036:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:14036:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:14037:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:14040:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:14040:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14040:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    int alt281=2;
            	    int LA281_0 = input.LA(1);

            	    if ( (LA281_0==48) ) {
            	        alt281=1;
            	    }
            	    else if ( (LA281_0==98) ) {
            	        alt281=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 281, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt281) {
            	        case 1 :
            	            // InternalKim.g:14040:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:14040:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:14041:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            {
            	            otherlv_10=(Token)match(input,48,FOLLOW_95); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_10, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_1_3_0_0());
            	              									
            	            }
            	            // InternalKim.g:14045:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            int alt280=2;
            	            switch ( input.LA(1) ) {
            	            case RULE_CAMELCASE_ID:
            	                {
            	                int LA280_1 = input.LA(2);

            	                if ( (synpred528_InternalKim()) ) {
            	                    alt280=1;
            	                }
            	                else if ( (true) ) {
            	                    alt280=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 280, 1, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case RULE_LOWERCASE_ID:
            	                {
            	                int LA280_2 = input.LA(2);

            	                if ( (LA280_2==90||LA280_2==92) ) {
            	                    alt280=2;
            	                }
            	                else if ( (LA280_2==EOF||LA280_2==RULE_INT||LA280_2==23||LA280_2==33||LA280_2==38||LA280_2==48||LA280_2==91||(LA280_2>=96 && LA280_2<=98)||LA280_2==101||(LA280_2>=231 && LA280_2<=232)||LA280_2==238) ) {
            	                    alt280=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 280, 2, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case EOF:
            	            case RULE_INT:
            	            case 23:
            	            case 33:
            	            case 36:
            	            case 38:
            	            case 48:
            	            case 91:
            	            case 96:
            	            case 97:
            	            case 98:
            	            case 101:
            	            case 231:
            	            case 232:
            	            case 238:
            	                {
            	                alt280=1;
            	                }
            	                break;
            	            case RULE_UPPERCASE_ID:
            	            case RULE_LOWERCASE_DASHID:
            	                {
            	                alt280=2;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 280, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt280) {
            	                case 1 :
            	                    // InternalKim.g:14046:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:14046:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    // InternalKim.g:14047:12: (lv_unit_11_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:14047:12: (lv_unit_11_0= ruleUnit )
            	                    // InternalKim.g:14048:13: lv_unit_11_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_163);
            	                    lv_unit_11_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:14066:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:14066:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    // InternalKim.g:14067:12: (lv_currency_12_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:14067:12: (lv_currency_12_0= ruleCurrency )
            	                    // InternalKim.g:14068:13: lv_currency_12_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_163);
            	                    lv_currency_12_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_12_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:14088:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:14088:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            // InternalKim.g:14089:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
            	            {
            	            otherlv_13=(Token)match(input,98,FOLLOW_164); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_1_3_1_0());
            	              									
            	            }
            	            // InternalKim.g:14093:10: ( (lv_unit_14_0= ruleUnit ) )
            	            // InternalKim.g:14094:11: (lv_unit_14_0= ruleUnit )
            	            {
            	            // InternalKim.g:14094:11: (lv_unit_14_0= ruleUnit )
            	            // InternalKim.g:14095:12: lv_unit_14_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_163);
            	            lv_unit_14_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_14_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:14119:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14119:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:14120:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalKim.g:14120:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:14121:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
            	    // InternalKim.g:14124:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    // InternalKim.g:14124:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14124:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    // InternalKim.g:14124:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:14124:20: ( (lv_from_15_0= ruleNumber ) )
            	    // InternalKim.g:14125:10: (lv_from_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:14125:10: (lv_from_15_0= ruleNumber )
            	    // InternalKim.g:14126:11: lv_from_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_from_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_16=(Token)match(input,34,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_4_1());
            	      								
            	    }
            	    // InternalKim.g:14147:9: ( (lv_to_17_0= ruleNumber ) )
            	    // InternalKim.g:14148:10: (lv_to_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:14148:10: (lv_to_17_0= ruleNumber )
            	    // InternalKim.g:14149:11: lv_to_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_163);
            	    lv_to_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:14172:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:14172:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:14173:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalKim.g:14173:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:14174:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
            	    // InternalKim.g:14177:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:14177:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:14177:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:14177:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_18=(Token)match(input,101,FOLLOW_61); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getSimpleObservableSemanticsAccess().getNamedKeyword_1_5_0());
            	      								
            	    }
            	    // InternalKim.g:14181:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:14182:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:14182:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:14183:11: lv_name_19_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_163); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_19_0, grammarAccess.getSimpleObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_19_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop282;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:14219:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:14219:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:14220:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:14226:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14232:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) )
            // InternalKim.g:14233:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            {
            // InternalKim.g:14233:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            // InternalKim.g:14234:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            {
            // InternalKim.g:14234:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:14235:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:14235:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:14236:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_165);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,101,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:14257:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:14258:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:14258:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:14259:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:14259:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            int alt283=2;
            int LA283_0 = input.LA(1);

            if ( (LA283_0==RULE_LOWERCASE_ID) ) {
                alt283=1;
            }
            else if ( (LA283_0==RULE_LOWERCASE_DASHID) ) {
                alt283=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 283, 0, input);

                throw nvae;
            }
            switch (alt283) {
                case 1 :
                    // InternalKim.g:14260:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14275:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:14296:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:14296:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:14297:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:14303:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_num_1_0 = null;

        EObject lv_unit_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14309:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) )
            // InternalKim.g:14310:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            {
            // InternalKim.g:14310:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            int alt285=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
                {
                alt285=1;
                }
                break;
            case RULE_INT:
            case 231:
            case 232:
                {
                alt285=2;
                }
                break;
            case 36:
                {
                alt285=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 285, 0, input);

                throw nvae;
            }

            switch (alt285) {
                case 1 :
                    // InternalKim.g:14311:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:14311:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:14312:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:14312:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:14313:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:14313:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    int alt284=2;
                    int LA284_0 = input.LA(1);

                    if ( (LA284_0==RULE_CAMELCASE_ID) ) {
                        alt284=1;
                    }
                    else if ( (LA284_0==RULE_LOWERCASE_ID) ) {
                        alt284=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 284, 0, input);

                        throw nvae;
                    }
                    switch (alt284) {
                        case 1 :
                            // InternalKim.g:14314:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14329:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14347:3: ( (lv_num_1_0= ruleNumber ) )
                    {
                    // InternalKim.g:14347:3: ( (lv_num_1_0= ruleNumber ) )
                    // InternalKim.g:14348:4: (lv_num_1_0= ruleNumber )
                    {
                    // InternalKim.g:14348:4: (lv_num_1_0= ruleNumber )
                    // InternalKim.g:14349:5: lv_num_1_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitElementAccess().getNumNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_1_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_1_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14367:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    {
                    // InternalKim.g:14367:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    // InternalKim.g:14368:4: otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,36,FOLLOW_166); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalKim.g:14372:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:14373:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:14373:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:14374:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_111);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,39,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:14400:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:14400:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:14401:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:14407:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:14413:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:14414:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:14414:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt286=6;
            switch ( input.LA(1) ) {
            case 225:
                {
                alt286=1;
                }
                break;
            case 226:
                {
                alt286=2;
                }
                break;
            case 192:
                {
                alt286=3;
                }
                break;
            case 227:
                {
                alt286=4;
                }
                break;
            case 228:
                {
                alt286=5;
                }
                break;
            case 229:
                {
                alt286=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 286, 0, input);

                throw nvae;
            }

            switch (alt286) {
                case 1 :
                    // InternalKim.g:14415:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:14415:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:14416:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:14416:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:14417:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,225,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14430:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:14430:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:14431:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:14431:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:14432:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,226,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14445:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:14445:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:14446:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:14446:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:14447:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14460:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:14460:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:14461:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:14461:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:14462:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,227,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14475:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:14475:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:14476:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:14476:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:14477:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,228,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14490:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:14490:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:14491:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:14491:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:14492:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,229,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:14508:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:14508:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:14509:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:14515:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14521:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:14522:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:14522:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:14523:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:14523:3: ()
            // InternalKim.g:14524:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:14533:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt287=2;
            alt287 = dfa287.predict(input);
            switch (alt287) {
                case 1 :
                    // InternalKim.g:14534:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:14534:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:14535:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_167);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:14552:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop288:
            do {
                int alt288=2;
                int LA288_0 = input.LA(1);

                if ( (LA288_0==38||LA288_0==91||LA288_0==238) ) {
                    alt288=1;
                }


                switch (alt288) {
            	case 1 :
            	    // InternalKim.g:14553:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:14553:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:14554:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:14560:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:14561:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:14561:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:14562:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_168);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:14580:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:14581:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:14581:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:14582:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_167);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop288;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:14604:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:14604:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:14605:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:14611:1: ruleCurrency returns [EObject current=null] : ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token lv_concept_3_1=null;
        AntlrDatatypeRuleToken lv_concept_3_2 = null;



        	enterRule();

        try {
            // InternalKim.g:14617:2: ( ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:14618:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:14618:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            int alt290=2;
            int LA290_0 = input.LA(1);

            if ( (LA290_0==RULE_UPPERCASE_ID) ) {
                alt290=1;
            }
            else if ( (LA290_0==RULE_LOWERCASE_ID||(LA290_0>=RULE_CAMELCASE_ID && LA290_0<=RULE_LOWERCASE_DASHID)) ) {
                alt290=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 290, 0, input);

                throw nvae;
            }
            switch (alt290) {
                case 1 :
                    // InternalKim.g:14619:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    {
                    // InternalKim.g:14619:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    // InternalKim.g:14620:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14620:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
                    // InternalKim.g:14621:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    {
                    // InternalKim.g:14621:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    // InternalKim.g:14622:6: lv_id_0_0= RULE_UPPERCASE_ID
                    {
                    lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_169); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCurrencyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }


                    }

                    // InternalKim.g:14638:4: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    // InternalKim.g:14639:5: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
                    {
                    otherlv_1=(Token)match(input,230,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_0_1_0());
                      				
                    }
                    // InternalKim.g:14643:5: ( (lv_year_2_0= RULE_INT ) )
                    // InternalKim.g:14644:6: (lv_year_2_0= RULE_INT )
                    {
                    // InternalKim.g:14644:6: (lv_year_2_0= RULE_INT )
                    // InternalKim.g:14645:7: lv_year_2_0= RULE_INT
                    {
                    lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_0_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCurrencyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"year",
                      								lv_year_2_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14664:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:14664:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    // InternalKim.g:14665:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:14665:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    // InternalKim.g:14666:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    {
                    // InternalKim.g:14666:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    int alt289=2;
                    int LA289_0 = input.LA(1);

                    if ( (LA289_0==RULE_CAMELCASE_ID) ) {
                        alt289=1;
                    }
                    else if ( (LA289_0==RULE_LOWERCASE_ID||LA289_0==RULE_LOWERCASE_DASHID) ) {
                        alt289=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 289, 0, input);

                        throw nvae;
                    }
                    switch (alt289) {
                        case 1 :
                            // InternalKim.g:14667:6: lv_concept_3_1= RULE_CAMELCASE_ID
                            {
                            lv_concept_3_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_concept_3_1, grammarAccess.getCurrencyAccess().getConceptCAMELCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getCurrencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"concept",
                              							lv_concept_3_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14682:6: lv_concept_3_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getCurrencyAccess().getConceptNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_concept_3_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getCurrencyRule());
                              						}
                              						set(
                              							current,
                              							"concept",
                              							lv_concept_3_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:14704:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:14704:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:14705:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:14711:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_decimal_3_0=null;
        Token lv_decimalPart_4_0=null;
        Token lv_exponential_5_1=null;
        Token lv_exponential_5_2=null;
        Token otherlv_6=null;
        Token lv_expNegative_7_0=null;
        Token lv_exp_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:14717:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:14718:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:14718:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            // InternalKim.g:14719:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:14719:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt291=3;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==231) ) {
                alt291=1;
            }
            else if ( (LA291_0==232) ) {
                alt291=2;
            }
            switch (alt291) {
                case 1 :
                    // InternalKim.g:14720:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,231,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14725:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:14725:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:14726:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:14726:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:14727:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,232,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14740:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:14741:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:14745:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:14746:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_170); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:14762:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==92) && (synpred550_InternalKim())) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalKim.g:14763:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14776:4: ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    // InternalKim.g:14777:5: ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) )
                    {
                    // InternalKim.g:14777:5: ( (lv_decimal_3_0= '.' ) )
                    // InternalKim.g:14778:6: (lv_decimal_3_0= '.' )
                    {
                    // InternalKim.g:14778:6: (lv_decimal_3_0= '.' )
                    // InternalKim.g:14779:7: lv_decimal_3_0= '.'
                    {
                    lv_decimal_3_0=(Token)match(input,92,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_3_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:14791:5: ( (lv_decimalPart_4_0= RULE_INT ) )
                    // InternalKim.g:14792:6: (lv_decimalPart_4_0= RULE_INT )
                    {
                    // InternalKim.g:14792:6: (lv_decimalPart_4_0= RULE_INT )
                    // InternalKim.g:14793:7: lv_decimalPart_4_0= RULE_INT
                    {
                    lv_decimalPart_4_0=(Token)match(input,RULE_INT,FOLLOW_171); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_4_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_2_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_4_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14811:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            int alt295=2;
            int LA295_0 = input.LA(1);

            if ( (LA295_0==233) && (synpred554_InternalKim())) {
                alt295=1;
            }
            else if ( (LA295_0==234) && (synpred554_InternalKim())) {
                alt295=1;
            }
            switch (alt295) {
                case 1 :
                    // InternalKim.g:14812:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14838:4: ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    // InternalKim.g:14839:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) )
                    {
                    // InternalKim.g:14839:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) )
                    // InternalKim.g:14840:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    {
                    // InternalKim.g:14840:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    // InternalKim.g:14841:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    {
                    // InternalKim.g:14841:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    int alt293=2;
                    int LA293_0 = input.LA(1);

                    if ( (LA293_0==233) ) {
                        alt293=1;
                    }
                    else if ( (LA293_0==234) ) {
                        alt293=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 293, 0, input);

                        throw nvae;
                    }
                    switch (alt293) {
                        case 1 :
                            // InternalKim.g:14842:8: lv_exponential_5_1= 'e'
                            {
                            lv_exponential_5_1=(Token)match(input,233,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_1, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14853:8: lv_exponential_5_2= 'E'
                            {
                            lv_exponential_5_2=(Token)match(input,234,FOLLOW_38); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_2, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:14866:5: (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )?
                    int alt294=3;
                    int LA294_0 = input.LA(1);

                    if ( (LA294_0==231) ) {
                        alt294=1;
                    }
                    else if ( (LA294_0==232) ) {
                        alt294=2;
                    }
                    switch (alt294) {
                        case 1 :
                            // InternalKim.g:14867:6: otherlv_6= '+'
                            {
                            otherlv_6=(Token)match(input,231,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getNumberAccess().getPlusSignKeyword_3_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14872:6: ( (lv_expNegative_7_0= '-' ) )
                            {
                            // InternalKim.g:14872:6: ( (lv_expNegative_7_0= '-' ) )
                            // InternalKim.g:14873:7: (lv_expNegative_7_0= '-' )
                            {
                            // InternalKim.g:14873:7: (lv_expNegative_7_0= '-' )
                            // InternalKim.g:14874:8: lv_expNegative_7_0= '-'
                            {
                            lv_expNegative_7_0=(Token)match(input,232,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_7_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_3_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:14887:5: ( (lv_exp_8_0= RULE_INT ) )
                    // InternalKim.g:14888:6: (lv_exp_8_0= RULE_INT )
                    {
                    // InternalKim.g:14888:6: (lv_exp_8_0= RULE_INT )
                    // InternalKim.g:14889:7: lv_exp_8_0= RULE_INT
                    {
                    lv_exp_8_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_8_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_3_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_8_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:14911:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:14911:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:14912:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:14918:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_LOWERCASE_DASHID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;


        	enterRule();

        try {
            // InternalKim.g:14924:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:14925:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:14925:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:14926:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:14926:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID )
            int alt296=2;
            int LA296_0 = input.LA(1);

            if ( (LA296_0==RULE_LOWERCASE_ID) ) {
                alt296=1;
            }
            else if ( (LA296_0==RULE_LOWERCASE_DASHID) ) {
                alt296=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 296, 0, input);

                throw nvae;
            }
            switch (alt296) {
                case 1 :
                    // InternalKim.g:14927:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14935:4: this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_1=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_172); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_1, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14943:3: (kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )*
            loop298:
            do {
                int alt298=2;
                int LA298_0 = input.LA(1);

                if ( (LA298_0==92) ) {
                    alt298=1;
                }


                switch (alt298) {
            	case 1 :
            	    // InternalKim.g:14944:4: kw= '.' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,92,FOLLOW_80); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:14949:4: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            	    int alt297=2;
            	    int LA297_0 = input.LA(1);

            	    if ( (LA297_0==RULE_LOWERCASE_ID) ) {
            	        alt297=1;
            	    }
            	    else if ( (LA297_0==RULE_LOWERCASE_DASHID) ) {
            	        alt297=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 297, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt297) {
            	        case 1 :
            	            // InternalKim.g:14950:5: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_172); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_3);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:14958:5: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_172); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getPathNameAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop298;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:14971:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:14971:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:14972:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:14978:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token this_LOWERCASE_DASHID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_4=null;
        Token this_LOWERCASE_DASHID_5=null;


        	enterRule();

        try {
            // InternalKim.g:14984:2: ( ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* ) )
            // InternalKim.g:14985:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* )
            {
            // InternalKim.g:14985:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )* )
            // InternalKim.g:14986:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID ) ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )*
            {
            // InternalKim.g:14986:3: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID )
            int alt299=2;
            int LA299_0 = input.LA(1);

            if ( (LA299_0==RULE_LOWERCASE_ID) ) {
                alt299=1;
            }
            else if ( (LA299_0==RULE_LOWERCASE_DASHID) ) {
                alt299=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 299, 0, input);

                throw nvae;
            }
            switch (alt299) {
                case 1 :
                    // InternalKim.g:14987:4: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14995:4: this_LOWERCASE_DASHID_1= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_1=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_173); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_1, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15003:3: ( (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID ) )*
            loop302:
            do {
                int alt302=2;
                int LA302_0 = input.LA(1);

                if ( ((LA302_0>=91 && LA302_0<=92)) ) {
                    alt302=1;
                }


                switch (alt302) {
            	case 1 :
            	    // InternalKim.g:15004:4: (kw= '.' | kw= '/' ) (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            	    {
            	    // InternalKim.g:15004:4: (kw= '.' | kw= '/' )
            	    int alt300=2;
            	    int LA300_0 = input.LA(1);

            	    if ( (LA300_0==92) ) {
            	        alt300=1;
            	    }
            	    else if ( (LA300_0==91) ) {
            	        alt300=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 300, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt300) {
            	        case 1 :
            	            // InternalKim.g:15005:5: kw= '.'
            	            {
            	            kw=(Token)match(input,92,FOLLOW_80); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15011:5: kw= '/'
            	            {
            	            kw=(Token)match(input,91,FOLLOW_80); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    // InternalKim.g:15017:4: (this_LOWERCASE_ID_4= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID )
            	    int alt301=2;
            	    int LA301_0 = input.LA(1);

            	    if ( (LA301_0==RULE_LOWERCASE_ID) ) {
            	        alt301=1;
            	    }
            	    else if ( (LA301_0==RULE_LOWERCASE_DASHID) ) {
            	        alt301=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 301, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt301) {
            	        case 1 :
            	            // InternalKim.g:15018:5: this_LOWERCASE_ID_4= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_4=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_173); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_4, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:15026:5: this_LOWERCASE_DASHID_5= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_5=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_173); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_5, grammarAccess.getPathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop302;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:15039:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:15039:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:15040:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:15046:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15052:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:15053:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:15053:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:15054:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_79);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,90,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:15080:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:15080:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:15081:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:15087:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:15093:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:15094:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:15094:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:15095:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:15095:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt303=2;
            int LA303_0 = input.LA(1);

            if ( (LA303_0==RULE_LOWERCASE_ID) ) {
                int LA303_1 = input.LA(2);

                if ( (synpred565_InternalKim()) ) {
                    alt303=1;
                }
                else if ( (true) ) {
                    alt303=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 303, 1, input);

                    throw nvae;
                }
            }
            else if ( (LA303_0==RULE_LOWERCASE_DASHID) ) {
                alt303=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 303, 0, input);

                throw nvae;
            }
            switch (alt303) {
                case 1 :
                    // InternalKim.g:15096:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_79);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15107:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_79); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,90,FOLLOW_80); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:15120:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            int alt304=2;
            int LA304_0 = input.LA(1);

            if ( (LA304_0==RULE_LOWERCASE_ID) ) {
                alt304=1;
            }
            else if ( (LA304_0==RULE_LOWERCASE_DASHID) ) {
                alt304=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 304, 0, input);

                throw nvae;
            }
            switch (alt304) {
                case 1 :
                    // InternalKim.g:15121:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15129:4: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:15141:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:15141:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:15142:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:15148:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:15154:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:15155:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:15155:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:15156:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_174); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:15163:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==92) ) {
                alt306=1;
            }
            switch (alt306) {
                case 1 :
                    // InternalKim.g:15164:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,92,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_174); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:15176:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt305=2;
                    int LA305_0 = input.LA(1);

                    if ( (LA305_0==92) ) {
                        alt305=1;
                    }
                    switch (alt305) {
                        case 1 :
                            // InternalKim.g:15177:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,92,FOLLOW_74); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_175); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:15191:3: (kw= '-' )?
            int alt307=2;
            int LA307_0 = input.LA(1);

            if ( (LA307_0==232) ) {
                alt307=1;
            }
            switch (alt307) {
                case 1 :
                    // InternalKim.g:15192:4: kw= '-'
                    {
                    kw=(Token)match(input,232,FOLLOW_176); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:15198:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt308=3;
            int LA308_0 = input.LA(1);

            if ( (LA308_0==RULE_LOWERCASE_ID) ) {
                int LA308_1 = input.LA(2);

                if ( (synpred570_InternalKim()) ) {
                    alt308=1;
                }
            }
            else if ( (LA308_0==RULE_UPPERCASE_ID) ) {
                alt308=2;
            }
            switch (alt308) {
                case 1 :
                    // InternalKim.g:15199:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:15207:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleDataType"
    // InternalKim.g:15219:1: ruleDataType returns [Enumerator current=null] : ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) ) ;
    public final Enumerator ruleDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;


        	enterRule();

        try {
            // InternalKim.g:15225:2: ( ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) ) )
            // InternalKim.g:15226:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) )
            {
            // InternalKim.g:15226:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'boolean' ) | (enumLiteral_4= 'date' ) )
            int alt309=5;
            switch ( input.LA(1) ) {
            case 74:
                {
                alt309=1;
                }
                break;
            case 235:
                {
                alt309=2;
                }
                break;
            case 236:
                {
                alt309=3;
                }
                break;
            case 75:
                {
                alt309=4;
                }
                break;
            case 237:
                {
                alt309=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 309, 0, input);

                throw nvae;
            }

            switch (alt309) {
                case 1 :
                    // InternalKim.g:15227:3: (enumLiteral_0= 'text' )
                    {
                    // InternalKim.g:15227:3: (enumLiteral_0= 'text' )
                    // InternalKim.g:15228:4: enumLiteral_0= 'text'
                    {
                    enumLiteral_0=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15235:3: (enumLiteral_1= 'integer' )
                    {
                    // InternalKim.g:15235:3: (enumLiteral_1= 'integer' )
                    // InternalKim.g:15236:4: enumLiteral_1= 'integer'
                    {
                    enumLiteral_1=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15243:3: (enumLiteral_2= 'float' )
                    {
                    // InternalKim.g:15243:3: (enumLiteral_2= 'float' )
                    // InternalKim.g:15244:4: enumLiteral_2= 'float'
                    {
                    enumLiteral_2=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:15251:3: (enumLiteral_3= 'boolean' )
                    {
                    // InternalKim.g:15251:3: (enumLiteral_3= 'boolean' )
                    // InternalKim.g:15252:4: enumLiteral_3= 'boolean'
                    {
                    enumLiteral_3=(Token)match(input,75,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:15259:3: (enumLiteral_4= 'date' )
                    {
                    // InternalKim.g:15259:3: (enumLiteral_4= 'date' )
                    // InternalKim.g:15260:4: enumLiteral_4= 'date'
                    {
                    enumLiteral_4=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:15270:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:15276:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:15277:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:15277:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt310=3;
            switch ( input.LA(1) ) {
            case 91:
                {
                alt310=1;
                }
                break;
            case 238:
                {
                alt310=2;
                }
                break;
            case 38:
                {
                alt310=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 310, 0, input);

                throw nvae;
            }

            switch (alt310) {
                case 1 :
                    // InternalKim.g:15278:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:15278:3: (enumLiteral_0= '/' )
                    // InternalKim.g:15279:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,91,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:15286:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:15286:3: (enumLiteral_1= '^' )
                    // InternalKim.g:15287:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,238,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:15294:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:15294:3: (enumLiteral_2= '*' )
                    // InternalKim.g:15295:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,38,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred7_InternalKim
    public final void synpred7_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_defineStatement_6_0 = null;


        // InternalKim.g:245:3: ( ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) )
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        {
        // InternalKim.g:245:3: ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' )
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';'
        {
        // InternalKim.g:246:4: ( (lv_defineStatement_6_0= ruleDefineStatement ) )
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        {
        // InternalKim.g:247:5: (lv_defineStatement_6_0= ruleDefineStatement )
        // InternalKim.g:248:6: lv_defineStatement_6_0= ruleDefineStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getDefineStatementDefineStatementParserRuleCall_3_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_defineStatement_6_0=ruleDefineStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_7=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred7_InternalKim

    // $ANTLR start synpred9_InternalKim
    public final void synpred9_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_2_0=null;

        // InternalKim.g:351:4: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) )
        // InternalKim.g:351:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:351:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
        // InternalKim.g:352:5: {...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:352:111: ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
        // InternalKim.g:353:6: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:356:9: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
        // InternalKim.g:356:10: {...}? => ( (lv_inactive_2_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9_InternalKim", "true");
        }
        // InternalKim.g:356:19: ( (lv_inactive_2_0= 'void' ) )
        // InternalKim.g:356:20: (lv_inactive_2_0= 'void' )
        {
        // InternalKim.g:356:20: (lv_inactive_2_0= 'void' )
        // InternalKim.g:357:10: lv_inactive_2_0= 'void'
        {
        lv_inactive_2_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalKim

    // $ANTLR start synpred10_InternalKim
    public final void synpred10_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_3_0=null;

        // InternalKim.g:374:4: ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )
        // InternalKim.g:374:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:374:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        // InternalKim.g:375:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:375:111: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        // InternalKim.g:376:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:379:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        // InternalKim.g:379:10: {...}? => ( (lv_private_3_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred10_InternalKim", "true");
        }
        // InternalKim.g:379:19: ( (lv_private_3_0= 'private' ) )
        // InternalKim.g:379:20: (lv_private_3_0= 'private' )
        {
        // InternalKim.g:379:20: (lv_private_3_0= 'private' )
        // InternalKim.g:380:10: lv_private_3_0= 'private'
        {
        lv_private_3_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred10_InternalKim

    // $ANTLR start synpred14_InternalKim
    public final void synpred14_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;


        // InternalKim.g:601:5: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) )
        // InternalKim.g:601:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        {
        // InternalKim.g:601:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
        // InternalKim.g:602:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        {
        // InternalKim.g:602:6: ( (lv_urns_1_0= ruleUrn ) )
        // InternalKim.g:603:7: (lv_urns_1_0= ruleUrn )
        {
        // InternalKim.g:603:7: (lv_urns_1_0= ruleUrn )
        // InternalKim.g:604:8: lv_urns_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
          							
        }
        pushFollow(FOLLOW_34);
        lv_urns_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:621:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
        loop311:
        do {
            int alt311=2;
            int LA311_0 = input.LA(1);

            if ( (LA311_0==25) ) {
                alt311=1;
            }


            switch (alt311) {
        	case 1 :
        	    // InternalKim.g:622:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
        	    {
        	    otherlv_2=(Token)match(input,25,FOLLOW_12); if (state.failed) return ;
        	    // InternalKim.g:626:7: ( (lv_urns_3_0= ruleUrn ) )
        	    // InternalKim.g:627:8: (lv_urns_3_0= ruleUrn )
        	    {
        	    // InternalKim.g:627:8: (lv_urns_3_0= ruleUrn )
        	    // InternalKim.g:628:9: lv_urns_3_0= ruleUrn
        	    {
        	    if ( state.backtracking==0 ) {

        	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
        	      								
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_urns_3_0=ruleUrn();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop311;
            }
        } while (true);


        }


        }
    }
    // $ANTLR end synpred14_InternalKim

    // $ANTLR start synpred19_InternalKim
    public final void synpred19_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_boolean_6_1=null;
        Token lv_boolean_6_2=null;
        Token otherlv_8=null;
        EObject lv_urns_1_0 = null;

        EObject lv_urns_3_0 = null;

        EObject lv_function_4_0 = null;

        EObject lv_number_5_0 = null;

        EObject lv_concept_7_0 = null;


        // InternalKim.g:600:4: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )
        // InternalKim.g:600:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as'
        {
        // InternalKim.g:600:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )
        int alt315=5;
        alt315 = dfa315.predict(input);
        switch (alt315) {
            case 1 :
                // InternalKim.g:601:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                {
                // InternalKim.g:601:5: ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* )
                // InternalKim.g:602:6: ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                {
                // InternalKim.g:602:6: ( (lv_urns_1_0= ruleUrn ) )
                // InternalKim.g:603:7: (lv_urns_1_0= ruleUrn )
                {
                // InternalKim.g:603:7: (lv_urns_1_0= ruleUrn )
                // InternalKim.g:604:8: lv_urns_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_0_0());
                  							
                }
                pushFollow(FOLLOW_11);
                lv_urns_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:621:6: (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )*
                loop313:
                do {
                    int alt313=2;
                    int LA313_0 = input.LA(1);

                    if ( (LA313_0==25) ) {
                        alt313=1;
                    }


                    switch (alt313) {
                	case 1 :
                	    // InternalKim.g:622:7: otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) )
                	    {
                	    otherlv_2=(Token)match(input,25,FOLLOW_12); if (state.failed) return ;
                	    // InternalKim.g:626:7: ( (lv_urns_3_0= ruleUrn ) )
                	    // InternalKim.g:627:8: (lv_urns_3_0= ruleUrn )
                	    {
                	    // InternalKim.g:627:8: (lv_urns_3_0= ruleUrn )
                	    // InternalKim.g:628:9: lv_urns_3_0= ruleUrn
                	    {
                	    if ( state.backtracking==0 ) {

                	      									newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnsUrnParserRuleCall_1_0_0_1_1_0());
                	      								
                	    }
                	    pushFollow(FOLLOW_11);
                	    lv_urns_3_0=ruleUrn();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop313;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:648:5: ( (lv_function_4_0= ruleFunction ) )
                {
                // InternalKim.g:648:5: ( (lv_function_4_0= ruleFunction ) )
                // InternalKim.g:649:6: (lv_function_4_0= ruleFunction )
                {
                // InternalKim.g:649:6: (lv_function_4_0= ruleFunction )
                // InternalKim.g:650:7: lv_function_4_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_9);
                lv_function_4_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:668:5: ( (lv_number_5_0= ruleNumber ) )
                {
                // InternalKim.g:668:5: ( (lv_number_5_0= ruleNumber ) )
                // InternalKim.g:669:6: (lv_number_5_0= ruleNumber )
                {
                // InternalKim.g:669:6: (lv_number_5_0= ruleNumber )
                // InternalKim.g:670:7: lv_number_5_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_9);
                lv_number_5_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:688:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                {
                // InternalKim.g:688:5: ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) )
                // InternalKim.g:689:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                {
                // InternalKim.g:689:6: ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) )
                // InternalKim.g:690:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                {
                // InternalKim.g:690:7: (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' )
                int alt314=2;
                int LA314_0 = input.LA(1);

                if ( (LA314_0==26) ) {
                    alt314=1;
                }
                else if ( (LA314_0==27) ) {
                    alt314=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 314, 0, input);

                    throw nvae;
                }
                switch (alt314) {
                    case 1 :
                        // InternalKim.g:691:8: lv_boolean_6_1= 'true'
                        {
                        lv_boolean_6_1=(Token)match(input,26,FOLLOW_9); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:702:8: lv_boolean_6_2= 'false'
                        {
                        lv_boolean_6_2=(Token)match(input,27,FOLLOW_9); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 5 :
                // InternalKim.g:716:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                {
                // InternalKim.g:716:5: ( (lv_concept_7_0= ruleSimpleObservableSemantics ) )
                // InternalKim.g:717:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                {
                // InternalKim.g:717:6: (lv_concept_7_0= ruleSimpleObservableSemantics )
                // InternalKim.g:718:7: lv_concept_7_0= ruleSimpleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                  						
                }
                pushFollow(FOLLOW_9);
                lv_concept_7_0=ruleSimpleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_8=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred19_InternalKim

    // $ANTLR start synpred50_InternalKim
    public final void synpred50_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1489:5: ( 'to' )
        // InternalKim.g:1489:6: 'to'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred50_InternalKim

    // $ANTLR start synpred54_InternalKim
    public final void synpred54_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1447:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1447:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1447:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1448:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1448:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1449:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1449:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1450:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1467:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt331=3;
        int LA331_0 = input.LA(1);

        if ( (LA331_0==46) ) {
            alt331=1;
        }
        else if ( (LA331_0==47) ) {
            alt331=2;
        }
        switch (alt331) {
            case 1 :
                // InternalKim.g:1468:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1468:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1469:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1469:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1470:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_22); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1483:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_22); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1488:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1489:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,34,FOLLOW_38); if (state.failed) return ;

        }

        // InternalKim.g:1495:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1496:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1500:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1501:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_39);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1518:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt332=3;
        int LA332_0 = input.LA(1);

        if ( (LA332_0==46) ) {
            alt332=1;
        }
        else if ( (LA332_0==47) ) {
            alt332=2;
        }
        switch (alt332) {
            case 1 :
                // InternalKim.g:1519:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1519:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1520:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1520:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1521:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1534:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred54_InternalKim

    // $ANTLR start synpred55_InternalKim
    public final void synpred55_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1541:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1541:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1541:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1542:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1542:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1543:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred55_InternalKim

    // $ANTLR start synpred57_InternalKim
    public final void synpred57_InternalKim_fragment() throws RecognitionException {   
        Token lv_string_12_0=null;

        // InternalKim.g:1587:3: ( ( (lv_string_12_0= RULE_STRING ) ) )
        // InternalKim.g:1587:3: ( (lv_string_12_0= RULE_STRING ) )
        {
        // InternalKim.g:1587:3: ( (lv_string_12_0= RULE_STRING ) )
        // InternalKim.g:1588:4: (lv_string_12_0= RULE_STRING )
        {
        // InternalKim.g:1588:4: (lv_string_12_0= RULE_STRING )
        // InternalKim.g:1589:5: lv_string_12_0= RULE_STRING
        {
        lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred57_InternalKim

    // $ANTLR start synpred58_InternalKim
    public final void synpred58_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1606:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1606:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1606:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1607:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1607:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1608:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred58_InternalKim

    // $ANTLR start synpred61_InternalKim
    public final void synpred61_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1626:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1626:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1626:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1627:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,36,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:1631:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1632:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1632:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1633:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_26);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1650:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop333:
        do {
            int alt333=2;
            int LA333_0 = input.LA(1);

            if ( (LA333_0==25) ) {
                alt333=1;
            }


            switch (alt333) {
        	case 1 :
        	    // InternalKim.g:1651:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1651:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1652:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1658:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1659:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1659:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1660:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_26);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop333;
            }
        } while (true);

        otherlv_18=(Token)match(input,39,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred61_InternalKim

    // $ANTLR start synpred68_InternalKim
    public final void synpred68_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1847:5: ( 'to' )
        // InternalKim.g:1847:6: 'to'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred68_InternalKim

    // $ANTLR start synpred72_InternalKim
    public final void synpred72_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1805:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1805:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1805:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1806:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1806:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1807:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1807:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1808:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_37);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1825:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt335=3;
        int LA335_0 = input.LA(1);

        if ( (LA335_0==46) ) {
            alt335=1;
        }
        else if ( (LA335_0==47) ) {
            alt335=2;
        }
        switch (alt335) {
            case 1 :
                // InternalKim.g:1826:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1826:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1827:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1827:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1828:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,46,FOLLOW_22); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1841:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,47,FOLLOW_22); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1846:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1847:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,34,FOLLOW_38); if (state.failed) return ;

        }

        // InternalKim.g:1853:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1854:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1858:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1859:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_39);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1876:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt336=3;
        int LA336_0 = input.LA(1);

        if ( (LA336_0==46) ) {
            alt336=1;
        }
        else if ( (LA336_0==47) ) {
            alt336=2;
        }
        switch (alt336) {
            case 1 :
                // InternalKim.g:1877:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1877:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1878:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1878:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1879:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1892:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,47,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred72_InternalKim

    // $ANTLR start synpred73_InternalKim
    public final void synpred73_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1899:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1899:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1899:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1900:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1900:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1901:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred73_InternalKim

    // $ANTLR start synpred75_InternalKim
    public final void synpred75_InternalKim_fragment() throws RecognitionException {   
        Token lv_string_12_0=null;

        // InternalKim.g:1945:3: ( ( (lv_string_12_0= RULE_STRING ) ) )
        // InternalKim.g:1945:3: ( (lv_string_12_0= RULE_STRING ) )
        {
        // InternalKim.g:1945:3: ( (lv_string_12_0= RULE_STRING ) )
        // InternalKim.g:1946:4: (lv_string_12_0= RULE_STRING )
        {
        // InternalKim.g:1946:4: (lv_string_12_0= RULE_STRING )
        // InternalKim.g:1947:5: lv_string_12_0= RULE_STRING
        {
        lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred75_InternalKim

    // $ANTLR start synpred76_InternalKim
    public final void synpred76_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1964:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1964:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1964:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1965:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1965:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1966:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred76_InternalKim

    // $ANTLR start synpred77_InternalKim
    public final void synpred77_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;

        // InternalKim.g:1987:6: (lv_id_14_1= RULE_LOWERCASE_ID )
        // InternalKim.g:1987:6: lv_id_14_1= RULE_LOWERCASE_ID
        {
        lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred77_InternalKim

    // $ANTLR start synpred78_InternalKim
    public final void synpred78_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;
        AntlrDatatypeRuleToken lv_id_14_2 = null;


        // InternalKim.g:1984:3: ( ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) )
        // InternalKim.g:1984:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        {
        // InternalKim.g:1984:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        // InternalKim.g:1985:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        {
        // InternalKim.g:1985:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        // InternalKim.g:1986:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        {
        // InternalKim.g:1986:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        int alt337=2;
        int LA337_0 = input.LA(1);

        if ( (LA337_0==RULE_LOWERCASE_ID) ) {
            int LA337_1 = input.LA(2);

            if ( (LA337_1==90||LA337_1==92) ) {
                alt337=2;
            }
            else if ( (LA337_1==EOF) ) {
                alt337=1;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 337, 1, input);

                throw nvae;
            }
        }
        else if ( (LA337_0==RULE_LOWERCASE_DASHID) ) {
            alt337=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 337, 0, input);

            throw nvae;
        }
        switch (alt337) {
            case 1 :
                // InternalKim.g:1987:6: lv_id_14_1= RULE_LOWERCASE_ID
                {
                lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:2002:6: lv_id_14_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_14_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred78_InternalKim

    // $ANTLR start synpred94_InternalKim
    public final void synpred94_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2555:5: ( 'to' )
        // InternalKim.g:2555:6: 'to'
        {
        match(input,34,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred94_InternalKim

    // $ANTLR start synpred109_InternalKim
    public final void synpred109_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_domain_4_0 = null;


        // InternalKim.g:2854:5: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )
        // InternalKim.g:2854:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
        {
        // InternalKim.g:2854:5: ( ( ',' )=>otherlv_3= ',' )
        // InternalKim.g:2855:6: ( ',' )=>otherlv_3= ','
        {
        otherlv_3=(Token)match(input,25,FOLLOW_23); if (state.failed) return ;

        }

        // InternalKim.g:2861:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
        // InternalKim.g:2862:6: (lv_domain_4_0= ruleFunctionOrID )
        {
        // InternalKim.g:2862:6: (lv_domain_4_0= ruleFunctionOrID )
        // InternalKim.g:2863:7: lv_domain_4_0= ruleFunctionOrID
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_domain_4_0=ruleFunctionOrID();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred109_InternalKim

    // $ANTLR start synpred121_InternalKim
    public final void synpred121_InternalKim_fragment() throws RecognitionException {   
        EObject lv_parameters_19_0 = null;


        // InternalKim.g:3104:5: ( (lv_parameters_19_0= ruleList ) )
        // InternalKim.g:3104:5: (lv_parameters_19_0= ruleList )
        {
        // InternalKim.g:3104:5: (lv_parameters_19_0= ruleList )
        // InternalKim.g:3105:6: lv_parameters_19_0= ruleList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_parameters_19_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred121_InternalKim

    // $ANTLR start synpred125_InternalKim
    public final void synpred125_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:3191:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:3191:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:3191:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:3192:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:3192:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:3193:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred125_InternalKim

    // $ANTLR start synpred128_InternalKim
    public final void synpred128_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_assignments_4_0 = null;


        // InternalKim.g:3318:5: (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )
        // InternalKim.g:3318:5: otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) )
        {
        otherlv_3=(Token)match(input,25,FOLLOW_54); if (state.failed) return ;
        // InternalKim.g:3322:5: ( (lv_assignments_4_0= ruleValueAssignment ) )
        // InternalKim.g:3323:6: (lv_assignments_4_0= ruleValueAssignment )
        {
        // InternalKim.g:3323:6: (lv_assignments_4_0= ruleValueAssignment )
        // InternalKim.g:3324:7: lv_assignments_4_0= ruleValueAssignment
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_assignments_4_0=ruleValueAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred128_InternalKim

    // $ANTLR start synpred134_InternalKim
    public final void synpred134_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_assignments_11_0 = null;


        // InternalKim.g:3433:5: (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )
        // InternalKim.g:3433:5: otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) )
        {
        otherlv_10=(Token)match(input,25,FOLLOW_54); if (state.failed) return ;
        // InternalKim.g:3437:5: ( (lv_assignments_11_0= ruleValueAssignment ) )
        // InternalKim.g:3438:6: (lv_assignments_11_0= ruleValueAssignment )
        {
        // InternalKim.g:3438:6: (lv_assignments_11_0= ruleValueAssignment )
        // InternalKim.g:3439:7: lv_assignments_11_0= ruleValueAssignment
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_assignments_11_0=ruleValueAssignment();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred134_InternalKim

    // $ANTLR start synpred140_InternalKim
    public final void synpred140_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_17=null;
        EObject lv_executed_18_0 = null;


        // InternalKim.g:3548:5: (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )
        // InternalKim.g:3548:5: otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) )
        {
        otherlv_17=(Token)match(input,25,FOLLOW_17); if (state.failed) return ;
        // InternalKim.g:3552:5: ( (lv_executed_18_0= ruleValueExecution ) )
        // InternalKim.g:3553:6: (lv_executed_18_0= ruleValueExecution )
        {
        // InternalKim.g:3553:6: (lv_executed_18_0= ruleValueExecution )
        // InternalKim.g:3554:7: lv_executed_18_0= ruleValueExecution
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_executed_18_0=ruleValueExecution();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred140_InternalKim

    // $ANTLR start synpred147_InternalKim
    public final void synpred147_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3680:5: ( ( ruleValue ) )
        // InternalKim.g:3680:6: ( ruleValue )
        {
        // InternalKim.g:3680:6: ( ruleValue )
        // InternalKim.g:3681:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred147_InternalKim

    // $ANTLR start synpred151_InternalKim
    public final void synpred151_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3804:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3804:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3804:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3805:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3805:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3806:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred151_InternalKim

    // $ANTLR start synpred158_InternalKim
    public final void synpred158_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3901:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3901:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3901:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3902:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3902:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3903:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3903:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt369=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt369=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt369=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt369=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 369, 0, input);

            throw nvae;
        }

        switch (alt369) {
            case 1 :
                // InternalKim.g:3904:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3919:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3934:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred158_InternalKim

    // $ANTLR start synpred172_InternalKim
    public final void synpred172_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_2_0=null;

        // InternalKim.g:4296:4: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4296:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:4296:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
        // InternalKim.g:4297:5: {...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred172_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4297:106: ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
        // InternalKim.g:4298:6: ({...}? => ( (lv_private_2_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4301:9: ({...}? => ( (lv_private_2_0= 'private' ) ) )
        // InternalKim.g:4301:10: {...}? => ( (lv_private_2_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred172_InternalKim", "true");
        }
        // InternalKim.g:4301:19: ( (lv_private_2_0= 'private' ) )
        // InternalKim.g:4301:20: (lv_private_2_0= 'private' )
        {
        // InternalKim.g:4301:20: (lv_private_2_0= 'private' )
        // InternalKim.g:4302:10: lv_private_2_0= 'private'
        {
        lv_private_2_0=(Token)match(input,21,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred172_InternalKim

    // $ANTLR start synpred173_InternalKim
    public final void synpred173_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:4319:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4319:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4319:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:4320:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred173_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4320:106: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:4321:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4324:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:4324:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred173_InternalKim", "true");
        }
        // InternalKim.g:4324:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:4324:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:4324:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:4325:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred173_InternalKim

    // $ANTLR start synpred179_InternalKim
    public final void synpred179_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_imported_11_0 = null;

        EObject lv_imported_13_0 = null;


        // InternalKim.g:4429:4: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4429:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4429:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4430:5: {...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred179_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4430:106: ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4431:6: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4434:9: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
        // InternalKim.g:4434:10: {...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred179_InternalKim", "true");
        }
        // InternalKim.g:4434:19: (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
        // InternalKim.g:4434:20: otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
        {
        otherlv_10=(Token)match(input,29,FOLLOW_66); if (state.failed) return ;
        // InternalKim.g:4438:9: ( (lv_imported_11_0= ruleImport ) )
        // InternalKim.g:4439:10: (lv_imported_11_0= ruleImport )
        {
        // InternalKim.g:4439:10: (lv_imported_11_0= ruleImport )
        // InternalKim.g:4440:11: lv_imported_11_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_imported_11_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4457:9: ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
        loop373:
        do {
            int alt373=2;
            int LA373_0 = input.LA(1);

            if ( (LA373_0==25) ) {
                alt373=1;
            }


            switch (alt373) {
        	case 1 :
        	    // InternalKim.g:4458:10: ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4458:10: ( ( ',' )=>otherlv_12= ',' )
        	    // InternalKim.g:4459:11: ( ',' )=>otherlv_12= ','
        	    {
        	    otherlv_12=(Token)match(input,25,FOLLOW_66); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4465:10: ( (lv_imported_13_0= ruleImport ) )
        	    // InternalKim.g:4466:11: (lv_imported_13_0= ruleImport )
        	    {
        	    // InternalKim.g:4466:11: (lv_imported_13_0= ruleImport )
        	    // InternalKim.g:4467:12: lv_imported_13_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_imported_13_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop373;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred179_InternalKim

    // $ANTLR start synpred181_InternalKim
    public final void synpred181_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_owlImports_15_0 = null;

        EObject lv_owlImports_17_0 = null;


        // InternalKim.g:4491:4: ( ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4491:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4491:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4492:5: {...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred181_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4492:106: ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4493:6: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4496:9: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4496:10: {...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred181_InternalKim", "true");
        }
        // InternalKim.g:4496:19: (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4496:20: otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
        {
        otherlv_14=(Token)match(input,79,FOLLOW_68); if (state.failed) return ;
        // InternalKim.g:4500:9: ( (lv_owlImports_15_0= ruleOwlImport ) )
        // InternalKim.g:4501:10: (lv_owlImports_15_0= ruleOwlImport )
        {
        // InternalKim.g:4501:10: (lv_owlImports_15_0= ruleOwlImport )
        // InternalKim.g:4502:11: lv_owlImports_15_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_owlImports_15_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4519:9: (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
        loop374:
        do {
            int alt374=2;
            int LA374_0 = input.LA(1);

            if ( (LA374_0==25) ) {
                alt374=1;
            }


            switch (alt374) {
        	case 1 :
        	    // InternalKim.g:4520:10: otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) )
        	    {
        	    otherlv_16=(Token)match(input,25,FOLLOW_68); if (state.failed) return ;
        	    // InternalKim.g:4524:10: ( (lv_owlImports_17_0= ruleOwlImport ) )
        	    // InternalKim.g:4525:11: (lv_owlImports_17_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4525:11: (lv_owlImports_17_0= ruleOwlImport )
        	    // InternalKim.g:4526:12: lv_owlImports_17_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_owlImports_17_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop374;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred181_InternalKim

    // $ANTLR start synpred184_InternalKim
    public final void synpred184_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_coverage_19_0 = null;

        EObject lv_coverage_21_0 = null;


        // InternalKim.g:4550:4: ( ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4550:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4550:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4551:5: {...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred184_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4551:106: ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4552:6: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4555:9: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4555:10: {...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred184_InternalKim", "true");
        }
        // InternalKim.g:4555:19: (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
        // InternalKim.g:4555:20: otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
        {
        otherlv_18=(Token)match(input,80,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:4559:9: ( (lv_coverage_19_0= ruleFunction ) )
        // InternalKim.g:4560:10: (lv_coverage_19_0= ruleFunction )
        {
        // InternalKim.g:4560:10: (lv_coverage_19_0= ruleFunction )
        // InternalKim.g:4561:11: lv_coverage_19_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_coverage_19_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4578:9: ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
        loop375:
        do {
            int alt375=2;
            int LA375_0 = input.LA(1);

            if ( (LA375_0==25) ) {
                alt375=1;
            }


            switch (alt375) {
        	case 1 :
        	    // InternalKim.g:4579:10: ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4579:10: ( ( ',' )=>otherlv_20= ',' )
        	    // InternalKim.g:4580:11: ( ',' )=>otherlv_20= ','
        	    {
        	    otherlv_20=(Token)match(input,25,FOLLOW_23); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4586:10: ( (lv_coverage_21_0= ruleFunction ) )
        	    // InternalKim.g:4587:11: (lv_coverage_21_0= ruleFunction )
        	    {
        	    // InternalKim.g:4587:11: (lv_coverage_21_0= ruleFunction )
        	    // InternalKim.g:4588:12: lv_coverage_21_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_coverage_21_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop375;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred184_InternalKim

    // $ANTLR start synpred186_InternalKim
    public final void synpred186_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_rootDomain_24_0=null;
        EObject lv_domainConcept_25_0 = null;


        // InternalKim.g:4612:4: ( ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4612:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4612:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4613:5: {...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred186_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4613:106: ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4614:6: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4617:9: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4617:10: {...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred186_InternalKim", "true");
        }
        // InternalKim.g:4617:19: (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
        // InternalKim.g:4617:20: otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
        {
        otherlv_22=(Token)match(input,48,FOLLOW_69); if (state.failed) return ;
        otherlv_23=(Token)match(input,81,FOLLOW_70); if (state.failed) return ;
        // InternalKim.g:4625:9: ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
        int alt376=2;
        int LA376_0 = input.LA(1);

        if ( (LA376_0==82) ) {
            alt376=1;
        }
        else if ( (LA376_0==RULE_LOWERCASE_ID||(LA376_0>=RULE_CAMELCASE_ID && LA376_0<=RULE_LOWERCASE_DASHID)||LA376_0==36||(LA376_0>=111 && LA376_0<=112)||(LA376_0>=120 && LA376_0<=121)||(LA376_0>=123 && LA376_0<=135)) ) {
            alt376=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 376, 0, input);

            throw nvae;
        }
        switch (alt376) {
            case 1 :
                // InternalKim.g:4626:10: ( (lv_rootDomain_24_0= 'root' ) )
                {
                // InternalKim.g:4626:10: ( (lv_rootDomain_24_0= 'root' ) )
                // InternalKim.g:4627:11: (lv_rootDomain_24_0= 'root' )
                {
                // InternalKim.g:4627:11: (lv_rootDomain_24_0= 'root' )
                // InternalKim.g:4628:12: lv_rootDomain_24_0= 'root'
                {
                lv_rootDomain_24_0=(Token)match(input,82,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4641:10: ( (lv_domainConcept_25_0= ruleConcept ) )
                {
                // InternalKim.g:4641:10: ( (lv_domainConcept_25_0= ruleConcept ) )
                // InternalKim.g:4642:11: (lv_domainConcept_25_0= ruleConcept )
                {
                // InternalKim.g:4642:11: (lv_domainConcept_25_0= ruleConcept )
                // InternalKim.g:4643:12: lv_domainConcept_25_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_25_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred186_InternalKim

    // $ANTLR start synpred188_InternalKim
    public final void synpred188_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_28_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_30_0 = null;


        // InternalKim.g:4667:4: ( ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4667:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4667:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4668:5: {...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred188_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4668:106: ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4669:6: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4672:9: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
        // InternalKim.g:4672:10: {...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred188_InternalKim", "true");
        }
        // InternalKim.g:4672:19: (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
        // InternalKim.g:4672:20: otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
        {
        otherlv_26=(Token)match(input,83,FOLLOW_71); if (state.failed) return ;
        otherlv_27=(Token)match(input,40,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:4680:9: ( (lv_disjointNamespaces_28_0= rulePathName ) )
        // InternalKim.g:4681:10: (lv_disjointNamespaces_28_0= rulePathName )
        {
        // InternalKim.g:4681:10: (lv_disjointNamespaces_28_0= rulePathName )
        // InternalKim.g:4682:11: lv_disjointNamespaces_28_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
          										
        }
        pushFollow(FOLLOW_72);
        lv_disjointNamespaces_28_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4699:9: (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
        // InternalKim.g:4700:10: otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )*
        {
        otherlv_29=(Token)match(input,25,FOLLOW_177); if (state.failed) return ;
        // InternalKim.g:4704:10: ( (lv_disjointNamespaces_30_0= rulePathName ) )*
        loop377:
        do {
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( (LA377_0==RULE_LOWERCASE_ID||LA377_0==RULE_LOWERCASE_DASHID) ) {
                alt377=1;
            }


            switch (alt377) {
        	case 1 :
        	    // InternalKim.g:4705:11: (lv_disjointNamespaces_30_0= rulePathName )
        	    {
        	    // InternalKim.g:4705:11: (lv_disjointNamespaces_30_0= rulePathName )
        	    // InternalKim.g:4706:12: lv_disjointNamespaces_30_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_177);
        	    lv_disjointNamespaces_30_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop377;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred188_InternalKim

    // $ANTLR start synpred189_InternalKim
    public final void synpred189_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        AntlrDatatypeRuleToken lv_version_32_0 = null;


        // InternalKim.g:4730:4: ( ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:4730:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:4730:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:4731:5: {...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4731:106: ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:4732:6: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4735:9: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:4735:10: {...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred189_InternalKim", "true");
        }
        // InternalKim.g:4735:19: (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
        // InternalKim.g:4735:20: otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) )
        {
        otherlv_31=(Token)match(input,84,FOLLOW_74); if (state.failed) return ;
        // InternalKim.g:4739:9: ( (lv_version_32_0= ruleVersionNumber ) )
        // InternalKim.g:4740:10: (lv_version_32_0= ruleVersionNumber )
        {
        // InternalKim.g:4740:10: (lv_version_32_0= ruleVersionNumber )
        // InternalKim.g:4741:11: lv_version_32_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_32_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred189_InternalKim

    // $ANTLR start synpred192_InternalKim
    public final void synpred192_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;


        // InternalKim.g:4775:9: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:4775:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:4775:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:4776:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred192_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        }
        // InternalKim.g:4776:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:4777:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        // InternalKim.g:4780:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        // InternalKim.g:4780:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred192_InternalKim", "true");
        }
        // InternalKim.g:4780:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        // InternalKim.g:4780:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        {
        otherlv_34=(Token)match(input,85,FOLLOW_178); if (state.failed) return ;
        // InternalKim.g:4784:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        int alt380=2;
        int LA380_0 = input.LA(1);

        if ( (LA380_0==86) ) {
            alt380=1;
        }
        switch (alt380) {
            case 1 :
                // InternalKim.g:4785:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
                {
                otherlv_35=(Token)match(input,86,FOLLOW_177); if (state.failed) return ;
                // InternalKim.g:4789:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
                loop379:
                do {
                    int alt379=2;
                    int LA379_0 = input.LA(1);

                    if ( (LA379_0==RULE_LOWERCASE_ID||LA379_0==RULE_LOWERCASE_DASHID) ) {
                        alt379=1;
                    }


                    switch (alt379) {
                	case 1 :
                	    // InternalKim.g:4790:16: (lv_lookupNamespace_36_0= rulePathName )
                	    {
                	    // InternalKim.g:4790:16: (lv_lookupNamespace_36_0= rulePathName )
                	    // InternalKim.g:4791:17: lv_lookupNamespace_36_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_177);
                	    lv_lookupNamespace_36_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop379;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred192_InternalKim

    // $ANTLR start synpred194_InternalKim
    public final void synpred194_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;


        // InternalKim.g:4815:9: ( ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4815:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:4815:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4816:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred194_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        }
        // InternalKim.g:4816:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        // InternalKim.g:4817:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        // InternalKim.g:4820:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        // InternalKim.g:4820:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred194_InternalKim", "true");
        }
        // InternalKim.g:4820:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        // InternalKim.g:4820:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        {
        otherlv_37=(Token)match(input,87,FOLLOW_177); if (state.failed) return ;
        // InternalKim.g:4824:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        loop381:
        do {
            int alt381=2;
            int LA381_0 = input.LA(1);

            if ( (LA381_0==RULE_LOWERCASE_ID||LA381_0==RULE_LOWERCASE_DASHID) ) {
                alt381=1;
            }


            switch (alt381) {
        	case 1 :
        	    // InternalKim.g:4825:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    {
        	    // InternalKim.g:4825:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    // InternalKim.g:4826:16: lv_blacklistNamespace_38_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_177);
        	    lv_blacklistNamespace_38_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop381;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred194_InternalKim

    // $ANTLR start synpred195_InternalKim
    public final void synpred195_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_weights_40_0 = null;


        // InternalKim.g:4849:9: ( ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:4849:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:4849:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:4850:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred195_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        }
        // InternalKim.g:4850:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:4851:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        // InternalKim.g:4854:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        // InternalKim.g:4854:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred195_InternalKim", "true");
        }
        // InternalKim.g:4854:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        // InternalKim.g:4854:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
        {
        otherlv_39=(Token)match(input,29,FOLLOW_31); if (state.failed) return ;
        // InternalKim.g:4858:14: ( (lv_weights_40_0= ruleMetadata ) )
        // InternalKim.g:4859:15: (lv_weights_40_0= ruleMetadata )
        {
        // InternalKim.g:4859:15: (lv_weights_40_0= ruleMetadata )
        // InternalKim.g:4860:16: lv_weights_40_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_40_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred195_InternalKim

    // $ANTLR start synpred196_InternalKim
    public final void synpred196_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;

        EObject lv_weights_40_0 = null;


        // InternalKim.g:4764:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:4764:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:4764:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:4765:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred196_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:4765:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:4766:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:4769:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:4769:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred196_InternalKim", "true");
        }
        // InternalKim.g:4769:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:4769:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:4769:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:4770:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
        // InternalKim.g:4773:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:4774:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:4774:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+
        int cnt385=0;
        loop385:
        do {
            int alt385=4;
            int LA385_0 = input.LA(1);

            if ( LA385_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
                alt385=1;
            }
            else if ( LA385_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
                alt385=2;
            }
            else if ( LA385_0 == 29 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
                alt385=3;
            }


            switch (alt385) {
        	case 1 :
        	    // InternalKim.g:4775:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:4775:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:4776:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred196_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        	    }
        	    // InternalKim.g:4776:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:4777:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        	    // InternalKim.g:4780:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:4780:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred196_InternalKim", "true");
        	    }
        	    // InternalKim.g:4780:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        	    // InternalKim.g:4780:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        	    {
        	    otherlv_34=(Token)match(input,85,FOLLOW_179); if (state.failed) return ;
        	    // InternalKim.g:4784:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        	    int alt383=2;
        	    int LA383_0 = input.LA(1);

        	    if ( (LA383_0==86) ) {
        	        alt383=1;
        	    }
        	    switch (alt383) {
        	        case 1 :
        	            // InternalKim.g:4785:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
        	            {
        	            otherlv_35=(Token)match(input,86,FOLLOW_180); if (state.failed) return ;
        	            // InternalKim.g:4789:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
        	            loop382:
        	            do {
        	                int alt382=2;
        	                int LA382_0 = input.LA(1);

        	                if ( (LA382_0==RULE_LOWERCASE_ID||LA382_0==RULE_LOWERCASE_DASHID) ) {
        	                    alt382=1;
        	                }


        	                switch (alt382) {
        	            	case 1 :
        	            	    // InternalKim.g:4790:16: (lv_lookupNamespace_36_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:4790:16: (lv_lookupNamespace_36_0= rulePathName )
        	            	    // InternalKim.g:4791:17: lv_lookupNamespace_36_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_180);
        	            	    lv_lookupNamespace_36_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop382;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:4815:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:4815:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:4816:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred196_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        	    }
        	    // InternalKim.g:4816:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:4817:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        	    // InternalKim.g:4820:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        	    // InternalKim.g:4820:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred196_InternalKim", "true");
        	    }
        	    // InternalKim.g:4820:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        	    // InternalKim.g:4820:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        	    {
        	    otherlv_37=(Token)match(input,87,FOLLOW_180); if (state.failed) return ;
        	    // InternalKim.g:4824:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        	    loop384:
        	    do {
        	        int alt384=2;
        	        int LA384_0 = input.LA(1);

        	        if ( (LA384_0==RULE_LOWERCASE_ID||LA384_0==RULE_LOWERCASE_DASHID) ) {
        	            alt384=1;
        	        }


        	        switch (alt384) {
        	    	case 1 :
        	    	    // InternalKim.g:4825:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:4825:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    	    // InternalKim.g:4826:16: lv_blacklistNamespace_38_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_180);
        	    	    lv_blacklistNamespace_38_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop384;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:4849:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        	    {
        	    // InternalKim.g:4849:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        	    // InternalKim.g:4850:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred196_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        	    }
        	    // InternalKim.g:4850:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        	    // InternalKim.g:4851:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        	    // InternalKim.g:4854:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        	    // InternalKim.g:4854:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred196_InternalKim", "true");
        	    }
        	    // InternalKim.g:4854:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        	    // InternalKim.g:4854:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
        	    {
        	    otherlv_39=(Token)match(input,29,FOLLOW_31); if (state.failed) return ;
        	    // InternalKim.g:4858:14: ( (lv_weights_40_0= ruleMetadata ) )
        	    // InternalKim.g:4859:15: (lv_weights_40_0= ruleMetadata )
        	    {
        	    // InternalKim.g:4859:15: (lv_weights_40_0= ruleMetadata )
        	    // InternalKim.g:4860:16: lv_weights_40_0= ruleMetadata
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_181);
        	    lv_weights_40_0=ruleMetadata();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt385 >= 1 ) break loop385;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(385, input);
                    throw eee;
            }
            cnt385++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred196_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred196_InternalKim

    // $ANTLR start synpred215_InternalKim
    public final void synpred215_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_4_0=null;

        // InternalKim.g:5510:9: ( (lv_docstring_4_0= RULE_STRING ) )
        // InternalKim.g:5510:9: (lv_docstring_4_0= RULE_STRING )
        {
        // InternalKim.g:5510:9: (lv_docstring_4_0= RULE_STRING )
        // InternalKim.g:5511:10: lv_docstring_4_0= RULE_STRING
        {
        lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred215_InternalKim

    // $ANTLR start synpred219_InternalKim
    public final void synpred219_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        EObject lv_states_13_0 = null;


        // InternalKim.g:5621:10: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )
        // InternalKim.g:5621:10: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
        {
        otherlv_12=(Token)match(input,25,FOLLOW_6); if (state.failed) return ;
        // InternalKim.g:5625:10: ( (lv_states_13_0= ruleObservableSemantics ) )
        // InternalKim.g:5626:11: (lv_states_13_0= ruleObservableSemantics )
        {
        // InternalKim.g:5626:11: (lv_states_13_0= ruleObservableSemantics )
        // InternalKim.g:5627:12: lv_states_13_0= ruleObservableSemantics
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_2_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_states_13_0=ruleObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred219_InternalKim

    // $ANTLR start synpred221_InternalKim
    public final void synpred221_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        EObject lv_observations_17_0 = null;


        // InternalKim.g:5671:10: (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )
        // InternalKim.g:5671:10: otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) )
        {
        otherlv_16=(Token)match(input,25,FOLLOW_86); if (state.failed) return ;
        // InternalKim.g:5675:10: ( (lv_observations_17_0= ruleObserveStatementBody ) )
        // InternalKim.g:5676:11: (lv_observations_17_0= ruleObserveStatementBody )
        {
        // InternalKim.g:5676:11: (lv_observations_17_0= ruleObserveStatementBody )
        // InternalKim.g:5677:12: lv_observations_17_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_2_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_observations_17_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred221_InternalKim

    // $ANTLR start synpred224_InternalKim
    public final void synpred224_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_accessor_19_0 = null;


        // InternalKim.g:5697:9: (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )
        // InternalKim.g:5697:9: otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )?
        {
        otherlv_18=(Token)match(input,29,FOLLOW_177); if (state.failed) return ;
        // InternalKim.g:5701:9: ( (lv_accessor_19_0= ruleFunction ) )?
        int alt392=2;
        int LA392_0 = input.LA(1);

        if ( (LA392_0==RULE_LOWERCASE_ID||LA392_0==RULE_LOWERCASE_DASHID) ) {
            alt392=1;
        }
        switch (alt392) {
            case 1 :
                // InternalKim.g:5702:10: (lv_accessor_19_0= ruleFunction )
                {
                // InternalKim.g:5702:10: (lv_accessor_19_0= ruleFunction )
                // InternalKim.g:5703:11: lv_accessor_19_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_7_1_0());
                  										
                }
                pushFollow(FOLLOW_2);
                lv_accessor_19_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }
                break;

        }


        }
    }
    // $ANTLR end synpred224_InternalKim

    // $ANTLR start synpred225_InternalKim
    public final void synpred225_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        Token lv_docstring_4_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_urn_1_0 = null;

        EObject lv_concept_3_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        AntlrDatatypeRuleToken lv_parents_8_0 = null;

        EObject lv_actions_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_states_13_0 = null;

        EObject lv_observations_15_0 = null;

        EObject lv_observations_17_0 = null;

        EObject lv_accessor_19_0 = null;


        // InternalKim.g:5460:3: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) )
        // InternalKim.g:5460:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) )
        {
        // InternalKim.g:5460:3: ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) )
        // InternalKim.g:5461:4: {...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5461:114: ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) )
        // InternalKim.g:5462:5: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5465:8: ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) )
        // InternalKim.g:5465:9: {...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred225_InternalKim", "true");
        }
        // InternalKim.g:5465:18: ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? )
        // InternalKim.g:5465:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )?
        {
        // InternalKim.g:5465:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?
        int alt393=2;
        alt393 = dfa393.predict(input);
        switch (alt393) {
            case 1 :
                // InternalKim.g:5466:9: ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as'
                {
                // InternalKim.g:5466:9: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:5467:10: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:5467:10: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:5468:11: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getUrnUrnParserRuleCall_0_0_0_0());
                  										
                }
                pushFollow(FOLLOW_9);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                otherlv_2=(Token)match(input,23,FOLLOW_20); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:5490:8: ( (lv_concept_3_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5491:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5491:9: (lv_concept_3_0= ruleNamedObservableSemantics )
        // InternalKim.g:5492:10: lv_concept_3_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_1_0());
          									
        }
        pushFollow(FOLLOW_182);
        lv_concept_3_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5509:8: ( (lv_docstring_4_0= RULE_STRING ) )?
        int alt394=2;
        int LA394_0 = input.LA(1);

        if ( (LA394_0==RULE_STRING) ) {
            alt394=1;
        }
        switch (alt394) {
            case 1 :
                // InternalKim.g:5510:9: (lv_docstring_4_0= RULE_STRING )
                {
                // InternalKim.g:5510:9: (lv_docstring_4_0= RULE_STRING )
                // InternalKim.g:5511:10: lv_docstring_4_0= RULE_STRING
                {
                lv_docstring_4_0=(Token)match(input,RULE_STRING,FOLLOW_183); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5527:8: (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )?
        int alt396=2;
        int LA396_0 = input.LA(1);

        if ( (LA396_0==94) ) {
            alt396=1;
        }
        switch (alt396) {
            case 1 :
                // InternalKim.g:5528:9: otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                {
                otherlv_5=(Token)match(input,94,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:5532:9: ( (lv_parents_6_0= rulePathName ) )
                // InternalKim.g:5533:10: (lv_parents_6_0= rulePathName )
                {
                // InternalKim.g:5533:10: (lv_parents_6_0= rulePathName )
                // InternalKim.g:5534:11: lv_parents_6_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_1_0());
                  										
                }
                pushFollow(FOLLOW_184);
                lv_parents_6_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5551:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*
                loop395:
                do {
                    int alt395=2;
                    int LA395_0 = input.LA(1);

                    if ( (LA395_0==25) ) {
                        alt395=1;
                    }


                    switch (alt395) {
                	case 1 :
                	    // InternalKim.g:5552:10: otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) )
                	    {
                	    otherlv_7=(Token)match(input,25,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:5556:10: ( (lv_parents_8_0= rulePathName ) )
                	    // InternalKim.g:5557:11: (lv_parents_8_0= rulePathName )
                	    {
                	    // InternalKim.g:5557:11: (lv_parents_8_0= rulePathName )
                	    // InternalKim.g:5558:12: lv_parents_8_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_3_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_184);
                	    lv_parents_8_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop395;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5577:8: ( (lv_actions_9_0= ruleActionSpecification ) )*
        loop397:
        do {
            int alt397=2;
            int LA397_0 = input.LA(1);

            if ( ((LA397_0>=54 && LA397_0<=56)) ) {
                alt397=1;
            }


            switch (alt397) {
        	case 1 :
        	    // InternalKim.g:5578:9: (lv_actions_9_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:5578:9: (lv_actions_9_0= ruleActionSpecification )
        	    // InternalKim.g:5579:10: lv_actions_9_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_0_4_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_185);
        	    lv_actions_9_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop397;
            }
        } while (true);

        // InternalKim.g:5596:8: (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )?
        int alt399=2;
        int LA399_0 = input.LA(1);

        if ( (LA399_0==28) ) {
            alt399=1;
        }
        switch (alt399) {
            case 1 :
                // InternalKim.g:5597:9: otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
                {
                otherlv_10=(Token)match(input,28,FOLLOW_6); if (state.failed) return ;
                // InternalKim.g:5601:9: ( (lv_states_11_0= ruleObservableSemantics ) )
                // InternalKim.g:5602:10: (lv_states_11_0= ruleObservableSemantics )
                {
                // InternalKim.g:5602:10: (lv_states_11_0= ruleObservableSemantics )
                // InternalKim.g:5603:11: lv_states_11_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_1_0());
                  										
                }
                pushFollow(FOLLOW_186);
                lv_states_11_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5620:9: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*
                loop398:
                do {
                    int alt398=2;
                    int LA398_0 = input.LA(1);

                    if ( (LA398_0==25) ) {
                        alt398=1;
                    }


                    switch (alt398) {
                	case 1 :
                	    // InternalKim.g:5621:10: otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_12=(Token)match(input,25,FOLLOW_6); if (state.failed) return ;
                	    // InternalKim.g:5625:10: ( (lv_states_13_0= ruleObservableSemantics ) )
                	    // InternalKim.g:5626:11: (lv_states_13_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:5626:11: (lv_states_13_0= ruleObservableSemantics )
                	    // InternalKim.g:5627:12: lv_states_13_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_5_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_186);
                	    lv_states_13_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop398;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5646:8: (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )?
        int alt401=2;
        int LA401_0 = input.LA(1);

        if ( (LA401_0==40) ) {
            alt401=1;
        }
        switch (alt401) {
            case 1 :
                // InternalKim.g:5647:9: otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )*
                {
                otherlv_14=(Token)match(input,40,FOLLOW_91); if (state.failed) return ;
                // InternalKim.g:5651:9: ( (lv_observations_15_0= ruleObserveStatementBody ) )
                // InternalKim.g:5652:10: (lv_observations_15_0= ruleObserveStatementBody )
                {
                // InternalKim.g:5652:10: (lv_observations_15_0= ruleObserveStatementBody )
                // InternalKim.g:5653:11: lv_observations_15_0= ruleObserveStatementBody
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_1_0());
                  										
                }
                pushFollow(FOLLOW_187);
                lv_observations_15_0=ruleObserveStatementBody();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5670:9: (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )*
                loop400:
                do {
                    int alt400=2;
                    int LA400_0 = input.LA(1);

                    if ( (LA400_0==25) ) {
                        alt400=1;
                    }


                    switch (alt400) {
                	case 1 :
                	    // InternalKim.g:5671:10: otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) )
                	    {
                	    otherlv_16=(Token)match(input,25,FOLLOW_91); if (state.failed) return ;
                	    // InternalKim.g:5675:10: ( (lv_observations_17_0= ruleObserveStatementBody ) )
                	    // InternalKim.g:5676:11: (lv_observations_17_0= ruleObserveStatementBody )
                	    {
                	    // InternalKim.g:5676:11: (lv_observations_17_0= ruleObserveStatementBody )
                	    // InternalKim.g:5677:12: lv_observations_17_0= ruleObserveStatementBody
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_6_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_187);
                	    lv_observations_17_0=ruleObserveStatementBody();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop400;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5696:8: (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )?
        int alt403=2;
        int LA403_0 = input.LA(1);

        if ( (LA403_0==29) ) {
            alt403=1;
        }
        switch (alt403) {
            case 1 :
                // InternalKim.g:5697:9: otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )?
                {
                otherlv_18=(Token)match(input,29,FOLLOW_177); if (state.failed) return ;
                // InternalKim.g:5701:9: ( (lv_accessor_19_0= ruleFunction ) )?
                int alt402=2;
                int LA402_0 = input.LA(1);

                if ( (LA402_0==RULE_LOWERCASE_ID||LA402_0==RULE_LOWERCASE_DASHID) ) {
                    alt402=1;
                }
                switch (alt402) {
                    case 1 :
                        // InternalKim.g:5702:10: (lv_accessor_19_0= ruleFunction )
                        {
                        // InternalKim.g:5702:10: (lv_accessor_19_0= ruleFunction )
                        // InternalKim.g:5703:11: lv_accessor_19_0= ruleFunction
                        {
                        if ( state.backtracking==0 ) {

                          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_7_1_0());
                          										
                        }
                        pushFollow(FOLLOW_2);
                        lv_accessor_19_0=ruleFunction();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        break;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred225_InternalKim

    // $ANTLR start synpred226_InternalKim
    public final void synpred226_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token otherlv_21=null;
        EObject lv_metadata_22_0 = null;


        // InternalKim.g:5733:9: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )
        // InternalKim.g:5733:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
        {
        otherlv_20=(Token)match(input,40,FOLLOW_30); if (state.failed) return ;
        otherlv_21=(Token)match(input,41,FOLLOW_31); if (state.failed) return ;
        // InternalKim.g:5741:9: ( (lv_metadata_22_0= ruleMetadata ) )
        // InternalKim.g:5742:10: (lv_metadata_22_0= ruleMetadata )
        {
        // InternalKim.g:5742:10: (lv_metadata_22_0= ruleMetadata )
        // InternalKim.g:5743:11: lv_metadata_22_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_0_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_22_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred226_InternalKim

    // $ANTLR start synpred227_InternalKim
    public final void synpred227_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_documentation_25_0 = null;


        // InternalKim.g:5762:9: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )
        // InternalKim.g:5762:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
        {
        otherlv_23=(Token)match(input,40,FOLLOW_33); if (state.failed) return ;
        otherlv_24=(Token)match(input,42,FOLLOW_31); if (state.failed) return ;
        // InternalKim.g:5770:9: ( (lv_documentation_25_0= ruleMetadata ) )
        // InternalKim.g:5771:10: (lv_documentation_25_0= ruleMetadata )
        {
        // InternalKim.g:5771:10: (lv_documentation_25_0= ruleMetadata )
        // InternalKim.g:5772:11: lv_documentation_25_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_documentation_25_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred227_InternalKim

    // $ANTLR start synpred228_InternalKim
    public final void synpred228_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;


        // InternalKim.g:5727:3: ( ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )
        // InternalKim.g:5727:3: ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
        {
        // InternalKim.g:5727:3: ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
        // InternalKim.g:5728:4: {...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred228_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:5728:114: ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
        // InternalKim.g:5729:5: ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:5732:8: ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
        // InternalKim.g:5732:9: {...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred228_InternalKim", "true");
        }
        // InternalKim.g:5732:18: ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
        // InternalKim.g:5732:19: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
        {
        // InternalKim.g:5732:19: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
        int alt404=2;
        int LA404_0 = input.LA(1);

        if ( (LA404_0==40) ) {
            int LA404_1 = input.LA(2);

            if ( (LA404_1==41) ) {
                alt404=1;
            }
        }
        switch (alt404) {
            case 1 :
                // InternalKim.g:5733:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
                {
                otherlv_20=(Token)match(input,40,FOLLOW_30); if (state.failed) return ;
                otherlv_21=(Token)match(input,41,FOLLOW_31); if (state.failed) return ;
                // InternalKim.g:5741:9: ( (lv_metadata_22_0= ruleMetadata ) )
                // InternalKim.g:5742:10: (lv_metadata_22_0= ruleMetadata )
                {
                // InternalKim.g:5742:10: (lv_metadata_22_0= ruleMetadata )
                // InternalKim.g:5743:11: lv_metadata_22_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_0_2_0());
                  										
                }
                pushFollow(FOLLOW_32);
                lv_metadata_22_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:5761:8: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
        int alt405=2;
        int LA405_0 = input.LA(1);

        if ( (LA405_0==40) ) {
            alt405=1;
        }
        switch (alt405) {
            case 1 :
                // InternalKim.g:5762:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
                {
                otherlv_23=(Token)match(input,40,FOLLOW_33); if (state.failed) return ;
                otherlv_24=(Token)match(input,42,FOLLOW_31); if (state.failed) return ;
                // InternalKim.g:5770:9: ( (lv_documentation_25_0= ruleMetadata ) )
                // InternalKim.g:5771:10: (lv_documentation_25_0= ruleMetadata )
                {
                // InternalKim.g:5771:10: (lv_documentation_25_0= ruleMetadata )
                // InternalKim.g:5772:11: lv_documentation_25_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_1_2_0());
                  										
                }
                pushFollow(FOLLOW_2);
                lv_documentation_25_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred228_InternalKim

    // $ANTLR start synpred229_InternalKim
    public final void synpred229_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:5836:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:5836:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:5836:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:5837:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:5837:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:5838:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_9);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,23,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred229_InternalKim

    // $ANTLR start synpred231_InternalKim
    public final void synpred231_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_by_6_0 = null;


        // InternalKim.g:5900:4: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5900:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5900:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5901:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:5901:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5902:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:5905:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        // InternalKim.g:5905:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred231_InternalKim", "true");
        }
        // InternalKim.g:5905:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        // InternalKim.g:5905:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
        {
        otherlv_5=(Token)match(input,96,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:5909:9: ( (lv_by_6_0= ruleConcept ) )
        // InternalKim.g:5910:10: (lv_by_6_0= ruleConcept )
        {
        // InternalKim.g:5910:10: (lv_by_6_0= ruleConcept )
        // InternalKim.g:5911:11: lv_by_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred231_InternalKim

    // $ANTLR start synpred232_InternalKim
    public final void synpred232_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        EObject lv_downTo_9_0 = null;


        // InternalKim.g:5934:4: ( ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5934:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5934:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5935:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:5935:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5936:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:5939:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) )
        // InternalKim.g:5939:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred232_InternalKim", "true");
        }
        // InternalKim.g:5939:19: (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) )
        // InternalKim.g:5939:20: otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) )
        {
        otherlv_7=(Token)match(input,97,FOLLOW_22); if (state.failed) return ;
        otherlv_8=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:5947:9: ( (lv_downTo_9_0= ruleConcept ) )
        // InternalKim.g:5948:10: (lv_downTo_9_0= ruleConcept )
        {
        // InternalKim.g:5948:10: (lv_downTo_9_0= ruleConcept )
        // InternalKim.g:5949:11: lv_downTo_9_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToConceptParserRuleCall_3_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_downTo_9_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred232_InternalKim

    // $ANTLR start synpred233_InternalKim
    public final void synpred233_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_role_11_0 = null;


        // InternalKim.g:5972:4: ( ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5972:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5972:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5973:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:5973:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5974:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:5977:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        // InternalKim.g:5977:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred233_InternalKim", "true");
        }
        // InternalKim.g:5977:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        // InternalKim.g:5977:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
        {
        otherlv_10=(Token)match(input,23,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:5981:9: ( (lv_role_11_0= ruleConcept ) )
        // InternalKim.g:5982:10: (lv_role_11_0= ruleConcept )
        {
        // InternalKim.g:5982:10: (lv_role_11_0= ruleConcept )
        // InternalKim.g:5983:11: lv_role_11_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_role_11_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred233_InternalKim

    // $ANTLR start synpred234_InternalKim
    public final void synpred234_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;


        // InternalKim.g:6006:4: ( ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:6006:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:6006:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:6007:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred234_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:6007:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:6008:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:6011:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        // InternalKim.g:6011:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred234_InternalKim", "true");
        }
        // InternalKim.g:6011:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        // InternalKim.g:6011:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
        {
        otherlv_12=(Token)match(input,33,FOLLOW_22); if (state.failed) return ;
        otherlv_13=(Token)match(input,34,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:6019:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
        // InternalKim.g:6020:10: (lv_accordingTo_14_0= rulePropertyId )
        {
        // InternalKim.g:6020:10: (lv_accordingTo_14_0= rulePropertyId )
        // InternalKim.g:6021:11: lv_accordingTo_14_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_14_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred234_InternalKim

    // $ANTLR start synpred235_InternalKim
    public final void synpred235_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_16_0 = null;


        // InternalKim.g:6055:11: ( ( (lv_unit_16_0= ruleUnit ) ) )
        // InternalKim.g:6055:11: ( (lv_unit_16_0= ruleUnit ) )
        {
        // InternalKim.g:6055:11: ( (lv_unit_16_0= ruleUnit ) )
        // InternalKim.g:6056:12: (lv_unit_16_0= ruleUnit )
        {
        // InternalKim.g:6056:12: (lv_unit_16_0= ruleUnit )
        // InternalKim.g:6057:13: lv_unit_16_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_16_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred235_InternalKim

    // $ANTLR start synpred237_InternalKim
    public final void synpred237_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_18=null;
        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;


        // InternalKim.g:6044:4: ( ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:6044:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:6044:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:6045:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred237_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:6045:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:6046:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:6049:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        // InternalKim.g:6049:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred237_InternalKim", "true");
        }
        // InternalKim.g:6049:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        int alt408=2;
        int LA408_0 = input.LA(1);

        if ( (LA408_0==48) ) {
            alt408=1;
        }
        else if ( (LA408_0==98) ) {
            alt408=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 408, 0, input);

            throw nvae;
        }
        switch (alt408) {
            case 1 :
                // InternalKim.g:6049:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:6049:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                // InternalKim.g:6050:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                {
                otherlv_15=(Token)match(input,48,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:6054:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                int alt407=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA407_1 = input.LA(2);

                    if ( (synpred235_InternalKim()) ) {
                        alt407=1;
                    }
                    else if ( (true) ) {
                        alt407=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 407, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA407_2 = input.LA(2);

                    if ( (LA407_2==90||LA407_2==92) ) {
                        alt407=2;
                    }
                    else if ( (LA407_2==EOF||LA407_2==38||LA407_2==91||LA407_2==238) ) {
                        alt407=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 407, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 36:
                case 38:
                case 91:
                case 231:
                case 232:
                case 238:
                    {
                    alt407=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_LOWERCASE_DASHID:
                    {
                    alt407=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 407, 0, input);

                    throw nvae;
                }

                switch (alt407) {
                    case 1 :
                        // InternalKim.g:6055:11: ( (lv_unit_16_0= ruleUnit ) )
                        {
                        // InternalKim.g:6055:11: ( (lv_unit_16_0= ruleUnit ) )
                        // InternalKim.g:6056:12: (lv_unit_16_0= ruleUnit )
                        {
                        // InternalKim.g:6056:12: (lv_unit_16_0= ruleUnit )
                        // InternalKim.g:6057:13: lv_unit_16_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_16_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:6075:11: ( (lv_currency_17_0= ruleCurrency ) )
                        {
                        // InternalKim.g:6075:11: ( (lv_currency_17_0= ruleCurrency ) )
                        // InternalKim.g:6076:12: (lv_currency_17_0= ruleCurrency )
                        {
                        // InternalKim.g:6076:12: (lv_currency_17_0= ruleCurrency )
                        // InternalKim.g:6077:13: lv_currency_17_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_17_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6097:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                {
                // InternalKim.g:6097:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                // InternalKim.g:6098:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
                {
                otherlv_18=(Token)match(input,98,FOLLOW_188); if (state.failed) return ;
                // InternalKim.g:6102:10: ( (lv_unit_19_0= ruleUnit ) )
                // InternalKim.g:6103:11: (lv_unit_19_0= ruleUnit )
                {
                // InternalKim.g:6103:11: (lv_unit_19_0= ruleUnit )
                // InternalKim.g:6104:12: lv_unit_19_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_19_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred237_InternalKim

    // $ANTLR start synpred239_InternalKim
    public final void synpred239_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_20_0=null;
        Token otherlv_21=null;

        // InternalKim.g:6128:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) )
        // InternalKim.g:6128:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        {
        // InternalKim.g:6128:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        // InternalKim.g:6129:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred239_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:6129:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        // InternalKim.g:6130:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:6133:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        // InternalKim.g:6133:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred239_InternalKim", "true");
        }
        // InternalKim.g:6133:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        int alt409=2;
        int LA409_0 = input.LA(1);

        if ( (LA409_0==99) ) {
            alt409=1;
        }
        else if ( (LA409_0==100) ) {
            alt409=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 409, 0, input);

            throw nvae;
        }
        switch (alt409) {
            case 1 :
                // InternalKim.g:6133:20: ( (lv_optional_20_0= 'optional' ) )
                {
                // InternalKim.g:6133:20: ( (lv_optional_20_0= 'optional' ) )
                // InternalKim.g:6134:10: (lv_optional_20_0= 'optional' )
                {
                // InternalKim.g:6134:10: (lv_optional_20_0= 'optional' )
                // InternalKim.g:6135:11: lv_optional_20_0= 'optional'
                {
                lv_optional_20_0=(Token)match(input,99,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:6148:9: otherlv_21= 'required'
                {
                otherlv_21=(Token)match(input,100,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred239_InternalKim

    // $ANTLR start synpred240_InternalKim
    public final void synpred240_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;


        // InternalKim.g:6158:4: ( ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:6158:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:6158:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:6159:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred240_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:6159:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        // InternalKim.g:6160:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:6163:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        // InternalKim.g:6163:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred240_InternalKim", "true");
        }
        // InternalKim.g:6163:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        // InternalKim.g:6163:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
        {
        // InternalKim.g:6163:20: ( (lv_from_22_0= ruleNumber ) )
        // InternalKim.g:6164:10: (lv_from_22_0= ruleNumber )
        {
        // InternalKim.g:6164:10: (lv_from_22_0= ruleNumber )
        // InternalKim.g:6165:11: lv_from_22_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
          										
        }
        pushFollow(FOLLOW_22);
        lv_from_22_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,34,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:6186:9: ( (lv_to_24_0= ruleNumber ) )
        // InternalKim.g:6187:10: (lv_to_24_0= ruleNumber )
        {
        // InternalKim.g:6187:10: (lv_to_24_0= ruleNumber )
        // InternalKim.g:6188:11: lv_to_24_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_24_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred240_InternalKim

    // $ANTLR start synpred241_InternalKim
    public final void synpred241_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token lv_name_26_0=null;

        // InternalKim.g:6211:4: ( ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:6211:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:6211:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:6212:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:6212:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:6213:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:6216:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:6216:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "true");
        }
        // InternalKim.g:6216:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:6216:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_25=(Token)match(input,101,FOLLOW_61); if (state.failed) return ;
        // InternalKim.g:6220:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:6221:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:6221:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        // InternalKim.g:6222:11: lv_name_26_0= RULE_LOWERCASE_ID
        {
        lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred241_InternalKim

    // $ANTLR start synpred242_InternalKim
    public final void synpred242_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_0_1=null;

        // InternalKim.g:6276:6: (lv_modelReference_0_1= RULE_LOWERCASE_ID )
        // InternalKim.g:6276:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred242_InternalKim

    // $ANTLR start synpred245_InternalKim
    public final void synpred245_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:6377:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:6377:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:6377:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:6378:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred245_InternalKim

    // $ANTLR start synpred246_InternalKim
    public final void synpred246_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:6402:4: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6402:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6402:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6403:5: {...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred246_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalKim.g:6403:115: ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6404:6: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0);
        // InternalKim.g:6407:9: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6407:10: {...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred246_InternalKim", "true");
        }
        // InternalKim.g:6407:19: (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6407:20: otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_3=(Token)match(input,102,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6411:9: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6412:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6412:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6413:11: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred246_InternalKim

    // $ANTLR start synpred247_InternalKim
    public final void synpred247_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_motivation_6_0 = null;


        // InternalKim.g:6436:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6436:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6436:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6437:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalKim.g:6437:115: ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6438:6: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1);
        // InternalKim.g:6441:9: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6441:10: {...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred247_InternalKim", "true");
        }
        // InternalKim.g:6441:19: (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6441:20: otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_5=(Token)match(input,103,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6445:9: ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6446:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6446:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6447:11: lv_motivation_6_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_2_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_motivation_6_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred247_InternalKim

    // $ANTLR start synpred248_InternalKim
    public final void synpred248_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_compresent_8_0 = null;


        // InternalKim.g:6470:4: ( ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6470:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6470:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6471:5: {...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred248_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2)");
        }
        // InternalKim.g:6471:115: ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6472:6: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2);
        // InternalKim.g:6475:9: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6475:10: {...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred248_InternalKim", "true");
        }
        // InternalKim.g:6475:19: (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6475:20: otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_7=(Token)match(input,40,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6479:9: ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6480:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6480:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6481:11: lv_compresent_8_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_2_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_8_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred248_InternalKim

    // $ANTLR start synpred249_InternalKim
    public final void synpred249_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_causant_11_0 = null;


        // InternalKim.g:6504:4: ( ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6504:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6504:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6505:5: {...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3)");
        }
        // InternalKim.g:6505:115: ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6506:6: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3);
        // InternalKim.g:6509:9: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6509:10: {...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred249_InternalKim", "true");
        }
        // InternalKim.g:6509:19: (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6509:20: otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_9=(Token)match(input,104,FOLLOW_99); if (state.failed) return ;
        otherlv_10=(Token)match(input,96,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6517:9: ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6518:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6518:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6519:11: lv_causant_11_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_2_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_11_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred249_InternalKim

    // $ANTLR start synpred250_InternalKim
    public final void synpred250_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_adjacent_14_0 = null;


        // InternalKim.g:6542:4: ( ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6542:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6542:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6543:5: {...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred250_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4)");
        }
        // InternalKim.g:6543:115: ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6544:6: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4);
        // InternalKim.g:6547:9: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6547:10: {...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred250_InternalKim", "true");
        }
        // InternalKim.g:6547:19: (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6547:20: otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_12=(Token)match(input,105,FOLLOW_22); if (state.failed) return ;
        otherlv_13=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6555:9: ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6556:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6556:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6557:11: lv_adjacent_14_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_2_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_14_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred250_InternalKim

    // $ANTLR start synpred251_InternalKim
    public final void synpred251_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_container_17_0 = null;


        // InternalKim.g:6580:4: ( ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6580:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6580:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6581:5: {...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5)");
        }
        // InternalKim.g:6581:115: ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6582:6: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5);
        // InternalKim.g:6585:9: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6585:10: {...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred251_InternalKim", "true");
        }
        // InternalKim.g:6585:19: (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6585:20: otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_15=(Token)match(input,106,FOLLOW_100); if (state.failed) return ;
        otherlv_16=(Token)match(input,48,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6593:9: ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6594:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6594:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6595:11: lv_container_17_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_2_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_17_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred251_InternalKim

    // $ANTLR start synpred252_InternalKim
    public final void synpred252_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_contained_19_0 = null;


        // InternalKim.g:6618:4: ( ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6618:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6619:5: {...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred252_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6)");
        }
        // InternalKim.g:6619:115: ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6620:6: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6);
        // InternalKim.g:6623:9: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6623:10: {...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred252_InternalKim", "true");
        }
        // InternalKim.g:6623:19: (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6623:20: otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_18=(Token)match(input,107,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6627:9: ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6628:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6628:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6629:11: lv_contained_19_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_2_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_19_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred252_InternalKim

    // $ANTLR start synpred253_InternalKim
    public final void synpred253_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        EObject lv_caused_21_0 = null;


        // InternalKim.g:6652:4: ( ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6652:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6653:5: {...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred253_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7)");
        }
        // InternalKim.g:6653:115: ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6654:6: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7);
        // InternalKim.g:6657:9: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6657:10: {...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred253_InternalKim", "true");
        }
        // InternalKim.g:6657:19: (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6657:20: otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_20=(Token)match(input,108,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6661:9: ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6662:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6662:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6663:11: lv_caused_21_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_2_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_21_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred253_InternalKim

    // $ANTLR start synpred254_InternalKim
    public final void synpred254_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_22=null;
        EObject lv_during_23_0 = null;


        // InternalKim.g:6686:4: ( ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6686:4: ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6687:5: {...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred254_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8)");
        }
        // InternalKim.g:6687:115: ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6688:6: ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8);
        // InternalKim.g:6691:9: ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6691:10: {...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred254_InternalKim", "true");
        }
        // InternalKim.g:6691:19: (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6691:20: otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_22=(Token)match(input,109,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:6695:9: ( (lv_during_23_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6696:10: (lv_during_23_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6696:10: (lv_during_23_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6697:11: lv_during_23_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getDuringSimpleConceptDeclarationParserRuleCall_2_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_during_23_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred254_InternalKim

    // $ANTLR start synpred304_InternalKim
    public final void synpred304_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_other_40_0 = null;


        // InternalKim.g:8148:5: ( ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8148:5: ( ( 'in' )=>otherlv_39= 'in' ) ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8148:5: ( ( 'in' )=>otherlv_39= 'in' )
        // InternalKim.g:8149:6: ( 'in' )=>otherlv_39= 'in'
        {
        otherlv_39=(Token)match(input,48,FOLLOW_20); if (state.failed) return ;

        }

        // InternalKim.g:8155:5: ( (lv_other_40_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8156:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8156:6: (lv_other_40_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8157:7: lv_other_40_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_10_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_40_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred304_InternalKim

    // $ANTLR start synpred309_InternalKim
    public final void synpred309_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        EObject lv_other_50_0 = null;


        // InternalKim.g:8282:5: ( ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:8282:5: ( ( 'over' )=>otherlv_49= 'over' ) ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:8282:5: ( ( 'over' )=>otherlv_49= 'over' )
        // InternalKim.g:8283:6: ( 'over' )=>otherlv_49= 'over'
        {
        otherlv_49=(Token)match(input,55,FOLLOW_20); if (state.failed) return ;

        }

        // InternalKim.g:8289:5: ( (lv_other_50_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:8290:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:8290:6: (lv_other_50_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:8291:7: lv_other_50_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_12_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_50_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred309_InternalKim

    // $ANTLR start synpred312_InternalKim
    public final void synpred312_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:8439:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:8439:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:8439:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:8440:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:8440:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:8441:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,136,FOLLOW_20); if (state.failed) return ;

        }


        }

        // InternalKim.g:8453:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:8454:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:8454:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:8455:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred312_InternalKim

    // $ANTLR start synpred314_InternalKim
    public final void synpred314_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:8504:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:8504:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:8504:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:8505:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:8505:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:8506:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:8506:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt434=2;
        int LA434_0 = input.LA(1);

        if ( (LA434_0==137) ) {
            alt434=1;
        }
        else if ( (LA434_0==138) ) {
            alt434=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 434, 0, input);

            throw nvae;
        }
        switch (alt434) {
            case 1 :
                // InternalKim.g:8507:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,137,FOLLOW_20); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8518:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,138,FOLLOW_20); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:8531:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:8532:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:8532:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:8533:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred314_InternalKim

    // $ANTLR start synpred316_InternalKim
    public final void synpred316_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:8589:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:8589:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:8589:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:8590:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred316_InternalKim

    // $ANTLR start synpred326_InternalKim
    public final void synpred326_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:8904:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:8904:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:8904:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:8905:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred326_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:8905:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:8906:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:8909:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:8909:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred326_InternalKim", "true");
        }
        // InternalKim.g:8909:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:8909:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:8909:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:8910:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,144,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred326_InternalKim

    // $ANTLR start synpred327_InternalKim
    public final void synpred327_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:8927:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:8927:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:8927:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:8928:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred327_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:8928:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:8929:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:8932:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:8932:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred327_InternalKim", "true");
        }
        // InternalKim.g:8932:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:8932:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:8932:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:8933:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,145,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred327_InternalKim

    // $ANTLR start synpred328_InternalKim
    public final void synpred328_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:8950:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:8950:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:8950:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:8951:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred328_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:8951:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:8952:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:8955:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:8955:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred328_InternalKim", "true");
        }
        // InternalKim.g:8955:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:8955:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:8955:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:8956:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,146,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred328_InternalKim

    // $ANTLR start synpred332_InternalKim
    public final void synpred332_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:9038:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:9038:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:9038:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:9039:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred332_InternalKim

    // $ANTLR start synpred333_InternalKim
    public final void synpred333_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:8973:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )
        // InternalKim.g:8973:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        {
        // InternalKim.g:8973:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        // InternalKim.g:8974:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred333_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:8974:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        // InternalKim.g:8975:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:8978:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        // InternalKim.g:8978:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred333_InternalKim", "true");
        }
        // InternalKim.g:8978:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        int alt445=2;
        int LA445_0 = input.LA(1);

        if ( ((LA445_0>=139 && LA445_0<=141)) ) {
            alt445=1;
        }
        else if ( ((LA445_0>=223 && LA445_0<=224)) ) {
            alt445=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 445, 0, input);

            throw nvae;
        }
        switch (alt445) {
            case 1 :
                // InternalKim.g:8978:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:8978:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:8979:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:8979:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:8980:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:8980:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt443=3;
                switch ( input.LA(1) ) {
                case 139:
                    {
                    alt443=1;
                    }
                    break;
                case 140:
                    {
                    alt443=2;
                    }
                    break;
                case 141:
                    {
                    alt443=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 443, 0, input);

                    throw nvae;
                }

                switch (alt443) {
                    case 1 :
                        // InternalKim.g:8981:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,139,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:8992:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,140,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:9003:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,141,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9017:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:9017:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:9018:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:9018:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:9019:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:9019:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:9020:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_189);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9037:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop444:
                do {
                    int alt444=2;
                    int LA444_0 = input.LA(1);

                    if ( ((LA444_0>=223 && LA444_0<=224)) ) {
                        alt444=1;
                    }


                    switch (alt444) {
                	case 1 :
                	    // InternalKim.g:9038:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:9038:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:9039:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_189);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop444;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred333_InternalKim

    // $ANTLR start synpred342_InternalKim
    public final void synpred342_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:9347:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:9347:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:9347:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:9348:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:9348:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:9349:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:9352:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:9352:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "true");
        }
        // InternalKim.g:9352:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:9352:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:9352:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:9353:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred342_InternalKim

    // $ANTLR start synpred349_InternalKim
    public final void synpred349_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:9374:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:9374:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:9374:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9375:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:9375:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9376:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:9379:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9379:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred349_InternalKim", "true");
        }
        // InternalKim.g:9379:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9379:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:9379:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
        int alt453=2;
        int LA453_0 = input.LA(1);

        if ( (LA453_0==147) ) {
            alt453=1;
        }
        else if ( (LA453_0==149) ) {
            alt453=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 453, 0, input);

            throw nvae;
        }
        switch (alt453) {
            case 1 :
                // InternalKim.g:9380:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                {
                // InternalKim.g:9380:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                // InternalKim.g:9381:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
                {
                otherlv_12=(Token)match(input,147,FOLLOW_125); if (state.failed) return ;
                // InternalKim.g:9385:11: ( (lv_coreConcept_13_0= 'core' ) )?
                int alt452=2;
                int LA452_0 = input.LA(1);

                if ( (LA452_0==148) ) {
                    alt452=1;
                }
                switch (alt452) {
                    case 1 :
                        // InternalKim.g:9386:12: (lv_coreConcept_13_0= 'core' )
                        {
                        // InternalKim.g:9386:12: (lv_coreConcept_13_0= 'core' )
                        // InternalKim.g:9387:13: lv_coreConcept_13_0= 'core'
                        {
                        lv_coreConcept_13_0=(Token)match(input,148,FOLLOW_126); if (state.failed) return ;

                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9401:10: ( (lv_alias_14_0= 'equals' ) )
                {
                // InternalKim.g:9401:10: ( (lv_alias_14_0= 'equals' ) )
                // InternalKim.g:9402:11: (lv_alias_14_0= 'equals' )
                {
                // InternalKim.g:9402:11: (lv_alias_14_0= 'equals' )
                // InternalKim.g:9403:12: lv_alias_14_0= 'equals'
                {
                lv_alias_14_0=(Token)match(input,149,FOLLOW_126); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:9416:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt456=2;
        int LA456_0 = input.LA(1);

        if ( (LA456_0==150) ) {
            alt456=1;
        }
        else if ( ((LA456_0>=RULE_LOWERCASE_ID && LA456_0<=RULE_STRING)||(LA456_0>=RULE_CAMELCASE_ID && LA456_0<=RULE_LOWERCASE_DASHID)||LA456_0==36||(LA456_0>=111 && LA456_0<=112)||(LA456_0>=120 && LA456_0<=121)||(LA456_0>=123 && LA456_0<=135)) ) {
            alt456=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 456, 0, input);

            throw nvae;
        }
        switch (alt456) {
            case 1 :
                // InternalKim.g:9417:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:9417:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:9418:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:9418:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:9419:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,150,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9432:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:9432:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:9433:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:9433:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:9434:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9434:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:9435:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_190);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9452:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop455:
                do {
                    int alt455=2;
                    int LA455_0 = input.LA(1);

                    if ( (LA455_0==25||(LA455_0>=136 && LA455_0<=137)) ) {
                        alt455=1;
                    }


                    switch (alt455) {
                	case 1 :
                	    // InternalKim.g:9453:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:9453:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:9454:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:9454:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:9455:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:9455:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt454=3;
                	    switch ( input.LA(1) ) {
                	    case 25:
                	        {
                	        alt454=1;
                	        }
                	        break;
                	    case 136:
                	        {
                	        alt454=2;
                	        }
                	        break;
                	    case 137:
                	        {
                	        alt454=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 454, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt454) {
                	        case 1 :
                	            // InternalKim.g:9456:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:9467:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,136,FOLLOW_20); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:9478:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,137,FOLLOW_20); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:9491:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9492:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9492:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:9493:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_190);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop455;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred349_InternalKim

    // $ANTLR start synpred353_InternalKim
    public final void synpred353_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:9519:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9519:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:9519:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9520:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred353_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:9520:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9521:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:9524:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9524:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred353_InternalKim", "true");
        }
        // InternalKim.g:9524:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt460=2;
        int LA460_0 = input.LA(1);

        if ( (LA460_0==151) ) {
            alt460=1;
        }
        else if ( (LA460_0==152) ) {
            alt460=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 460, 0, input);

            throw nvae;
        }
        switch (alt460) {
            case 1 :
                // InternalKim.g:9524:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:9524:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:9525:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,151,FOLLOW_6); if (state.failed) return ;
                // InternalKim.g:9529:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:9530:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:9530:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:9531:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9548:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop458:
                do {
                    int alt458=2;
                    int LA458_0 = input.LA(1);

                    if ( (LA458_0==25) ) {
                        alt458=1;
                    }


                    switch (alt458) {
                	case 1 :
                	    // InternalKim.g:9549:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,25,FOLLOW_6); if (state.failed) return ;
                	    // InternalKim.g:9553:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:9554:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:9554:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:9555:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop458;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:9575:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:9575:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:9576:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:9576:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:9577:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:9577:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:9578:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,152,FOLLOW_20); if (state.failed) return ;

                }


                }

                // InternalKim.g:9590:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:9591:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9591:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:9592:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9609:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop459:
                do {
                    int alt459=2;
                    int LA459_0 = input.LA(1);

                    if ( (LA459_0==25) ) {
                        alt459=1;
                    }


                    switch (alt459) {
                	case 1 :
                	    // InternalKim.g:9610:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
                	    // InternalKim.g:9614:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9615:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9615:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:9616:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop459;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred353_InternalKim

    // $ANTLR start synpred355_InternalKim
    public final void synpred355_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:9641:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:9641:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:9641:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:9642:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:9642:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:9643:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:9646:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:9646:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "true");
        }
        // InternalKim.g:9646:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:9646:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,153,FOLLOW_129); if (state.failed) return ;
        // InternalKim.g:9650:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt461=2;
        int LA461_0 = input.LA(1);

        if ( (LA461_0==154) ) {
            alt461=1;
        }
        else if ( (LA461_0==RULE_LOWERCASE_ID||(LA461_0>=RULE_CAMELCASE_ID && LA461_0<=RULE_LOWERCASE_DASHID)||LA461_0==36||(LA461_0>=111 && LA461_0<=112)||(LA461_0>=120 && LA461_0<=121)||(LA461_0>=123 && LA461_0<=135)) ) {
            alt461=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 461, 0, input);

            throw nvae;
        }
        switch (alt461) {
            case 1 :
                // InternalKim.g:9651:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                {
                // InternalKim.g:9651:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:9652:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                {
                otherlv_28=(Token)match(input,154,FOLLOW_130); if (state.failed) return ;
                // InternalKim.g:9656:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:9657:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:9657:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                // InternalKim.g:9658:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
                {
                lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9676:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:9676:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:9677:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:9677:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:9678:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred355_InternalKim

    // $ANTLR start synpred357_InternalKim
    public final void synpred357_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:9702:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:9702:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:9702:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:9703:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred357_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:9703:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:9704:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:9707:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:9707:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred357_InternalKim", "true");
        }
        // InternalKim.g:9707:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:9707:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,155,FOLLOW_131); if (state.failed) return ;
        // InternalKim.g:9711:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:9712:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:9712:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:9713:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9730:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop462:
        do {
            int alt462=2;
            int LA462_0 = input.LA(1);

            if ( (LA462_0==25) ) {
                alt462=1;
            }


            switch (alt462) {
        	case 1 :
        	    // InternalKim.g:9731:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,25,FOLLOW_131); if (state.failed) return ;
        	    // InternalKim.g:9735:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:9736:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:9736:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:9737:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop462;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred357_InternalKim

    // $ANTLR start synpred358_InternalKim
    public final void synpred358_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:9761:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9761:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9761:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9762:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred358_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:9762:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9763:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:9766:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9766:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred358_InternalKim", "true");
        }
        // InternalKim.g:9766:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9766:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,156,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9770:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:9771:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9771:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:9772:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred358_InternalKim

    // $ANTLR start synpred359_InternalKim
    public final void synpred359_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:9795:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9795:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9795:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9796:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:9796:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9797:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:9800:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9800:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "true");
        }
        // InternalKim.g:9800:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9800:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,157,FOLLOW_71); if (state.failed) return ;
        otherlv_38=(Token)match(input,40,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9808:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:9809:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9809:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:9810:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred359_InternalKim

    // $ANTLR start synpred360_InternalKim
    public final void synpred360_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:9833:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9833:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9833:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9834:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred360_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:9834:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9835:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:9838:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9838:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred360_InternalKim", "true");
        }
        // InternalKim.g:9838:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9838:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,158,FOLLOW_71); if (state.failed) return ;
        otherlv_41=(Token)match(input,40,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9846:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:9847:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9847:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:9848:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred360_InternalKim

    // $ANTLR start synpred361_InternalKim
    public final void synpred361_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:9871:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9871:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9871:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9872:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred361_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:9872:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9873:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:9876:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9876:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred361_InternalKim", "true");
        }
        // InternalKim.g:9876:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9876:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,159,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9880:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:9881:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9881:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:9882:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred361_InternalKim

    // $ANTLR start synpred362_InternalKim
    public final void synpred362_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:9905:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9905:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9905:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9906:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred362_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:9906:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9907:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:9910:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9910:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred362_InternalKim", "true");
        }
        // InternalKim.g:9910:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9910:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,160,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9914:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:9915:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9915:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:9916:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred362_InternalKim

    // $ANTLR start synpred363_InternalKim
    public final void synpred363_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:9939:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9939:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9939:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9940:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred363_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:9940:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9941:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:9944:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9944:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred363_InternalKim", "true");
        }
        // InternalKim.g:9944:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9944:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,161,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9948:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:9949:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9949:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:9950:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred363_InternalKim

    // $ANTLR start synpred365_InternalKim
    public final void synpred365_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:9973:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9973:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:9973:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9974:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred365_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:9974:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9975:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:9978:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9978:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred365_InternalKim", "true");
        }
        // InternalKim.g:9978:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9978:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,162,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:9982:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:9983:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9983:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:9984:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10001:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop463:
        do {
            int alt463=2;
            int LA463_0 = input.LA(1);

            if ( (LA463_0==25) ) {
                alt463=1;
            }


            switch (alt463) {
        	case 1 :
        	    // InternalKim.g:10002:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10006:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10007:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10007:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:10008:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop463;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred365_InternalKim

    // $ANTLR start synpred370_InternalKim
    public final void synpred370_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:10032:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:10032:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:10032:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10033:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred370_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:10033:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10034:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:10037:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10037:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred370_InternalKim", "true");
        }
        // InternalKim.g:10037:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10037:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,163,FOLLOW_132); if (state.failed) return ;
        otherlv_54=(Token)match(input,164,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10045:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:10046:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10046:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:10047:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_133);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10064:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop465:
        do {
            int alt465=2;
            int LA465_0 = input.LA(1);

            if ( (LA465_0==25) ) {
                alt465=1;
            }


            switch (alt465) {
        	case 1 :
        	    // InternalKim.g:10065:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10069:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10070:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10070:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:10071:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_133);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop465;
            }
        } while (true);

        // InternalKim.g:10089:9: (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt467=2;
        int LA467_0 = input.LA(1);

        if ( (LA467_0==103) ) {
            alt467=1;
        }
        switch (alt467) {
            case 1 :
                // InternalKim.g:10090:10: otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,103,FOLLOW_20); if (state.failed) return ;
                // InternalKim.g:10094:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:10095:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:10095:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:10096:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_134);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10113:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop466:
                do {
                    int alt466=2;
                    int LA466_0 = input.LA(1);

                    if ( (LA466_0==25) ) {
                        alt466=1;
                    }


                    switch (alt466) {
                	case 1 :
                	    // InternalKim.g:10114:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
                	    // InternalKim.g:10118:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:10119:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:10119:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:10120:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_134);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop466;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:10139:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10140:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,48,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10144:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:10145:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10145:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:10146:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_34);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10163:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop468:
        do {
            int alt468=2;
            int LA468_0 = input.LA(1);

            if ( (LA468_0==25) ) {
                alt468=1;
            }


            switch (alt468) {
        	case 1 :
        	    // InternalKim.g:10164:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10168:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10169:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10169:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:10170:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop468;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred370_InternalKim

    // $ANTLR start synpred374_InternalKim
    public final void synpred374_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:10195:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:10195:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:10195:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:10196:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred374_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:10196:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:10197:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:10200:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:10200:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred374_InternalKim", "true");
        }
        // InternalKim.g:10200:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:10200:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,165,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10204:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:10205:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10205:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:10206:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_191);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10223:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop470:
        do {
            int alt470=2;
            int LA470_0 = input.LA(1);

            if ( (LA470_0==25) ) {
                alt470=1;
            }


            switch (alt470) {
        	case 1 :
        	    // InternalKim.g:10224:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10228:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10229:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10229:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:10230:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_191);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop470;
            }
        } while (true);

        // InternalKim.g:10248:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt472=2;
        int LA472_0 = input.LA(1);

        if ( (LA472_0==34) ) {
            alt472=1;
        }
        switch (alt472) {
            case 1 :
                // InternalKim.g:10249:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;
                // InternalKim.g:10253:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:10254:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:10254:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:10255:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_34);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:10272:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop471:
                do {
                    int alt471=2;
                    int LA471_0 = input.LA(1);

                    if ( (LA471_0==25) ) {
                        alt471=1;
                    }


                    switch (alt471) {
                	case 1 :
                	    // InternalKim.g:10273:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
                	    // InternalKim.g:10277:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:10278:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:10278:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:10279:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_34);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop471;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred374_InternalKim

    // $ANTLR start synpred377_InternalKim
    public final void synpred377_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:10304:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10304:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10304:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10305:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred377_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:10305:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10306:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:10309:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10309:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred377_InternalKim", "true");
        }
        // InternalKim.g:10309:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10309:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:10309:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt473=3;
        switch ( input.LA(1) ) {
        case 166:
            {
            alt473=1;
            }
            break;
        case 167:
            {
            alt473=2;
            }
            break;
        case 168:
            {
            alt473=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 473, 0, input);

            throw nvae;
        }

        switch (alt473) {
            case 1 :
                // InternalKim.g:10310:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,166,FOLLOW_108); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:10315:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:10315:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:10316:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:10316:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:10317:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,167,FOLLOW_108); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:10330:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:10330:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:10331:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:10331:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:10332:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,168,FOLLOW_108); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:10345:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:10346:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:10346:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:10347:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,102,FOLLOW_20); if (state.failed) return ;

        }


        }

        // InternalKim.g:10359:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:10360:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10360:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:10361:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred377_InternalKim

    // $ANTLR start synpred379_InternalKim
    public final void synpred379_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:10384:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10384:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10384:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10385:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred379_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:10385:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10386:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:10389:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10389:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred379_InternalKim", "true");
        }
        // InternalKim.g:10389:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10389:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,169,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10393:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:10394:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10394:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:10395:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10412:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop474:
        do {
            int alt474=2;
            int LA474_0 = input.LA(1);

            if ( (LA474_0==25) ) {
                alt474=1;
            }


            switch (alt474) {
        	case 1 :
        	    // InternalKim.g:10413:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10417:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10418:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10418:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:10419:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop474;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred379_InternalKim

    // $ANTLR start synpred381_InternalKim
    public final void synpred381_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:10443:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:10443:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:10443:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:10444:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred381_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:10444:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:10445:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:10448:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:10448:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred381_InternalKim", "true");
        }
        // InternalKim.g:10448:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:10448:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,170,FOLLOW_22); if (state.failed) return ;
        otherlv_84=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10456:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:10457:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:10457:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:10458:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10475:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop475:
        do {
            int alt475=2;
            int LA475_0 = input.LA(1);

            if ( (LA475_0==25) ) {
                alt475=1;
            }


            switch (alt475) {
        	case 1 :
        	    // InternalKim.g:10476:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10480:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:10481:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:10481:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:10482:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop475;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred381_InternalKim

    // $ANTLR start synpred385_InternalKim
    public final void synpred385_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:10506:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10506:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10506:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10507:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred385_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:10507:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10508:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:10511:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10511:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred385_InternalKim", "true");
        }
        // InternalKim.g:10511:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:10511:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,171,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10515:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10516:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10516:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10517:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_22);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10534:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:10535:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;

        }

        // InternalKim.g:10541:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10542:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10542:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10543:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10560:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop476:
        do {
            int alt476=2;
            int LA476_0 = input.LA(1);

            if ( (LA476_0==25) ) {
                alt476=1;
            }


            switch (alt476) {
        	case 1 :
        	    // InternalKim.g:10561:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10565:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10566:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10566:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10567:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_22);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:10584:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:10585:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;

        	    }

        	    // InternalKim.g:10591:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10592:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10592:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10593:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop476;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred385_InternalKim

    // $ANTLR start synpred386_InternalKim
    public final void synpred386_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:10617:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10617:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10617:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10618:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred386_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:10618:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10619:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:10622:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10622:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred386_InternalKim", "true");
        }
        // InternalKim.g:10622:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10622:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,172,FOLLOW_108); if (state.failed) return ;
        otherlv_97=(Token)match(input,102,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10630:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:10631:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10631:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:10632:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred386_InternalKim

    // $ANTLR start synpred388_InternalKim
    public final void synpred388_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:10655:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10655:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10655:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10656:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred388_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:10656:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10657:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:10660:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10660:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred388_InternalKim", "true");
        }
        // InternalKim.g:10660:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10660:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,173,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:10664:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:10665:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10665:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:10666:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10683:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop477:
        do {
            int alt477=2;
            int LA477_0 = input.LA(1);

            if ( (LA477_0==25) ) {
                alt477=1;
            }


            switch (alt477) {
        	case 1 :
        	    // InternalKim.g:10684:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,25,FOLLOW_20); if (state.failed) return ;
        	    // InternalKim.g:10688:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10689:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10689:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:10690:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop477;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred388_InternalKim

    // $ANTLR start synpred391_InternalKim
    public final void synpred391_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:10714:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:10714:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:10714:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:10715:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred391_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:10715:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:10716:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:10719:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:10719:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred391_InternalKim", "true");
        }
        // InternalKim.g:10719:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:10719:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,163,FOLLOW_136); if (state.failed) return ;
        // InternalKim.g:10723:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt478=2;
        int LA478_0 = input.LA(1);

        if ( (LA478_0==83) ) {
            alt478=1;
        }
        switch (alt478) {
            case 1 :
                // InternalKim.g:10724:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:10724:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:10725:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,83,FOLLOW_137); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,174,FOLLOW_138); if (state.failed) return ;
        // InternalKim.g:10741:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:10742:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:10742:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:10743:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_34);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10760:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop479:
        do {
            int alt479=2;
            int LA479_0 = input.LA(1);

            if ( (LA479_0==25) ) {
                alt479=1;
            }


            switch (alt479) {
        	case 1 :
        	    // InternalKim.g:10761:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,25,FOLLOW_138); if (state.failed) return ;
        	    // InternalKim.g:10765:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:10766:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:10766:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:10767:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_34);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop479;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred391_InternalKim

    // $ANTLR start synpred392_InternalKim
    public final void synpred392_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10796:10: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )
        // InternalKim.g:10796:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred392_InternalKim", "true");
        }
        // InternalKim.g:10796:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        // InternalKim.g:10796:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        {
        // InternalKim.g:10796:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        // InternalKim.g:10797:10: lv_restrictions_109_0= ruleRestrictionStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_restrictions_109_0=ruleRestrictionStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred392_InternalKim

    // $ANTLR start synpred393_InternalKim
    public final void synpred393_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10791:4: ( ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) )
        // InternalKim.g:10791:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        {
        // InternalKim.g:10791:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        // InternalKim.g:10792:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred393_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:10792:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        // InternalKim.g:10793:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:10796:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        int cnt480=0;
        loop480:
        do {
            int alt480=2;
            int LA480_0 = input.LA(1);

            if ( (LA480_0==180) && ((true))) {
                alt480=1;
            }
            else if ( (LA480_0==163) && ((true))) {
                alt480=1;
            }
            else if ( (LA480_0==181) && ((true))) {
                alt480=1;
            }
            else if ( (LA480_0==182) && ((true))) {
                alt480=1;
            }


            switch (alt480) {
        	case 1 :
        	    // InternalKim.g:10796:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred393_InternalKim", "true");
        	    }
        	    // InternalKim.g:10796:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    // InternalKim.g:10796:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    {
        	    // InternalKim.g:10796:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    // InternalKim.g:10797:10: lv_restrictions_109_0= ruleRestrictionStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_192);
        	    lv_restrictions_109_0=ruleRestrictionStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt480 >= 1 ) break loop480;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(480, input);
                    throw eee;
            }
            cnt480++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred393_InternalKim

    // $ANTLR start synpred394_InternalKim
    public final void synpred394_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_metadata_112_0 = null;


        // InternalKim.g:10819:4: ( ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:10819:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:10819:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:10820:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred394_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:10820:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:10821:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:10824:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        // InternalKim.g:10824:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred394_InternalKim", "true");
        }
        // InternalKim.g:10824:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        // InternalKim.g:10824:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
        {
        otherlv_110=(Token)match(input,40,FOLLOW_30); if (state.failed) return ;
        otherlv_111=(Token)match(input,41,FOLLOW_31); if (state.failed) return ;
        // InternalKim.g:10832:9: ( (lv_metadata_112_0= ruleMetadata ) )
        // InternalKim.g:10833:10: (lv_metadata_112_0= ruleMetadata )
        {
        // InternalKim.g:10833:10: (lv_metadata_112_0= ruleMetadata )
        // InternalKim.g:10834:11: lv_metadata_112_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_112_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred394_InternalKim

    // $ANTLR start synpred416_InternalKim
    public final void synpred416_InternalKim_fragment() throws RecognitionException {   
        Token lv_none_1_0=null;

        // InternalKim.g:11472:5: ( ( (lv_none_1_0= 'no' ) ) )
        // InternalKim.g:11472:5: ( (lv_none_1_0= 'no' ) )
        {
        // InternalKim.g:11472:5: ( (lv_none_1_0= 'no' ) )
        // InternalKim.g:11473:6: (lv_none_1_0= 'no' )
        {
        // InternalKim.g:11473:6: (lv_none_1_0= 'no' )
        // InternalKim.g:11474:7: lv_none_1_0= 'no'
        {
        lv_none_1_0=(Token)match(input,121,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred416_InternalKim

    // $ANTLR start synpred431_InternalKim
    public final void synpred431_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;


        // InternalKim.g:11876:3: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) )
        // InternalKim.g:11876:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
        {
        // InternalKim.g:11876:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
        // InternalKim.g:11877:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
        {
        // InternalKim.g:11877:4: ( (lv_from_0_0= ruleNumber ) )
        // InternalKim.g:11878:5: (lv_from_0_0= ruleNumber )
        {
        // InternalKim.g:11878:5: (lv_from_0_0= ruleNumber )
        // InternalKim.g:11879:6: lv_from_0_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_from_0_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11896:4: ( ( 'to' )=>otherlv_1= 'to' )
        // InternalKim.g:11897:5: ( 'to' )=>otherlv_1= 'to'
        {
        otherlv_1=(Token)match(input,34,FOLLOW_38); if (state.failed) return ;

        }

        // InternalKim.g:11903:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
        // InternalKim.g:11904:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
        {
        // InternalKim.g:11908:5: (lv_to_2_0= ruleNumber )
        // InternalKim.g:11909:6: lv_to_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_to_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred431_InternalKim

    // $ANTLR start synpred432_InternalKim
    public final void synpred432_InternalKim_fragment() throws RecognitionException {   
        EObject lv_number_3_0 = null;


        // InternalKim.g:11928:3: ( ( (lv_number_3_0= ruleNumber ) ) )
        // InternalKim.g:11928:3: ( (lv_number_3_0= ruleNumber ) )
        {
        // InternalKim.g:11928:3: ( (lv_number_3_0= ruleNumber ) )
        // InternalKim.g:11929:4: (lv_number_3_0= ruleNumber )
        {
        // InternalKim.g:11929:4: (lv_number_3_0= ruleNumber )
        // InternalKim.g:11930:5: lv_number_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_number_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred432_InternalKim

    // $ANTLR start synpred447_InternalKim
    public final void synpred447_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_ids_2_1 = null;


        // InternalKim.g:12306:7: (lv_ids_2_1= rulePathName )
        // InternalKim.g:12306:7: lv_ids_2_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPathNameParserRuleCall_2_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_ids_2_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred447_InternalKim

    // $ANTLR start synpred448_InternalKim
    public final void synpred448_InternalKim_fragment() throws RecognitionException {   
        Token lv_ids_2_2=null;

        // InternalKim.g:12322:7: (lv_ids_2_2= RULE_LOWERCASE_ID )
        // InternalKim.g:12322:7: lv_ids_2_2= RULE_LOWERCASE_ID
        {
        lv_ids_2_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred448_InternalKim

    // $ANTLR start synpred461_InternalKim
    public final void synpred461_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_name_0_1 = null;


        // InternalKim.g:12781:6: (lv_name_0_1= rulePathName )
        // InternalKim.g:12781:6: lv_name_0_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_name_0_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred461_InternalKim

    // $ANTLR start synpred466_InternalKim
    public final void synpred466_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_0_0 = null;


        // InternalKim.g:12961:3: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12961:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:12961:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        // InternalKim.g:12962:4: (lv_concept_0_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12962:4: (lv_concept_0_0= ruleConceptDeclaration )
        // InternalKim.g:12963:5: lv_concept_0_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_0_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred466_InternalKim

    // $ANTLR start synpred467_InternalKim
    public final void synpred467_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:12981:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:12981:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:12981:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:12982:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:12982:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:12983:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred467_InternalKim

    // $ANTLR start synpred468_InternalKim
    public final void synpred468_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_2_0 = null;


        // InternalKim.g:13001:3: ( ( (lv_literal_2_0= ruleLiteral ) ) )
        // InternalKim.g:13001:3: ( (lv_literal_2_0= ruleLiteral ) )
        {
        // InternalKim.g:13001:3: ( (lv_literal_2_0= ruleLiteral ) )
        // InternalKim.g:13002:4: (lv_literal_2_0= ruleLiteral )
        {
        // InternalKim.g:13002:4: (lv_literal_2_0= ruleLiteral )
        // InternalKim.g:13003:5: lv_literal_2_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getLiteralLiteralParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_2_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred468_InternalKim

    // $ANTLR start synpred470_InternalKim
    public final void synpred470_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:13043:6: (lv_id_4_1= rulePathName )
        // InternalKim.g:13043:6: lv_id_4_1= rulePathName
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getIdPathNameParserRuleCall_4_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_id_4_1=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred470_InternalKim

    // $ANTLR start synpred471_InternalKim
    public final void synpred471_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;

        // InternalKim.g:13059:6: (lv_id_4_2= RULE_LOWERCASE_ID )
        // InternalKim.g:13059:6: lv_id_4_2= RULE_LOWERCASE_ID
        {
        lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred471_InternalKim

    // $ANTLR start synpred473_InternalKim
    public final void synpred473_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_4_2=null;
        Token lv_id_4_3=null;
        Token lv_id_4_4=null;
        AntlrDatatypeRuleToken lv_id_4_1 = null;


        // InternalKim.g:13040:3: ( ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:13040:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:13040:3: ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:13041:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:13041:4: ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) )
        // InternalKim.g:13042:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:13042:5: (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID )
        int alt505=4;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            int LA505_1 = input.LA(2);

            if ( (synpred470_InternalKim()) ) {
                alt505=1;
            }
            else if ( (synpred471_InternalKim()) ) {
                alt505=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 505, 1, input);

                throw nvae;
            }
            }
            break;
        case RULE_LOWERCASE_DASHID:
            {
            alt505=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt505=3;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt505=4;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 505, 0, input);

            throw nvae;
        }

        switch (alt505) {
            case 1 :
                // InternalKim.g:13043:6: lv_id_4_1= rulePathName
                {
                pushFollow(FOLLOW_2);
                lv_id_4_1=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13059:6: lv_id_4_2= RULE_LOWERCASE_ID
                {
                lv_id_4_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:13074:6: lv_id_4_3= RULE_UPPERCASE_ID
                {
                lv_id_4_3=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 4 :
                // InternalKim.g:13089:6: lv_id_4_4= RULE_CAMELCASE_ID
                {
                lv_id_4_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred473_InternalKim

    // $ANTLR start synpred474_InternalKim
    public final void synpred474_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_5_0 = null;


        // InternalKim.g:13107:3: ( ( (lv_list_5_0= ruleList ) ) )
        // InternalKim.g:13107:3: ( (lv_list_5_0= ruleList ) )
        {
        // InternalKim.g:13107:3: ( (lv_list_5_0= ruleList ) )
        // InternalKim.g:13108:4: (lv_list_5_0= ruleList )
        {
        // InternalKim.g:13108:4: (lv_list_5_0= ruleList )
        // InternalKim.g:13109:5: lv_list_5_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithIdAndConceptAccess().getListListParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_5_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred474_InternalKim

    // $ANTLR start synpred478_InternalKim
    public final void synpred478_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:13220:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:13220:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:13220:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:13221:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:13221:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:13222:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred478_InternalKim

    // $ANTLR start synpred482_InternalKim
    public final void synpred482_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;

        // InternalKim.g:13259:3: ( ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:13259:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:13259:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:13260:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:13260:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:13261:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:13261:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        int alt506=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt506=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt506=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt506=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 506, 0, input);

            throw nvae;
        }

        switch (alt506) {
            case 1 :
                // InternalKim.g:13262:6: lv_id_3_1= RULE_LOWERCASE_ID
                {
                lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13277:6: lv_id_3_2= RULE_UPPERCASE_ID
                {
                lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:13292:6: lv_id_3_3= RULE_CAMELCASE_ID
                {
                lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred482_InternalKim

    // $ANTLR start synpred525_InternalKim
    public final void synpred525_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_by_3_0 = null;


        // InternalKim.g:13925:4: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:13925:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:13925:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:13926:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred525_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:13926:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        // InternalKim.g:13927:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:13930:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        // InternalKim.g:13930:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred525_InternalKim", "true");
        }
        // InternalKim.g:13930:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        // InternalKim.g:13930:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
        {
        otherlv_2=(Token)match(input,96,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:13934:9: ( (lv_by_3_0= ruleConcept ) )
        // InternalKim.g:13935:10: (lv_by_3_0= ruleConcept )
        {
        // InternalKim.g:13935:10: (lv_by_3_0= ruleConcept )
        // InternalKim.g:13936:11: lv_by_3_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_3_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred525_InternalKim

    // $ANTLR start synpred526_InternalKim
    public final void synpred526_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_5=null;
        EObject lv_downTo_6_0 = null;


        // InternalKim.g:13959:4: ( ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:13959:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:13959:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:13960:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred526_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:13960:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:13961:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:13964:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) )
        // InternalKim.g:13964:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred526_InternalKim", "true");
        }
        // InternalKim.g:13964:19: (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) )
        // InternalKim.g:13964:20: otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) )
        {
        otherlv_4=(Token)match(input,97,FOLLOW_22); if (state.failed) return ;
        otherlv_5=(Token)match(input,34,FOLLOW_20); if (state.failed) return ;
        // InternalKim.g:13972:9: ( (lv_downTo_6_0= ruleConcept ) )
        // InternalKim.g:13973:10: (lv_downTo_6_0= ruleConcept )
        {
        // InternalKim.g:13973:10: (lv_downTo_6_0= ruleConcept )
        // InternalKim.g:13974:11: lv_downTo_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToConceptParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_downTo_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred526_InternalKim

    // $ANTLR start synpred527_InternalKim
    public final void synpred527_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;


        // InternalKim.g:13997:4: ( ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:13997:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:13997:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:13998:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred527_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:13998:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:13999:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:14002:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        // InternalKim.g:14002:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred527_InternalKim", "true");
        }
        // InternalKim.g:14002:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        // InternalKim.g:14002:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
        {
        otherlv_7=(Token)match(input,33,FOLLOW_22); if (state.failed) return ;
        otherlv_8=(Token)match(input,34,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:14010:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
        // InternalKim.g:14011:10: (lv_accordingTo_9_0= rulePropertyId )
        {
        // InternalKim.g:14011:10: (lv_accordingTo_9_0= rulePropertyId )
        // InternalKim.g:14012:11: lv_accordingTo_9_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_9_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred527_InternalKim

    // $ANTLR start synpred528_InternalKim
    public final void synpred528_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_11_0 = null;


        // InternalKim.g:14046:11: ( ( (lv_unit_11_0= ruleUnit ) ) )
        // InternalKim.g:14046:11: ( (lv_unit_11_0= ruleUnit ) )
        {
        // InternalKim.g:14046:11: ( (lv_unit_11_0= ruleUnit ) )
        // InternalKim.g:14047:12: (lv_unit_11_0= ruleUnit )
        {
        // InternalKim.g:14047:12: (lv_unit_11_0= ruleUnit )
        // InternalKim.g:14048:13: lv_unit_11_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_11_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred528_InternalKim

    // $ANTLR start synpred530_InternalKim
    public final void synpred530_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;


        // InternalKim.g:14035:4: ( ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:14035:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:14035:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:14036:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred530_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:14036:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:14037:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:14040:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        // InternalKim.g:14040:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred530_InternalKim", "true");
        }
        // InternalKim.g:14040:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        int alt509=2;
        int LA509_0 = input.LA(1);

        if ( (LA509_0==48) ) {
            alt509=1;
        }
        else if ( (LA509_0==98) ) {
            alt509=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 509, 0, input);

            throw nvae;
        }
        switch (alt509) {
            case 1 :
                // InternalKim.g:14040:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:14040:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                // InternalKim.g:14041:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                {
                otherlv_10=(Token)match(input,48,FOLLOW_95); if (state.failed) return ;
                // InternalKim.g:14045:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                int alt508=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA508_1 = input.LA(2);

                    if ( (synpred528_InternalKim()) ) {
                        alt508=1;
                    }
                    else if ( (true) ) {
                        alt508=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 508, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA508_2 = input.LA(2);

                    if ( (LA508_2==90||LA508_2==92) ) {
                        alt508=2;
                    }
                    else if ( (LA508_2==EOF||LA508_2==38||LA508_2==91||LA508_2==238) ) {
                        alt508=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 508, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 36:
                case 38:
                case 91:
                case 231:
                case 232:
                case 238:
                    {
                    alt508=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                case RULE_LOWERCASE_DASHID:
                    {
                    alt508=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 508, 0, input);

                    throw nvae;
                }

                switch (alt508) {
                    case 1 :
                        // InternalKim.g:14046:11: ( (lv_unit_11_0= ruleUnit ) )
                        {
                        // InternalKim.g:14046:11: ( (lv_unit_11_0= ruleUnit ) )
                        // InternalKim.g:14047:12: (lv_unit_11_0= ruleUnit )
                        {
                        // InternalKim.g:14047:12: (lv_unit_11_0= ruleUnit )
                        // InternalKim.g:14048:13: lv_unit_11_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_11_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:14066:11: ( (lv_currency_12_0= ruleCurrency ) )
                        {
                        // InternalKim.g:14066:11: ( (lv_currency_12_0= ruleCurrency ) )
                        // InternalKim.g:14067:12: (lv_currency_12_0= ruleCurrency )
                        {
                        // InternalKim.g:14067:12: (lv_currency_12_0= ruleCurrency )
                        // InternalKim.g:14068:13: lv_currency_12_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_12_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:14088:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                {
                // InternalKim.g:14088:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                // InternalKim.g:14089:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
                {
                otherlv_13=(Token)match(input,98,FOLLOW_188); if (state.failed) return ;
                // InternalKim.g:14093:10: ( (lv_unit_14_0= ruleUnit ) )
                // InternalKim.g:14094:11: (lv_unit_14_0= ruleUnit )
                {
                // InternalKim.g:14094:11: (lv_unit_14_0= ruleUnit )
                // InternalKim.g:14095:12: lv_unit_14_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_14_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred530_InternalKim

    // $ANTLR start synpred531_InternalKim
    public final void synpred531_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;


        // InternalKim.g:14119:4: ( ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:14119:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:14119:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:14120:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred531_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:14120:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        // InternalKim.g:14121:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:14124:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        // InternalKim.g:14124:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred531_InternalKim", "true");
        }
        // InternalKim.g:14124:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        // InternalKim.g:14124:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
        {
        // InternalKim.g:14124:20: ( (lv_from_15_0= ruleNumber ) )
        // InternalKim.g:14125:10: (lv_from_15_0= ruleNumber )
        {
        // InternalKim.g:14125:10: (lv_from_15_0= ruleNumber )
        // InternalKim.g:14126:11: lv_from_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
          										
        }
        pushFollow(FOLLOW_22);
        lv_from_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,34,FOLLOW_38); if (state.failed) return ;
        // InternalKim.g:14147:9: ( (lv_to_17_0= ruleNumber ) )
        // InternalKim.g:14148:10: (lv_to_17_0= ruleNumber )
        {
        // InternalKim.g:14148:10: (lv_to_17_0= ruleNumber )
        // InternalKim.g:14149:11: lv_to_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred531_InternalKim

    // $ANTLR start synpred532_InternalKim
    public final void synpred532_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token lv_name_19_0=null;

        // InternalKim.g:14172:4: ( ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:14172:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:14172:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:14173:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred532_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:14173:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:14174:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:14177:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:14177:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred532_InternalKim", "true");
        }
        // InternalKim.g:14177:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:14177:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_18=(Token)match(input,101,FOLLOW_61); if (state.failed) return ;
        // InternalKim.g:14181:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:14182:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:14182:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        // InternalKim.g:14183:11: lv_name_19_0= RULE_LOWERCASE_ID
        {
        lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred532_InternalKim

    // $ANTLR start synpred542_InternalKim
    public final void synpred542_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:14534:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:14534:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:14534:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:14535:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred542_InternalKim

    // $ANTLR start synpred549_InternalKim
    public final void synpred549_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14741:4: ( ( RULE_INT ) )
        // InternalKim.g:14741:5: ( RULE_INT )
        {
        // InternalKim.g:14741:5: ( RULE_INT )
        // InternalKim.g:14742:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred549_InternalKim

    // $ANTLR start synpred550_InternalKim
    public final void synpred550_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14763:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:14763:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14763:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:14764:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:14764:5: ( ( '.' ) )
        // InternalKim.g:14765:6: ( '.' )
        {
        // InternalKim.g:14765:6: ( '.' )
        // InternalKim.g:14766:7: '.'
        {
        match(input,92,FOLLOW_74); if (state.failed) return ;

        }


        }

        // InternalKim.g:14769:5: ( ( RULE_INT ) )
        // InternalKim.g:14770:6: ( RULE_INT )
        {
        // InternalKim.g:14770:6: ( RULE_INT )
        // InternalKim.g:14771:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred550_InternalKim

    // $ANTLR start synpred554_InternalKim
    public final void synpred554_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14812:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:14812:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14812:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:14813:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:14813:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:14814:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:14814:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:14815:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=233 && input.LA(1)<=234) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:14822:5: ( '+' | ( ( '-' ) ) )?
        int alt511=3;
        int LA511_0 = input.LA(1);

        if ( (LA511_0==231) ) {
            alt511=1;
        }
        else if ( (LA511_0==232) ) {
            alt511=2;
        }
        switch (alt511) {
            case 1 :
                // InternalKim.g:14823:6: '+'
                {
                match(input,231,FOLLOW_74); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14825:6: ( ( '-' ) )
                {
                // InternalKim.g:14825:6: ( ( '-' ) )
                // InternalKim.g:14826:7: ( '-' )
                {
                // InternalKim.g:14826:7: ( '-' )
                // InternalKim.g:14827:8: '-'
                {
                match(input,232,FOLLOW_74); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:14831:5: ( ( RULE_INT ) )
        // InternalKim.g:14832:6: ( RULE_INT )
        {
        // InternalKim.g:14832:6: ( RULE_INT )
        // InternalKim.g:14833:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred554_InternalKim

    // $ANTLR start synpred565_InternalKim
    public final void synpred565_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:15096:4: (this_PathName_0= rulePathName )
        // InternalKim.g:15096:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred565_InternalKim

    // $ANTLR start synpred570_InternalKim
    public final void synpred570_InternalKim_fragment() throws RecognitionException {   
        Token this_LOWERCASE_ID_6=null;

        // InternalKim.g:15199:4: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID )
        // InternalKim.g:15199:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
        {
        this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred570_InternalKim

    // Delegated rules

    public final boolean synpred314_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred314_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred358_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred358_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred121_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred121_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred316_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred316_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred359_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred353_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred353_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred391_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred391_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred128_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred128_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred394_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred394_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred542_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred542_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred393_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred393_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred392_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred392_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred232_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred232_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred233_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred233_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred158_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred158_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred125_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred125_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred549_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred549_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred151_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred151_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred194_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred194_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred388_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred388_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred304_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred304_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred365_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred365_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred192_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred192_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred196_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred196_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred326_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred326_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred363_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred363_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred328_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred328_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred385_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred385_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred349_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred349_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred195_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred195_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred386_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred386_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred173_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred173_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred19_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred19_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred381_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred381_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred361_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred361_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred309_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred309_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred247_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred247_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred225_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred225_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred246_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred246_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred245_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred245_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred468_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred468_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred360_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred360_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred447_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred447_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred467_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred467_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred466_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred466_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred227_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred227_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred248_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred248_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred249_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred249_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred461_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred461_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred482_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred482_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred140_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred140_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred377_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred377_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred181_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred181_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred528_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred528_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred333_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred333_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred332_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred332_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred374_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred374_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred184_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred184_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred370_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred370_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred565_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred565_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred109_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred109_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred416_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred416_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred253_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred253_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred448_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred448_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred254_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred254_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred251_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred251_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred252_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred252_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred147_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred147_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred189_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred189_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred525_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred525_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred250_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred250_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred526_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred526_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred134_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred134_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred527_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred527_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred7_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred7_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred77_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred77_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred188_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred188_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred78_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred78_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred75_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred75_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred10_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred10_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred72_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred72_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred73_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred73_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred554_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred554_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred532_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred532_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred531_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred531_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred550_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred550_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred530_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred530_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred478_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred478_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred570_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred570_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred432_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred432_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred473_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred473_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred431_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred431_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred470_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred470_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred474_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred474_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred379_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred379_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred471_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred471_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred357_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred357_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA12 dfa12 = new DFA12(this);
    protected DFA11 dfa11 = new DFA11(this);
    protected DFA39 dfa39 = new DFA39(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA43 dfa43 = new DFA43(this);
    protected DFA47 dfa47 = new DFA47(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA58 dfa58 = new DFA58(this);
    protected DFA64 dfa64 = new DFA64(this);
    protected DFA71 dfa71 = new DFA71(this);
    protected DFA74 dfa74 = new DFA74(this);
    protected DFA77 dfa77 = new DFA77(this);
    protected DFA81 dfa81 = new DFA81(this);
    protected DFA88 dfa88 = new DFA88(this);
    protected DFA92 dfa92 = new DFA92(this);
    protected DFA107 dfa107 = new DFA107(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA123 dfa123 = new DFA123(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA128 dfa128 = new DFA128(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA142 dfa142 = new DFA142(this);
    protected DFA139 dfa139 = new DFA139(this);
    protected DFA144 dfa144 = new DFA144(this);
    protected DFA146 dfa146 = new DFA146(this);
    protected DFA147 dfa147 = new DFA147(this);
    protected DFA177 dfa177 = new DFA177(this);
    protected DFA182 dfa182 = new DFA182(this);
    protected DFA183 dfa183 = new DFA183(this);
    protected DFA189 dfa189 = new DFA189(this);
    protected DFA224 dfa224 = new DFA224(this);
    protected DFA238 dfa238 = new DFA238(this);
    protected DFA251 dfa251 = new DFA251(this);
    protected DFA255 dfa255 = new DFA255(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA267 dfa267 = new DFA267(this);
    protected DFA269 dfa269 = new DFA269(this);
    protected DFA271 dfa271 = new DFA271(this);
    protected DFA282 dfa282 = new DFA282(this);
    protected DFA287 dfa287 = new DFA287(this);
    protected DFA315 dfa315 = new DFA315(this);
    protected DFA393 dfa393 = new DFA393(this);
    static final String dfa_1s = "\76\uffff";
    static final String dfa_2s = "\1\7\75\uffff";
    static final String dfa_3s = "\1\16\3\0\72\uffff";
    static final String dfa_4s = "\1\u00e0\3\0\72\uffff";
    static final String dfa_5s = "\4\uffff\1\1\2\uffff\1\2\66\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\72\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\3\1\2\1\7\57\uffff\6\7\3\4\2\uffff\1\7\13\uffff\1\7\55\uffff\10\7\21\uffff\1\7\13\uffff\4\7\15\uffff\40\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\73\uffff";
    static final String dfa_9s = "\1\16\1\0\60\uffff\1\0\10\uffff";
    static final String dfa_10s = "\1\u00e0\1\0\60\uffff\1\0\10\uffff";
    static final String dfa_11s = "\2\uffff\1\1\55\uffff\1\2\7\uffff\1\4\1\5\1\3";
    static final String dfa_12s = "\1\uffff\1\0\60\uffff\1\1\10\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\2\60\1\70\57\uffff\1\62\5\60\5\uffff\1\2\13\uffff\1\71\55\uffff\10\2\21\uffff\1\2\13\uffff\4\2\15\uffff\40\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_defineStatement_6_0= ruleDefineStatement ) ) otherlv_7= ';' ) | ( ( (lv_observeStatement_8_0= ruleObserveStatement ) ) otherlv_9= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 48;}

                        else if ( (synpred7_InternalKim()) ) {s = 56;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_50 = input.LA(1);

                         
                        int index4_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 48;}

                        else if ( (synpred6_InternalKim()) ) {s = 58;}

                         
                        input.seek(index4_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\45\uffff";
    static final String dfa_15s = "\1\4\1\uffff\33\0\10\uffff";
    static final String dfa_16s = "\1\u00e8\1\uffff\33\0\10\uffff";
    static final String dfa_17s = "\1\uffff\1\1\33\uffff\1\2\7\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\10\uffff}>";
    static final String[] dfa_19s = {
            "\1\35\1\2\1\4\1\uffff\1\35\1\5\1\3\1\35\1\10\14\uffff\1\35\1\11\1\12\10\uffff\1\34\14\uffff\2\35\46\uffff\1\1\5\uffff\1\35\17\uffff\1\15\1\16\7\uffff\1\13\1\14\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\65\uffff\1\35\51\uffff\1\6\1\7",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA12 extends DFA {

        public DFA12(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 12;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "599:3: ( ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) ) otherlv_8= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA12_2 = input.LA(1);

                         
                        int index12_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA12_3 = input.LA(1);

                         
                        int index12_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA12_4 = input.LA(1);

                         
                        int index12_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA12_5 = input.LA(1);

                         
                        int index12_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA12_6 = input.LA(1);

                         
                        int index12_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA12_7 = input.LA(1);

                         
                        int index12_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA12_8 = input.LA(1);

                         
                        int index12_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA12_9 = input.LA(1);

                         
                        int index12_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA12_10 = input.LA(1);

                         
                        int index12_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA12_11 = input.LA(1);

                         
                        int index12_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA12_12 = input.LA(1);

                         
                        int index12_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA12_13 = input.LA(1);

                         
                        int index12_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA12_14 = input.LA(1);

                         
                        int index12_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA12_15 = input.LA(1);

                         
                        int index12_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA12_16 = input.LA(1);

                         
                        int index12_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA12_17 = input.LA(1);

                         
                        int index12_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA12_18 = input.LA(1);

                         
                        int index12_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA12_19 = input.LA(1);

                         
                        int index12_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA12_20 = input.LA(1);

                         
                        int index12_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA12_21 = input.LA(1);

                         
                        int index12_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA12_22 = input.LA(1);

                         
                        int index12_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA12_23 = input.LA(1);

                         
                        int index12_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA12_24 = input.LA(1);

                         
                        int index12_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA12_25 = input.LA(1);

                         
                        int index12_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA12_26 = input.LA(1);

                         
                        int index12_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA12_27 = input.LA(1);

                         
                        int index12_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA12_28 = input.LA(1);

                         
                        int index12_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred19_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 29;}

                         
                        input.seek(index12_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 12, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\20\uffff";
    static final String dfa_21s = "\1\5\1\uffff\2\27\1\5\1\0\3\uffff\1\5\1\uffff\1\5\1\27\1\44\1\5\1\44";
    static final String dfa_22s = "\1\u00e8\1\uffff\2\134\1\u0087\1\0\3\uffff\1\12\1\uffff\1\12\2\134\1\12\1\134";
    static final String dfa_23s = "\1\uffff\1\1\4\uffff\1\3\1\4\1\5\1\uffff\1\2\5\uffff";
    static final String dfa_24s = "\5\uffff\1\0\12\uffff}>";
    static final String[] dfa_25s = {
            "\1\2\1\4\2\uffff\1\5\1\3\1\uffff\1\6\15\uffff\2\7\10\uffff\1\10\64\uffff\1\1\25\uffff\2\10\7\uffff\2\10\1\uffff\15\10\137\uffff\2\6",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\12\20\uffff\1\1\44\uffff\1\13\1\1\1\11",
            "\1\1\1\uffff\1\1\12\uffff\1\12\20\uffff\1\1\44\uffff\1\13\1\1\1\11",
            "\1\10\3\uffff\2\10\14\uffff\1\1\1\uffff\1\1\12\uffff\1\10\112\uffff\2\10\7\uffff\2\10\1\uffff\15\10",
            "\1\uffff",
            "",
            "",
            "",
            "\1\14\4\uffff\1\15",
            "",
            "\1\1\3\uffff\1\10\1\1",
            "\1\1\1\uffff\1\1\12\uffff\1\12\20\uffff\1\1\44\uffff\1\13\1\uffff\1\16",
            "\1\12\65\uffff\1\13\1\uffff\1\16",
            "\1\17\4\uffff\1\15",
            "\1\12\65\uffff\1\13\1\uffff\1\16"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA11 extends DFA {

        public DFA11(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 11;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "600:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA11_5 = input.LA(1);

                         
                        int index11_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index11_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 11, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\51\uffff";
    static final String dfa_27s = "\1\5\2\uffff\3\0\1\uffff\1\0\24\uffff\1\0\14\uffff";
    static final String dfa_28s = "\1\u00e8\2\uffff\3\0\1\uffff\1\0\24\uffff\1\0\14\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\uffff\1\6\24\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\5\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\1\uffff\1\3\24\uffff\1\4\14\uffff}>";
    static final String[] dfa_31s = {
            "\1\10\1\7\2\uffff\2\10\1\uffff\1\5\15\uffff\2\1\10\uffff\1\34\1\uffff\1\44\11\uffff\1\6\1\43\75\uffff\2\10\7\uffff\2\10\1\uffff\15\10\70\uffff\1\35\40\uffff\5\35\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA39 extends DFA {

        public DFA39(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 39;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1414:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA39_3 = input.LA(1);

                         
                        int index39_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalKim()) ) {s = 37;}

                        else if ( (synpred55_InternalKim()) ) {s = 38;}

                         
                        input.seek(index39_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA39_4 = input.LA(1);

                         
                        int index39_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalKim()) ) {s = 37;}

                        else if ( (synpred55_InternalKim()) ) {s = 38;}

                         
                        input.seek(index39_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA39_5 = input.LA(1);

                         
                        int index39_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred54_InternalKim()) ) {s = 37;}

                        else if ( (synpred55_InternalKim()) ) {s = 38;}

                         
                        input.seek(index39_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA39_7 = input.LA(1);

                         
                        int index39_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred57_InternalKim()) ) {s = 39;}

                        else if ( (synpred58_InternalKim()) ) {s = 8;}

                         
                        input.seek(index39_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA39_28 = input.LA(1);

                         
                        int index39_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred58_InternalKim()) ) {s = 8;}

                        else if ( (synpred61_InternalKim()) ) {s = 40;}

                         
                        input.seek(index39_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 39, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\5\2\uffff\3\0\1\uffff\1\0\3\uffff\2\0\34\uffff";
    static final String dfa_33s = "\1\u00e8\2\uffff\3\0\1\uffff\1\0\3\uffff\2\0\34\uffff";
    static final String dfa_34s = "\3\uffff\1\0\1\1\1\2\1\uffff\1\3\3\uffff\1\4\1\5\34\uffff}>";
    static final String[] dfa_35s = {
            "\1\13\1\7\2\uffff\1\10\1\14\1\uffff\1\5\15\uffff\2\1\10\uffff\1\10\1\uffff\1\44\11\uffff\1\6\1\43\75\uffff\2\10\7\uffff\2\10\1\uffff\15\10\70\uffff\1\35\40\uffff\5\35\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_29;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "1772:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA44_3 = input.LA(1);

                         
                        int index44_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalKim()) ) {s = 37;}

                        else if ( (synpred73_InternalKim()) ) {s = 38;}

                         
                        input.seek(index44_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA44_4 = input.LA(1);

                         
                        int index44_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalKim()) ) {s = 37;}

                        else if ( (synpred73_InternalKim()) ) {s = 38;}

                         
                        input.seek(index44_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA44_5 = input.LA(1);

                         
                        int index44_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred72_InternalKim()) ) {s = 37;}

                        else if ( (synpred73_InternalKim()) ) {s = 38;}

                         
                        input.seek(index44_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA44_7 = input.LA(1);

                         
                        int index44_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred75_InternalKim()) ) {s = 39;}

                        else if ( (synpred76_InternalKim()) ) {s = 8;}

                         
                        input.seek(index44_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA44_11 = input.LA(1);

                         
                        int index44_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalKim()) ) {s = 8;}

                        else if ( (synpred78_InternalKim()) ) {s = 40;}

                         
                        input.seek(index44_11);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA44_12 = input.LA(1);

                         
                        int index44_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred76_InternalKim()) ) {s = 8;}

                        else if ( (synpred78_InternalKim()) ) {s = 40;}

                         
                        input.seek(index44_12);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 44, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\13\uffff";
    static final String dfa_37s = "\1\uffff\1\4\3\uffff\2\7\1\11\3\uffff";
    static final String dfa_38s = "\1\5\1\132\1\uffff\1\4\1\uffff\2\31\1\0\1\4\1\uffff\1\0";
    static final String dfa_39s = "\1\12\1\134\1\uffff\1\u00e8\1\uffff\2\167\1\0\1\u00e8\1\uffff\1\0";
    static final String dfa_40s = "\2\uffff\1\2\1\uffff\1\1\4\uffff\1\1\1\uffff";
    static final String dfa_41s = "\12\uffff\1\0}>";
    static final String[] dfa_42s = {
            "\1\1\4\uffff\1\2",
            "\1\3\1\uffff\1\2",
            "",
            "\1\4\1\5\1\4\1\uffff\2\4\1\6\1\uffff\1\4\15\uffff\2\4\10\uffff\1\4\14\uffff\2\4\74\uffff\2\4\7\uffff\2\4\1\uffff\15\4\65\uffff\1\4\51\uffff\2\4",
            "",
            "\1\4\12\uffff\1\4\65\uffff\1\10\1\uffff\1\4\32\uffff\1\4",
            "\1\4\12\uffff\1\4\65\uffff\1\10\1\uffff\1\4\32\uffff\1\4",
            "\1\uffff",
            "\3\2\1\uffff\1\2\1\12\1\2\1\uffff\1\2\15\uffff\2\2\10\uffff\1\2\14\uffff\2\2\74\uffff\2\2\7\uffff\2\2\1\uffff\15\2\65\uffff\1\2\51\uffff\2\2",
            "",
            "\1\uffff"
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA43 extends DFA {

        public DFA43(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 43;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "1986:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA43_10 = input.LA(1);

                         
                        int index43_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred77_InternalKim()) ) {s = 9;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index43_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 43, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_43s = "\10\uffff";
    static final String dfa_44s = "\2\uffff\1\3\4\uffff\1\3";
    static final String dfa_45s = "\1\5\1\7\1\5\2\uffff\1\5\1\7\1\5";
    static final String dfa_46s = "\1\u00e8\1\134\1\u0087\2\uffff\1\u00e8\1\134\1\u0087";
    static final String dfa_47s = "\3\uffff\1\2\1\1\3\uffff";
    static final String dfa_48s = "\10\uffff}>";
    static final String[] dfa_49s = {
            "\1\1\1\2\1\uffff\3\3\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\1\uffff\1\3\11\uffff\2\3\3\uffff\1\3\71\uffff\2\3\7\uffff\2\3\1\uffff\15\3\70\uffff\1\3\40\uffff\5\3\1\uffff\2\3",
            "\1\4\54\uffff\1\4\45\uffff\1\3\1\uffff\1\3",
            "\1\3\1\uffff\1\4\1\uffff\2\3\10\uffff\1\3\5\uffff\1\3\12\uffff\1\3\3\uffff\1\3\12\uffff\1\3\1\5\1\uffff\3\3\66\uffff\2\3\7\uffff\2\3\1\uffff\15\3",
            "",
            "",
            "\1\6\1\7\1\uffff\3\3\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\1\uffff\1\3\11\uffff\2\3\3\uffff\1\3\71\uffff\2\3\7\uffff\2\3\1\uffff\15\3\70\uffff\1\3\40\uffff\5\3\1\uffff\2\3",
            "\1\4\54\uffff\1\4\45\uffff\1\3\1\uffff\1\3",
            "\1\3\1\uffff\1\4\1\uffff\2\3\10\uffff\1\3\5\uffff\1\3\12\uffff\1\3\3\uffff\1\3\12\uffff\1\3\1\5\1\uffff\3\3\66\uffff\2\3\7\uffff\2\3\1\uffff\15\3"
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA47 extends DFA {

        public DFA47(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 47;
            this.eot = dfa_43;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "2235:3: ( ( (lv_headers_0_0= ruleHeaderRow ) ) this_SEPARATOR_1= RULE_SEPARATOR )?";
        }
    }
    static final String dfa_50s = "\27\uffff";
    static final String dfa_51s = "\4\uffff\1\20\1\uffff\1\22\14\uffff\1\20\2\uffff\1\20";
    static final String dfa_52s = "\1\5\1\uffff\2\14\1\23\1\uffff\1\5\6\uffff\3\14\3\uffff\1\23\2\14\1\23";
    static final String dfa_53s = "\1\u00e8\1\uffff\2\14\1\u00ea\1\uffff\1\u0087\6\uffff\1\14\2\u00e8\3\uffff\1\u00ea\2\14\1\70";
    static final String dfa_54s = "\1\uffff\1\1\3\uffff\1\4\1\uffff\1\6\1\7\1\10\1\11\1\12\1\13\3\uffff\1\3\1\2\1\5\4\uffff";
    static final String dfa_55s = "\27\uffff}>";
    static final String[] dfa_56s = {
            "\1\7\1\6\1\uffff\1\11\2\7\1\uffff\1\4\15\uffff\2\1\10\uffff\1\7\1\uffff\1\13\11\uffff\1\5\1\12\3\uffff\1\14\71\uffff\2\7\7\uffff\2\7\1\uffff\15\7\70\uffff\1\10\40\uffff\5\10\1\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\20\5\uffff\1\20\10\uffff\1\21\5\uffff\1\20\5\uffff\2\21\3\uffff\2\20\1\uffff\3\20\43\uffff\1\15\u008c\uffff\1\16\1\17",
            "",
            "\1\7\3\uffff\2\7\10\uffff\1\22\5\uffff\1\22\12\uffff\1\7\3\uffff\1\22\12\uffff\2\22\1\uffff\3\22\66\uffff\2\7\7\uffff\2\7\1\uffff\15\7",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\23",
            "\1\26\u00da\uffff\1\24\1\25",
            "\1\26\u00da\uffff\1\24\1\25",
            "",
            "",
            "",
            "\1\20\5\uffff\1\20\10\uffff\1\21\5\uffff\1\20\5\uffff\2\21\3\uffff\2\20\1\uffff\3\20\u00b0\uffff\1\16\1\17",
            "\1\26",
            "\1\26",
            "\1\20\5\uffff\1\20\10\uffff\1\21\5\uffff\1\20\5\uffff\2\21\3\uffff\2\20\1\uffff\3\20"
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "2480:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_expr_16_0= RULE_EXPR ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) | ( (lv_anything_19_0= '#' ) ) )";
        }
    }
    static final String dfa_57s = "\15\uffff";
    static final String dfa_58s = "\1\1\1\uffff\1\1\1\7\11\uffff";
    static final String dfa_59s = "\1\5\1\uffff\2\5\1\27\2\5\1\uffff\1\27\1\44\1\0\1\5\1\44";
    static final String dfa_60s = "\1\u0087\1\uffff\2\u0087\1\134\2\12\1\uffff\2\134\1\0\1\12\1\134";
    static final String dfa_61s = "\1\uffff\1\2\5\uffff\1\1\5\uffff";
    static final String dfa_62s = "\12\uffff\1\0\2\uffff}>";
    static final String[] dfa_63s = {
            "\2\1\2\uffff\2\1\10\uffff\1\1\5\uffff\1\2\2\uffff\2\1\6\uffff\1\1\3\uffff\1\1\15\uffff\3\1\7\uffff\5\1\24\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "",
            "\1\3\1\1\2\uffff\1\1\1\4\10\uffff\1\1\5\uffff\1\1\3\uffff\1\1\6\uffff\1\1\3\uffff\1\1\60\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "\2\7\2\uffff\2\7\10\uffff\1\7\3\uffff\1\1\1\uffff\1\7\2\uffff\2\7\6\uffff\1\7\3\uffff\1\7\14\uffff\1\1\3\7\7\uffff\5\7\24\uffff\1\7\1\6\1\1\1\5\22\uffff\2\7\7\uffff\2\7\1\uffff\15\7",
            "\1\1\14\uffff\1\7\20\uffff\1\1\44\uffff\1\6\1\1\1\5",
            "\1\10\4\uffff\1\11",
            "\1\1\3\uffff\1\12\1\1",
            "",
            "\1\1\14\uffff\1\7\20\uffff\1\1\44\uffff\1\6\1\uffff\1\13",
            "\1\7\65\uffff\1\6\1\uffff\1\13",
            "\1\uffff",
            "\1\14\4\uffff\1\11",
            "\1\7\65\uffff\1\6\1\uffff\1\13"
    };

    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final short[] dfa_58 = DFA.unpackEncodedString(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final char[] dfa_60 = DFA.unpackEncodedStringToUnsignedChars(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[] dfa_62 = DFA.unpackEncodedString(dfa_62s);
    static final short[][] dfa_63 = unpackEncodedStringArray(dfa_63s);

    class DFA58 extends DFA {

        public DFA58(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 58;
            this.eot = dfa_57;
            this.eof = dfa_58;
            this.min = dfa_59;
            this.max = dfa_60;
            this.accept = dfa_61;
            this.special = dfa_62;
            this.transition = dfa_63;
        }
        public String getDescription() {
            return "()* loopback of 2853:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA58_10 = input.LA(1);

                         
                        int index58_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred109_InternalKim()) ) {s = 7;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index58_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 58, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_64s = "\47\uffff";
    static final String dfa_65s = "\1\2\46\uffff";
    static final String dfa_66s = "\1\5\1\0\45\uffff";
    static final String dfa_67s = "\1\u0087\1\0\45\uffff";
    static final String dfa_68s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_69s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_70s = {
            "\2\2\2\uffff\2\2\10\uffff\1\2\5\uffff\1\2\2\uffff\2\2\6\uffff\1\1\3\uffff\1\2\15\uffff\3\2\7\uffff\5\2\24\uffff\1\2\25\uffff\2\2\7\uffff\2\2\1\uffff\15\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_64 = DFA.unpackEncodedString(dfa_64s);
    static final short[] dfa_65 = DFA.unpackEncodedString(dfa_65s);
    static final char[] dfa_66 = DFA.unpackEncodedStringToUnsignedChars(dfa_66s);
    static final char[] dfa_67 = DFA.unpackEncodedStringToUnsignedChars(dfa_67s);
    static final short[] dfa_68 = DFA.unpackEncodedString(dfa_68s);
    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final short[][] dfa_70 = unpackEncodedStringArray(dfa_70s);

    class DFA64 extends DFA {

        public DFA64(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 64;
            this.eot = dfa_64;
            this.eof = dfa_65;
            this.min = dfa_66;
            this.max = dfa_67;
            this.accept = dfa_68;
            this.special = dfa_69;
            this.transition = dfa_70;
        }
        public String getDescription() {
            return "3103:4: ( (lv_parameters_19_0= ruleList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA64_1 = input.LA(1);

                         
                        int index64_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred121_InternalKim()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index64_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 64, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_71s = "\44\uffff";
    static final String dfa_72s = "\1\1\43\uffff";
    static final String dfa_73s = "\1\5\2\uffff\1\0\40\uffff";
    static final String dfa_74s = "\1\u0087\2\uffff\1\0\40\uffff";
    static final String dfa_75s = "\1\uffff\1\2\41\uffff\1\1";
    static final String dfa_76s = "\3\uffff\1\0\40\uffff}>";
    static final String[] dfa_77s = {
            "\2\1\2\uffff\2\1\10\uffff\1\1\5\uffff\1\3\2\uffff\2\1\6\uffff\1\1\3\uffff\1\1\3\uffff\2\1\10\uffff\3\1\40\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_71 = DFA.unpackEncodedString(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final char[] dfa_73 = DFA.unpackEncodedStringToUnsignedChars(dfa_73s);
    static final char[] dfa_74 = DFA.unpackEncodedStringToUnsignedChars(dfa_74s);
    static final short[] dfa_75 = DFA.unpackEncodedString(dfa_75s);
    static final short[] dfa_76 = DFA.unpackEncodedString(dfa_76s);
    static final short[][] dfa_77 = unpackEncodedStringArray(dfa_77s);

    class DFA71 extends DFA {

        public DFA71(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 71;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "()* loopback of 3317:4: (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA71_3 = input.LA(1);

                         
                        int index71_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred128_InternalKim()) ) {s = 35;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index71_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 71, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA74 extends DFA {

        public DFA74(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 74;
            this.eot = dfa_71;
            this.eof = dfa_72;
            this.min = dfa_73;
            this.max = dfa_74;
            this.accept = dfa_75;
            this.special = dfa_76;
            this.transition = dfa_77;
        }
        public String getDescription() {
            return "()* loopback of 3432:4: (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA74_3 = input.LA(1);

                         
                        int index74_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred134_InternalKim()) ) {s = 35;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index74_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 74, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_78s = "\63\uffff";
    static final String dfa_79s = "\1\1\1\uffff\1\1\34\uffff\2\6\5\uffff\6\6\1\uffff\1\6\1\uffff\2\6\1\uffff\1\6";
    static final String dfa_80s = "\1\5\1\uffff\2\5\2\27\1\uffff\2\132\4\5\1\27\1\44\4\132\3\5\1\44\4\132\2\5\2\132\4\5\1\14\4\5\1\4\3\5\1\14\1\4\1\0\1\5\1\4\1\14\1\4";
    static final String dfa_81s = "\1\u0087\1\uffff\1\u0087\1\12\2\134\1\uffff\2\134\4\12\6\134\3\12\5\134\2\12\2\134\2\u0087\2\12\1\14\1\12\3\u0087\1\u00e8\3\u0087\1\14\1\u0087\1\0\1\u0087\1\u00e8\1\14\1\u00e8";
    static final String dfa_82s = "\1\uffff\1\2\4\uffff\1\1\54\uffff";
    static final String dfa_83s = "\56\uffff\1\0\4\uffff}>";
    static final String[] dfa_84s = {
            "\2\1\2\uffff\2\1\10\uffff\1\1\5\uffff\1\2\2\uffff\2\1\6\uffff\1\1\3\uffff\1\1\3\uffff\2\1\10\uffff\3\1\40\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "",
            "\1\4\1\1\1\uffff\1\6\1\1\1\5\10\uffff\1\1\5\uffff\1\1\3\uffff\1\1\6\uffff\1\1\3\uffff\1\1\27\uffff\5\1\24\uffff\1\3\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "\1\7\4\uffff\1\10",
            "\1\1\14\uffff\1\6\20\uffff\1\1\44\uffff\1\12\1\1\1\11",
            "\1\1\14\uffff\1\6\20\uffff\1\1\44\uffff\1\12\1\1\1\11",
            "",
            "\1\14\1\uffff\1\13",
            "\1\14\1\uffff\1\13",
            "\1\15\4\uffff\1\16",
            "\1\17\3\uffff\1\1\1\20",
            "\1\21\4\uffff\1\22",
            "\1\17\4\uffff\1\20",
            "\1\1\14\uffff\1\6\20\uffff\1\1\44\uffff\1\12\1\uffff\1\23",
            "\1\6\65\uffff\1\12\1\uffff\1\23",
            "\1\25\1\uffff\1\24",
            "\1\25\1\uffff\1\24",
            "\1\14\1\uffff\1\13",
            "\1\14\1\uffff\1\13",
            "\1\26\4\uffff\1\16",
            "\1\27\4\uffff\1\30",
            "\1\31\4\uffff\1\32",
            "\1\6\65\uffff\1\12\1\uffff\1\23",
            "\1\25\1\uffff\1\24",
            "\1\25\1\uffff\1\24",
            "\1\34\1\uffff\1\33",
            "\1\34\1\uffff\1\33",
            "\1\35\4\uffff\1\36",
            "\1\37\4\uffff\1\40",
            "\1\34\1\uffff\1\33",
            "\1\34\1\uffff\1\33",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\1\43\1\42\1\41\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\1\43\1\42\1\41\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\46\4\uffff\1\47",
            "\1\46\4\uffff\1\47",
            "\1\50",
            "\1\51\4\uffff\1\52",
            "\1\53\1\1\2\uffff\2\1\31\uffff\1\1\112\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\1\43\1\42\1\41\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\1\43\1\42\1\41\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\57\1\56\1\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\2\uffff\1\54\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6\140\uffff\1\55",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\10\uffff\3\6\40\uffff\1\6\25\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\10\uffff\3\6\40\uffff\1\6\25\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\2\6\2\uffff\2\6\10\uffff\1\6\5\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\10\uffff\3\6\40\uffff\1\6\1\1\1\uffff\1\1\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\60",
            "\1\57\1\56\1\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\25\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\uffff",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\25\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\57\1\56\1\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\2\uffff\1\61\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6\140\uffff\1\55",
            "\1\62",
            "\1\57\1\56\1\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\45\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\3\uffff\2\6\7\uffff\1\44\3\6\40\uffff\1\6\25\uffff\2\6\7\uffff\2\6\1\uffff\15\6\140\uffff\1\55"
    };

    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[] dfa_79 = DFA.unpackEncodedString(dfa_79s);
    static final char[] dfa_80 = DFA.unpackEncodedStringToUnsignedChars(dfa_80s);
    static final char[] dfa_81 = DFA.unpackEncodedStringToUnsignedChars(dfa_81s);
    static final short[] dfa_82 = DFA.unpackEncodedString(dfa_82s);
    static final short[] dfa_83 = DFA.unpackEncodedString(dfa_83s);
    static final short[][] dfa_84 = unpackEncodedStringArray(dfa_84s);

    class DFA77 extends DFA {

        public DFA77(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 77;
            this.eot = dfa_78;
            this.eof = dfa_79;
            this.min = dfa_80;
            this.max = dfa_81;
            this.accept = dfa_82;
            this.special = dfa_83;
            this.transition = dfa_84;
        }
        public String getDescription() {
            return "()* loopback of 3547:4: (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA77_46 = input.LA(1);

                         
                        int index77_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred140_InternalKim()) ) {s = 6;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index77_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 77, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_85s = "\54\uffff";
    static final String dfa_86s = "\1\22\53\uffff";
    static final String dfa_87s = "\1\4\3\uffff\1\0\3\uffff\3\0\2\uffff\2\0\35\uffff";
    static final String dfa_88s = "\1\u00e8\3\uffff\1\0\3\uffff\3\0\2\uffff\2\0\35\uffff";
    static final String dfa_89s = "\1\uffff\3\1\1\uffff\3\1\3\uffff\2\1\2\uffff\3\1\1\2\31\uffff";
    static final String dfa_90s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\1\4\2\uffff\1\5\1\6\35\uffff}>";
    static final String[] dfa_91s = {
            "\1\14\1\11\1\4\1\uffff\1\13\1\15\1\12\1\7\1\3\6\uffff\1\22\5\uffff\1\10\1\5\1\6\2\22\6\uffff\1\16\3\uffff\1\22\10\uffff\1\21\1\17\3\uffff\3\22\40\uffff\1\22\25\uffff\2\22\7\uffff\2\22\1\uffff\15\22\65\uffff\1\20\51\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[] dfa_86 = DFA.unpackEncodedString(dfa_86s);
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final char[] dfa_88 = DFA.unpackEncodedStringToUnsignedChars(dfa_88s);
    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final short[][] dfa_91 = unpackEncodedStringArray(dfa_91s);

    class DFA81 extends DFA {

        public DFA81(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 81;
            this.eot = dfa_85;
            this.eof = dfa_86;
            this.min = dfa_87;
            this.max = dfa_88;
            this.accept = dfa_89;
            this.special = dfa_90;
            this.transition = dfa_91;
        }
        public String getDescription() {
            return "3679:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA81_0 = input.LA(1);

                         
                        int index81_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA81_0==231) && (synpred147_InternalKim())) {s = 1;}

                        else if ( (LA81_0==232) && (synpred147_InternalKim())) {s = 2;}

                        else if ( (LA81_0==RULE_INT) && (synpred147_InternalKim())) {s = 3;}

                        else if ( (LA81_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA81_0==26) && (synpred147_InternalKim())) {s = 5;}

                        else if ( (LA81_0==27) && (synpred147_InternalKim())) {s = 6;}

                        else if ( (LA81_0==RULE_ID) && (synpred147_InternalKim())) {s = 7;}

                        else if ( (LA81_0==25) ) {s = 8;}

                        else if ( (LA81_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA81_0==RULE_LOWERCASE_DASHID) ) {s = 10;}

                        else if ( (LA81_0==RULE_EXPR) && (synpred147_InternalKim())) {s = 11;}

                        else if ( (LA81_0==RULE_UPPERCASE_ID) && (synpred147_InternalKim())) {s = 12;}

                        else if ( (LA81_0==RULE_CAMELCASE_ID) ) {s = 13;}

                        else if ( (LA81_0==36) ) {s = 14;}

                        else if ( (LA81_0==50) && (synpred147_InternalKim())) {s = 15;}

                        else if ( (LA81_0==189) && (synpred147_InternalKim())) {s = 16;}

                        else if ( (LA81_0==49) && (synpred147_InternalKim())) {s = 17;}

                        else if ( (LA81_0==EOF||LA81_0==19||(LA81_0>=28 && LA81_0<=29)||LA81_0==40||(LA81_0>=54 && LA81_0<=56)||LA81_0==89||(LA81_0>=111 && LA81_0<=112)||(LA81_0>=120 && LA81_0<=121)||(LA81_0>=123 && LA81_0<=135)) ) {s = 18;}

                         
                        input.seek(index81_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA81_4 = input.LA(1);

                         
                        int index81_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index81_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA81_8 = input.LA(1);

                         
                        int index81_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index81_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA81_9 = input.LA(1);

                         
                        int index81_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index81_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA81_10 = input.LA(1);

                         
                        int index81_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index81_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA81_13 = input.LA(1);

                         
                        int index81_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index81_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA81_14 = input.LA(1);

                         
                        int index81_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred147_InternalKim()) ) {s = 17;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index81_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 81, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_92s = "\1\4\10\uffff\1\0\6\uffff";
    static final String dfa_93s = "\1\u00e8\10\uffff\1\0\6\uffff";
    static final String dfa_94s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\uffff\1\5\1\6";
    static final String dfa_95s = "\11\uffff\1\0\6\uffff}>";
    static final String[] dfa_96s = {
            "\1\14\1\11\1\1\1\uffff\1\13\1\14\1\12\2\1\14\uffff\3\1\10\uffff\1\16\14\uffff\1\17\u00b5\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final char[] dfa_93 = DFA.unpackEncodedStringToUnsignedChars(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[] dfa_95 = DFA.unpackEncodedString(dfa_95s);
    static final short[][] dfa_96 = unpackEncodedStringArray(dfa_96s);

    class DFA88 extends DFA {

        public DFA88(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 88;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_92;
            this.max = dfa_93;
            this.accept = dfa_94;
            this.special = dfa_95;
            this.transition = dfa_96;
        }
        public String getDescription() {
            return "3783:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA88_9 = input.LA(1);

                         
                        int index88_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred151_InternalKim()) ) {s = 10;}

                        else if ( (synpred158_InternalKim()) ) {s = 12;}

                         
                        input.seek(index88_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 88, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_97s = "\11\uffff";
    static final String dfa_98s = "\1\5\2\44\2\uffff\1\5\1\uffff\2\44";
    static final String dfa_99s = "\1\131\2\134\2\uffff\1\12\1\uffff\2\134";
    static final String dfa_100s = "\3\uffff\1\2\1\3\1\uffff\1\1\2\uffff";
    static final String dfa_101s = "\11\uffff}>";
    static final String[] dfa_102s = {
            "\1\1\2\uffff\1\3\1\uffff\1\2\116\uffff\1\4",
            "\1\6\65\uffff\1\4\1\uffff\1\5",
            "\1\6\65\uffff\1\4\1\uffff\1\5",
            "",
            "",
            "\1\7\4\uffff\1\10",
            "",
            "\1\6\65\uffff\1\4\1\uffff\1\5",
            "\1\6\65\uffff\1\4\1\uffff\1\5"
    };

    static final short[] dfa_97 = DFA.unpackEncodedString(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final char[] dfa_99 = DFA.unpackEncodedStringToUnsignedChars(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[] dfa_101 = DFA.unpackEncodedString(dfa_101s);
    static final short[][] dfa_102 = unpackEncodedStringArray(dfa_102s);

    class DFA92 extends DFA {

        public DFA92(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 92;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_98;
            this.max = dfa_99;
            this.accept = dfa_100;
            this.special = dfa_101;
            this.transition = dfa_102;
        }
        public String getDescription() {
            return "4066:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )";
        }
    }
    static final String dfa_103s = "\17\uffff";
    static final String dfa_104s = "\1\23\1\uffff\1\5\14\uffff";
    static final String dfa_105s = "\1\127\1\uffff\1\u00bd\14\uffff";
    static final String dfa_106s = "\1\uffff\1\10\1\uffff\1\2\1\3\1\4\1\5\1\6\3\7\4\1";
    static final String dfa_107s = "\1\1\1\uffff\1\0\14\uffff}>";
    static final String[] dfa_108s = {
            "\1\1\11\uffff\1\2\12\uffff\1\1\7\uffff\1\5\36\uffff\1\3\1\4\2\uffff\1\6\1\7\1\10\1\uffff\1\11",
            "",
            "\1\15\4\uffff\1\16\31\uffff\1\13\1\uffff\1\14\u0096\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA107 extends DFA {

        public DFA107(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 107;
            this.eot = dfa_103;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "()* loopback of 4428:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA107_2 = input.LA(1);

                         
                        int index107_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA107_2 == 189 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 10;}

                        else if ( LA107_2 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 11;}

                        else if ( LA107_2 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 12;}

                        else if ( LA107_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 13;}

                        else if ( LA107_2 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 14;}

                         
                        input.seek(index107_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA107_0 = input.LA(1);

                         
                        int index107_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA107_0==19||LA107_0==40) ) {s = 1;}

                        else if ( (LA107_0==29) ) {s = 2;}

                        else if ( LA107_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA107_0 == 80 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA107_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA107_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( LA107_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA107_0 == 85 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA107_0 == 87 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 9;}

                         
                        input.seek(index107_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 107, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\40\uffff";
    static final String dfa_110s = "\1\2\37\uffff";
    static final String dfa_111s = "\1\5\34\0\3\uffff";
    static final String dfa_112s = "\1\u0087\34\0\3\uffff";
    static final String dfa_113s = "\35\uffff\1\2\1\3\1\1";
    static final String dfa_114s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\3\uffff}>";
    static final String[] dfa_115s = {
            "\1\6\1\10\2\uffff\1\11\1\7\10\uffff\1\1\5\uffff\1\3\3\uffff\1\4\6\uffff\1\33\3\uffff\1\34\60\uffff\1\5\25\uffff\1\14\1\15\7\uffff\1\12\1\13\1\uffff\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            ""
    };

    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_109;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "()+ loopback of 5459:5: ( ({...}? => ( ({...}? => ( ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )? ( (lv_concept_3_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_4_0= RULE_STRING ) )? (otherlv_5= 'extends' ( (lv_parents_6_0= rulePathName ) ) (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )* )? ( (lv_actions_9_0= ruleActionSpecification ) )* (otherlv_10= 'observing' ( (lv_states_11_0= ruleObservableSemantics ) ) (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )* )? (otherlv_14= 'with' ( (lv_observations_15_0= ruleObserveStatementBody ) ) (otherlv_16= ',' ( (lv_observations_17_0= ruleObserveStatementBody ) ) )* )? (otherlv_18= 'using' ( (lv_accessor_19_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_1 = input.LA(1);

                         
                        int index136_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA136_2 = input.LA(1);

                         
                        int index136_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA136_3 = input.LA(1);

                         
                        int index136_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA136_4 = input.LA(1);

                         
                        int index136_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA136_5 = input.LA(1);

                         
                        int index136_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA136_6 = input.LA(1);

                         
                        int index136_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_6);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA136_7 = input.LA(1);

                         
                        int index136_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_7);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA136_8 = input.LA(1);

                         
                        int index136_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_8);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA136_9 = input.LA(1);

                         
                        int index136_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_9);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA136_10 = input.LA(1);

                         
                        int index136_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_10);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA136_11 = input.LA(1);

                         
                        int index136_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_11);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA136_12 = input.LA(1);

                         
                        int index136_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_12);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA136_13 = input.LA(1);

                         
                        int index136_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_13);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA136_14 = input.LA(1);

                         
                        int index136_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_14);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA136_15 = input.LA(1);

                         
                        int index136_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_15);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA136_16 = input.LA(1);

                         
                        int index136_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_16);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA136_17 = input.LA(1);

                         
                        int index136_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_17);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA136_18 = input.LA(1);

                         
                        int index136_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_18);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA136_19 = input.LA(1);

                         
                        int index136_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_19);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA136_20 = input.LA(1);

                         
                        int index136_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_20);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA136_21 = input.LA(1);

                         
                        int index136_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_21);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA136_22 = input.LA(1);

                         
                        int index136_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_22);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA136_23 = input.LA(1);

                         
                        int index136_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_23);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA136_24 = input.LA(1);

                         
                        int index136_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_24);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA136_25 = input.LA(1);

                         
                        int index136_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_25);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA136_26 = input.LA(1);

                         
                        int index136_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_26);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA136_27 = input.LA(1);

                         
                        int index136_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred225_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 31;}

                        else if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_27);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA136_28 = input.LA(1);

                         
                        int index136_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred228_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 29;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 30;}

                         
                        input.seek(index136_28);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_116s = "\1\5\1\uffff\2\27\2\5\1\uffff\2\5\1\27\1\132\1\5\1\132";
    static final String dfa_117s = "\1\u0087\1\uffff\2\134\2\u0087\1\uffff\2\12\2\134\1\12\1\134";
    static final String dfa_118s = "\1\uffff\1\1\4\uffff\1\2\6\uffff";
    static final String dfa_119s = "\15\uffff}>";
    static final String[] dfa_120s = {
            "\1\2\1\4\2\uffff\1\5\1\3\31\uffff\1\6\64\uffff\1\1\25\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "",
            "\1\1\35\uffff\1\1\44\uffff\1\10\1\1\1\7",
            "\1\1\35\uffff\1\1\44\uffff\1\10\1\1\1\7",
            "\1\6\3\uffff\2\6\14\uffff\1\1\14\uffff\1\6\112\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\6\3\uffff\2\6\14\uffff\1\1\14\uffff\1\6\3\uffff\1\6\14\uffff\1\1\45\uffff\2\1\10\uffff\14\6\7\uffff\20\6",
            "",
            "\1\11\4\uffff\1\12",
            "\1\1\3\uffff\1\6\1\1",
            "\1\1\35\uffff\1\1\44\uffff\1\10\1\uffff\1\13",
            "\1\10\1\uffff\1\13",
            "\1\14\4\uffff\1\12",
            "\1\10\1\uffff\1\13"
    };
    static final char[] dfa_116 = DFA.unpackEncodedStringToUnsignedChars(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final short[] dfa_118 = DFA.unpackEncodedString(dfa_118s);
    static final short[] dfa_119 = DFA.unpackEncodedString(dfa_119s);
    static final short[][] dfa_120 = unpackEncodedStringArray(dfa_120s);

    class DFA123 extends DFA {

        public DFA123(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 123;
            this.eot = dfa_57;
            this.eof = dfa_57;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "5465:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
    static final String dfa_121s = "\1\1\1\uffff\1\1\2\6\2\uffff\2\6\1\uffff\1\6";
    static final String dfa_122s = "\1\5\1\uffff\4\5\1\uffff\4\5";
    static final String dfa_123s = "\1\u0087\1\uffff\3\u0087\1\12\1\uffff\2\u0087\1\12\1\u0087";
    static final String dfa_124s = "\1\uffff\1\2\4\uffff\1\1\4\uffff";
    static final String dfa_125s = "\13\uffff}>";
    static final String[] dfa_126s = {
            "\2\1\2\uffff\2\1\10\uffff\1\1\5\uffff\1\2\2\uffff\2\1\6\uffff\1\1\3\uffff\1\1\15\uffff\3\1\40\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "",
            "\1\3\1\1\2\uffff\1\1\1\4\10\uffff\1\1\5\uffff\1\1\3\uffff\1\1\6\uffff\1\1\3\uffff\1\1\60\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\1\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\14\uffff\1\1\3\6\40\uffff\1\6\2\1\1\5\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\1\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\14\uffff\1\1\3\6\40\uffff\1\6\2\1\1\5\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\7\4\uffff\1\10",
            "",
            "\2\6\2\uffff\2\6\10\uffff\1\6\3\uffff\1\1\1\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\14\uffff\1\1\3\6\40\uffff\1\6\1\1\1\uffff\1\11\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\2\6\2\uffff\2\6\10\uffff\1\6\5\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\15\uffff\3\6\40\uffff\1\6\1\1\1\uffff\1\11\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6",
            "\1\12\4\uffff\1\10",
            "\2\6\2\uffff\2\6\10\uffff\1\6\5\uffff\1\6\2\uffff\2\6\6\uffff\1\6\3\uffff\1\6\15\uffff\3\6\40\uffff\1\6\1\1\1\uffff\1\11\22\uffff\2\6\7\uffff\2\6\1\uffff\15\6"
    };
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_36;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "()* loopback of 5551:9: (otherlv_7= ',' ( (lv_parents_8_0= rulePathName ) ) )*";
        }
    }
    static final String dfa_127s = "\36\uffff";
    static final String dfa_128s = "\1\1\35\uffff";
    static final String dfa_129s = "\1\5\4\uffff\1\0\30\uffff";
    static final String dfa_130s = "\1\u0087\4\uffff\1\0\30\uffff";
    static final String dfa_131s = "\1\uffff\1\2\33\uffff\1\1";
    static final String dfa_132s = "\5\uffff\1\0\30\uffff}>";
    static final String[] dfa_133s = {
            "\2\1\2\uffff\2\1\10\uffff\1\1\5\uffff\1\5\3\uffff\1\1\6\uffff\1\1\3\uffff\1\1\60\uffff\1\1\25\uffff\2\1\7\uffff\2\1\1\uffff\15\1",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[][] dfa_133 = unpackEncodedStringArray(dfa_133s);

    class DFA128 extends DFA {

        public DFA128(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 128;
            this.eot = dfa_127;
            this.eof = dfa_128;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_132;
            this.transition = dfa_133;
        }
        public String getDescription() {
            return "()* loopback of 5620:9: (otherlv_12= ',' ( (lv_states_13_0= ruleObservableSemantics ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA128_5 = input.LA(1);

                         
                        int index128_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred219_InternalKim()) ) {s = 29;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index128_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 128, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_134s = "\12\uffff";
    static final String dfa_135s = "\1\3\11\uffff";
    static final String dfa_136s = "\1\5\2\27\1\uffff\1\5\1\uffff\1\27\1\44\1\5\1\44";
    static final String dfa_137s = "\1\u0087\2\134\1\uffff\1\12\1\uffff\2\134\1\12\1\134";
    static final String dfa_138s = "\3\uffff\1\2\1\uffff\1\1\4\uffff";
    static final String dfa_139s = "\12\uffff}>";
    static final String[] dfa_140s = {
            "\1\1\1\3\2\uffff\1\3\1\2\10\uffff\1\3\5\uffff\1\3\3\uffff\1\3\6\uffff\1\3\3\uffff\1\3\60\uffff\1\3\25\uffff\2\3\7\uffff\2\3\1\uffff\15\3",
            "\1\3\14\uffff\1\5\20\uffff\1\3\44\uffff\2\3\1\4",
            "\1\3\14\uffff\1\5\20\uffff\1\3\44\uffff\2\3\1\4",
            "",
            "\1\6\4\uffff\1\7",
            "",
            "\1\3\14\uffff\1\5\20\uffff\1\3\44\uffff\1\3\1\uffff\1\10",
            "\1\5\65\uffff\1\3\1\uffff\1\10",
            "\1\11\4\uffff\1\7",
            "\1\5\65\uffff\1\3\1\uffff\1\10"
    };

    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final short[] dfa_135 = DFA.unpackEncodedString(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final char[] dfa_137 = DFA.unpackEncodedStringToUnsignedChars(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[] dfa_139 = DFA.unpackEncodedString(dfa_139s);
    static final short[][] dfa_140 = unpackEncodedStringArray(dfa_140s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_134;
            this.eof = dfa_135;
            this.min = dfa_136;
            this.max = dfa_137;
            this.accept = dfa_138;
            this.special = dfa_139;
            this.transition = dfa_140;
        }
        public String getDescription() {
            return "5701:9: ( (lv_accessor_19_0= ruleFunction ) )?";
        }
    }
    static final String dfa_141s = "\1\4\3\uffff\1\0\4\uffff\2\0\2\uffff\2\0\25\uffff";
    static final String dfa_142s = "\1\u00e8\3\uffff\1\0\4\uffff\2\0\2\uffff\2\0\25\uffff";
    static final String dfa_143s = "\1\uffff\1\1\20\uffff\1\2\21\uffff";
    static final String dfa_144s = "\4\uffff\1\0\4\uffff\1\1\1\2\2\uffff\1\3\1\4\25\uffff}>";
    static final String[] dfa_145s = {
            "\1\1\1\11\1\4\1\uffff\1\1\1\15\1\12\2\1\14\uffff\3\1\10\uffff\1\16\14\uffff\2\1\54\uffff\1\22\17\uffff\2\22\7\uffff\2\22\1\uffff\15\22\65\uffff\1\1\51\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final char[] dfa_142 = DFA.unpackEncodedStringToUnsignedChars(dfa_142s);
    static final short[] dfa_143 = DFA.unpackEncodedString(dfa_143s);
    static final short[] dfa_144 = DFA.unpackEncodedString(dfa_144s);
    static final short[][] dfa_145 = unpackEncodedStringArray(dfa_145s);

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_141;
            this.max = dfa_142;
            this.accept = dfa_143;
            this.special = dfa_144;
            this.transition = dfa_145;
        }
        public String getDescription() {
            return "5835:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_4 = input.LA(1);

                         
                        int index137_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index137_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA137_9 = input.LA(1);

                         
                        int index137_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index137_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA137_10 = input.LA(1);

                         
                        int index137_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index137_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA137_13 = input.LA(1);

                         
                        int index137_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index137_13);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA137_14 = input.LA(1);

                         
                        int index137_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred229_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 18;}

                         
                        input.seek(index137_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_146s = "\131\uffff";
    static final String dfa_147s = "\1\1\15\uffff\1\17\112\uffff";
    static final String dfa_148s = "\1\5\1\uffff\1\5\13\uffff\1\5\112\uffff";
    static final String dfa_149s = "\1\u00e8\1\uffff\1\12\13\uffff\1\u00e8\112\uffff";
    static final String dfa_150s = "\1\uffff\1\11\1\uffff\1\1\1\2\1\3\1\4\2\5\2\6\3\7\1\uffff\112\10";
    static final String dfa_151s = "\1\0\15\uffff\1\1\112\uffff}>";
    static final String[] dfa_152s = {
            "\2\1\2\uffff\2\1\1\uffff\1\15\6\uffff\1\1\3\uffff\1\5\1\uffff\1\1\2\uffff\4\1\1\uffff\1\6\1\uffff\2\1\2\uffff\2\1\7\uffff\1\7\5\uffff\3\1\40\uffff\1\1\6\uffff\1\3\1\4\1\10\1\11\1\12\1\2\11\uffff\2\1\7\uffff\2\1\1\uffff\15\1\13\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\6\uffff\3\1\60\uffff\1\13\1\14",
            "",
            "\1\16\4\uffff\1\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\35\1\21\2\uffff\1\37\1\36\1\uffff\1\130\6\uffff\1\33\3\uffff\1\120\1\uffff\1\20\2\uffff\1\22\1\23\1\24\1\25\1\uffff\1\121\1\uffff\1\26\1\61\2\uffff\1\63\1\32\7\uffff\1\122\5\uffff\1\27\1\30\1\31\40\uffff\1\34\1\1\1\uffff\1\1\3\uffff\1\116\1\117\1\123\1\124\1\125\1\62\11\uffff\1\42\1\43\7\uffff\1\40\1\41\1\uffff\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\13\uffff\1\64\1\uffff\1\65\1\uffff\1\66\1\67\1\70\1\uffff\1\71\1\72\1\73\1\74\1\75\1\76\1\77\1\100\1\101\1\uffff\1\102\1\103\1\104\1\105\1\106\1\107\1\110\1\111\1\112\6\uffff\1\113\1\114\1\115\60\uffff\1\126\1\127",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[] dfa_147 = DFA.unpackEncodedString(dfa_147s);
    static final char[] dfa_148 = DFA.unpackEncodedStringToUnsignedChars(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final short[] dfa_150 = DFA.unpackEncodedString(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[][] dfa_152 = unpackEncodedStringArray(dfa_152s);

    class DFA142 extends DFA {

        public DFA142(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 142;
            this.eot = dfa_146;
            this.eof = dfa_147;
            this.min = dfa_148;
            this.max = dfa_149;
            this.accept = dfa_150;
            this.special = dfa_151;
            this.transition = dfa_152;
        }
        public String getDescription() {
            return "()* loopback of 5899:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( (lv_downTo_9_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA142_0 = input.LA(1);

                         
                        int index142_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA142_0==EOF||(LA142_0>=RULE_LOWERCASE_ID && LA142_0<=RULE_STRING)||(LA142_0>=RULE_CAMELCASE_ID && LA142_0<=RULE_LOWERCASE_DASHID)||LA142_0==19||LA142_0==25||(LA142_0>=28 && LA142_0<=31)||(LA142_0>=35 && LA142_0<=36)||(LA142_0>=39 && LA142_0<=40)||(LA142_0>=54 && LA142_0<=56)||LA142_0==89||(LA142_0>=111 && LA142_0<=112)||(LA142_0>=120 && LA142_0<=121)||(LA142_0>=123 && LA142_0<=135)||LA142_0==147||LA142_0==149||(LA142_0>=151 && LA142_0<=153)||(LA142_0>=155 && LA142_0<=163)||(LA142_0>=165 && LA142_0<=173)||(LA142_0>=180 && LA142_0<=182)) ) {s = 1;}

                        else if ( (LA142_0==101) ) {s = 2;}

                        else if ( LA142_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA142_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA142_0 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA142_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 6;}

                        else if ( LA142_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 7;}

                        else if ( LA142_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA142_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA142_0 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 10;}

                        else if ( LA142_0 == 231 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA142_0 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 12;}

                        else if ( LA142_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 13;}

                         
                        input.seek(index142_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA142_14 = input.LA(1);

                         
                        int index142_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA142_14==90||LA142_14==92) ) {s = 1;}

                        else if ( LA142_14 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 15;}

                        else if ( LA142_14 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 16;}

                        else if ( LA142_14 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 17;}

                        else if ( LA142_14 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 18;}

                        else if ( LA142_14 == 29 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 19;}

                        else if ( LA142_14 == 30 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 20;}

                        else if ( LA142_14 == 31 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 21;}

                        else if ( LA142_14 == 35 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 22;}

                        else if ( LA142_14 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 23;}

                        else if ( LA142_14 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 24;}

                        else if ( LA142_14 == 56 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 25;}

                        else if ( LA142_14 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 26;}

                        else if ( LA142_14 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 27;}

                        else if ( LA142_14 == 89 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 28;}

                        else if ( LA142_14 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 29;}

                        else if ( LA142_14 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 30;}

                        else if ( LA142_14 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 31;}

                        else if ( LA142_14 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 32;}

                        else if ( LA142_14 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 33;}

                        else if ( LA142_14 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 34;}

                        else if ( LA142_14 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 35;}

                        else if ( LA142_14 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 36;}

                        else if ( LA142_14 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 37;}

                        else if ( LA142_14 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 38;}

                        else if ( LA142_14 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 39;}

                        else if ( LA142_14 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 40;}

                        else if ( LA142_14 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 41;}

                        else if ( LA142_14 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 42;}

                        else if ( LA142_14 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 43;}

                        else if ( LA142_14 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 44;}

                        else if ( LA142_14 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 45;}

                        else if ( LA142_14 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 46;}

                        else if ( LA142_14 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 47;}

                        else if ( LA142_14 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 48;}

                        else if ( LA142_14 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 49;}

                        else if ( LA142_14 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 50;}

                        else if ( LA142_14 == 39 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 51;}

                        else if ( LA142_14 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 52;}

                        else if ( LA142_14 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 53;}

                        else if ( LA142_14 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 54;}

                        else if ( LA142_14 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 55;}

                        else if ( LA142_14 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 56;}

                        else if ( LA142_14 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 57;}

                        else if ( LA142_14 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 58;}

                        else if ( LA142_14 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 59;}

                        else if ( LA142_14 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 60;}

                        else if ( LA142_14 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 61;}

                        else if ( LA142_14 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 62;}

                        else if ( LA142_14 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 63;}

                        else if ( LA142_14 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 64;}

                        else if ( LA142_14 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 65;}

                        else if ( LA142_14 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 66;}

                        else if ( LA142_14 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 67;}

                        else if ( LA142_14 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 68;}

                        else if ( LA142_14 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 69;}

                        else if ( LA142_14 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 70;}

                        else if ( LA142_14 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 71;}

                        else if ( LA142_14 == 171 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 72;}

                        else if ( LA142_14 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 73;}

                        else if ( LA142_14 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 74;}

                        else if ( LA142_14 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 75;}

                        else if ( LA142_14 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 76;}

                        else if ( LA142_14 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 77;}

                        else if ( LA142_14 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 78;}

                        else if ( LA142_14 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 79;}

                        else if ( LA142_14 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 80;}

                        else if ( LA142_14 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 81;}

                        else if ( LA142_14 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 82;}

                        else if ( LA142_14 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 83;}

                        else if ( LA142_14 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 84;}

                        else if ( LA142_14 == 100 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 85;}

                        else if ( LA142_14 == 231 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 86;}

                        else if ( LA142_14 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 87;}

                        else if ( LA142_14 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 88;}

                         
                        input.seek(index142_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 142, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_153s = "\1\3\1\uffff\1\3\12\uffff";
    static final String dfa_154s = "\1\4\1\0\1\5\1\uffff\1\27\1\uffff\2\5\1\27\1\132\1\0\1\5\1\132";
    static final String dfa_155s = "\1\u00ee\1\0\1\u00ee\1\uffff\1\134\1\uffff\2\12\2\134\1\0\1\12\1\134";
    static final String dfa_156s = "\3\uffff\1\1\1\uffff\1\2\7\uffff";
    static final String dfa_157s = "\1\uffff\1\0\10\uffff\1\1\2\uffff}>";
    static final String[] dfa_158s = {
            "\1\5\1\2\1\3\2\uffff\1\1\1\4\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\1\uffff\1\3\2\uffff\4\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\7\uffff\1\3\5\uffff\3\3\40\uffff\1\3\1\uffff\1\3\4\uffff\6\3\11\uffff\2\3\7\uffff\2\3\1\uffff\15\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\1\uffff\11\3\6\uffff\3\3\60\uffff\2\3\5\uffff\1\3",
            "\1\uffff",
            "\2\3\2\uffff\2\3\1\uffff\1\3\6\uffff\1\3\3\uffff\1\3\1\uffff\1\3\2\uffff\4\3\1\uffff\1\3\1\uffff\2\3\1\uffff\3\3\7\uffff\1\3\4\uffff\4\3\40\uffff\1\3\1\7\1\3\1\6\3\uffff\6\3\11\uffff\2\3\7\uffff\2\3\1\uffff\15\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\1\uffff\11\3\6\uffff\3\3\60\uffff\2\3\5\uffff\1\3",
            "",
            "\1\3\35\uffff\1\3\44\uffff\1\7\1\3\1\6",
            "",
            "\1\10\4\uffff\1\11",
            "\1\3\3\uffff\1\12\1\3",
            "\1\3\35\uffff\1\3\44\uffff\1\7\1\uffff\1\13",
            "\1\7\1\uffff\1\13",
            "\1\uffff",
            "\1\14\4\uffff\1\11",
            "\1\7\1\uffff\1\13"
    };
    static final short[] dfa_153 = DFA.unpackEncodedString(dfa_153s);
    static final char[] dfa_154 = DFA.unpackEncodedStringToUnsignedChars(dfa_154s);
    static final char[] dfa_155 = DFA.unpackEncodedStringToUnsignedChars(dfa_155s);
    static final short[] dfa_156 = DFA.unpackEncodedString(dfa_156s);
    static final short[] dfa_157 = DFA.unpackEncodedString(dfa_157s);
    static final short[][] dfa_158 = unpackEncodedStringArray(dfa_158s);

    class DFA139 extends DFA {

        public DFA139(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 139;
            this.eot = dfa_57;
            this.eof = dfa_153;
            this.min = dfa_154;
            this.max = dfa_155;
            this.accept = dfa_156;
            this.special = dfa_157;
            this.transition = dfa_158;
        }
        public String getDescription() {
            return "6054:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA139_1 = input.LA(1);

                         
                        int index139_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index139_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA139_10 = input.LA(1);

                         
                        int index139_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred235_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 5;}

                         
                        input.seek(index139_10);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 139, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_159s = "\1\uffff\2\5\3\uffff\2\5";
    static final String dfa_160s = "\1\4\2\23\1\uffff\1\5\1\uffff\2\23";
    static final String dfa_161s = "\1\u00e8\2\134\1\uffff\1\12\1\uffff\2\134";
    static final String dfa_162s = "\3\uffff\1\2\1\uffff\1\1\2\uffff";
    static final String[] dfa_163s = {
            "\1\3\1\1\1\3\1\uffff\2\3\1\2\2\3\14\uffff\3\3\10\uffff\1\3\14\uffff\2\3\54\uffff\1\3\17\uffff\2\3\7\uffff\2\3\1\uffff\15\3\65\uffff\1\3\51\uffff\2\3",
            "\1\5\3\uffff\1\3\1\uffff\1\5\3\uffff\3\5\3\uffff\1\5\1\3\3\uffff\1\5\15\uffff\3\5\41\uffff\1\3\1\uffff\1\4",
            "\1\5\5\uffff\1\5\3\uffff\3\5\3\uffff\1\5\1\3\3\uffff\1\5\15\uffff\3\5\41\uffff\1\3\1\uffff\1\4",
            "",
            "\1\6\4\uffff\1\7",
            "",
            "\1\5\5\uffff\1\5\3\uffff\3\5\3\uffff\1\5\1\3\3\uffff\1\5\15\uffff\3\5\41\uffff\1\3\1\uffff\1\4",
            "\1\5\5\uffff\1\5\3\uffff\3\5\3\uffff\1\5\1\3\3\uffff\1\5\15\uffff\3\5\41\uffff\1\3\1\uffff\1\4"
    };
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final char[] dfa_160 = DFA.unpackEncodedStringToUnsignedChars(dfa_160s);
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final short[] dfa_162 = DFA.unpackEncodedString(dfa_162s);
    static final short[][] dfa_163 = unpackEncodedStringArray(dfa_163s);

    class DFA144 extends DFA {

        public DFA144(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 144;
            this.eot = dfa_43;
            this.eof = dfa_159;
            this.min = dfa_160;
            this.max = dfa_161;
            this.accept = dfa_162;
            this.special = dfa_48;
            this.transition = dfa_163;
        }
        public String getDescription() {
            return "6272:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )";
        }
    }
    static final String dfa_164s = "\147\uffff";
    static final String dfa_165s = "\1\1\146\uffff";
    static final String dfa_166s = "\1\5\31\uffff\1\0\10\uffff\2\0\1\uffff\22\0\57\uffff";
    static final String dfa_167s = "\1\u00e8\31\uffff\1\0\10\uffff\2\0\1\uffff\22\0\57\uffff";
    static final String dfa_168s = "\1\uffff\1\2\144\uffff\1\1";
    static final String dfa_169s = "\32\uffff\1\0\10\uffff\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\57\uffff}>";
    static final String[] dfa_170s = {
            "\1\43\1\1\2\uffff\1\46\1\44\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\32\2\uffff\2\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\24\uffff\2\1\5\uffff\17\1\1\51\1\52\6\uffff\1\1\1\47\1\50\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\1\67\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\52\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[] dfa_165 = DFA.unpackEncodedString(dfa_165s);
    static final char[] dfa_166 = DFA.unpackEncodedStringToUnsignedChars(dfa_166s);
    static final char[] dfa_167 = DFA.unpackEncodedStringToUnsignedChars(dfa_167s);
    static final short[] dfa_168 = DFA.unpackEncodedString(dfa_168s);
    static final short[] dfa_169 = DFA.unpackEncodedString(dfa_169s);
    static final short[][] dfa_170 = unpackEncodedStringArray(dfa_170s);

    class DFA146 extends DFA {

        public DFA146(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 146;
            this.eot = dfa_164;
            this.eof = dfa_165;
            this.min = dfa_166;
            this.max = dfa_167;
            this.accept = dfa_168;
            this.special = dfa_169;
            this.transition = dfa_170;
        }
        public String getDescription() {
            return "()+ loopback of 6376:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA146_26 = input.LA(1);

                         
                        int index146_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_26);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA146_35 = input.LA(1);

                         
                        int index146_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_35);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA146_36 = input.LA(1);

                         
                        int index146_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_36);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA146_38 = input.LA(1);

                         
                        int index146_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_38);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA146_39 = input.LA(1);

                         
                        int index146_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_39);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA146_40 = input.LA(1);

                         
                        int index146_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_40);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA146_41 = input.LA(1);

                         
                        int index146_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_41);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA146_42 = input.LA(1);

                         
                        int index146_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_42);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA146_43 = input.LA(1);

                         
                        int index146_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_43);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA146_44 = input.LA(1);

                         
                        int index146_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_44);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA146_45 = input.LA(1);

                         
                        int index146_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_45);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA146_46 = input.LA(1);

                         
                        int index146_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_46);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA146_47 = input.LA(1);

                         
                        int index146_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_47);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA146_48 = input.LA(1);

                         
                        int index146_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_48);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA146_49 = input.LA(1);

                         
                        int index146_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_49);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA146_50 = input.LA(1);

                         
                        int index146_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_50);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA146_51 = input.LA(1);

                         
                        int index146_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_51);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA146_52 = input.LA(1);

                         
                        int index146_52 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_52);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA146_53 = input.LA(1);

                         
                        int index146_53 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_53);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA146_54 = input.LA(1);

                         
                        int index146_54 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_54);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA146_55 = input.LA(1);

                         
                        int index146_55 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred245_InternalKim()) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index146_55);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 146, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_171s = "\150\uffff";
    static final String dfa_172s = "\1\1\147\uffff";
    static final String dfa_173s = "\1\5\11\uffff\1\0\117\uffff\1\0\15\uffff";
    static final String dfa_174s = "\1\u00e8\11\uffff\1\0\117\uffff\1\0\15\uffff";
    static final String dfa_175s = "\1\uffff\1\12\135\uffff\1\1\1\4\1\5\1\6\1\7\1\10\1\11\1\3\1\2";
    static final String dfa_176s = "\1\0\11\uffff\1\1\117\uffff\1\2\15\uffff}>";
    static final String[] dfa_177s = {
            "\2\1\2\uffff\2\1\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\4\1\2\uffff\1\1\1\12\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\24\uffff\2\1\5\uffff\6\1\1\137\1\132\1\140\1\141\1\142\1\143\1\144\1\145\3\1\6\uffff\3\1\1\uffff\20\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\52\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[] dfa_172 = DFA.unpackEncodedString(dfa_172s);
    static final char[] dfa_173 = DFA.unpackEncodedStringToUnsignedChars(dfa_173s);
    static final char[] dfa_174 = DFA.unpackEncodedStringToUnsignedChars(dfa_174s);
    static final short[] dfa_175 = DFA.unpackEncodedString(dfa_175s);
    static final short[] dfa_176 = DFA.unpackEncodedString(dfa_176s);
    static final short[][] dfa_177 = unpackEncodedStringArray(dfa_177s);

    class DFA147 extends DFA {

        public DFA147(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 147;
            this.eot = dfa_171;
            this.eof = dfa_172;
            this.min = dfa_173;
            this.max = dfa_174;
            this.accept = dfa_175;
            this.special = dfa_176;
            this.transition = dfa_177;
        }
        public String getDescription() {
            return "()* loopback of 6401:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'during' ( (lv_during_23_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA147_0 = input.LA(1);

                         
                        int index147_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA147_0==EOF||(LA147_0>=RULE_LOWERCASE_ID && LA147_0<=RULE_STRING)||(LA147_0>=RULE_CAMELCASE_ID && LA147_0<=RULE_LOWERCASE_DASHID)||LA147_0==RULE_INT||LA147_0==19||LA147_0==23||LA147_0==25||(LA147_0>=28 && LA147_0<=31)||(LA147_0>=33 && LA147_0<=36)||LA147_0==39||(LA147_0>=43 && LA147_0<=45)||LA147_0==48||(LA147_0>=51 && LA147_0<=52)||(LA147_0>=54 && LA147_0<=56)||(LA147_0>=64 && LA147_0<=68)||(LA147_0>=89 && LA147_0<=90)||(LA147_0>=96 && LA147_0<=101)||(LA147_0>=110 && LA147_0<=112)||(LA147_0>=119 && LA147_0<=121)||(LA147_0>=123 && LA147_0<=138)||LA147_0==147||LA147_0==149||(LA147_0>=151 && LA147_0<=153)||(LA147_0>=155 && LA147_0<=163)||(LA147_0>=165 && LA147_0<=173)||LA147_0==175||(LA147_0>=180 && LA147_0<=182)||LA147_0==188||(LA147_0>=231 && LA147_0<=232)) ) {s = 1;}

                        else if ( (LA147_0==40) ) {s = 10;}

                        else if ( (LA147_0==103) ) {s = 90;}

                        else if ( LA147_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {s = 95;}

                        else if ( LA147_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {s = 96;}

                        else if ( LA147_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {s = 97;}

                        else if ( LA147_0 == 106 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {s = 98;}

                        else if ( LA147_0 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {s = 99;}

                        else if ( LA147_0 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {s = 100;}

                        else if ( LA147_0 == 109 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 8) ) {s = 101;}

                         
                        input.seek(index147_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA147_10 = input.LA(1);

                         
                        int index147_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred248_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {s = 102;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index147_10);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA147_90 = input.LA(1);

                         
                        int index147_90 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred247_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {s = 103;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index147_90);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 147, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_178s = "\30\uffff";
    static final String dfa_179s = "\1\1\27\uffff";
    static final String dfa_180s = "\1\5\1\uffff\25\0\1\uffff";
    static final String dfa_181s = "\1\u00e8\1\uffff\25\0\1\uffff";
    static final String dfa_182s = "\1\uffff\1\2\25\uffff\1\1";
    static final String dfa_183s = "\2\uffff\1\14\1\16\1\3\1\4\1\17\1\22\1\15\1\20\1\23\1\24\1\21\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\1\1\2\1\0\1\uffff}>";
    static final String[] dfa_184s = {
            "\1\3\1\1\2\uffff\1\5\1\4\1\uffff\1\1\6\uffff\1\1\3\uffff\1\1\1\uffff\1\1\2\uffff\4\1\1\uffff\3\1\1\2\2\uffff\2\1\2\uffff\3\1\2\uffff\1\1\2\uffff\2\1\1\uffff\3\1\7\uffff\5\1\12\uffff\2\1\2\uffff\3\1\1\uffff\1\1\1\uffff\2\1\5\uffff\17\1\1\10\1\11\6\uffff\1\1\1\6\1\7\1\uffff\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\52\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };

    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[] dfa_179 = DFA.unpackEncodedString(dfa_179s);
    static final char[] dfa_180 = DFA.unpackEncodedStringToUnsignedChars(dfa_180s);
    static final char[] dfa_181 = DFA.unpackEncodedStringToUnsignedChars(dfa_181s);
    static final short[] dfa_182 = DFA.unpackEncodedString(dfa_182s);
    static final short[] dfa_183 = DFA.unpackEncodedString(dfa_183s);
    static final short[][] dfa_184 = unpackEncodedStringArray(dfa_184s);

    class DFA177 extends DFA {

        public DFA177(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 177;
            this.eot = dfa_178;
            this.eof = dfa_179;
            this.min = dfa_180;
            this.max = dfa_181;
            this.accept = dfa_182;
            this.special = dfa_183;
            this.transition = dfa_184;
        }
        public String getDescription() {
            return "()+ loopback of 8588:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA177_22 = input.LA(1);

                         
                        int index177_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_22);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA177_20 = input.LA(1);

                         
                        int index177_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_20);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA177_21 = input.LA(1);

                         
                        int index177_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_21);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA177_4 = input.LA(1);

                         
                        int index177_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA177_5 = input.LA(1);

                         
                        int index177_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA177_13 = input.LA(1);

                         
                        int index177_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_13);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA177_14 = input.LA(1);

                         
                        int index177_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_14);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA177_15 = input.LA(1);

                         
                        int index177_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_15);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA177_16 = input.LA(1);

                         
                        int index177_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_16);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA177_17 = input.LA(1);

                         
                        int index177_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_17);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA177_18 = input.LA(1);

                         
                        int index177_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_18);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA177_19 = input.LA(1);

                         
                        int index177_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_19);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA177_2 = input.LA(1);

                         
                        int index177_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_2);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA177_8 = input.LA(1);

                         
                        int index177_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_8);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA177_3 = input.LA(1);

                         
                        int index177_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_3);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA177_6 = input.LA(1);

                         
                        int index177_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_6);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA177_9 = input.LA(1);

                         
                        int index177_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_9);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA177_12 = input.LA(1);

                         
                        int index177_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_12);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA177_7 = input.LA(1);

                         
                        int index177_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_7);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA177_10 = input.LA(1);

                         
                        int index177_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_10);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA177_11 = input.LA(1);

                         
                        int index177_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred316_InternalKim()) ) {s = 23;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index177_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 177, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_185s = "\1\5\2\132\2\5\2\132\2\uffff";
    static final String dfa_186s = "\1\12\2\134\2\12\2\134\2\uffff";
    static final String dfa_187s = "\7\uffff\1\1\1\2";
    static final String[] dfa_188s = {
            "\1\1\4\uffff\1\2",
            "\1\4\1\uffff\1\3",
            "\1\4\1\uffff\1\3",
            "\1\5\4\uffff\1\6",
            "\1\10\3\uffff\1\7\1\10",
            "\1\4\1\uffff\1\3",
            "\1\4\1\uffff\1\3",
            "",
            ""
    };
    static final char[] dfa_185 = DFA.unpackEncodedStringToUnsignedChars(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final short[][] dfa_188 = unpackEncodedStringArray(dfa_188s);

    class DFA182 extends DFA {

        public DFA182(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 182;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_185;
            this.max = dfa_186;
            this.accept = dfa_187;
            this.special = dfa_101;
            this.transition = dfa_188;
        }
        public String getDescription() {
            return "8749:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_189s = "\7\uffff\1\2\1\1";
    static final short[] dfa_189 = DFA.unpackEncodedString(dfa_189s);

    class DFA183 extends DFA {

        public DFA183(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 183;
            this.eot = dfa_97;
            this.eof = dfa_97;
            this.min = dfa_185;
            this.max = dfa_186;
            this.accept = dfa_189;
            this.special = dfa_101;
            this.transition = dfa_188;
        }
        public String getDescription() {
            return "8812:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_190s = "\1\121\11\uffff";
    static final String dfa_191s = "\1\u00e0\11\uffff";
    static final String dfa_192s = "\1\uffff\1\5\1\1\1\2\1\3\5\4";
    static final String dfa_193s = "\1\0\11\uffff}>";
    static final String[] dfa_194s = {
            "\1\1\71\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\21\uffff\1\1\13\uffff\4\1\15\uffff\36\1\1\10\1\11",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_190 = DFA.unpackEncodedStringToUnsignedChars(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);

    class DFA189 extends DFA {

        public DFA189(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 189;
            this.eot = dfa_134;
            this.eof = dfa_134;
            this.min = dfa_190;
            this.max = dfa_191;
            this.accept = dfa_192;
            this.special = dfa_193;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "()* loopback of 8903:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA189_0 = input.LA(1);

                         
                        int index189_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA189_0==81||(LA189_0>=142 && LA189_0<=143)||LA189_0==164||(LA189_0>=176 && LA189_0<=179)||(LA189_0>=193 && LA189_0<=222)) ) {s = 1;}

                        else if ( LA189_0 == 144 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA189_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA189_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA189_0 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA189_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA189_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA189_0 == 223 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA189_0 == 224 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                         
                        input.seek(index189_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 189, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_195s = "\104\uffff";
    static final String dfa_196s = "\1\1\103\uffff";
    static final String dfa_197s = "\1\6\17\uffff\1\5\63\uffff";
    static final String dfa_198s = "\1\u00b6\17\uffff\1\u00ed\63\uffff";
    static final String dfa_199s = "\1\uffff\1\30\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\3\26\1\27\43\26\2\25\1\15";
    static final String dfa_200s = "\1\1\17\uffff\1\0\63\uffff}>";
    static final String[] dfa_201s = {
            "\1\2\14\uffff\1\1\23\uffff\1\1\1\35\74\uffff\1\1\55\uffff\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\6\uffff\1\32\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\45\1\42\2\uffff\1\44\1\46\1\uffff\1\76\15\uffff\1\77\1\100\10\uffff\1\66\45\uffff\1\67\1\72\7\uffff\1\101\33\uffff\1\47\1\50\7\uffff\1\43\1\37\1\uffff\1\51\1\52\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\34\uffff\1\103\11\uffff\1\102\10\uffff\1\36\1\40\1\41\55\uffff\1\74\1\75\2\uffff\1\70\1\71\1\73",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[] dfa_196 = DFA.unpackEncodedString(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final char[] dfa_198 = DFA.unpackEncodedStringToUnsignedChars(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[] dfa_200 = DFA.unpackEncodedString(dfa_200s);
    static final short[][] dfa_201 = unpackEncodedStringArray(dfa_201s);

    class DFA224 extends DFA {

        public DFA224(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 224;
            this.eot = dfa_195;
            this.eof = dfa_196;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_199;
            this.special = dfa_200;
            this.transition = dfa_201;
        }
        public String getDescription() {
            return "()* loopback of 9346:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA224_16 = input.LA(1);

                         
                        int index224_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA224_16 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 30;}

                        else if ( LA224_16 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 31;}

                        else if ( LA224_16 == 184 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 32;}

                        else if ( LA224_16 == 185 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 33;}

                        else if ( LA224_16 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 34;}

                        else if ( LA224_16 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 35;}

                        else if ( LA224_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 36;}

                        else if ( LA224_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 37;}

                        else if ( LA224_16 == RULE_LOWERCASE_DASHID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 38;}

                        else if ( LA224_16 == 111 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 39;}

                        else if ( LA224_16 == 112 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 40;}

                        else if ( LA224_16 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 41;}

                        else if ( LA224_16 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 42;}

                        else if ( LA224_16 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 43;}

                        else if ( LA224_16 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 44;}

                        else if ( LA224_16 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 45;}

                        else if ( LA224_16 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 46;}

                        else if ( LA224_16 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 47;}

                        else if ( LA224_16 == 130 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 48;}

                        else if ( LA224_16 == 131 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 49;}

                        else if ( LA224_16 == 132 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 50;}

                        else if ( LA224_16 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 51;}

                        else if ( LA224_16 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 52;}

                        else if ( LA224_16 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 53;}

                        else if ( LA224_16 == 36 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 54;}

                        else if ( LA224_16 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 55;}

                        else if ( LA224_16 == 235 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 56;}

                        else if ( LA224_16 == 236 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 57;}

                        else if ( LA224_16 == 75 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 58;}

                        else if ( LA224_16 == 237 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 59;}

                        else if ( LA224_16 == 231 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 60;}

                        else if ( LA224_16 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 61;}

                        else if ( LA224_16 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 62;}

                        else if ( LA224_16 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 63;}

                        else if ( LA224_16 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 64;}

                        else if ( LA224_16 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 65;}

                        else if ( LA224_16 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 66;}

                        else if ( LA224_16 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 67;}

                         
                        input.seek(index224_16);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA224_0 = input.LA(1);

                         
                        int index224_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA224_0==EOF||LA224_0==19||LA224_0==39||LA224_0==101) ) {s = 1;}

                        else if ( LA224_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA224_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA224_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA224_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA224_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA224_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA224_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA224_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA224_0 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA224_0 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA224_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA224_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA224_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA224_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA224_0==163) ) {s = 16;}

                        else if ( LA224_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA224_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA224_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA224_0 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA224_0 == 169 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA224_0 == 170 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA224_0 == 171 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA224_0 == 172 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA224_0 == 173 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( LA224_0 == 180 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 26;}

                        else if ( LA224_0 == 181 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 27;}

                        else if ( LA224_0 == 182 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 28;}

                        else if ( LA224_0 == 40 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 29;}

                         
                        input.seek(index224_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 224, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_202s = "\1\u00a3\1\5\1\uffff\2\14\1\42\1\5\2\42\1\uffff\4\14\1\5\1\42\2\14\1\42\2\14\1\42\1\uffff\2\132\3\14\2\5\1\42\2\14\1\42\2\132";
    static final String dfa_203s = "\1\u00b6\1\u00ed\1\uffff\2\14\1\u00ea\1\u0087\2\147\1\uffff\1\14\3\u00e8\1\12\1\u00ea\2\14\1\147\2\14\1\u00ea\1\uffff\2\134\1\14\2\u00e8\2\12\1\u00ea\2\14\1\147\2\134";
    static final String dfa_204s = "\2\uffff\1\1\6\uffff\1\2\14\uffff\1\3\15\uffff";
    static final String dfa_205s = "\44\uffff}>";
    static final String[] dfa_206s = {
            "\1\2\20\uffff\1\1\2\2",
            "\1\2\1\6\2\uffff\2\2\1\uffff\1\5\15\uffff\1\7\1\10\10\uffff\1\2\45\uffff\2\2\43\uffff\2\2\7\uffff\2\2\1\uffff\15\2\22\uffff\1\11\34\uffff\3\2\55\uffff\1\3\1\4\2\uffff\3\2",
            "",
            "\1\5",
            "\1\5",
            "\1\15\71\uffff\1\12\12\uffff\1\16\u0081\uffff\1\13\1\14",
            "\1\2\3\uffff\2\2\27\uffff\1\2\1\uffff\1\2\102\uffff\1\16\7\uffff\2\2\7\uffff\2\2\1\uffff\15\2",
            "\1\2\104\uffff\1\16",
            "\1\2\104\uffff\1\16",
            "",
            "\1\17",
            "\1\22\u00da\uffff\1\20\1\21",
            "\1\22\u00da\uffff\1\20\1\21",
            "\1\25\u00da\uffff\1\23\1\24",
            "\1\27\3\uffff\1\26\1\30",
            "\1\15\104\uffff\1\16\u0081\uffff\1\13\1\14",
            "\1\22",
            "\1\22",
            "\1\15\104\uffff\1\16",
            "\1\25",
            "\1\25",
            "\1\2\71\uffff\1\31\12\uffff\1\16\u0081\uffff\1\32\1\33",
            "",
            "\1\35\1\uffff\1\34",
            "\1\35\1\uffff\1\34",
            "\1\36",
            "\1\41\u00da\uffff\1\37\1\40",
            "\1\41\u00da\uffff\1\37\1\40",
            "\1\42\4\uffff\1\43",
            "\1\2\3\uffff\1\26\1\2",
            "\1\2\104\uffff\1\16\u0081\uffff\1\32\1\33",
            "\1\41",
            "\1\41",
            "\1\2\104\uffff\1\16",
            "\1\35\1\uffff\1\34",
            "\1\35\1\uffff\1\34"
    };
    static final char[] dfa_202 = DFA.unpackEncodedStringToUnsignedChars(dfa_202s);
    static final char[] dfa_203 = DFA.unpackEncodedStringToUnsignedChars(dfa_203s);
    static final short[] dfa_204 = DFA.unpackEncodedString(dfa_204s);
    static final short[] dfa_205 = DFA.unpackEncodedString(dfa_205s);
    static final short[][] dfa_206 = unpackEncodedStringArray(dfa_206s);

    class DFA238 extends DFA {

        public DFA238(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 238;
            this.eot = dfa_71;
            this.eof = dfa_71;
            this.min = dfa_202;
            this.max = dfa_203;
            this.accept = dfa_204;
            this.special = dfa_205;
            this.transition = dfa_206;
        }
        public String getDescription() {
            return "11174:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )";
        }
    }
    static final String dfa_207s = "\23\uffff";
    static final String dfa_208s = "\3\uffff\1\11\7\uffff\1\11\2\uffff\1\11\4\uffff";
    static final String dfa_209s = "\1\6\2\14\1\31\2\uffff\3\14\1\uffff\1\14\1\31\2\14\1\31\2\14\1\0\1\uffff";
    static final String dfa_210s = "\1\u00e8\2\14\1\u00ea\2\uffff\1\14\2\u00e8\1\uffff\1\u00e8\1\u00ea\2\14\1\167\2\14\1\0\1\uffff";
    static final String dfa_211s = "\4\uffff\1\3\1\4\3\uffff\1\2\10\uffff\1\1";
    static final String dfa_212s = "\21\uffff\1\0\1\uffff}>";
    static final String[] dfa_213s = {
            "\1\4\5\uffff\1\3\15\uffff\2\5\u00cb\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\11\10\uffff\1\12\4\uffff\1\11\64\uffff\1\6\12\uffff\1\11\17\uffff\1\11\161\uffff\1\7\1\10",
            "",
            "",
            "\1\13",
            "\1\16\u00da\uffff\1\14\1\15",
            "\1\16\u00da\uffff\1\14\1\15",
            "",
            "\1\21\u00da\uffff\1\17\1\20",
            "\1\11\10\uffff\1\12\4\uffff\1\11\77\uffff\1\11\17\uffff\1\11\161\uffff\1\7\1\10",
            "\1\16",
            "\1\16",
            "\1\11\10\uffff\1\12\4\uffff\1\11\77\uffff\1\11\17\uffff\1\11",
            "\1\21",
            "\1\21",
            "\1\uffff",
            ""
    };

    static final short[] dfa_207 = DFA.unpackEncodedString(dfa_207s);
    static final short[] dfa_208 = DFA.unpackEncodedString(dfa_208s);
    static final char[] dfa_209 = DFA.unpackEncodedStringToUnsignedChars(dfa_209s);
    static final char[] dfa_210 = DFA.unpackEncodedStringToUnsignedChars(dfa_210s);
    static final short[] dfa_211 = DFA.unpackEncodedString(dfa_211s);
    static final short[] dfa_212 = DFA.unpackEncodedString(dfa_212s);
    static final short[][] dfa_213 = unpackEncodedStringArray(dfa_213s);

    class DFA251 extends DFA {

        public DFA251(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 251;
            this.eot = dfa_207;
            this.eof = dfa_208;
            this.min = dfa_209;
            this.max = dfa_210;
            this.accept = dfa_211;
            this.special = dfa_212;
            this.transition = dfa_213;
        }
        public String getDescription() {
            return "11875:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA251_17 = input.LA(1);

                         
                        int index251_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred431_InternalKim()) ) {s = 18;}

                        else if ( (synpred432_InternalKim()) ) {s = 9;}

                         
                        input.seek(index251_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 251, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_214s = "\21\uffff";
    static final String dfa_215s = "\3\uffff\1\13\11\uffff\1\13\2\uffff\1\13";
    static final String dfa_216s = "\1\6\2\14\1\4\4\uffff\3\14\2\uffff\1\4\2\14\1\4";
    static final String dfa_217s = "\1\u00e8\2\14\1\u00ea\4\uffff\1\14\2\u00e8\2\uffff\1\u00ea\2\14\1\u00e8";
    static final String dfa_218s = "\4\uffff\1\3\1\4\1\5\1\6\3\uffff\1\2\1\1\4\uffff";
    static final String dfa_219s = "\21\uffff}>";
    static final String[] dfa_220s = {
            "\1\4\4\uffff\1\6\1\3\14\uffff\1\7\2\5\u00cb\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\3\13\1\uffff\5\13\6\uffff\1\13\3\uffff\1\13\1\uffff\5\13\4\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\40\uffff\1\13\2\uffff\1\10\22\uffff\2\13\7\uffff\2\13\1\uffff\15\13\65\uffff\1\13\51\uffff\2\13\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\15",
            "\1\20\u00da\uffff\1\16\1\17",
            "\1\20\u00da\uffff\1\16\1\17",
            "",
            "",
            "\3\13\1\uffff\5\13\6\uffff\1\13\3\uffff\1\13\1\uffff\5\13\4\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\40\uffff\1\13\25\uffff\2\13\7\uffff\2\13\1\uffff\15\13\65\uffff\1\13\51\uffff\2\13\1\11\1\12",
            "\1\20",
            "\1\20",
            "\3\13\1\uffff\5\13\6\uffff\1\13\3\uffff\1\13\1\uffff\5\13\4\uffff\1\14\1\uffff\1\13\2\uffff\2\13\3\uffff\2\13\3\uffff\2\13\3\uffff\3\13\40\uffff\1\13\25\uffff\2\13\7\uffff\2\13\1\uffff\15\13\65\uffff\1\13\51\uffff\2\13"
    };

    static final short[] dfa_214 = DFA.unpackEncodedString(dfa_214s);
    static final short[] dfa_215 = DFA.unpackEncodedString(dfa_215s);
    static final char[] dfa_216 = DFA.unpackEncodedStringToUnsignedChars(dfa_216s);
    static final char[] dfa_217 = DFA.unpackEncodedStringToUnsignedChars(dfa_217s);
    static final short[] dfa_218 = DFA.unpackEncodedString(dfa_218s);
    static final short[] dfa_219 = DFA.unpackEncodedString(dfa_219s);
    static final short[][] dfa_220 = unpackEncodedStringArray(dfa_220s);

    class DFA255 extends DFA {

        public DFA255(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 255;
            this.eot = dfa_214;
            this.eof = dfa_215;
            this.min = dfa_216;
            this.max = dfa_217;
            this.accept = dfa_218;
            this.special = dfa_219;
            this.transition = dfa_220;
        }
        public String getDescription() {
            return "12116:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_221s = "\1\5\1\132\1\6\4\uffff\1\5\2\6";
    static final String dfa_222s = "\1\12\1\134\1\u00e8\4\uffff\1\12\2\u00e8";
    static final String dfa_223s = "\3\uffff\1\4\1\3\1\1\1\2\3\uffff";
    static final String dfa_224s = "\1\uffff\1\0\10\uffff}>";
    static final String[] dfa_225s = {
            "\1\1\1\3\3\uffff\1\2",
            "\1\4\1\uffff\1\4",
            "\1\5\4\uffff\2\5\15\uffff\2\5\10\uffff\1\5\65\uffff\1\4\1\uffff\1\7\140\uffff\1\5\51\uffff\2\5",
            "",
            "",
            "",
            "",
            "\1\10\4\uffff\1\11",
            "\1\5\4\uffff\2\5\15\uffff\2\5\10\uffff\1\5\65\uffff\1\4\1\uffff\1\7\140\uffff\1\5\51\uffff\2\5",
            "\1\5\4\uffff\2\5\15\uffff\2\5\10\uffff\1\5\65\uffff\1\4\1\uffff\1\7\140\uffff\1\5\51\uffff\2\5"
    };
    static final char[] dfa_221 = DFA.unpackEncodedStringToUnsignedChars(dfa_221s);
    static final char[] dfa_222 = DFA.unpackEncodedStringToUnsignedChars(dfa_222s);
    static final short[] dfa_223 = DFA.unpackEncodedString(dfa_223s);
    static final short[] dfa_224 = DFA.unpackEncodedString(dfa_224s);
    static final short[][] dfa_225 = unpackEncodedStringArray(dfa_225s);

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 256;
            this.eot = dfa_134;
            this.eof = dfa_134;
            this.min = dfa_221;
            this.max = dfa_222;
            this.accept = dfa_223;
            this.special = dfa_224;
            this.transition = dfa_225;
        }
        public String getDescription() {
            return "12305:6: (lv_ids_2_1= rulePathName | lv_ids_2_2= RULE_LOWERCASE_ID | lv_ids_2_3= rulePropertyId | lv_ids_2_4= RULE_STRING )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA256_1 = input.LA(1);

                         
                        int index256_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA256_1==90||LA256_1==92) ) {s = 4;}

                        else if ( (synpred447_InternalKim()) ) {s = 5;}

                        else if ( (synpred448_InternalKim()) ) {s = 6;}

                         
                        input.seek(index256_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 256, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_226s = "\1\uffff\2\3\3\uffff\2\3";
    static final String dfa_227s = "\1\4\2\44\2\uffff\1\5\2\44";
    static final String dfa_228s = "\1\u00e8\2\u00c0\2\uffff\1\12\2\u00c0";
    static final String[] dfa_229s = {
            "\1\3\1\1\1\3\1\uffff\2\3\1\2\1\uffff\1\3\15\uffff\2\3\10\uffff\1\3\14\uffff\2\3\74\uffff\2\3\7\uffff\2\3\1\uffff\15\3\65\uffff\1\3\51\uffff\2\3",
            "\1\3\2\uffff\1\3\62\uffff\1\3\1\uffff\1\5\142\uffff\2\4",
            "\1\3\2\uffff\1\3\62\uffff\1\3\1\uffff\1\5\142\uffff\2\4",
            "",
            "",
            "\1\6\4\uffff\1\7",
            "\1\3\2\uffff\1\3\62\uffff\1\3\1\uffff\1\5\142\uffff\2\4",
            "\1\3\2\uffff\1\3\62\uffff\1\3\1\uffff\1\5\142\uffff\2\4"
    };
    static final short[] dfa_226 = DFA.unpackEncodedString(dfa_226s);
    static final char[] dfa_227 = DFA.unpackEncodedStringToUnsignedChars(dfa_227s);
    static final char[] dfa_228 = DFA.unpackEncodedStringToUnsignedChars(dfa_228s);
    static final short[][] dfa_229 = unpackEncodedStringArray(dfa_229s);

    class DFA267 extends DFA {

        public DFA267(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 267;
            this.eot = dfa_43;
            this.eof = dfa_226;
            this.min = dfa_227;
            this.max = dfa_228;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_229;
        }
        public String getDescription() {
            return "12872:2: ( ( ( (lv_pairs_0_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_pairs_2_0= ruleKeyValuePair ) ) )* ) | ( (lv_singleValue_3_0= ruleValueWithIdAndConcept ) ) )";
        }
    }
    static final String dfa_230s = "\43\uffff";
    static final String dfa_231s = "\1\4\1\0\2\uffff\3\0\17\uffff\1\0\14\uffff";
    static final String dfa_232s = "\1\u00e8\1\0\2\uffff\3\0\17\uffff\1\0\14\uffff";
    static final String dfa_233s = "\2\uffff\1\1\24\uffff\1\3\4\uffff\1\4\1\5\1\7\1\10\1\11\1\2\1\6";
    static final String dfa_234s = "\1\uffff\1\0\2\uffff\1\1\1\2\1\3\17\uffff\1\4\14\uffff}>";
    static final String[] dfa_235s = {
            "\1\35\1\5\1\1\1\uffff\1\34\1\4\1\6\1\uffff\1\27\15\uffff\2\27\10\uffff\1\26\14\uffff\1\40\1\36\74\uffff\2\2\7\uffff\2\2\1\uffff\15\2\65\uffff\1\37\51\uffff\2\27",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_230 = DFA.unpackEncodedString(dfa_230s);
    static final char[] dfa_231 = DFA.unpackEncodedStringToUnsignedChars(dfa_231s);
    static final char[] dfa_232 = DFA.unpackEncodedStringToUnsignedChars(dfa_232s);
    static final short[] dfa_233 = DFA.unpackEncodedString(dfa_233s);
    static final short[] dfa_234 = DFA.unpackEncodedString(dfa_234s);
    static final short[][] dfa_235 = unpackEncodedStringArray(dfa_235s);

    class DFA269 extends DFA {

        public DFA269(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 269;
            this.eot = dfa_230;
            this.eof = dfa_230;
            this.min = dfa_231;
            this.max = dfa_232;
            this.accept = dfa_233;
            this.special = dfa_234;
            this.transition = dfa_235;
        }
        public String getDescription() {
            return "12960:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_literal_2_0= ruleLiteral ) ) | ( (lv_expr_3_0= RULE_EXPR ) ) | ( ( (lv_id_4_1= rulePathName | lv_id_4_2= RULE_LOWERCASE_ID | lv_id_4_3= RULE_UPPERCASE_ID | lv_id_4_4= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_5_0= ruleList ) ) | ( (lv_table_6_0= ruleLookupTable ) ) | ( (lv_map_7_0= ruleMap ) ) | ( (lv_null_8_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA269_1 = input.LA(1);

                         
                        int index269_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred466_InternalKim()) ) {s = 2;}

                        else if ( (synpred468_InternalKim()) ) {s = 23;}

                         
                        input.seek(index269_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA269_4 = input.LA(1);

                         
                        int index269_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred466_InternalKim()) ) {s = 2;}

                        else if ( (synpred473_InternalKim()) ) {s = 29;}

                         
                        input.seek(index269_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA269_5 = input.LA(1);

                         
                        int index269_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred466_InternalKim()) ) {s = 2;}

                        else if ( (synpred467_InternalKim()) ) {s = 33;}

                        else if ( (synpred473_InternalKim()) ) {s = 29;}

                         
                        input.seek(index269_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA269_6 = input.LA(1);

                         
                        int index269_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred466_InternalKim()) ) {s = 2;}

                        else if ( (synpred467_InternalKim()) ) {s = 33;}

                        else if ( (synpred473_InternalKim()) ) {s = 29;}

                         
                        input.seek(index269_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA269_22 = input.LA(1);

                         
                        int index269_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred466_InternalKim()) ) {s = 2;}

                        else if ( (synpred474_InternalKim()) ) {s = 34;}

                         
                        input.seek(index269_22);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 269, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_236s = "\22\uffff";
    static final String dfa_237s = "\1\4\10\uffff\1\0\10\uffff";
    static final String dfa_238s = "\1\u00e8\10\uffff\1\0\10\uffff";
    static final String dfa_239s = "\1\uffff\1\1\10\uffff\1\2\1\3\1\4\1\uffff\1\5\1\6\1\7\1\10";
    static final String dfa_240s = "\11\uffff\1\0\10\uffff}>";
    static final String[] dfa_241s = {
            "\1\14\1\11\1\1\1\uffff\1\13\1\14\1\12\2\1\14\uffff\3\1\10\uffff\1\16\14\uffff\1\21\1\17\u008a\uffff\1\20\51\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_236 = DFA.unpackEncodedString(dfa_236s);
    static final char[] dfa_237 = DFA.unpackEncodedStringToUnsignedChars(dfa_237s);
    static final char[] dfa_238 = DFA.unpackEncodedStringToUnsignedChars(dfa_238s);
    static final short[] dfa_239 = DFA.unpackEncodedString(dfa_239s);
    static final short[] dfa_240 = DFA.unpackEncodedString(dfa_240s);
    static final short[][] dfa_241 = unpackEncodedStringArray(dfa_241s);

    class DFA271 extends DFA {

        public DFA271(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 271;
            this.eot = dfa_236;
            this.eof = dfa_236;
            this.min = dfa_237;
            this.max = dfa_238;
            this.accept = dfa_239;
            this.special = dfa_240;
            this.transition = dfa_241;
        }
        public String getDescription() {
            return "13199:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_table_5_0= ruleLookupTable ) ) | ( (lv_map_6_0= ruleMap ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA271_9 = input.LA(1);

                         
                        int index271_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred478_InternalKim()) ) {s = 10;}

                        else if ( (synpred482_InternalKim()) ) {s = 12;}

                         
                        input.seek(index271_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 271, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_242s = "\1\1\12\uffff";
    static final String dfa_243s = "\1\14\12\uffff";
    static final String dfa_244s = "\1\u00e8\12\uffff";
    static final String dfa_245s = "\1\uffff\1\7\1\1\1\2\1\3\2\4\3\5\1\6";
    static final String dfa_246s = "\1\0\12\uffff}>";
    static final String[] dfa_247s = {
            "\1\11\12\uffff\1\1\11\uffff\1\4\16\uffff\1\5\57\uffff\1\2\1\3\1\6\2\uffff\1\12\u0081\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_242 = DFA.unpackEncodedString(dfa_242s);
    static final char[] dfa_243 = DFA.unpackEncodedStringToUnsignedChars(dfa_243s);
    static final char[] dfa_244 = DFA.unpackEncodedStringToUnsignedChars(dfa_244s);
    static final short[] dfa_245 = DFA.unpackEncodedString(dfa_245s);
    static final short[] dfa_246 = DFA.unpackEncodedString(dfa_246s);
    static final short[][] dfa_247 = unpackEncodedStringArray(dfa_247s);

    class DFA282 extends DFA {

        public DFA282(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 282;
            this.eot = dfa_36;
            this.eof = dfa_242;
            this.min = dfa_243;
            this.max = dfa_244;
            this.accept = dfa_245;
            this.special = dfa_246;
            this.transition = dfa_247;
        }
        public String getDescription() {
            return "()* loopback of 13924:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( (lv_downTo_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA282_0 = input.LA(1);

                         
                        int index282_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA282_0==EOF||LA282_0==23) ) {s = 1;}

                        else if ( LA282_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA282_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA282_0 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA282_0 == 48 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA282_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA282_0 == 231 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 7;}

                        else if ( LA282_0 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA282_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 9;}

                        else if ( LA282_0 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {s = 10;}

                         
                        input.seek(index282_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 282, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_248s = "\117\uffff";
    static final String dfa_249s = "\1\7\116\uffff";
    static final String dfa_250s = "\1\5\6\0\110\uffff";
    static final String dfa_251s = "\1\u00ee\6\0\110\uffff";
    static final String dfa_252s = "\7\uffff\1\2\106\uffff\1\1";
    static final String dfa_253s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\110\uffff}>";
    static final String[] dfa_254s = {
            "\1\2\1\7\2\uffff\1\1\1\7\1\uffff\1\5\6\uffff\1\7\3\uffff\1\7\1\uffff\1\7\2\uffff\4\7\1\uffff\1\7\1\uffff\1\7\1\6\1\uffff\3\7\7\uffff\1\7\5\uffff\3\7\40\uffff\1\7\1\uffff\1\7\4\uffff\6\7\11\uffff\2\7\7\uffff\2\7\1\uffff\15\7\13\uffff\1\7\1\uffff\1\7\1\uffff\3\7\1\uffff\11\7\1\uffff\11\7\6\uffff\3\7\60\uffff\1\3\1\4\5\uffff\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_248 = DFA.unpackEncodedString(dfa_248s);
    static final short[] dfa_249 = DFA.unpackEncodedString(dfa_249s);
    static final char[] dfa_250 = DFA.unpackEncodedStringToUnsignedChars(dfa_250s);
    static final char[] dfa_251 = DFA.unpackEncodedStringToUnsignedChars(dfa_251s);
    static final short[] dfa_252 = DFA.unpackEncodedString(dfa_252s);
    static final short[] dfa_253 = DFA.unpackEncodedString(dfa_253s);
    static final short[][] dfa_254 = unpackEncodedStringArray(dfa_254s);

    class DFA287 extends DFA {

        public DFA287(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 287;
            this.eot = dfa_248;
            this.eof = dfa_249;
            this.min = dfa_250;
            this.max = dfa_251;
            this.accept = dfa_252;
            this.special = dfa_253;
            this.transition = dfa_254;
        }
        public String getDescription() {
            return "14533:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA287_1 = input.LA(1);

                         
                        int index287_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA287_2 = input.LA(1);

                         
                        int index287_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA287_3 = input.LA(1);

                         
                        int index287_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA287_4 = input.LA(1);

                         
                        int index287_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA287_5 = input.LA(1);

                         
                        int index287_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA287_6 = input.LA(1);

                         
                        int index287_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred542_InternalKim()) ) {s = 78;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index287_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 287, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_255s = "\1\5\1\uffff\2\27\1\5\1\0\3\uffff\2\5\1\uffff\1\27\1\44\1\5\1\44";
    static final String dfa_256s = "\1\u00e8\1\uffff\2\134\1\u0087\1\0\3\uffff\2\12\1\uffff\2\134\1\12\1\134";
    static final String dfa_257s = "\1\uffff\1\1\4\uffff\1\3\1\4\1\5\2\uffff\1\2\4\uffff";
    static final String[] dfa_258s = {
            "\1\2\1\4\2\uffff\1\5\1\3\1\uffff\1\6\15\uffff\2\7\10\uffff\1\10\64\uffff\1\1\25\uffff\2\10\7\uffff\2\10\1\uffff\15\10\137\uffff\2\6",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\13\20\uffff\1\1\44\uffff\1\12\1\1\1\11",
            "\1\1\1\uffff\1\1\12\uffff\1\13\20\uffff\1\1\44\uffff\1\12\1\1\1\11",
            "\1\10\3\uffff\2\10\14\uffff\1\1\1\uffff\1\1\12\uffff\1\10\112\uffff\2\10\7\uffff\2\10\1\uffff\15\10",
            "\1\uffff",
            "",
            "",
            "",
            "\1\14\4\uffff\1\15",
            "\1\1\3\uffff\1\10\1\1",
            "",
            "\1\1\1\uffff\1\1\12\uffff\1\13\20\uffff\1\1\44\uffff\1\12\1\uffff\1\16",
            "\1\13\65\uffff\1\12\1\uffff\1\16",
            "\1\17\4\uffff\1\15",
            "\1\13\65\uffff\1\12\1\uffff\1\16"
    };
    static final char[] dfa_255 = DFA.unpackEncodedStringToUnsignedChars(dfa_255s);
    static final char[] dfa_256 = DFA.unpackEncodedStringToUnsignedChars(dfa_256s);
    static final short[] dfa_257 = DFA.unpackEncodedString(dfa_257s);
    static final short[][] dfa_258 = unpackEncodedStringArray(dfa_258s);

    class DFA315 extends DFA {

        public DFA315(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 315;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_255;
            this.max = dfa_256;
            this.accept = dfa_257;
            this.special = dfa_24;
            this.transition = dfa_258;
        }
        public String getDescription() {
            return "600:4: ( ( ( (lv_urns_1_0= ruleUrn ) ) (otherlv_2= ',' ( (lv_urns_3_0= ruleUrn ) ) )* ) | ( (lv_function_4_0= ruleFunction ) ) | ( (lv_number_5_0= ruleNumber ) ) | ( ( (lv_boolean_6_1= 'true' | lv_boolean_6_2= 'false' ) ) ) | ( (lv_concept_7_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA315_5 = input.LA(1);

                         
                        int index315_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 8;}

                         
                        input.seek(index315_5);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 315, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA393 extends DFA {

        public DFA393(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 393;
            this.eot = dfa_57;
            this.eof = dfa_57;
            this.min = dfa_116;
            this.max = dfa_117;
            this.accept = dfa_118;
            this.special = dfa_119;
            this.transition = dfa_120;
        }
        public String getDescription() {
            return "5465:19: ( ( (lv_urn_1_0= ruleUrn ) ) otherlv_2= 'as' )?";
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000704002L,0x0000000020020FC0L,0x000F00100007F800L,0x00000001FFFFFFFEL});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000080000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000304000L,0x0000000000000FC0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x000600100F001F70L,0xFB01800082000000L,0x20000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000404000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x000600100E001F70L,0x0000000002000000L,0x2000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000002800000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000660L,0x0000000002000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x01C00108F0000042L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x01C00108F2000042L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x01C00108F0000002L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x01C00108E2000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000520L,0x0000000002000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x01C00108C2000002L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000300000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x000000100C001660L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x01C0010800000002L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000420L,0x0000000002000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000001100000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000006000000020L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000008002000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x002300500C001760L,0xFB01800002000000L,0x00000000000000FFL,0x000001BE00000001L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x01C0010000000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x2000000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000010000000002L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000040000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000380000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x000300500C001660L,0xFB01800002000000L,0x00000000000000FFL,0x000001BE00000001L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0000C00400000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000001000L,0x0000000000000000L,0x0000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000C00000000002L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000001000000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x002B00500C001760L,0xFB01800002000000L,0x00000000000000FFL,0x000001BE00000001L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000080L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000060L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000002000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000000L,0x000000000000001FL});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x3E0000100C001660L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000001000000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0001001000000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0xC000000000000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x000000000000001FL});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x000200140E001F70L,0x0000000002000000L,0x0000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000300002000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x000600100E001F70L,0x0000000002000020L,0x2000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x000600100E001F72L,0x0000000002000000L,0x2000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0001000000000002L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000230L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000800002L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000304000L,0x0000000000007000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000300000L,0x0000000000007000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0001010020080040L,0x0000000000B98000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0001010020080000L,0x0000000000B98000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000005000000420L,0x0000000002000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0001010022080000L,0x0000000000B98000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000040L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x000000100C001660L,0xFB01800002040000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0001010020080420L,0x0000000002B98000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0001010020080000L,0x0000000000F98000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000010000080000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000420L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0020000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0020000000000002L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0020000000000002L,0x0000000018000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000000000000620L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000004000L,0x0000000020000000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x000001100C001660L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x01C001103C001662L,0xFB01800042000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x01C001103E001662L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x01C001103C001662L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x000001102E001662L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x000001102E001660L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x000001100C001662L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x000000100C001660L,0xFB01800082000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0001000200801002L,0x0000003F00000000L,0x0000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0001005200801630L,0x0000003F0A000000L,0x0000000000000000L,0x0000418000000000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0001005200801220L,0x0000003F08000000L,0x0000000000000000L,0x0000418000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x000001100C001662L,0xFB01FFC002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000010000000002L,0x00007FC000000000L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0001000000000000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x4000000000000000L,0x007E070000000000L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000004000L,0x0000000040020000L,0x000F00100007F800L,0x00000001FFFFFFFEL});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000000000620L,0x0301800002000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x0000000000000002L,0x0400000000000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000001840L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000000002010L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000400000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0080000000000002L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000600L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x000000100C001662L,0xFB01800002000000L,0x00000000000000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x4000000020000000L,0x003E070000000000L,0x0000000000073800L,0x0000000180000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000004000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000000000007B800L,0x0000000180000000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000000004000L,0x0000000000020000L,0x000F00100007F800L,0x00000001FFFFFFFEL});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000004200L,0x0000000000040000L,0x0000000000010000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000002L,0x0000002000000000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000200L,0x0000000000040000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000010000000042L,0x0000000000000000L,0x00703FEFFBA80000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000010000000042L,0x0400000000000000L,0x00703FEFFBA80000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x000000100C001660L,0xFB01800002000000L,0x00000000005000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x000000100C001660L,0xFB01800002000000L,0x00000000004000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000010002000042L,0x0000000000000000L,0x00703FEFFBA80300L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000010002000042L,0x0000000000000000L,0x00703FEFFBA80000L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x000000100C001660L,0xFB01800002000000L,0x00000000040000FFL,0x0000018000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x000F000004000000L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0001000002000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0001000002000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000010402000042L,0x0000000000000000L,0x00703FEFFBA80000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000080000L,0x0000400000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000001000000200L,0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x000000100C001660L,0xFB01800002000C00L,0x03800000000000FFL,0x0000398000000000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000000620L,0x0000000002000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0400000000000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0800000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000000000800002L,0x0000008000000000L,0x1000000000000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x0000000000800002L,0x0000008000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000400000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000001000000002L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x000600900C001770L,0xFB01800002000C00L,0x23800000000000FFL,0x0000398000000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x000600900E001F70L,0x0000000002000000L,0x2000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000460L,0x0080000002000000L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x000000100C001840L,0x0000000000000000L,0x2000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0100000000000420L,0x0080000002000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x000000000C001840L,0x0000000000000000L,0x0000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x000300500C001660L,0xFB81800002000000L,0x00000000000000FFL,0x000001BE00000001L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000002000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x000600100C001770L,0xFB01800002000C00L,0x23800000000000FFL,0x0000398000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x3200000000000000L,0x0000000000000000L,0x4000000000000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x8000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0001000200001002L,0x0000002700000000L,0x0000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0001005200001220L,0x0000002708000000L,0x0000000000000000L,0x0000418000000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x000000D000001220L,0x0000000008000000L,0x0000000000000000L,0x0000418000000000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000004000000002L,0x0000000008000000L,0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000001000001220L,0x0000000000000000L,0x0000000000000000L,0x0000018000000000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L,0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000060000000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x0000000000000002L,0x0000000010000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x0000000000000002L,0x0000000018000000L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x0000000000000032L,0x0000000010000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000000000000032L,0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000032L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000000000422L,0x0000000002000000L});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000020000002L,0x0000000000E00000L});
    public static final BitSet FOLLOW_180 = new BitSet(new long[]{0x0000000020000422L,0x0000000002A00000L});
    public static final BitSet FOLLOW_181 = new BitSet(new long[]{0x0000000020000002L,0x0000000000A00000L});
    public static final BitSet FOLLOW_182 = new BitSet(new long[]{0x01C0010030000042L,0x0000000040000000L});
    public static final BitSet FOLLOW_183 = new BitSet(new long[]{0x01C0010030000002L,0x0000000040000000L});
    public static final BitSet FOLLOW_184 = new BitSet(new long[]{0x01C0010032000002L});
    public static final BitSet FOLLOW_185 = new BitSet(new long[]{0x01C0010030000002L});
    public static final BitSet FOLLOW_186 = new BitSet(new long[]{0x0000010022000002L});
    public static final BitSet FOLLOW_187 = new BitSet(new long[]{0x0000000022000002L});
    public static final BitSet FOLLOW_188 = new BitSet(new long[]{0x0000005000001220L,0x0000000008000000L,0x0000000000000000L,0x0000418000000000L});
    public static final BitSet FOLLOW_189 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000073800L,0x0000000180000000L});
    public static final BitSet FOLLOW_190 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000000L,0x0000000000000300L});
    public static final BitSet FOLLOW_191 = new BitSet(new long[]{0x0000000402000002L});
    public static final BitSet FOLLOW_192 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0070000800000000L});

}
