package org.integratedmodelling.kim.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.integratedmodelling.kim.services.KimGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalKimParser extends AbstractInternalAntlrParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "RULE_LOWERCASE_ID", "RULE_STRING", "RULE_EXPR", "RULE_UPPERCASE_ID", "RULE_CAMELCASE_ID", "RULE_LOWERCASE_DASHID", "RULE_ID", "RULE_INT", "RULE_UPPERCASE_PATH", "RULE_ANNOTATION_ID", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER", "';'", "'void'", "'private'", "'each'", "'true'", "'false'", "'as'", "','", "'observing'", "'using'", "'with'", "'metadata'", "'documentation'", "'classification'", "'discretization'", "'('", "')'", "'lookup'", "'classified'", "'discretized'", "'according'", "'to'", "'otherwise'", "'if'", "'unless'", "'inclusive'", "'exclusive'", "'in'", "'unknown'", "'*'", "'?'", "'into'", "'table'", "':'", "'#'", "'aggregated'", "'over'", "'on'", "'definition'", "'resolution'", "'instantiation'", "'termination'", "'initialization'", "'context'", "'related'", "'change'", "'set'", "'integrate'", "'do'", "'move'", "'away'", "'model'", "'assess'", "'learn'", "'number'", "'text'", "'boolean'", "'namespace'", "'scenario'", "'worldview'", "'imports'", "'covering'", "'domain'", "'root'", "'disjoint'", "'version'", "'resolve'", "'from'", "'outside'", "'urn:klab:'", "'/'", "'.'", "'observe'", "'extends'", "'any'", "'by'", "'down'", "'per'", "'optional'", "'required'", "'named'", "'of'", "'for'", "'caused'", "'adjacent'", "'contained'", "'containing'", "'causing'", "'within'", "'${'", "'#{'", "'inherent'", "'compresent'", "'container'", "'purpose'", "'causant'", "'}'", "'not'", "'no'", "'identified'", "'presence'", "'count'", "'distance'", "'probability'", "'assessment'", "'uncertainty'", "'type'", "'observability'", "'proportion'", "'ratio'", "'value'", "'occurrence'", "'or'", "'and'", "'follows'", "'deliberative'", "'interactive'", "'reactive'", "'agent'", "'relationship'", "'abstract'", "'deniable'", "'subjective'", "'is'", "'core'", "'equals'", "'nothing'", "'exposes'", "'exposing'", "'defines'", "'authority'", "'requires'", "'describes'", "'increases'", "'decreases'", "'marks'", "'classifies'", "'discretizes'", "'inherits'", "'has'", "'role'", "'confers'", "'part'", "'constituent'", "'consists'", "'creates'", "'applies'", "'links'", "'inverse'", "'affects'", "'children'", "'between'", "'identity'", "'attribute'", "'realm'", "'extent'", "'uses'", "'contains'", "'implies'", "'only'", "'exactly'", "'at'", "'least'", "'most'", "'inheriting'", "'{'", "'transition'", "'?='", "'='", "'quality'", "'class'", "'quantity'", "'configuration'", "'ordering'", "'amount'", "'length'", "'mass'", "'volume'", "'weight'", "'money'", "'duration'", "'area'", "'acceleration'", "'energy'", "'entropy'", "'priority'", "'electric-potential'", "'charge'", "'resistance'", "'resistivity'", "'pressure'", "'angle'", "'velocity'", "'temperature'", "'viscosity'", "'thing'", "'process'", "'event'", "'functional'", "'bidirectional'", "'unidirectional'", "'structural'", "'>'", "'<'", "'!='", "'<='", "'>='", "'@'", "'+'", "'-'", "'e'", "'E'", "'integer'", "'float'", "'double'", "'date'", "'point'", "'line'", "'polygon'", "'^'"
    };
    public static final int T__144=144;
    public static final int T__143=143;
    public static final int T__146=146;
    public static final int T__50=50;
    public static final int T__145=145;
    public static final int T__140=140;
    public static final int T__142=142;
    public static final int T__141=141;
    public static final int T__59=59;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__137=137;
    public static final int T__52=52;
    public static final int T__136=136;
    public static final int T__53=53;
    public static final int T__139=139;
    public static final int T__54=54;
    public static final int T__138=138;
    public static final int T__133=133;
    public static final int T__132=132;
    public static final int T__60=60;
    public static final int T__135=135;
    public static final int T__61=61;
    public static final int T__134=134;
    public static final int RULE_ID=10;
    public static final int T__131=131;
    public static final int T__130=130;
    public static final int RULE_INT=11;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__129=129;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__62=62;
    public static final int T__126=126;
    public static final int T__63=63;
    public static final int T__125=125;
    public static final int T__64=64;
    public static final int T__128=128;
    public static final int T__65=65;
    public static final int T__127=127;
    public static final int T__166=166;
    public static final int T__165=165;
    public static final int T__168=168;
    public static final int T__167=167;
    public static final int T__162=162;
    public static final int T__161=161;
    public static final int T__164=164;
    public static final int T__163=163;
    public static final int T__160=160;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__159=159;
    public static final int T__30=30;
    public static final int T__158=158;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__155=155;
    public static final int T__154=154;
    public static final int T__157=157;
    public static final int T__156=156;
    public static final int T__151=151;
    public static final int T__150=150;
    public static final int T__153=153;
    public static final int T__152=152;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int RULE_EXPR=6;
    public static final int T__47=47;
    public static final int T__40=40;
    public static final int T__148=148;
    public static final int T__41=41;
    public static final int T__147=147;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__149=149;
    public static final int T__100=100;
    public static final int T__221=221;
    public static final int T__220=220;
    public static final int T__102=102;
    public static final int T__223=223;
    public static final int T__101=101;
    public static final int T__222=222;
    public static final int T__19=19;
    public static final int T__18=18;
    public static final int T__218=218;
    public static final int T__217=217;
    public static final int T__219=219;
    public static final int T__214=214;
    public static final int T__213=213;
    public static final int T__216=216;
    public static final int T__215=215;
    public static final int T__210=210;
    public static final int T__212=212;
    public static final int T__211=211;
    public static final int RULE_CAMELCASE_ID=8;
    public static final int T__26=26;
    public static final int T__27=27;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__22=22;
    public static final int T__207=207;
    public static final int T__23=23;
    public static final int T__206=206;
    public static final int T__24=24;
    public static final int T__209=209;
    public static final int T__25=25;
    public static final int T__208=208;
    public static final int T__203=203;
    public static final int T__202=202;
    public static final int T__20=20;
    public static final int T__205=205;
    public static final int T__21=21;
    public static final int T__204=204;
    public static final int T__122=122;
    public static final int T__121=121;
    public static final int T__124=124;
    public static final int T__123=123;
    public static final int T__120=120;
    public static final int RULE_SL_COMMENT=15;
    public static final int T__119=119;
    public static final int T__118=118;
    public static final int T__115=115;
    public static final int T__236=236;
    public static final int EOF=-1;
    public static final int T__114=114;
    public static final int T__235=235;
    public static final int T__117=117;
    public static final int T__116=116;
    public static final int T__237=237;
    public static final int T__111=111;
    public static final int T__232=232;
    public static final int T__110=110;
    public static final int T__231=231;
    public static final int T__113=113;
    public static final int T__234=234;
    public static final int T__112=112;
    public static final int T__233=233;
    public static final int T__230=230;
    public static final int RULE_ANNOTATION_ID=13;
    public static final int T__108=108;
    public static final int T__229=229;
    public static final int T__107=107;
    public static final int T__228=228;
    public static final int T__109=109;
    public static final int T__104=104;
    public static final int T__225=225;
    public static final int T__103=103;
    public static final int T__224=224;
    public static final int T__106=106;
    public static final int T__227=227;
    public static final int T__105=105;
    public static final int T__226=226;
    public static final int RULE_UPPERCASE_ID=7;
    public static final int RULE_ML_COMMENT=14;
    public static final int T__201=201;
    public static final int T__200=200;
    public static final int RULE_UPPERCASE_PATH=12;
    public static final int T__91=91;
    public static final int T__188=188;
    public static final int T__92=92;
    public static final int T__187=187;
    public static final int T__93=93;
    public static final int T__94=94;
    public static final int T__189=189;
    public static final int T__184=184;
    public static final int T__183=183;
    public static final int T__186=186;
    public static final int T__90=90;
    public static final int T__185=185;
    public static final int T__180=180;
    public static final int T__182=182;
    public static final int T__181=181;
    public static final int T__99=99;
    public static final int T__95=95;
    public static final int T__96=96;
    public static final int T__97=97;
    public static final int T__98=98;
    public static final int T__177=177;
    public static final int T__176=176;
    public static final int T__179=179;
    public static final int T__178=178;
    public static final int T__173=173;
    public static final int T__172=172;
    public static final int RULE_LOWERCASE_DASHID=9;
    public static final int T__175=175;
    public static final int T__174=174;
    public static final int T__171=171;
    public static final int T__170=170;
    public static final int T__169=169;
    public static final int T__70=70;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int RULE_STRING=5;
    public static final int T__77=77;
    public static final int T__78=78;
    public static final int T__79=79;
    public static final int T__73=73;
    public static final int T__74=74;
    public static final int T__75=75;
    public static final int T__76=76;
    public static final int T__80=80;
    public static final int T__199=199;
    public static final int T__81=81;
    public static final int T__198=198;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int T__195=195;
    public static final int T__194=194;
    public static final int RULE_WS=16;
    public static final int T__197=197;
    public static final int T__196=196;
    public static final int T__191=191;
    public static final int T__190=190;
    public static final int T__193=193;
    public static final int T__192=192;
    public static final int RULE_ANY_OTHER=17;
    public static final int RULE_LOWERCASE_ID=4;
    public static final int T__88=88;
    public static final int T__89=89;
    public static final int T__84=84;
    public static final int T__85=85;
    public static final int T__86=86;
    public static final int T__87=87;

    // delegates
    // delegators


        public InternalKimParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalKimParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalKimParser.tokenNames; }
    public String getGrammarFileName() { return "InternalKim.g"; }



    /*
      This grammar contains a lot of empty actions to work around a bug in ANTLR.
      Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
    */

     	private KimGrammarAccess grammarAccess;

        public InternalKimParser(TokenStream input, KimGrammarAccess grammarAccess) {
            this(input);
            this.grammarAccess = grammarAccess;
            registerRules(grammarAccess.getGrammar());
        }

        @Override
        protected String getFirstRuleName() {
        	return "Model";
       	}

       	@Override
       	protected KimGrammarAccess getGrammarAccess() {
       		return grammarAccess;
       	}




    // $ANTLR start "entryRuleModel"
    // InternalKim.g:73:1: entryRuleModel returns [EObject current=null] : iv_ruleModel= ruleModel EOF ;
    public final EObject entryRuleModel() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModel = null;


        try {
            // InternalKim.g:73:46: (iv_ruleModel= ruleModel EOF )
            // InternalKim.g:74:2: iv_ruleModel= ruleModel EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModel=ruleModel();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModel; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModel"


    // $ANTLR start "ruleModel"
    // InternalKim.g:80:1: ruleModel returns [EObject current=null] : ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) ;
    public final EObject ruleModel() throws RecognitionException {
        EObject current = null;

        EObject lv_observable_0_0 = null;

        EObject lv_namespace_1_0 = null;

        EObject lv_statements_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:86:2: ( ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) ) )
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            {
            // InternalKim.g:87:2: ( ( (lv_observable_0_0= ruleObservableSemantics ) ) | ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( ((LA3_0>=RULE_LOWERCASE_ID && LA3_0<=RULE_CAMELCASE_ID)||(LA3_0>=RULE_ID && LA3_0<=RULE_INT)||(LA3_0>=22 && LA3_0<=23)||LA3_0==25||LA3_0==33||LA3_0==46||LA3_0==92||(LA3_0>=107 && LA3_0<=108)||(LA3_0>=115 && LA3_0<=116)||(LA3_0>=118 && LA3_0<=129)||LA3_0==183||(LA3_0>=226 && LA3_0<=227)) ) {
                alt3=1;
            }
            else if ( (LA3_0==EOF||LA3_0==RULE_ANNOTATION_ID||(LA3_0>=19 && LA3_0<=20)||(LA3_0>=69 && LA3_0<=77)||LA3_0==80||LA3_0==90||(LA3_0>=133 && LA3_0<=140)||LA3_0==158||(LA3_0>=170 && LA3_0<=173)||(LA3_0>=187 && LA3_0<=219)) ) {
                alt3=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:88:3: ( (lv_observable_0_0= ruleObservableSemantics ) )
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:89:4: (lv_observable_0_0= ruleObservableSemantics )
                    // InternalKim.g:90:5: lv_observable_0_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getModelAccess().getObservableObservableSemanticsParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_0_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getModelRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_0_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    {
                    // InternalKim.g:108:3: ( ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )* )
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )? ( (lv_statements_2_0= ruleStatement ) )*
                    {
                    // InternalKim.g:109:4: ( (lv_namespace_1_0= ruleNamespace ) )?
                    int alt1=2;
                    alt1 = dfa1.predict(input);
                    switch (alt1) {
                        case 1 :
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            {
                            // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
                            // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
                              					
                            }
                            pushFollow(FOLLOW_3);
                            lv_namespace_1_0=ruleNamespace();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getModelRule());
                              						}
                              						set(
                              							current,
                              							"namespace",
                              							lv_namespace_1_0,
                              							"org.integratedmodelling.kim.Kim.Namespace");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:128:4: ( (lv_statements_2_0= ruleStatement ) )*
                    loop2:
                    do {
                        int alt2=2;
                        int LA2_0 = input.LA(1);

                        if ( (LA2_0==RULE_ANNOTATION_ID||(LA2_0>=19 && LA2_0<=20)||(LA2_0>=69 && LA2_0<=74)||LA2_0==80||LA2_0==90||(LA2_0>=133 && LA2_0<=140)||LA2_0==158||(LA2_0>=170 && LA2_0<=173)||(LA2_0>=187 && LA2_0<=219)) ) {
                            alt2=1;
                        }


                        switch (alt2) {
                    	case 1 :
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    {
                    	    // InternalKim.g:129:5: (lv_statements_2_0= ruleStatement )
                    	    // InternalKim.g:130:6: lv_statements_2_0= ruleStatement
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      						newCompositeNode(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_1_1_0());
                    	      					
                    	    }
                    	    pushFollow(FOLLOW_3);
                    	    lv_statements_2_0=ruleStatement();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						if (current==null) {
                    	      							current = createModelElementForParent(grammarAccess.getModelRule());
                    	      						}
                    	      						add(
                    	      							current,
                    	      							"statements",
                    	      							lv_statements_2_0,
                    	      							"org.integratedmodelling.kim.Kim.Statement");
                    	      						afterParserOrEnumRuleCall();
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop2;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModel"


    // $ANTLR start "entryRuleStatement"
    // InternalKim.g:152:1: entryRuleStatement returns [EObject current=null] : iv_ruleStatement= ruleStatement EOF ;
    public final EObject entryRuleStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleStatement = null;


        try {
            // InternalKim.g:152:50: (iv_ruleStatement= ruleStatement EOF )
            // InternalKim.g:153:2: iv_ruleStatement= ruleStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleStatement=ruleStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleStatement"


    // $ANTLR start "ruleStatement"
    // InternalKim.g:159:1: ruleStatement returns [EObject current=null] : ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) ) ;
    public final EObject ruleStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        EObject lv_conceptStatement_0_0 = null;

        EObject lv_modelStatement_2_0 = null;

        EObject lv_upperOntologyStatement_4_0 = null;

        EObject lv_observeStatement_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:165:2: ( ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) ) )
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) )
            {
            // InternalKim.g:166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) )
            int alt4=4;
            alt4 = dfa4.predict(input);
            switch (alt4) {
                case 1 :
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    {
                    // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
                    {
                    // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    {
                    // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
                    // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_conceptStatement_0_0=ruleConceptStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"conceptStatement",
                      							lv_conceptStatement_0_0,
                      							"org.integratedmodelling.kim.Kim.ConceptStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getStatementAccess().getSemicolonKeyword_0_1());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    {
                    // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
                    {
                    // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    {
                    // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
                    // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_modelStatement_2_0=ruleModelStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"modelStatement",
                      							lv_modelStatement_2_0,
                      							"org.integratedmodelling.kim.Kim.ModelStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getStatementAccess().getSemicolonKeyword_1_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    {
                    // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
                    {
                    // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    {
                    // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
                    // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"upperOntologyStatement",
                      							lv_upperOntologyStatement_4_0,
                      							"org.integratedmodelling.kim.Kim.UpperOntologyDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getStatementAccess().getSemicolonKeyword_2_1());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:245:3: ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' )
                    {
                    // InternalKim.g:245:3: ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' )
                    // InternalKim.g:246:4: ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';'
                    {
                    // InternalKim.g:246:4: ( (lv_observeStatement_6_0= ruleObserveStatement ) )
                    // InternalKim.g:247:5: (lv_observeStatement_6_0= ruleObserveStatement )
                    {
                    // InternalKim.g:247:5: (lv_observeStatement_6_0= ruleObserveStatement )
                    // InternalKim.g:248:6: lv_observeStatement_6_0= ruleObserveStatement
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getStatementAccess().getObserveStatementObserveStatementParserRuleCall_3_0_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_observeStatement_6_0=ruleObserveStatement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getStatementRule());
                      						}
                      						set(
                      							current,
                      							"observeStatement",
                      							lv_observeStatement_6_0,
                      							"org.integratedmodelling.kim.Kim.ObserveStatement");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_7=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getStatementAccess().getSemicolonKeyword_3_1());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleStatement"


    // $ANTLR start "entryRuleModelStatement"
    // InternalKim.g:274:1: entryRuleModelStatement returns [EObject current=null] : iv_ruleModelStatement= ruleModelStatement EOF ;
    public final EObject entryRuleModelStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:278:2: (iv_ruleModelStatement= ruleModelStatement EOF )
            // InternalKim.g:279:2: iv_ruleModelStatement= ruleModelStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelStatement=ruleModelStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleModelStatement"


    // $ANTLR start "ruleModelStatement"
    // InternalKim.g:288:1: ruleModelStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) ) ;
    public final EObject ruleModelStatement() throws RecognitionException {
        EObject current = null;

        Token lv_inactive_2_0=null;
        Token lv_private_3_0=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_model_4_0 = null;

        EObject lv_body_5_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getModelStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:297:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) ) )
            // InternalKim.g:298:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) )
            {
            // InternalKim.g:298:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) ) )
            // InternalKim.g:299:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) ) ( (lv_model_4_0= ruleMODEL_TYPE ) ) ( (lv_body_5_0= ruleModelBodyStatement ) )
            {
            // InternalKim.g:299:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==RULE_ANNOTATION_ID) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // InternalKim.g:300:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:300:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:301:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_5);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            // InternalKim.g:318:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) ) )
            // InternalKim.g:319:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:319:4: ( ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* ) )
            // InternalKim.g:320:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:323:5: ( ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )* )
            // InternalKim.g:324:6: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )*
            {
            // InternalKim.g:324:6: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )*
            loop6:
            do {
                int alt6=3;
                int LA6_0 = input.LA(1);

                if ( LA6_0 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
                    alt6=1;
                }
                else if ( LA6_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
                    alt6=2;
                }


                switch (alt6) {
            	case 1 :
            	    // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
            	    // InternalKim.g:326:5: {...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:326:111: ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
            	    // InternalKim.g:327:6: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:330:9: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
            	    // InternalKim.g:330:10: {...}? => ( (lv_inactive_2_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
            	    }
            	    // InternalKim.g:330:19: ( (lv_inactive_2_0= 'void' ) )
            	    // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
            	    {
            	    // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
            	    // InternalKim.g:331:10: lv_inactive_2_0= 'void'
            	    {
            	    lv_inactive_2_0=(Token)match(input,19,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_2_0, grammarAccess.getModelStatementAccess().getInactiveVoidKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getModelStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
            	    // InternalKim.g:349:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:349:111: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
            	    // InternalKim.g:350:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:353:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
            	    // InternalKim.g:353:10: {...}? => ( (lv_private_3_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleModelStatement", "true");
            	    }
            	    // InternalKim.g:353:19: ( (lv_private_3_0= 'private' ) )
            	    // InternalKim.g:353:20: (lv_private_3_0= 'private' )
            	    {
            	    // InternalKim.g:353:20: (lv_private_3_0= 'private' )
            	    // InternalKim.g:354:10: lv_private_3_0= 'private'
            	    {
            	    lv_private_3_0=(Token)match(input,20,FOLLOW_5); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_3_0, grammarAccess.getModelStatementAccess().getPrivatePrivateKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getModelStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop6;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getModelStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:378:3: ( (lv_model_4_0= ruleMODEL_TYPE ) )
            // InternalKim.g:379:4: (lv_model_4_0= ruleMODEL_TYPE )
            {
            // InternalKim.g:379:4: (lv_model_4_0= ruleMODEL_TYPE )
            // InternalKim.g:380:5: lv_model_4_0= ruleMODEL_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getModelMODEL_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_6);
            lv_model_4_0=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"model",
              						lv_model_4_0,
              						"org.integratedmodelling.kim.Kim.MODEL_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:397:3: ( (lv_body_5_0= ruleModelBodyStatement ) )
            // InternalKim.g:398:4: (lv_body_5_0= ruleModelBodyStatement )
            {
            // InternalKim.g:398:4: (lv_body_5_0= ruleModelBodyStatement )
            // InternalKim.g:399:5: lv_body_5_0= ruleModelBodyStatement
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getModelStatementAccess().getBodyModelBodyStatementParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_5_0=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getModelStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_5_0,
              						"org.integratedmodelling.kim.Kim.ModelBodyStatement");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleModelStatement"


    // $ANTLR start "entryRuleModelBodyStatement"
    // InternalKim.g:423:1: entryRuleModelBodyStatement returns [EObject current=null] : iv_ruleModelBodyStatement= ruleModelBodyStatement EOF ;
    public final EObject entryRuleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleModelBodyStatement = null;


        try {
            // InternalKim.g:423:59: (iv_ruleModelBodyStatement= ruleModelBodyStatement EOF )
            // InternalKim.g:424:2: iv_ruleModelBodyStatement= ruleModelBodyStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getModelBodyStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleModelBodyStatement=ruleModelBodyStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleModelBodyStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleModelBodyStatement"


    // $ANTLR start "ruleModelBodyStatement"
    // InternalKim.g:430:1: ruleModelBodyStatement returns [EObject current=null] : ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* ) ) (otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )* )? (otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )* )? ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) ) )? ) ;
    public final EObject ruleModelBodyStatement() throws RecognitionException {
        EObject current = null;

        Token lv_instantiator_0_0=null;
        Token lv_boolean_4_1=null;
        Token lv_boolean_4_2=null;
        Token otherlv_6=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token otherlv_11=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_urn_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_number_3_0 = null;

        EObject lv_concept_5_0 = null;

        EObject lv_observables_8_0 = null;

        EObject lv_observables_10_0 = null;

        EObject lv_dependencies_12_0 = null;

        EObject lv_dependencies_14_0 = null;

        EObject lv_contextualizers_16_0 = null;

        EObject lv_contextualizers_18_0 = null;

        EObject lv_actions_19_0 = null;

        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;



        	enterRule();

        try {
            // InternalKim.g:436:2: ( ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* ) ) (otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )* )? (otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )* )? ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) ) )? ) )
            // InternalKim.g:437:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* ) ) (otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )* )? (otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )* )? ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) ) )? )
            {
            // InternalKim.g:437:2: ( ( (lv_instantiator_0_0= 'each' ) )? ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* ) ) (otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )* )? (otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )* )? ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) ) )? )
            // InternalKim.g:438:3: ( (lv_instantiator_0_0= 'each' ) )? ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )? ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* ) ) (otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )* )? (otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )* )? ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) ) )?
            {
            // InternalKim.g:438:3: ( (lv_instantiator_0_0= 'each' ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==21) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // InternalKim.g:439:4: (lv_instantiator_0_0= 'each' )
                    {
                    // InternalKim.g:439:4: (lv_instantiator_0_0= 'each' )
                    // InternalKim.g:440:5: lv_instantiator_0_0= 'each'
                    {
                    lv_instantiator_0_0=(Token)match(input,21,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_instantiator_0_0, grammarAccess.getModelBodyStatementAccess().getInstantiatorEachKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      					}
                      					setWithLastConsumed(current, "instantiator", true, "each");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:452:3: ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )?
            int alt10=2;
            alt10 = dfa10.predict(input);
            switch (alt10) {
                case 1 :
                    // InternalKim.g:453:4: ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as'
                    {
                    // InternalKim.g:453:4: ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) )
                    int alt9=5;
                    alt9 = dfa9.predict(input);
                    switch (alt9) {
                        case 1 :
                            // InternalKim.g:454:5: ( (lv_urn_1_0= ruleUrn ) )
                            {
                            // InternalKim.g:454:5: ( (lv_urn_1_0= ruleUrn ) )
                            // InternalKim.g:455:6: (lv_urn_1_0= ruleUrn )
                            {
                            // InternalKim.g:455:6: (lv_urn_1_0= ruleUrn )
                            // InternalKim.g:456:7: lv_urn_1_0= ruleUrn
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnUrnParserRuleCall_1_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_urn_1_0=ruleUrn();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"urn",
                              								lv_urn_1_0,
                              								"org.integratedmodelling.kim.Kim.Urn");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:474:5: ( (lv_function_2_0= ruleFunction ) )
                            {
                            // InternalKim.g:474:5: ( (lv_function_2_0= ruleFunction ) )
                            // InternalKim.g:475:6: (lv_function_2_0= ruleFunction )
                            {
                            // InternalKim.g:475:6: (lv_function_2_0= ruleFunction )
                            // InternalKim.g:476:7: lv_function_2_0= ruleFunction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_function_2_0=ruleFunction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"function",
                              								lv_function_2_0,
                              								"org.integratedmodelling.kim.Kim.Function");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:494:5: ( (lv_number_3_0= ruleNumber ) )
                            {
                            // InternalKim.g:494:5: ( (lv_number_3_0= ruleNumber ) )
                            // InternalKim.g:495:6: (lv_number_3_0= ruleNumber )
                            {
                            // InternalKim.g:495:6: (lv_number_3_0= ruleNumber )
                            // InternalKim.g:496:7: lv_number_3_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_number_3_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"number",
                              								lv_number_3_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:514:5: ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) )
                            {
                            // InternalKim.g:514:5: ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) )
                            // InternalKim.g:515:6: ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) )
                            {
                            // InternalKim.g:515:6: ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) )
                            // InternalKim.g:516:7: (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' )
                            {
                            // InternalKim.g:516:7: (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' )
                            int alt8=2;
                            int LA8_0 = input.LA(1);

                            if ( (LA8_0==22) ) {
                                alt8=1;
                            }
                            else if ( (LA8_0==23) ) {
                                alt8=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 8, 0, input);

                                throw nvae;
                            }
                            switch (alt8) {
                                case 1 :
                                    // InternalKim.g:517:8: lv_boolean_4_1= 'true'
                                    {
                                    lv_boolean_4_1=(Token)match(input,22,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_4_1, grammarAccess.getModelBodyStatementAccess().getBooleanTrueKeyword_1_0_3_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_4_1, null);
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:528:8: lv_boolean_4_2= 'false'
                                    {
                                    lv_boolean_4_2=(Token)match(input,23,FOLLOW_7); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_boolean_4_2, grammarAccess.getModelBodyStatementAccess().getBooleanFalseKeyword_1_0_3_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getModelBodyStatementRule());
                                      								}
                                      								setWithLastConsumed(current, "boolean", lv_boolean_4_2, null);
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:542:5: ( (lv_concept_5_0= ruleSimpleObservableSemantics ) )
                            {
                            // InternalKim.g:542:5: ( (lv_concept_5_0= ruleSimpleObservableSemantics ) )
                            // InternalKim.g:543:6: (lv_concept_5_0= ruleSimpleObservableSemantics )
                            {
                            // InternalKim.g:543:6: (lv_concept_5_0= ruleSimpleObservableSemantics )
                            // InternalKim.g:544:7: lv_concept_5_0= ruleSimpleObservableSemantics
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                              						
                            }
                            pushFollow(FOLLOW_7);
                            lv_concept_5_0=ruleSimpleObservableSemantics();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                              							}
                              							set(
                              								current,
                              								"concept",
                              								lv_concept_5_0,
                              								"org.integratedmodelling.kim.Kim.SimpleObservableSemantics");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,24,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getModelBodyStatementAccess().getAsKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:567:3: ( ( (lv_name_7_0= RULE_LOWERCASE_ID ) ) | ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* ) )
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==RULE_LOWERCASE_ID) ) {
                int LA12_1 = input.LA(2);

                if ( (LA12_1==24||LA12_1==33||LA12_1==51||LA12_1==89) ) {
                    alt12=2;
                }
                else if ( (LA12_1==EOF||LA12_1==18||(LA12_1>=26 && LA12_1<=28)||(LA12_1>=53 && LA12_1<=55)) ) {
                    alt12=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 12, 1, input);

                    throw nvae;
                }
            }
            else if ( ((LA12_0>=RULE_STRING && LA12_0<=RULE_CAMELCASE_ID)||(LA12_0>=RULE_ID && LA12_0<=RULE_INT)||(LA12_0>=22 && LA12_0<=23)||LA12_0==25||LA12_0==33||LA12_0==46||LA12_0==92||(LA12_0>=107 && LA12_0<=108)||(LA12_0>=115 && LA12_0<=116)||(LA12_0>=118 && LA12_0<=129)||LA12_0==183||(LA12_0>=226 && LA12_0<=227)) ) {
                alt12=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }
            switch (alt12) {
                case 1 :
                    // InternalKim.g:568:4: ( (lv_name_7_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:568:4: ( (lv_name_7_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:569:5: (lv_name_7_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:569:5: (lv_name_7_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:570:6: lv_name_7_0= RULE_LOWERCASE_ID
                    {
                    lv_name_7_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_8); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_7_0, grammarAccess.getModelBodyStatementAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getModelBodyStatementRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_7_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:587:4: ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* )
                    {
                    // InternalKim.g:587:4: ( ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )* )
                    // InternalKim.g:588:5: ( (lv_observables_8_0= ruleObservableSemantics ) ) (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )*
                    {
                    // InternalKim.g:588:5: ( (lv_observables_8_0= ruleObservableSemantics ) )
                    // InternalKim.g:589:6: (lv_observables_8_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:589:6: (lv_observables_8_0= ruleObservableSemantics )
                    // InternalKim.g:590:7: lv_observables_8_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_9);
                    lv_observables_8_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      							}
                      							add(
                      								current,
                      								"observables",
                      								lv_observables_8_0,
                      								"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    // InternalKim.g:607:5: (otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) ) )*
                    loop11:
                    do {
                        int alt11=2;
                        int LA11_0 = input.LA(1);

                        if ( (LA11_0==25) ) {
                            alt11=1;
                        }


                        switch (alt11) {
                    	case 1 :
                    	    // InternalKim.g:608:6: otherlv_9= ',' ( (lv_observables_10_0= ruleObservableSemantics ) )
                    	    {
                    	    otherlv_9=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_9, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_2_1_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:612:6: ( (lv_observables_10_0= ruleObservableSemantics ) )
                    	    // InternalKim.g:613:7: (lv_observables_10_0= ruleObservableSemantics )
                    	    {
                    	    // InternalKim.g:613:7: (lv_observables_10_0= ruleObservableSemantics )
                    	    // InternalKim.g:614:8: lv_observables_10_0= ruleObservableSemantics
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      								newCompositeNode(grammarAccess.getModelBodyStatementAccess().getObservablesObservableSemanticsParserRuleCall_2_1_1_1_0());
                    	      							
                    	    }
                    	    pushFollow(FOLLOW_9);
                    	    lv_observables_10_0=ruleObservableSemantics();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      								}
                    	      								add(
                    	      									current,
                    	      									"observables",
                    	      									lv_observables_10_0,
                    	      									"org.integratedmodelling.kim.Kim.ObservableSemantics");
                    	      								afterParserOrEnumRuleCall();
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop11;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            // InternalKim.g:634:3: (otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )* )?
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==26) ) {
                alt14=1;
            }
            switch (alt14) {
                case 1 :
                    // InternalKim.g:635:4: otherlv_11= 'observing' ( (lv_dependencies_12_0= ruleDependency ) ) (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )*
                    {
                    otherlv_11=(Token)match(input,26,FOLLOW_6); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getModelBodyStatementAccess().getObservingKeyword_3_0());
                      			
                    }
                    // InternalKim.g:639:4: ( (lv_dependencies_12_0= ruleDependency ) )
                    // InternalKim.g:640:5: (lv_dependencies_12_0= ruleDependency )
                    {
                    // InternalKim.g:640:5: (lv_dependencies_12_0= ruleDependency )
                    // InternalKim.g:641:6: lv_dependencies_12_0= ruleDependency
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_10);
                    lv_dependencies_12_0=ruleDependency();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"dependencies",
                      							lv_dependencies_12_0,
                      							"org.integratedmodelling.kim.Kim.Dependency");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:658:4: (otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) ) )*
                    loop13:
                    do {
                        int alt13=2;
                        int LA13_0 = input.LA(1);

                        if ( (LA13_0==25) ) {
                            alt13=1;
                        }


                        switch (alt13) {
                    	case 1 :
                    	    // InternalKim.g:659:5: otherlv_13= ',' ( (lv_dependencies_14_0= ruleDependency ) )
                    	    {
                    	    otherlv_13=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_13, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_3_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:663:5: ( (lv_dependencies_14_0= ruleDependency ) )
                    	    // InternalKim.g:664:6: (lv_dependencies_14_0= ruleDependency )
                    	    {
                    	    // InternalKim.g:664:6: (lv_dependencies_14_0= ruleDependency )
                    	    // InternalKim.g:665:7: lv_dependencies_14_0= ruleDependency
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDependenciesDependencyParserRuleCall_3_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_10);
                    	    lv_dependencies_14_0=ruleDependency();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"dependencies",
                    	      								lv_dependencies_14_0,
                    	      								"org.integratedmodelling.kim.Kim.Dependency");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop13;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:684:3: (otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )* )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==27) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // InternalKim.g:685:4: otherlv_15= 'using' ( (lv_contextualizers_16_0= ruleContextualization ) ) (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )*
                    {
                    otherlv_15=(Token)match(input,27,FOLLOW_11); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_15, grammarAccess.getModelBodyStatementAccess().getUsingKeyword_4_0());
                      			
                    }
                    // InternalKim.g:689:4: ( (lv_contextualizers_16_0= ruleContextualization ) )
                    // InternalKim.g:690:5: (lv_contextualizers_16_0= ruleContextualization )
                    {
                    // InternalKim.g:690:5: (lv_contextualizers_16_0= ruleContextualization )
                    // InternalKim.g:691:6: lv_contextualizers_16_0= ruleContextualization
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersContextualizationParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_12);
                    lv_contextualizers_16_0=ruleContextualization();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						add(
                      							current,
                      							"contextualizers",
                      							lv_contextualizers_16_0,
                      							"org.integratedmodelling.kim.Kim.Contextualization");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:708:4: (otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) ) )*
                    loop15:
                    do {
                        int alt15=2;
                        int LA15_0 = input.LA(1);

                        if ( (LA15_0==25) ) {
                            alt15=1;
                        }


                        switch (alt15) {
                    	case 1 :
                    	    // InternalKim.g:709:5: otherlv_17= ',' ( (lv_contextualizers_18_0= ruleContextualization ) )
                    	    {
                    	    otherlv_17=(Token)match(input,25,FOLLOW_11); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_17, grammarAccess.getModelBodyStatementAccess().getCommaKeyword_4_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:713:5: ( (lv_contextualizers_18_0= ruleContextualization ) )
                    	    // InternalKim.g:714:6: (lv_contextualizers_18_0= ruleContextualization )
                    	    {
                    	    // InternalKim.g:714:6: (lv_contextualizers_18_0= ruleContextualization )
                    	    // InternalKim.g:715:7: lv_contextualizers_18_0= ruleContextualization
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getContextualizersContextualizationParserRuleCall_4_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_12);
                    	    lv_contextualizers_18_0=ruleContextualization();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"contextualizers",
                    	      								lv_contextualizers_18_0,
                    	      								"org.integratedmodelling.kim.Kim.Contextualization");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop15;
                        }
                    } while (true);


                    }
                    break;

            }

            // InternalKim.g:734:3: ( (lv_actions_19_0= ruleActionSpecification ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( ((LA17_0>=53 && LA17_0<=55)) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // InternalKim.g:735:4: (lv_actions_19_0= ruleActionSpecification )
            	    {
            	    // InternalKim.g:735:4: (lv_actions_19_0= ruleActionSpecification )
            	    // InternalKim.g:736:5: lv_actions_19_0= ruleActionSpecification
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getModelBodyStatementAccess().getActionsActionSpecificationParserRuleCall_5_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_13);
            	    lv_actions_19_0=ruleActionSpecification();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"actions",
            	      						lv_actions_19_0,
            	      						"org.integratedmodelling.kim.Kim.ActionSpecification");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            // InternalKim.g:753:3: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==28) ) {
                int LA18_1 = input.LA(2);

                if ( (LA18_1==29) ) {
                    alt18=1;
                }
            }
            switch (alt18) {
                case 1 :
                    // InternalKim.g:754:4: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
                    {
                    otherlv_20=(Token)match(input,28,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_20, grammarAccess.getModelBodyStatementAccess().getWithKeyword_6_0());
                      			
                    }
                    otherlv_21=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_21, grammarAccess.getModelBodyStatementAccess().getMetadataKeyword_6_1());
                      			
                    }
                    // InternalKim.g:762:4: ( (lv_metadata_22_0= ruleMetadata ) )
                    // InternalKim.g:763:5: (lv_metadata_22_0= ruleMetadata )
                    {
                    // InternalKim.g:763:5: (lv_metadata_22_0= ruleMetadata )
                    // InternalKim.g:764:6: lv_metadata_22_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getMetadataMetadataParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_16);
                    lv_metadata_22_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_22_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:782:3: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==28) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // InternalKim.g:783:4: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleDocumentation ) )
                    {
                    otherlv_23=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_23, grammarAccess.getModelBodyStatementAccess().getWithKeyword_7_0());
                      			
                    }
                    otherlv_24=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_24, grammarAccess.getModelBodyStatementAccess().getDocumentationKeyword_7_1());
                      			
                    }
                    // InternalKim.g:791:4: ( (lv_documentation_25_0= ruleDocumentation ) )
                    // InternalKim.g:792:5: (lv_documentation_25_0= ruleDocumentation )
                    {
                    // InternalKim.g:792:5: (lv_documentation_25_0= ruleDocumentation )
                    // InternalKim.g:793:6: lv_documentation_25_0= ruleDocumentation
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getModelBodyStatementAccess().getDocumentationDocumentationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_documentation_25_0=ruleDocumentation();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getModelBodyStatementRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_25_0,
                      							"org.integratedmodelling.kim.Kim.Documentation");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleModelBodyStatement"


    // $ANTLR start "entryRuleContextualization"
    // InternalKim.g:815:1: entryRuleContextualization returns [EObject current=null] : iv_ruleContextualization= ruleContextualization EOF ;
    public final EObject entryRuleContextualization() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleContextualization = null;


        try {
            // InternalKim.g:815:58: (iv_ruleContextualization= ruleContextualization EOF )
            // InternalKim.g:816:2: iv_ruleContextualization= ruleContextualization EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getContextualizationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleContextualization=ruleContextualization();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleContextualization; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleContextualization"


    // $ANTLR start "ruleContextualization"
    // InternalKim.g:822:1: ruleContextualization returns [EObject current=null] : ( ( (lv_value_0_0= ruleValueExecution ) ) | ( (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')' ) | (otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) ) ) | ( (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) ) ) ) ;
    public final EObject ruleContextualization() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_discretization_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token otherlv_8=null;
        Token lv_discretization_9_0=null;
        Token otherlv_10=null;
        Token otherlv_11=null;
        EObject lv_value_0_0 = null;

        EObject lv_classification_4_0 = null;

        EObject lv_lookupTable_7_0 = null;

        AntlrDatatypeRuleToken lv_classificationProperty_12_0 = null;



        	enterRule();

        try {
            // InternalKim.g:828:2: ( ( ( (lv_value_0_0= ruleValueExecution ) ) | ( (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')' ) | (otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) ) ) | ( (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) ) ) ) )
            // InternalKim.g:829:2: ( ( (lv_value_0_0= ruleValueExecution ) ) | ( (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')' ) | (otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) ) ) | ( (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) ) ) )
            {
            // InternalKim.g:829:2: ( ( (lv_value_0_0= ruleValueExecution ) ) | ( (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')' ) | (otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) ) ) | ( (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) ) ) )
            int alt22=4;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_EXPR:
            case 87:
                {
                alt22=1;
                }
                break;
            case 31:
            case 32:
                {
                alt22=2;
                }
                break;
            case 35:
                {
                alt22=3;
                }
                break;
            case 36:
            case 37:
                {
                alt22=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalKim.g:830:3: ( (lv_value_0_0= ruleValueExecution ) )
                    {
                    // InternalKim.g:830:3: ( (lv_value_0_0= ruleValueExecution ) )
                    // InternalKim.g:831:4: (lv_value_0_0= ruleValueExecution )
                    {
                    // InternalKim.g:831:4: (lv_value_0_0= ruleValueExecution )
                    // InternalKim.g:832:5: lv_value_0_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getContextualizationAccess().getValueValueExecutionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_value_0_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getContextualizationRule());
                      					}
                      					set(
                      						current,
                      						"value",
                      						lv_value_0_0,
                      						"org.integratedmodelling.kim.Kim.ValueExecution");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:850:3: ( (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')' )
                    {
                    // InternalKim.g:850:3: ( (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')' )
                    // InternalKim.g:851:4: (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) ) otherlv_3= '(' ( (lv_classification_4_0= ruleClassification ) ) otherlv_5= ')'
                    {
                    // InternalKim.g:851:4: (otherlv_1= 'classification' | ( (lv_discretization_2_0= 'discretization' ) ) )
                    int alt20=2;
                    int LA20_0 = input.LA(1);

                    if ( (LA20_0==31) ) {
                        alt20=1;
                    }
                    else if ( (LA20_0==32) ) {
                        alt20=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 20, 0, input);

                        throw nvae;
                    }
                    switch (alt20) {
                        case 1 :
                            // InternalKim.g:852:5: otherlv_1= 'classification'
                            {
                            otherlv_1=(Token)match(input,31,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getContextualizationAccess().getClassificationKeyword_1_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:857:5: ( (lv_discretization_2_0= 'discretization' ) )
                            {
                            // InternalKim.g:857:5: ( (lv_discretization_2_0= 'discretization' ) )
                            // InternalKim.g:858:6: (lv_discretization_2_0= 'discretization' )
                            {
                            // InternalKim.g:858:6: (lv_discretization_2_0= 'discretization' )
                            // InternalKim.g:859:7: lv_discretization_2_0= 'discretization'
                            {
                            lv_discretization_2_0=(Token)match(input,32,FOLLOW_18); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_2_0, grammarAccess.getContextualizationAccess().getDiscretizationDiscretizationKeyword_1_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getContextualizationRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretization");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,33,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getContextualizationAccess().getLeftParenthesisKeyword_1_1());
                      			
                    }
                    // InternalKim.g:876:4: ( (lv_classification_4_0= ruleClassification ) )
                    // InternalKim.g:877:5: (lv_classification_4_0= ruleClassification )
                    {
                    // InternalKim.g:877:5: (lv_classification_4_0= ruleClassification )
                    // InternalKim.g:878:6: lv_classification_4_0= ruleClassification
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContextualizationAccess().getClassificationClassificationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_classification_4_0=ruleClassification();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContextualizationRule());
                      						}
                      						set(
                      							current,
                      							"classification",
                      							lv_classification_4_0,
                      							"org.integratedmodelling.kim.Kim.Classification");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_5=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getContextualizationAccess().getRightParenthesisKeyword_1_3());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:901:3: (otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) ) )
                    {
                    // InternalKim.g:901:3: (otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) ) )
                    // InternalKim.g:902:4: otherlv_6= 'lookup' ( (lv_lookupTable_7_0= ruleLookupTable ) )
                    {
                    otherlv_6=(Token)match(input,35,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_6, grammarAccess.getContextualizationAccess().getLookupKeyword_2_0());
                      			
                    }
                    // InternalKim.g:906:4: ( (lv_lookupTable_7_0= ruleLookupTable ) )
                    // InternalKim.g:907:5: (lv_lookupTable_7_0= ruleLookupTable )
                    {
                    // InternalKim.g:907:5: (lv_lookupTable_7_0= ruleLookupTable )
                    // InternalKim.g:908:6: lv_lookupTable_7_0= ruleLookupTable
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContextualizationAccess().getLookupTableLookupTableParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_lookupTable_7_0=ruleLookupTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContextualizationRule());
                      						}
                      						set(
                      							current,
                      							"lookupTable",
                      							lv_lookupTable_7_0,
                      							"org.integratedmodelling.kim.Kim.LookupTable");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:927:3: ( (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) ) )
                    {
                    // InternalKim.g:927:3: ( (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) ) )
                    // InternalKim.g:928:4: (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) ) otherlv_10= 'according' otherlv_11= 'to' ( (lv_classificationProperty_12_0= rulePropertyId ) )
                    {
                    // InternalKim.g:928:4: (otherlv_8= 'classified' | ( (lv_discretization_9_0= 'discretized' ) ) )
                    int alt21=2;
                    int LA21_0 = input.LA(1);

                    if ( (LA21_0==36) ) {
                        alt21=1;
                    }
                    else if ( (LA21_0==37) ) {
                        alt21=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 21, 0, input);

                        throw nvae;
                    }
                    switch (alt21) {
                        case 1 :
                            // InternalKim.g:929:5: otherlv_8= 'classified'
                            {
                            otherlv_8=(Token)match(input,36,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getContextualizationAccess().getClassifiedKeyword_3_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:934:5: ( (lv_discretization_9_0= 'discretized' ) )
                            {
                            // InternalKim.g:934:5: ( (lv_discretization_9_0= 'discretized' ) )
                            // InternalKim.g:935:6: (lv_discretization_9_0= 'discretized' )
                            {
                            // InternalKim.g:935:6: (lv_discretization_9_0= 'discretized' )
                            // InternalKim.g:936:7: lv_discretization_9_0= 'discretized'
                            {
                            lv_discretization_9_0=(Token)match(input,37,FOLLOW_21); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_discretization_9_0, grammarAccess.getContextualizationAccess().getDiscretizationDiscretizedKeyword_3_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getContextualizationRule());
                              							}
                              							setWithLastConsumed(current, "discretization", true, "discretized");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_10=(Token)match(input,38,FOLLOW_22); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getContextualizationAccess().getAccordingKeyword_3_1());
                      			
                    }
                    otherlv_11=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_11, grammarAccess.getContextualizationAccess().getToKeyword_3_2());
                      			
                    }
                    // InternalKim.g:957:4: ( (lv_classificationProperty_12_0= rulePropertyId ) )
                    // InternalKim.g:958:5: (lv_classificationProperty_12_0= rulePropertyId )
                    {
                    // InternalKim.g:958:5: (lv_classificationProperty_12_0= rulePropertyId )
                    // InternalKim.g:959:6: lv_classificationProperty_12_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getContextualizationAccess().getClassificationPropertyPropertyIdParserRuleCall_3_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_classificationProperty_12_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getContextualizationRule());
                      						}
                      						set(
                      							current,
                      							"classificationProperty",
                      							lv_classificationProperty_12_0,
                      							"org.integratedmodelling.kim.Kim.PropertyId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleContextualization"


    // $ANTLR start "entryRuleClassification"
    // InternalKim.g:981:1: entryRuleClassification returns [EObject current=null] : iv_ruleClassification= ruleClassification EOF ;
    public final EObject entryRuleClassification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassification = null;


        try {
            // InternalKim.g:981:55: (iv_ruleClassification= ruleClassification EOF )
            // InternalKim.g:982:2: iv_ruleClassification= ruleClassification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassification=ruleClassification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassification"


    // $ANTLR start "ruleClassification"
    // InternalKim.g:988:1: ruleClassification returns [EObject current=null] : ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) ;
    public final EObject ruleClassification() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifiers_0_0 = null;

        EObject lv_classifiers_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:994:2: ( ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* ) )
            // InternalKim.g:995:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            {
            // InternalKim.g:995:2: ( ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )* )
            // InternalKim.g:996:3: ( (lv_classifiers_0_0= ruleClassifier ) ) ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            {
            // InternalKim.g:996:3: ( (lv_classifiers_0_0= ruleClassifier ) )
            // InternalKim.g:997:4: (lv_classifiers_0_0= ruleClassifier )
            {
            // InternalKim.g:997:4: (lv_classifiers_0_0= ruleClassifier )
            // InternalKim.g:998:5: lv_classifiers_0_0= ruleClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_classifiers_0_0=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassificationRule());
              					}
              					add(
              						current,
              						"classifiers",
              						lv_classifiers_0_0,
              						"org.integratedmodelling.kim.Kim.Classifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1015:3: ( ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==25) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // InternalKim.g:1016:4: ( ( ',' )=>otherlv_1= ',' ) ( (lv_classifiers_2_0= ruleClassifier ) )
            	    {
            	    // InternalKim.g:1016:4: ( ( ',' )=>otherlv_1= ',' )
            	    // InternalKim.g:1017:5: ( ',' )=>otherlv_1= ','
            	    {
            	    otherlv_1=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_1, grammarAccess.getClassificationAccess().getCommaKeyword_1_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:1023:4: ( (lv_classifiers_2_0= ruleClassifier ) )
            	    // InternalKim.g:1024:5: (lv_classifiers_2_0= ruleClassifier )
            	    {
            	    // InternalKim.g:1024:5: (lv_classifiers_2_0= ruleClassifier )
            	    // InternalKim.g:1025:6: lv_classifiers_2_0= ruleClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getClassificationAccess().getClassifiersClassifierParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_classifiers_2_0=ruleClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getClassificationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"classifiers",
            	      							lv_classifiers_2_0,
            	      							"org.integratedmodelling.kim.Kim.Classifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassification"


    // $ANTLR start "entryRuleClassifier"
    // InternalKim.g:1047:1: entryRuleClassifier returns [EObject current=null] : iv_ruleClassifier= ruleClassifier EOF ;
    public final EObject entryRuleClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifier = null;


        try {
            // InternalKim.g:1047:51: (iv_ruleClassifier= ruleClassifier EOF )
            // InternalKim.g:1048:2: iv_ruleClassifier= ruleClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifier=ruleClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifier"


    // $ANTLR start "ruleClassifier"
    // InternalKim.g:1054:1: ruleClassifier returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) ;
    public final EObject ruleClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_otherwise_1_0=null;
        Token otherlv_2=null;
        Token lv_negated_3_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_classifier_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1060:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? ) )
            // InternalKim.g:1061:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            {
            // InternalKim.g:1061:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )? )
            // InternalKim.g:1062:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            {
            // InternalKim.g:1062:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:1063:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:1063:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:1064:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getClassifierAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_25);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getClassifierRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:1081:3: ( ( (lv_otherwise_1_0= 'otherwise' ) ) | ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) ) )?
            int alt25=3;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==40) ) {
                alt25=1;
            }
            else if ( ((LA25_0>=41 && LA25_0<=42)) ) {
                alt25=2;
            }
            switch (alt25) {
                case 1 :
                    // InternalKim.g:1082:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    {
                    // InternalKim.g:1082:4: ( (lv_otherwise_1_0= 'otherwise' ) )
                    // InternalKim.g:1083:5: (lv_otherwise_1_0= 'otherwise' )
                    {
                    // InternalKim.g:1083:5: (lv_otherwise_1_0= 'otherwise' )
                    // InternalKim.g:1084:6: lv_otherwise_1_0= 'otherwise'
                    {
                    lv_otherwise_1_0=(Token)match(input,40,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_otherwise_1_0, grammarAccess.getClassifierAccess().getOtherwiseOtherwiseKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getClassifierRule());
                      						}
                      						setWithLastConsumed(current, "otherwise", true, "otherwise");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1097:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    {
                    // InternalKim.g:1097:4: ( (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) ) )
                    // InternalKim.g:1098:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) ) ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    {
                    // InternalKim.g:1098:5: (otherlv_2= 'if' | ( (lv_negated_3_0= 'unless' ) ) )
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==41) ) {
                        alt24=1;
                    }
                    else if ( (LA24_0==42) ) {
                        alt24=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 24, 0, input);

                        throw nvae;
                    }
                    switch (alt24) {
                        case 1 :
                            // InternalKim.g:1099:6: otherlv_2= 'if'
                            {
                            otherlv_2=(Token)match(input,41,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_2, grammarAccess.getClassifierAccess().getIfKeyword_1_1_0_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1104:6: ( (lv_negated_3_0= 'unless' ) )
                            {
                            // InternalKim.g:1104:6: ( (lv_negated_3_0= 'unless' ) )
                            // InternalKim.g:1105:7: (lv_negated_3_0= 'unless' )
                            {
                            // InternalKim.g:1105:7: (lv_negated_3_0= 'unless' )
                            // InternalKim.g:1106:8: lv_negated_3_0= 'unless'
                            {
                            lv_negated_3_0=(Token)match(input,42,FOLLOW_26); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_negated_3_0, grammarAccess.getClassifierAccess().getNegatedUnlessKeyword_1_1_0_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getClassifierRule());
                              								}
                              								setWithLastConsumed(current, "negated", true, "unless");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:1119:5: ( (lv_classifier_4_0= ruleClassifierRHS ) )
                    // InternalKim.g:1120:6: (lv_classifier_4_0= ruleClassifierRHS )
                    {
                    // InternalKim.g:1120:6: (lv_classifier_4_0= ruleClassifierRHS )
                    // InternalKim.g:1121:7: lv_classifier_4_0= ruleClassifierRHS
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getClassifierAccess().getClassifierClassifierRHSParserRuleCall_1_1_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_classifier_4_0=ruleClassifierRHS();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getClassifierRule());
                      							}
                      							set(
                      								current,
                      								"classifier",
                      								lv_classifier_4_0,
                      								"org.integratedmodelling.kim.Kim.ClassifierRHS");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifier"


    // $ANTLR start "entryRuleClassifierRHS"
    // InternalKim.g:1144:1: entryRuleClassifierRHS returns [EObject current=null] : iv_ruleClassifierRHS= ruleClassifierRHS EOF ;
    public final EObject entryRuleClassifierRHS() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHS = null;


        try {
            // InternalKim.g:1144:54: (iv_ruleClassifierRHS= ruleClassifierRHS EOF )
            // InternalKim.g:1145:2: iv_ruleClassifierRHS= ruleClassifierRHS EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHS=ruleClassifierRHS();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHS; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHS"


    // $ANTLR start "ruleClassifierRHS"
    // InternalKim.g:1151:1: ruleClassifierRHS returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHS() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_nodata_21_0=null;
        Token lv_star_22_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;

        EObject lv_op_19_0 = null;

        EObject lv_expression_20_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1157:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) ) )
            // InternalKim.g:1158:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            {
            // InternalKim.g:1158:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )
            int alt30=10;
            alt30 = dfa30.predict(input);
            switch (alt30) {
                case 1 :
                    // InternalKim.g:1159:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1159:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt26=2;
                    int LA26_0 = input.LA(1);

                    if ( (LA26_0==22) ) {
                        alt26=1;
                    }
                    else if ( (LA26_0==23) ) {
                        alt26=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 26, 0, input);

                        throw nvae;
                    }
                    switch (alt26) {
                        case 1 :
                            // InternalKim.g:1160:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1160:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1161:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1161:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1162:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1175:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1175:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1176:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1176:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1177:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1191:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1191:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1192:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1192:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1193:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1193:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1194:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1211:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt27=3;
                    int LA27_0 = input.LA(1);

                    if ( (LA27_0==43) ) {
                        alt27=1;
                    }
                    else if ( (LA27_0==44) ) {
                        alt27=2;
                    }
                    switch (alt27) {
                        case 1 :
                            // InternalKim.g:1212:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1212:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1213:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1213:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1214:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,43,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1227:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,44,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1232:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1233:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1239:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1240:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1244:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1245:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1262:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt28=3;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==43) ) {
                        alt28=1;
                    }
                    else if ( (LA28_0==44) ) {
                        alt28=2;
                    }
                    switch (alt28) {
                        case 1 :
                            // InternalKim.g:1263:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1263:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1264:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1264:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1265:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1278:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1285:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1285:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1286:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1286:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1287:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1305:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1305:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1306:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1310:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1311:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1311:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1312:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1331:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1331:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1332:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1332:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1333:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1350:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1350:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1351:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1351:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1352:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1370:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    {
                    // InternalKim.g:1370:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
                    // InternalKim.g:1371:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
                    {
                    otherlv_14=(Token)match(input,33,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_14, grammarAccess.getClassifierRHSAccess().getLeftParenthesisKeyword_6_0());
                      			
                    }
                    // InternalKim.g:1375:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1376:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1376:5: (lv_toResolve_15_0= ruleConceptDeclaration )
                    // InternalKim.g:1377:6: lv_toResolve_15_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_30);
                    lv_toResolve_15_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						add(
                      							current,
                      							"toResolve",
                      							lv_toResolve_15_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1394:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
                    loop29:
                    do {
                        int alt29=2;
                        int LA29_0 = input.LA(1);

                        if ( (LA29_0==25) ) {
                            alt29=1;
                        }


                        switch (alt29) {
                    	case 1 :
                    	    // InternalKim.g:1395:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    {
                    	    // InternalKim.g:1395:5: ( ( ',' )=>otherlv_16= ',' )
                    	    // InternalKim.g:1396:6: ( ',' )=>otherlv_16= ','
                    	    {
                    	    otherlv_16=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_16, grammarAccess.getClassifierRHSAccess().getCommaKeyword_6_2_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:1402:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:1403:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:1403:6: (lv_toResolve_17_0= ruleConceptDeclaration )
                    	    // InternalKim.g:1404:7: lv_toResolve_17_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_30);
                    	    lv_toResolve_17_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"toResolve",
                    	      								lv_toResolve_17_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop29;
                        }
                    } while (true);

                    otherlv_18=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getClassifierRHSAccess().getRightParenthesisKeyword_6_3());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1428:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1428:3: ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) )
                    // InternalKim.g:1429:4: ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) )
                    {
                    // InternalKim.g:1429:4: ( (lv_op_19_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1430:5: (lv_op_19_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1430:5: (lv_op_19_0= ruleREL_OPERATOR )
                    // InternalKim.g:1431:6: lv_op_19_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_op_19_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_19_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1448:4: ( (lv_expression_20_0= ruleNumber ) )
                    // InternalKim.g:1449:5: (lv_expression_20_0= ruleNumber )
                    {
                    // InternalKim.g:1449:5: (lv_expression_20_0= ruleNumber )
                    // InternalKim.g:1450:6: lv_expression_20_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_20_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_20_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1469:3: ( (lv_nodata_21_0= 'unknown' ) )
                    {
                    // InternalKim.g:1469:3: ( (lv_nodata_21_0= 'unknown' ) )
                    // InternalKim.g:1470:4: (lv_nodata_21_0= 'unknown' )
                    {
                    // InternalKim.g:1470:4: (lv_nodata_21_0= 'unknown' )
                    // InternalKim.g:1471:5: lv_nodata_21_0= 'unknown'
                    {
                    lv_nodata_21_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_21_0, grammarAccess.getClassifierRHSAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_21_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1484:3: ( (lv_star_22_0= '*' ) )
                    {
                    // InternalKim.g:1484:3: ( (lv_star_22_0= '*' ) )
                    // InternalKim.g:1485:4: (lv_star_22_0= '*' )
                    {
                    // InternalKim.g:1485:4: (lv_star_22_0= '*' )
                    // InternalKim.g:1486:5: lv_star_22_0= '*'
                    {
                    lv_star_22_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_22_0, grammarAccess.getClassifierRHSAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHS"


    // $ANTLR start "entryRuleClassifierRHSWithId"
    // InternalKim.g:1502:1: entryRuleClassifierRHSWithId returns [EObject current=null] : iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF ;
    public final EObject entryRuleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleClassifierRHSWithId = null;


        try {
            // InternalKim.g:1502:60: (iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF )
            // InternalKim.g:1503:2: iv_ruleClassifierRHSWithId= ruleClassifierRHSWithId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getClassifierRHSWithIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleClassifierRHSWithId=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleClassifierRHSWithId; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleClassifierRHSWithId"


    // $ANTLR start "ruleClassifierRHSWithId"
    // InternalKim.g:1509:1: ruleClassifierRHSWithId returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) ;
    public final EObject ruleClassifierRHSWithId() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_id_14_1=null;
        Token lv_nodata_17_0=null;
        Token lv_star_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        AntlrDatatypeRuleToken lv_id_14_2 = null;

        EObject lv_op_15_0 = null;

        EObject lv_expression_16_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1515:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) ) )
            // InternalKim.g:1516:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            {
            // InternalKim.g:1516:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )
            int alt35=10;
            alt35 = dfa35.predict(input);
            switch (alt35) {
                case 1 :
                    // InternalKim.g:1517:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:1517:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt31=2;
                    int LA31_0 = input.LA(1);

                    if ( (LA31_0==22) ) {
                        alt31=1;
                    }
                    else if ( (LA31_0==23) ) {
                        alt31=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 31, 0, input);

                        throw nvae;
                    }
                    switch (alt31) {
                        case 1 :
                            // InternalKim.g:1518:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:1518:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:1519:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:1519:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:1520:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1533:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:1533:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:1534:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:1534:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:1535:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getClassifierRHSWithIdAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1549:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:1549:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:1550:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:1550:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:1551:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:1551:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:1552:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1569:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt32=3;
                    int LA32_0 = input.LA(1);

                    if ( (LA32_0==43) ) {
                        alt32=1;
                    }
                    else if ( (LA32_0==44) ) {
                        alt32=2;
                    }
                    switch (alt32) {
                        case 1 :
                            // InternalKim.g:1570:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1570:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:1571:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:1571:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:1572:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,43,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getClassifierRHSWithIdAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1585:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,44,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:1590:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:1591:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getClassifierRHSWithIdAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:1597:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:1598:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:1602:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:1603:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1620:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt33=3;
                    int LA33_0 = input.LA(1);

                    if ( (LA33_0==43) ) {
                        alt33=1;
                    }
                    else if ( (LA33_0==44) ) {
                        alt33=2;
                    }
                    switch (alt33) {
                        case 1 :
                            // InternalKim.g:1621:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:1621:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:1622:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:1622:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:1623:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getClassifierRHSWithIdAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:1636:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getClassifierRHSWithIdAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:1643:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:1643:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:1644:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:1644:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:1645:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:1663:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:1663:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:1664:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getClassifierRHSWithIdAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:1668:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:1669:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:1669:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:1670:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:1689:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:1689:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:1690:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:1690:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:1691:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getClassifierRHSWithIdAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:1708:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:1708:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:1709:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:1709:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:1710:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:1728:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:1728:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
                    // InternalKim.g:1729:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    {
                    // InternalKim.g:1729:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
                    // InternalKim.g:1730:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    {
                    // InternalKim.g:1730:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
                    int alt34=2;
                    int LA34_0 = input.LA(1);

                    if ( (LA34_0==RULE_LOWERCASE_ID) ) {
                        switch ( input.LA(2) ) {
                        case 89:
                            {
                            alt34=2;
                            }
                            break;
                        case 51:
                            {
                            switch ( input.LA(3) ) {
                            case RULE_STRING:
                            case RULE_EXPR:
                            case RULE_CAMELCASE_ID:
                            case RULE_INT:
                            case 22:
                            case 23:
                            case 33:
                            case 46:
                            case 107:
                            case 108:
                            case 115:
                            case 116:
                            case 118:
                            case 119:
                            case 120:
                            case 121:
                            case 122:
                            case 123:
                            case 124:
                            case 125:
                            case 126:
                            case 127:
                            case 128:
                            case 129:
                            case 183:
                            case 226:
                            case 227:
                                {
                                alt34=1;
                                }
                                break;
                            case RULE_LOWERCASE_ID:
                                {
                                switch ( input.LA(4) ) {
                                case 89:
                                    {
                                    alt34=1;
                                    }
                                    break;
                                case 51:
                                    {
                                    int LA34_6 = input.LA(5);

                                    if ( ((LA34_6>=RULE_LOWERCASE_ID && LA34_6<=RULE_EXPR)||LA34_6==RULE_INT||(LA34_6>=22 && LA34_6<=23)||LA34_6==33||LA34_6==46||(LA34_6>=107 && LA34_6<=108)||(LA34_6>=115 && LA34_6<=116)||(LA34_6>=118 && LA34_6<=129)||LA34_6==183||(LA34_6>=226 && LA34_6<=227)) ) {
                                        alt34=2;
                                    }
                                    else if ( (LA34_6==RULE_CAMELCASE_ID) ) {
                                        int LA34_7 = input.LA(6);

                                        if ( (synpred67_InternalKim()) ) {
                                            alt34=1;
                                        }
                                        else if ( (true) ) {
                                            alt34=2;
                                        }
                                        else {
                                            if (state.backtracking>0) {state.failed=true; return current;}
                                            NoViableAltException nvae =
                                                new NoViableAltException("", 34, 7, input);

                                            throw nvae;
                                        }
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 34, 6, input);

                                        throw nvae;
                                    }
                                    }
                                    break;
                                case EOF:
                                    {
                                    alt34=2;
                                    }
                                    break;
                                default:
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 34, 5, input);

                                    throw nvae;
                                }

                                }
                                break;
                            case RULE_LOWERCASE_DASHID:
                                {
                                alt34=2;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 34, 3, input);

                                throw nvae;
                            }

                            }
                            break;
                        case EOF:
                            {
                            alt34=1;
                            }
                            break;
                        default:
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 34, 1, input);

                            throw nvae;
                        }

                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 34, 0, input);

                        throw nvae;
                    }
                    switch (alt34) {
                        case 1 :
                            // InternalKim.g:1731:6: lv_id_14_1= RULE_LOWERCASE_ID
                            {
                            lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_14_1, grammarAccess.getClassifierRHSWithIdAccess().getIdLOWERCASE_IDTerminalRuleCall_6_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_14_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:1746:6: lv_id_14_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_id_14_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                              						}
                              						set(
                              							current,
                              							"id",
                              							lv_id_14_2,
                              							"org.integratedmodelling.kim.Kim.PropertyId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:1765:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:1765:3: ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) )
                    // InternalKim.g:1766:4: ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) )
                    {
                    // InternalKim.g:1766:4: ( (lv_op_15_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:1767:5: (lv_op_15_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:1767:5: (lv_op_15_0= ruleREL_OPERATOR )
                    // InternalKim.g:1768:6: lv_op_15_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getOpREL_OPERATORParserRuleCall_7_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_op_15_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_15_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:1785:4: ( (lv_expression_16_0= ruleNumber ) )
                    // InternalKim.g:1786:5: (lv_expression_16_0= ruleNumber )
                    {
                    // InternalKim.g:1786:5: (lv_expression_16_0= ruleNumber )
                    // InternalKim.g:1787:6: lv_expression_16_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getExpressionNumberParserRuleCall_7_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_16_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getClassifierRHSWithIdRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_16_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:1806:3: ( (lv_nodata_17_0= 'unknown' ) )
                    {
                    // InternalKim.g:1806:3: ( (lv_nodata_17_0= 'unknown' ) )
                    // InternalKim.g:1807:4: (lv_nodata_17_0= 'unknown' )
                    {
                    // InternalKim.g:1807:4: (lv_nodata_17_0= 'unknown' )
                    // InternalKim.g:1808:5: lv_nodata_17_0= 'unknown'
                    {
                    lv_nodata_17_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_17_0, grammarAccess.getClassifierRHSWithIdAccess().getNodataUnknownKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_17_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:1821:3: ( (lv_star_18_0= '*' ) )
                    {
                    // InternalKim.g:1821:3: ( (lv_star_18_0= '*' ) )
                    // InternalKim.g:1822:4: (lv_star_18_0= '*' )
                    {
                    // InternalKim.g:1822:4: (lv_star_18_0= '*' )
                    // InternalKim.g:1823:5: lv_star_18_0= '*'
                    {
                    lv_star_18_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_18_0, grammarAccess.getClassifierRHSWithIdAccess().getStarAsteriskKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getClassifierRHSWithIdRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleClassifierRHSWithId"


    // $ANTLR start "entryRuleLookupTable"
    // InternalKim.g:1839:1: entryRuleLookupTable returns [EObject current=null] : iv_ruleLookupTable= ruleLookupTable EOF ;
    public final EObject entryRuleLookupTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLookupTable = null;


        try {
            // InternalKim.g:1839:52: (iv_ruleLookupTable= ruleLookupTable EOF )
            // InternalKim.g:1840:2: iv_ruleLookupTable= ruleLookupTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLookupTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLookupTable=ruleLookupTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLookupTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLookupTable"


    // $ANTLR start "ruleLookupTable"
    // InternalKim.g:1846:1: ruleLookupTable returns [EObject current=null] : (otherlv_0= '(' ( ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) ) ) (otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) ) )* otherlv_4= ')' otherlv_5= 'into' ( (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) ) | ( (lv_ref_8_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleLookupTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_args_1_1=null;
        Token lv_args_1_2=null;
        Token otherlv_2=null;
        Token lv_args_3_1=null;
        Token lv_args_3_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token otherlv_6=null;
        Token lv_ref_8_0=null;
        EObject lv_table_7_0 = null;



        	enterRule();

        try {
            // InternalKim.g:1852:2: ( (otherlv_0= '(' ( ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) ) ) (otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) ) )* otherlv_4= ')' otherlv_5= 'into' ( (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) ) | ( (lv_ref_8_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:1853:2: (otherlv_0= '(' ( ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) ) ) (otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) ) )* otherlv_4= ')' otherlv_5= 'into' ( (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) ) | ( (lv_ref_8_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:1853:2: (otherlv_0= '(' ( ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) ) ) (otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) ) )* otherlv_4= ')' otherlv_5= 'into' ( (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) ) | ( (lv_ref_8_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:1854:3: otherlv_0= '(' ( ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) ) ) (otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) ) )* otherlv_4= ')' otherlv_5= 'into' ( (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) ) | ( (lv_ref_8_0= RULE_LOWERCASE_ID ) ) )
            {
            otherlv_0=(Token)match(input,33,FOLLOW_31); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getLookupTableAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalKim.g:1858:3: ( ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) ) )
            // InternalKim.g:1859:4: ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) )
            {
            // InternalKim.g:1859:4: ( (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' ) )
            // InternalKim.g:1860:5: (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' )
            {
            // InternalKim.g:1860:5: (lv_args_1_1= RULE_LOWERCASE_ID | lv_args_1_2= '?' )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==RULE_LOWERCASE_ID) ) {
                alt36=1;
            }
            else if ( (LA36_0==48) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalKim.g:1861:6: lv_args_1_1= RULE_LOWERCASE_ID
                    {
                    lv_args_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_args_1_1, grammarAccess.getLookupTableAccess().getArgsLOWERCASE_IDTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLookupTableRule());
                      						}
                      						addWithLastConsumed(
                      							current,
                      							"args",
                      							lv_args_1_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:1876:6: lv_args_1_2= '?'
                    {
                    lv_args_1_2=(Token)match(input,48,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_args_1_2, grammarAccess.getLookupTableAccess().getArgsQuestionMarkKeyword_1_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLookupTableRule());
                      						}
                      						addWithLastConsumed(current, "args", lv_args_1_2, null);
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:1889:3: (otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) ) )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==25) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalKim.g:1890:4: otherlv_2= ',' ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) )
            	    {
            	    otherlv_2=(Token)match(input,25,FOLLOW_31); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(otherlv_2, grammarAccess.getLookupTableAccess().getCommaKeyword_2_0());
            	      			
            	    }
            	    // InternalKim.g:1894:4: ( ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) ) )
            	    // InternalKim.g:1895:5: ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) )
            	    {
            	    // InternalKim.g:1895:5: ( (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' ) )
            	    // InternalKim.g:1896:6: (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' )
            	    {
            	    // InternalKim.g:1896:6: (lv_args_3_1= RULE_LOWERCASE_ID | lv_args_3_2= '?' )
            	    int alt37=2;
            	    int LA37_0 = input.LA(1);

            	    if ( (LA37_0==RULE_LOWERCASE_ID) ) {
            	        alt37=1;
            	    }
            	    else if ( (LA37_0==48) ) {
            	        alt37=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 37, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt37) {
            	        case 1 :
            	            // InternalKim.g:1897:7: lv_args_3_1= RULE_LOWERCASE_ID
            	            {
            	            lv_args_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_args_3_1, grammarAccess.getLookupTableAccess().getArgsLOWERCASE_IDTerminalRuleCall_2_1_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getLookupTableRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"args",
            	              								lv_args_3_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:1912:7: lv_args_3_2= '?'
            	            {
            	            lv_args_3_2=(Token)match(input,48,FOLLOW_30); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_args_3_2, grammarAccess.getLookupTableAccess().getArgsQuestionMarkKeyword_2_1_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getLookupTableRule());
            	              							}
            	              							addWithLastConsumed(current, "args", lv_args_3_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            otherlv_4=(Token)match(input,34,FOLLOW_32); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getLookupTableAccess().getRightParenthesisKeyword_3());
              		
            }
            otherlv_5=(Token)match(input,49,FOLLOW_33); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getLookupTableAccess().getIntoKeyword_4());
              		
            }
            // InternalKim.g:1934:3: ( (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) ) | ( (lv_ref_8_0= RULE_LOWERCASE_ID ) ) )
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==50) ) {
                alt39=1;
            }
            else if ( (LA39_0==RULE_LOWERCASE_ID) ) {
                alt39=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }
            switch (alt39) {
                case 1 :
                    // InternalKim.g:1935:4: (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) )
                    {
                    // InternalKim.g:1935:4: (otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) ) )
                    // InternalKim.g:1936:5: otherlv_6= 'table' ( (lv_table_7_0= ruleTable ) )
                    {
                    otherlv_6=(Token)match(input,50,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getLookupTableAccess().getTableKeyword_5_0_0());
                      				
                    }
                    // InternalKim.g:1940:5: ( (lv_table_7_0= ruleTable ) )
                    // InternalKim.g:1941:6: (lv_table_7_0= ruleTable )
                    {
                    // InternalKim.g:1941:6: (lv_table_7_0= ruleTable )
                    // InternalKim.g:1942:7: lv_table_7_0= ruleTable
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getLookupTableAccess().getTableTableParserRuleCall_5_0_1_0());
                      						
                    }
                    pushFollow(FOLLOW_2);
                    lv_table_7_0=ruleTable();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getLookupTableRule());
                      							}
                      							set(
                      								current,
                      								"table",
                      								lv_table_7_0,
                      								"org.integratedmodelling.kim.Kim.Table");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:1961:4: ( (lv_ref_8_0= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:1961:4: ( (lv_ref_8_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:1962:5: (lv_ref_8_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:1962:5: (lv_ref_8_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:1963:6: lv_ref_8_0= RULE_LOWERCASE_ID
                    {
                    lv_ref_8_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ref_8_0, grammarAccess.getLookupTableAccess().getRefLOWERCASE_IDTerminalRuleCall_5_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getLookupTableRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"ref",
                      							lv_ref_8_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLookupTable"


    // $ANTLR start "entryRuleUrn"
    // InternalKim.g:1984:1: entryRuleUrn returns [EObject current=null] : iv_ruleUrn= ruleUrn EOF ;
    public final EObject entryRuleUrn() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUrn = null;


        try {
            // InternalKim.g:1984:44: (iv_ruleUrn= ruleUrn EOF )
            // InternalKim.g:1985:2: iv_ruleUrn= ruleUrn EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrn=ruleUrn();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrn; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrn"


    // $ANTLR start "ruleUrn"
    // InternalKim.g:1991:1: ruleUrn returns [EObject current=null] : ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) ;
    public final EObject ruleUrn() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_2=null;
        AntlrDatatypeRuleToken lv_name_0_1 = null;

        AntlrDatatypeRuleToken lv_name_0_3 = null;



        	enterRule();

        try {
            // InternalKim.g:1997:2: ( ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) ) )
            // InternalKim.g:1998:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            {
            // InternalKim.g:1998:2: ( ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) ) )
            // InternalKim.g:1999:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            {
            // InternalKim.g:1999:3: ( (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath ) )
            // InternalKim.g:2000:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            {
            // InternalKim.g:2000:4: (lv_name_0_1= ruleUrnId | lv_name_0_2= RULE_STRING | lv_name_0_3= ruleLocalFilePath )
            int alt40=3;
            switch ( input.LA(1) ) {
            case 87:
                {
                alt40=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                switch ( input.LA(2) ) {
                case EOF:
                case 24:
                case 52:
                case 88:
                    {
                    alt40=3;
                    }
                    break;
                case 89:
                    {
                    int LA40_5 = input.LA(3);

                    if ( (LA40_5==RULE_LOWERCASE_ID) ) {
                        int LA40_6 = input.LA(4);

                        if ( (LA40_6==51||LA40_6==89) ) {
                            alt40=1;
                        }
                        else if ( (LA40_6==EOF||LA40_6==24||LA40_6==52) ) {
                            alt40=3;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 40, 6, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 40, 5, input);

                        throw nvae;
                    }
                    }
                    break;
                case 51:
                    {
                    alt40=1;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 2, input);

                    throw nvae;
                }

                }
                break;
            case RULE_STRING:
                {
                alt40=2;
                }
                break;
            case RULE_CAMELCASE_ID:
            case RULE_LOWERCASE_DASHID:
                {
                alt40=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;
            }

            switch (alt40) {
                case 1 :
                    // InternalKim.g:2001:5: lv_name_0_1= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameUrnIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_1=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_1,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:2017:5: lv_name_0_2= RULE_STRING
                    {
                    lv_name_0_2=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_2, grammarAccess.getUrnAccess().getNameSTRINGTerminalRuleCall_0_1());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getUrnRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_2,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:2032:5: lv_name_0_3= ruleLocalFilePath
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUrnAccess().getNameLocalFilePathParserRuleCall_0_2());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_0_3=ruleLocalFilePath();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUrnRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_0_3,
                      						"org.integratedmodelling.kim.Kim.LocalFilePath");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }
                    break;

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrn"


    // $ANTLR start "entryRuleTable"
    // InternalKim.g:2053:1: entryRuleTable returns [EObject current=null] : iv_ruleTable= ruleTable EOF ;
    public final EObject entryRuleTable() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTable = null;


        try {
            // InternalKim.g:2053:46: (iv_ruleTable= ruleTable EOF )
            // InternalKim.g:2054:2: iv_ruleTable= ruleTable EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTable=ruleTable();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTable; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTable"


    // $ANTLR start "ruleTable"
    // InternalKim.g:2060:1: ruleTable returns [EObject current=null] : (otherlv_0= '(' ( ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* ) | ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* ) ) otherlv_6= ')' otherlv_7= ':' ( (lv_elements_8_0= ruleTableClassifier ) ) ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )* ) ;
    public final EObject ruleTable() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_args_1_0=null;
        Token otherlv_2=null;
        Token lv_args_3_0=null;
        Token lv_expr_4_0=null;
        Token lv_expr_5_0=null;
        Token otherlv_6=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        EObject lv_elements_8_0 = null;

        EObject lv_elements_10_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2066:2: ( (otherlv_0= '(' ( ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* ) | ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* ) ) otherlv_6= ')' otherlv_7= ':' ( (lv_elements_8_0= ruleTableClassifier ) ) ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )* ) )
            // InternalKim.g:2067:2: (otherlv_0= '(' ( ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* ) | ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* ) ) otherlv_6= ')' otherlv_7= ':' ( (lv_elements_8_0= ruleTableClassifier ) ) ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )* )
            {
            // InternalKim.g:2067:2: (otherlv_0= '(' ( ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* ) | ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* ) ) otherlv_6= ')' otherlv_7= ':' ( (lv_elements_8_0= ruleTableClassifier ) ) ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )* )
            // InternalKim.g:2068:3: otherlv_0= '(' ( ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* ) | ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* ) ) otherlv_6= ')' otherlv_7= ':' ( (lv_elements_8_0= ruleTableClassifier ) ) ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )*
            {
            otherlv_0=(Token)match(input,33,FOLLOW_34); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getTableAccess().getLeftParenthesisKeyword_0());
              		
            }
            // InternalKim.g:2072:3: ( ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* ) | ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* ) )
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==RULE_LOWERCASE_ID) ) {
                alt43=1;
            }
            else if ( (LA43_0==RULE_EXPR) ) {
                alt43=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;
            }
            switch (alt43) {
                case 1 :
                    // InternalKim.g:2073:4: ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* )
                    {
                    // InternalKim.g:2073:4: ( ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )* )
                    // InternalKim.g:2074:5: ( (lv_args_1_0= RULE_LOWERCASE_ID ) ) (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )*
                    {
                    // InternalKim.g:2074:5: ( (lv_args_1_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:2075:6: (lv_args_1_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:2075:6: (lv_args_1_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:2076:7: lv_args_1_0= RULE_LOWERCASE_ID
                    {
                    lv_args_1_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_30); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_args_1_0, grammarAccess.getTableAccess().getArgsLOWERCASE_IDTerminalRuleCall_1_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getTableRule());
                      							}
                      							addWithLastConsumed(
                      								current,
                      								"args",
                      								lv_args_1_0,
                      								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:2092:5: (otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) ) )*
                    loop41:
                    do {
                        int alt41=2;
                        int LA41_0 = input.LA(1);

                        if ( (LA41_0==25) ) {
                            alt41=1;
                        }


                        switch (alt41) {
                    	case 1 :
                    	    // InternalKim.g:2093:6: otherlv_2= ',' ( (lv_args_3_0= RULE_LOWERCASE_ID ) )
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_35); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getTableAccess().getCommaKeyword_1_0_1_0());
                    	      					
                    	    }
                    	    // InternalKim.g:2097:6: ( (lv_args_3_0= RULE_LOWERCASE_ID ) )
                    	    // InternalKim.g:2098:7: (lv_args_3_0= RULE_LOWERCASE_ID )
                    	    {
                    	    // InternalKim.g:2098:7: (lv_args_3_0= RULE_LOWERCASE_ID )
                    	    // InternalKim.g:2099:8: lv_args_3_0= RULE_LOWERCASE_ID
                    	    {
                    	    lv_args_3_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_30); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      								newLeafNode(lv_args_3_0, grammarAccess.getTableAccess().getArgsLOWERCASE_IDTerminalRuleCall_1_0_1_1_0());
                    	      							
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      								if (current==null) {
                    	      									current = createModelElement(grammarAccess.getTableRule());
                    	      								}
                    	      								addWithLastConsumed(
                    	      									current,
                    	      									"args",
                    	      									lv_args_3_0,
                    	      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                    	      							
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop41;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2118:4: ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* )
                    {
                    // InternalKim.g:2118:4: ( ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )* )
                    // InternalKim.g:2119:5: ( (lv_expr_4_0= RULE_EXPR ) ) ( (lv_expr_5_0= RULE_EXPR ) )*
                    {
                    // InternalKim.g:2119:5: ( (lv_expr_4_0= RULE_EXPR ) )
                    // InternalKim.g:2120:6: (lv_expr_4_0= RULE_EXPR )
                    {
                    // InternalKim.g:2120:6: (lv_expr_4_0= RULE_EXPR )
                    // InternalKim.g:2121:7: lv_expr_4_0= RULE_EXPR
                    {
                    lv_expr_4_0=(Token)match(input,RULE_EXPR,FOLLOW_36); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_expr_4_0, grammarAccess.getTableAccess().getExprEXPRTerminalRuleCall_1_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getTableRule());
                      							}
                      							addWithLastConsumed(
                      								current,
                      								"expr",
                      								lv_expr_4_0,
                      								"org.integratedmodelling.kim.Kim.EXPR");
                      						
                    }

                    }


                    }

                    // InternalKim.g:2137:5: ( (lv_expr_5_0= RULE_EXPR ) )*
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==RULE_EXPR) ) {
                            alt42=1;
                        }


                        switch (alt42) {
                    	case 1 :
                    	    // InternalKim.g:2138:6: (lv_expr_5_0= RULE_EXPR )
                    	    {
                    	    // InternalKim.g:2138:6: (lv_expr_5_0= RULE_EXPR )
                    	    // InternalKim.g:2139:7: lv_expr_5_0= RULE_EXPR
                    	    {
                    	    lv_expr_5_0=(Token)match(input,RULE_EXPR,FOLLOW_36); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							newLeafNode(lv_expr_5_0, grammarAccess.getTableAccess().getExprEXPRTerminalRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElement(grammarAccess.getTableRule());
                    	      							}
                    	      							addWithLastConsumed(
                    	      								current,
                    	      								"expr",
                    	      								lv_expr_5_0,
                    	      								"org.integratedmodelling.kim.Kim.EXPR");
                    	      						
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop42;
                        }
                    } while (true);


                    }


                    }
                    break;

            }

            otherlv_6=(Token)match(input,34,FOLLOW_37); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_6, grammarAccess.getTableAccess().getRightParenthesisKeyword_2());
              		
            }
            otherlv_7=(Token)match(input,51,FOLLOW_38); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_7, grammarAccess.getTableAccess().getColonKeyword_3());
              		
            }
            // InternalKim.g:2165:3: ( (lv_elements_8_0= ruleTableClassifier ) )
            // InternalKim.g:2166:4: (lv_elements_8_0= ruleTableClassifier )
            {
            // InternalKim.g:2166:4: (lv_elements_8_0= ruleTableClassifier )
            // InternalKim.g:2167:5: lv_elements_8_0= ruleTableClassifier
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getTableAccess().getElementsTableClassifierParserRuleCall_4_0());
              				
            }
            pushFollow(FOLLOW_24);
            lv_elements_8_0=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getTableRule());
              					}
              					add(
              						current,
              						"elements",
              						lv_elements_8_0,
              						"org.integratedmodelling.kim.Kim.TableClassifier");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:2184:3: ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )*
            loop44:
            do {
                int alt44=2;
                alt44 = dfa44.predict(input);
                switch (alt44) {
            	case 1 :
            	    // InternalKim.g:2185:4: ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) )
            	    {
            	    // InternalKim.g:2185:4: ( ( ',' )=>otherlv_9= ',' )
            	    // InternalKim.g:2186:5: ( ',' )=>otherlv_9= ','
            	    {
            	    otherlv_9=(Token)match(input,25,FOLLOW_38); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					newLeafNode(otherlv_9, grammarAccess.getTableAccess().getCommaKeyword_5_0());
            	      				
            	    }

            	    }

            	    // InternalKim.g:2192:4: ( (lv_elements_10_0= ruleTableClassifier ) )
            	    // InternalKim.g:2193:5: (lv_elements_10_0= ruleTableClassifier )
            	    {
            	    // InternalKim.g:2193:5: (lv_elements_10_0= ruleTableClassifier )
            	    // InternalKim.g:2194:6: lv_elements_10_0= ruleTableClassifier
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTableAccess().getElementsTableClassifierParserRuleCall_5_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_24);
            	    lv_elements_10_0=ruleTableClassifier();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTableRule());
            	      						}
            	      						add(
            	      							current,
            	      							"elements",
            	      							lv_elements_10_0,
            	      							"org.integratedmodelling.kim.Kim.TableClassifier");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTable"


    // $ANTLR start "entryRuleTableClassifier"
    // InternalKim.g:2216:1: entryRuleTableClassifier returns [EObject current=null] : iv_ruleTableClassifier= ruleTableClassifier EOF ;
    public final EObject entryRuleTableClassifier() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTableClassifier = null;


        try {
            // InternalKim.g:2216:56: (iv_ruleTableClassifier= ruleTableClassifier EOF )
            // InternalKim.g:2217:2: iv_ruleTableClassifier= ruleTableClassifier EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTableClassifierRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTableClassifier=ruleTableClassifier();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTableClassifier; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTableClassifier"


    // $ANTLR start "ruleTableClassifier"
    // InternalKim.g:2223:1: ruleTableClassifier returns [EObject current=null] : ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_nodata_16_0= 'unknown' ) ) | ( (lv_star_17_0= '*' ) ) | ( (lv_anything_18_0= '#' ) ) ) ;
    public final EObject ruleTableClassifier() throws RecognitionException {
        EObject current = null;

        Token lv_boolean_0_0=null;
        Token lv_boolean_1_0=null;
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token lv_string_12_0=null;
        Token lv_nodata_16_0=null;
        Token lv_star_17_0=null;
        Token lv_anything_18_0=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;

        EObject lv_num_9_0 = null;

        EObject lv_set_11_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_op_14_0 = null;

        EObject lv_expression_15_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2229:2: ( ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_nodata_16_0= 'unknown' ) ) | ( (lv_star_17_0= '*' ) ) | ( (lv_anything_18_0= '#' ) ) ) )
            // InternalKim.g:2230:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_nodata_16_0= 'unknown' ) ) | ( (lv_star_17_0= '*' ) ) | ( (lv_anything_18_0= '#' ) ) )
            {
            // InternalKim.g:2230:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_nodata_16_0= 'unknown' ) ) | ( (lv_star_17_0= '*' ) ) | ( (lv_anything_18_0= '#' ) ) )
            int alt48=10;
            alt48 = dfa48.predict(input);
            switch (alt48) {
                case 1 :
                    // InternalKim.g:2231:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    {
                    // InternalKim.g:2231:3: ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) )
                    int alt45=2;
                    int LA45_0 = input.LA(1);

                    if ( (LA45_0==22) ) {
                        alt45=1;
                    }
                    else if ( (LA45_0==23) ) {
                        alt45=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 45, 0, input);

                        throw nvae;
                    }
                    switch (alt45) {
                        case 1 :
                            // InternalKim.g:2232:4: ( (lv_boolean_0_0= 'true' ) )
                            {
                            // InternalKim.g:2232:4: ( (lv_boolean_0_0= 'true' ) )
                            // InternalKim.g:2233:5: (lv_boolean_0_0= 'true' )
                            {
                            // InternalKim.g:2233:5: (lv_boolean_0_0= 'true' )
                            // InternalKim.g:2234:6: lv_boolean_0_0= 'true'
                            {
                            lv_boolean_0_0=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_0_0, grammarAccess.getTableClassifierAccess().getBooleanTrueKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_0_0, "true");
                              					
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2247:4: ( (lv_boolean_1_0= 'false' ) )
                            {
                            // InternalKim.g:2247:4: ( (lv_boolean_1_0= 'false' ) )
                            // InternalKim.g:2248:5: (lv_boolean_1_0= 'false' )
                            {
                            // InternalKim.g:2248:5: (lv_boolean_1_0= 'false' )
                            // InternalKim.g:2249:6: lv_boolean_1_0= 'false'
                            {
                            lv_boolean_1_0=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_1_0, grammarAccess.getTableClassifierAccess().getBooleanFalseKeyword_0_1_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getTableClassifierRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_1_0, "false");
                              					
                            }

                            }


                            }


                            }
                            break;

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2263:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    {
                    // InternalKim.g:2263:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
                    // InternalKim.g:2264:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    {
                    // InternalKim.g:2264:4: ( (lv_int0_2_0= ruleNumber ) )
                    // InternalKim.g:2265:5: (lv_int0_2_0= ruleNumber )
                    {
                    // InternalKim.g:2265:5: (lv_int0_2_0= ruleNumber )
                    // InternalKim.g:2266:6: lv_int0_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt0NumberParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_27);
                    lv_int0_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int0",
                      							lv_int0_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2283:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
                    int alt46=3;
                    int LA46_0 = input.LA(1);

                    if ( (LA46_0==43) ) {
                        alt46=1;
                    }
                    else if ( (LA46_0==44) ) {
                        alt46=2;
                    }
                    switch (alt46) {
                        case 1 :
                            // InternalKim.g:2284:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2284:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                            // InternalKim.g:2285:6: (lv_leftLimit_3_0= 'inclusive' )
                            {
                            // InternalKim.g:2285:6: (lv_leftLimit_3_0= 'inclusive' )
                            // InternalKim.g:2286:7: lv_leftLimit_3_0= 'inclusive'
                            {
                            lv_leftLimit_3_0=(Token)match(input,43,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_leftLimit_3_0, grammarAccess.getTableClassifierAccess().getLeftLimitInclusiveKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "leftLimit", lv_leftLimit_3_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2299:5: otherlv_4= 'exclusive'
                            {
                            otherlv_4=(Token)match(input,44,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_4, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:2304:4: ( ( 'to' )=>otherlv_5= 'to' )
                    // InternalKim.g:2305:5: ( 'to' )=>otherlv_5= 'to'
                    {
                    otherlv_5=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_5, grammarAccess.getTableClassifierAccess().getToKeyword_1_2());
                      				
                    }

                    }

                    // InternalKim.g:2311:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
                    // InternalKim.g:2312:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
                    {
                    // InternalKim.g:2316:5: (lv_int1_6_0= ruleNumber )
                    // InternalKim.g:2317:6: lv_int1_6_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getInt1NumberParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_29);
                    lv_int1_6_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"int1",
                      							lv_int1_6_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2334:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
                    int alt47=3;
                    int LA47_0 = input.LA(1);

                    if ( (LA47_0==43) ) {
                        alt47=1;
                    }
                    else if ( (LA47_0==44) ) {
                        alt47=2;
                    }
                    switch (alt47) {
                        case 1 :
                            // InternalKim.g:2335:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            {
                            // InternalKim.g:2335:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                            // InternalKim.g:2336:6: (lv_rightLimit_7_0= 'inclusive' )
                            {
                            // InternalKim.g:2336:6: (lv_rightLimit_7_0= 'inclusive' )
                            // InternalKim.g:2337:7: lv_rightLimit_7_0= 'inclusive'
                            {
                            lv_rightLimit_7_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_rightLimit_7_0, grammarAccess.getTableClassifierAccess().getRightLimitInclusiveKeyword_1_4_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getTableClassifierRule());
                              							}
                              							setWithLastConsumed(current, "rightLimit", lv_rightLimit_7_0, "inclusive");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2350:5: otherlv_8= 'exclusive'
                            {
                            otherlv_8=(Token)match(input,44,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_8, grammarAccess.getTableClassifierAccess().getExclusiveKeyword_1_4_1());
                              				
                            }

                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:2357:3: ( (lv_num_9_0= ruleNumber ) )
                    {
                    // InternalKim.g:2357:3: ( (lv_num_9_0= ruleNumber ) )
                    // InternalKim.g:2358:4: (lv_num_9_0= ruleNumber )
                    {
                    // InternalKim.g:2358:4: (lv_num_9_0= ruleNumber )
                    // InternalKim.g:2359:5: lv_num_9_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getNumNumberParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_9_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_9_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:2377:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    {
                    // InternalKim.g:2377:3: (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) )
                    // InternalKim.g:2378:4: otherlv_10= 'in' ( (lv_set_11_0= ruleList ) )
                    {
                    otherlv_10=(Token)match(input,45,FOLLOW_18); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getTableClassifierAccess().getInKeyword_3_0());
                      			
                    }
                    // InternalKim.g:2382:4: ( (lv_set_11_0= ruleList ) )
                    // InternalKim.g:2383:5: (lv_set_11_0= ruleList )
                    {
                    // InternalKim.g:2383:5: (lv_set_11_0= ruleList )
                    // InternalKim.g:2384:6: lv_set_11_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getSetListParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_set_11_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"set",
                      							lv_set_11_0,
                      							"org.integratedmodelling.kim.Kim.List");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:2403:3: ( (lv_string_12_0= RULE_STRING ) )
                    {
                    // InternalKim.g:2403:3: ( (lv_string_12_0= RULE_STRING ) )
                    // InternalKim.g:2404:4: (lv_string_12_0= RULE_STRING )
                    {
                    // InternalKim.g:2404:4: (lv_string_12_0= RULE_STRING )
                    // InternalKim.g:2405:5: lv_string_12_0= RULE_STRING
                    {
                    lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_12_0, grammarAccess.getTableClassifierAccess().getStringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_12_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:2422:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:2422:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
                    // InternalKim.g:2423:4: (lv_concept_13_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:2423:4: (lv_concept_13_0= ruleConceptDeclaration )
                    // InternalKim.g:2424:5: lv_concept_13_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getTableClassifierAccess().getConceptConceptDeclarationParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_13_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:2442:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:2442:3: ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) )
                    // InternalKim.g:2443:4: ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) )
                    {
                    // InternalKim.g:2443:4: ( (lv_op_14_0= ruleREL_OPERATOR ) )
                    // InternalKim.g:2444:5: (lv_op_14_0= ruleREL_OPERATOR )
                    {
                    // InternalKim.g:2444:5: (lv_op_14_0= ruleREL_OPERATOR )
                    // InternalKim.g:2445:6: lv_op_14_0= ruleREL_OPERATOR
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getOpREL_OPERATORParserRuleCall_6_0_0());
                      					
                    }
                    pushFollow(FOLLOW_28);
                    lv_op_14_0=ruleREL_OPERATOR();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"op",
                      							lv_op_14_0,
                      							"org.integratedmodelling.kim.Kim.REL_OPERATOR");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2462:4: ( (lv_expression_15_0= ruleNumber ) )
                    // InternalKim.g:2463:5: (lv_expression_15_0= ruleNumber )
                    {
                    // InternalKim.g:2463:5: (lv_expression_15_0= ruleNumber )
                    // InternalKim.g:2464:6: lv_expression_15_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getTableClassifierAccess().getExpressionNumberParserRuleCall_6_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_expression_15_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getTableClassifierRule());
                      						}
                      						set(
                      							current,
                      							"expression",
                      							lv_expression_15_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:2483:3: ( (lv_nodata_16_0= 'unknown' ) )
                    {
                    // InternalKim.g:2483:3: ( (lv_nodata_16_0= 'unknown' ) )
                    // InternalKim.g:2484:4: (lv_nodata_16_0= 'unknown' )
                    {
                    // InternalKim.g:2484:4: (lv_nodata_16_0= 'unknown' )
                    // InternalKim.g:2485:5: lv_nodata_16_0= 'unknown'
                    {
                    lv_nodata_16_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_nodata_16_0, grammarAccess.getTableClassifierAccess().getNodataUnknownKeyword_7_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "nodata", lv_nodata_16_0, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:2498:3: ( (lv_star_17_0= '*' ) )
                    {
                    // InternalKim.g:2498:3: ( (lv_star_17_0= '*' ) )
                    // InternalKim.g:2499:4: (lv_star_17_0= '*' )
                    {
                    // InternalKim.g:2499:4: (lv_star_17_0= '*' )
                    // InternalKim.g:2500:5: lv_star_17_0= '*'
                    {
                    lv_star_17_0=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_star_17_0, grammarAccess.getTableClassifierAccess().getStarAsteriskKeyword_8_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "star", true, "*");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:2513:3: ( (lv_anything_18_0= '#' ) )
                    {
                    // InternalKim.g:2513:3: ( (lv_anything_18_0= '#' ) )
                    // InternalKim.g:2514:4: (lv_anything_18_0= '#' )
                    {
                    // InternalKim.g:2514:4: (lv_anything_18_0= '#' )
                    // InternalKim.g:2515:5: lv_anything_18_0= '#'
                    {
                    lv_anything_18_0=(Token)match(input,52,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_anything_18_0, grammarAccess.getTableClassifierAccess().getAnythingNumberSignKeyword_9_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getTableClassifierRule());
                      					}
                      					setWithLastConsumed(current, "anything", true, "#");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTableClassifier"


    // $ANTLR start "entryRuleActionSpecification"
    // InternalKim.g:2531:1: entryRuleActionSpecification returns [EObject current=null] : iv_ruleActionSpecification= ruleActionSpecification EOF ;
    public final EObject entryRuleActionSpecification() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleActionSpecification = null;


        try {
            // InternalKim.g:2531:60: (iv_ruleActionSpecification= ruleActionSpecification EOF )
            // InternalKim.g:2532:2: iv_ruleActionSpecification= ruleActionSpecification EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionSpecificationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleActionSpecification=ruleActionSpecification();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleActionSpecification; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleActionSpecification"


    // $ANTLR start "ruleActionSpecification"
    // InternalKim.g:2538:1: ruleActionSpecification returns [EObject current=null] : ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) ;
    public final EObject ruleActionSpecification() throws RecognitionException {
        EObject current = null;

        Token lv_integrated_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_6=null;
        Token lv_trigger_8_0=null;
        Token lv_initialization_9_0=null;
        Token lv_resolution_10_0=null;
        Token lv_instantiation_11_0=null;
        Token lv_termination_12_0=null;
        Token lv_stateInitialization_13_0=null;
        Token otherlv_15=null;
        Token lv_anyContextEvent_16_0=null;
        Token lv_relatedEventContext_17_0=null;
        Token otherlv_21=null;
        EObject lv_domain_2_0 = null;

        EObject lv_domain_4_0 = null;

        EObject lv_actions_5_0 = null;

        EObject lv_actions_7_0 = null;

        EObject lv_event_14_0 = null;

        EObject lv_eventContext_18_0 = null;

        EObject lv_parameters_19_0 = null;

        EObject lv_actions_20_0 = null;

        EObject lv_actions_22_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2544:2: ( ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) ) )
            // InternalKim.g:2545:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            {
            // InternalKim.g:2545:2: ( ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? ) | ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? ) )
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0>=53 && LA59_0<=54)) ) {
                alt59=1;
            }
            else if ( (LA59_0==55) ) {
                alt59=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 59, 0, input);

                throw nvae;
            }
            switch (alt59) {
                case 1 :
                    // InternalKim.g:2546:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2546:3: ( ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2547:4: ( (lv_integrated_0_0= 'aggregated' ) )? otherlv_1= 'over' ( (lv_domain_2_0= ruleFunctionOrID ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )* ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2547:4: ( (lv_integrated_0_0= 'aggregated' ) )?
                    int alt49=2;
                    int LA49_0 = input.LA(1);

                    if ( (LA49_0==53) ) {
                        alt49=1;
                    }
                    switch (alt49) {
                        case 1 :
                            // InternalKim.g:2548:5: (lv_integrated_0_0= 'aggregated' )
                            {
                            // InternalKim.g:2548:5: (lv_integrated_0_0= 'aggregated' )
                            // InternalKim.g:2549:6: lv_integrated_0_0= 'aggregated'
                            {
                            lv_integrated_0_0=(Token)match(input,53,FOLLOW_39); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_integrated_0_0, grammarAccess.getActionSpecificationAccess().getIntegratedAggregatedKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getActionSpecificationRule());
                              						}
                              						setWithLastConsumed(current, "integrated", true, "aggregated");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,54,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getActionSpecificationAccess().getOverKeyword_0_1());
                      			
                    }
                    // InternalKim.g:2565:4: ( (lv_domain_2_0= ruleFunctionOrID ) )
                    // InternalKim.g:2566:5: (lv_domain_2_0= ruleFunctionOrID )
                    {
                    // InternalKim.g:2566:5: (lv_domain_2_0= ruleFunctionOrID )
                    // InternalKim.g:2567:6: lv_domain_2_0= ruleFunctionOrID
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_40);
                    lv_domain_2_0=ruleFunctionOrID();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                      						}
                      						add(
                      							current,
                      							"domain",
                      							lv_domain_2_0,
                      							"org.integratedmodelling.kim.Kim.FunctionOrID");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:2584:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) ) )*
                    loop50:
                    do {
                        int alt50=2;
                        int LA50_0 = input.LA(1);

                        if ( (LA50_0==25) ) {
                            alt50=1;
                        }


                        switch (alt50) {
                    	case 1 :
                    	    // InternalKim.g:2585:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    {
                    	    // InternalKim.g:2585:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:2586:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:2592:5: ( (lv_domain_4_0= ruleFunctionOrID ) )
                    	    // InternalKim.g:2593:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    {
                    	    // InternalKim.g:2593:6: (lv_domain_4_0= ruleFunctionOrID )
                    	    // InternalKim.g:2594:7: lv_domain_4_0= ruleFunctionOrID
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionSpecificationAccess().getDomainFunctionOrIDParserRuleCall_0_3_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_40);
                    	    lv_domain_4_0=ruleFunctionOrID();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"domain",
                    	      								lv_domain_4_0,
                    	      								"org.integratedmodelling.kim.Kim.FunctionOrID");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop50;
                        }
                    } while (true);

                    // InternalKim.g:2612:4: ( ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )* )?
                    int alt52=2;
                    int LA52_0 = input.LA(1);

                    if ( ((LA52_0>=63 && LA52_0<=67)) ) {
                        alt52=1;
                    }
                    switch (alt52) {
                        case 1 :
                            // InternalKim.g:2613:5: ( (lv_actions_5_0= ruleAction ) ) ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2613:5: ( (lv_actions_5_0= ruleAction ) )
                            // InternalKim.g:2614:6: (lv_actions_5_0= ruleAction )
                            {
                            // InternalKim.g:2614:6: (lv_actions_5_0= ruleAction )
                            // InternalKim.g:2615:7: lv_actions_5_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_0_0());
                              						
                            }
                            pushFollow(FOLLOW_24);
                            lv_actions_5_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_5_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2632:5: ( ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) ) )*
                            loop51:
                            do {
                                int alt51=2;
                                int LA51_0 = input.LA(1);

                                if ( (LA51_0==25) ) {
                                    alt51=1;
                                }


                                switch (alt51) {
                            	case 1 :
                            	    // InternalKim.g:2633:6: ( ( ',' )=>otherlv_6= ',' ) ( (lv_actions_7_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2633:6: ( ( ',' )=>otherlv_6= ',' )
                            	    // InternalKim.g:2634:7: ( ',' )=>otherlv_6= ','
                            	    {
                            	    otherlv_6=(Token)match(input,25,FOLLOW_41); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_6, grammarAccess.getActionSpecificationAccess().getCommaKeyword_0_4_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2640:6: ( (lv_actions_7_0= ruleAction ) )
                            	    // InternalKim.g:2641:7: (lv_actions_7_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2641:7: (lv_actions_7_0= ruleAction )
                            	    // InternalKim.g:2642:8: lv_actions_7_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_0_4_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_actions_7_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_7_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop51;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2663:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    {
                    // InternalKim.g:2663:3: ( ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )? )
                    // InternalKim.g:2664:4: ( (lv_trigger_8_0= 'on' ) ) ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) ) ( (lv_parameters_19_0= ruleList ) )? ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    {
                    // InternalKim.g:2664:4: ( (lv_trigger_8_0= 'on' ) )
                    // InternalKim.g:2665:5: (lv_trigger_8_0= 'on' )
                    {
                    // InternalKim.g:2665:5: (lv_trigger_8_0= 'on' )
                    // InternalKim.g:2666:6: lv_trigger_8_0= 'on'
                    {
                    lv_trigger_8_0=(Token)match(input,55,FOLLOW_42); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_trigger_8_0, grammarAccess.getActionSpecificationAccess().getTriggerOnKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionSpecificationRule());
                      						}
                      						setWithLastConsumed(current, "trigger", true, "on");
                      					
                    }

                    }


                    }

                    // InternalKim.g:2678:4: ( ( (lv_initialization_9_0= 'definition' ) ) | ( (lv_resolution_10_0= 'resolution' ) ) | ( (lv_instantiation_11_0= 'instantiation' ) ) | ( (lv_termination_12_0= 'termination' ) ) | ( (lv_stateInitialization_13_0= 'initialization' ) ) | ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? ) )
                    int alt55=6;
                    switch ( input.LA(1) ) {
                    case 56:
                        {
                        alt55=1;
                        }
                        break;
                    case 57:
                        {
                        alt55=2;
                        }
                        break;
                    case 58:
                        {
                        alt55=3;
                        }
                        break;
                    case 59:
                        {
                        alt55=4;
                        }
                        break;
                    case 60:
                        {
                        alt55=5;
                        }
                        break;
                    case RULE_LOWERCASE_ID:
                    case RULE_STRING:
                    case RULE_CAMELCASE_ID:
                    case 33:
                    case 107:
                    case 108:
                    case 115:
                    case 116:
                    case 118:
                    case 119:
                    case 120:
                    case 121:
                    case 122:
                    case 123:
                    case 124:
                    case 125:
                    case 126:
                    case 127:
                    case 128:
                    case 129:
                        {
                        alt55=6;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 55, 0, input);

                        throw nvae;
                    }

                    switch (alt55) {
                        case 1 :
                            // InternalKim.g:2679:5: ( (lv_initialization_9_0= 'definition' ) )
                            {
                            // InternalKim.g:2679:5: ( (lv_initialization_9_0= 'definition' ) )
                            // InternalKim.g:2680:6: (lv_initialization_9_0= 'definition' )
                            {
                            // InternalKim.g:2680:6: (lv_initialization_9_0= 'definition' )
                            // InternalKim.g:2681:7: lv_initialization_9_0= 'definition'
                            {
                            lv_initialization_9_0=(Token)match(input,56,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_9_0, grammarAccess.getActionSpecificationAccess().getInitializationDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:2694:5: ( (lv_resolution_10_0= 'resolution' ) )
                            {
                            // InternalKim.g:2694:5: ( (lv_resolution_10_0= 'resolution' ) )
                            // InternalKim.g:2695:6: (lv_resolution_10_0= 'resolution' )
                            {
                            // InternalKim.g:2695:6: (lv_resolution_10_0= 'resolution' )
                            // InternalKim.g:2696:7: lv_resolution_10_0= 'resolution'
                            {
                            lv_resolution_10_0=(Token)match(input,57,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_resolution_10_0, grammarAccess.getActionSpecificationAccess().getResolutionResolutionKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "resolution", true, "resolution");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:2709:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            {
                            // InternalKim.g:2709:5: ( (lv_instantiation_11_0= 'instantiation' ) )
                            // InternalKim.g:2710:6: (lv_instantiation_11_0= 'instantiation' )
                            {
                            // InternalKim.g:2710:6: (lv_instantiation_11_0= 'instantiation' )
                            // InternalKim.g:2711:7: lv_instantiation_11_0= 'instantiation'
                            {
                            lv_instantiation_11_0=(Token)match(input,58,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_instantiation_11_0, grammarAccess.getActionSpecificationAccess().getInstantiationInstantiationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "instantiation", true, "instantiation");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:2724:5: ( (lv_termination_12_0= 'termination' ) )
                            {
                            // InternalKim.g:2724:5: ( (lv_termination_12_0= 'termination' ) )
                            // InternalKim.g:2725:6: (lv_termination_12_0= 'termination' )
                            {
                            // InternalKim.g:2725:6: (lv_termination_12_0= 'termination' )
                            // InternalKim.g:2726:7: lv_termination_12_0= 'termination'
                            {
                            lv_termination_12_0=(Token)match(input,59,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_12_0, grammarAccess.getActionSpecificationAccess().getTerminationTerminationKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:2739:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            {
                            // InternalKim.g:2739:5: ( (lv_stateInitialization_13_0= 'initialization' ) )
                            // InternalKim.g:2740:6: (lv_stateInitialization_13_0= 'initialization' )
                            {
                            // InternalKim.g:2740:6: (lv_stateInitialization_13_0= 'initialization' )
                            // InternalKim.g:2741:7: lv_stateInitialization_13_0= 'initialization'
                            {
                            lv_stateInitialization_13_0=(Token)match(input,60,FOLLOW_43); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_stateInitialization_13_0, grammarAccess.getActionSpecificationAccess().getStateInitializationInitializationKeyword_1_1_4_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionSpecificationRule());
                              							}
                              							setWithLastConsumed(current, "stateInitialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:2754:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            {
                            // InternalKim.g:2754:5: ( ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )? )
                            // InternalKim.g:2755:6: ( (lv_event_14_0= ruleConceptDeclaration ) ) (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            {
                            // InternalKim.g:2755:6: ( (lv_event_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:2756:7: (lv_event_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:2756:7: (lv_event_14_0= ruleConceptDeclaration )
                            // InternalKim.g:2757:8: lv_event_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventConceptDeclarationParserRuleCall_1_1_5_0_0());
                              							
                            }
                            pushFollow(FOLLOW_44);
                            lv_event_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              								}
                              								set(
                              									current,
                              									"event",
                              									lv_event_14_0,
                              									"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }


                            }

                            // InternalKim.g:2774:6: (otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) ) )?
                            int alt54=2;
                            int LA54_0 = input.LA(1);

                            if ( (LA54_0==45) ) {
                                alt54=1;
                            }
                            switch (alt54) {
                                case 1 :
                                    // InternalKim.g:2775:7: otherlv_15= 'in' ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    {
                                    otherlv_15=(Token)match(input,45,FOLLOW_45); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_15, grammarAccess.getActionSpecificationAccess().getInKeyword_1_1_5_1_0());
                                      						
                                    }
                                    // InternalKim.g:2779:7: ( ( (lv_anyContextEvent_16_0= 'context' ) ) | ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) ) )
                                    int alt53=2;
                                    int LA53_0 = input.LA(1);

                                    if ( (LA53_0==61) ) {
                                        alt53=1;
                                    }
                                    else if ( (LA53_0==62) ) {
                                        alt53=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 53, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt53) {
                                        case 1 :
                                            // InternalKim.g:2780:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            {
                                            // InternalKim.g:2780:8: ( (lv_anyContextEvent_16_0= 'context' ) )
                                            // InternalKim.g:2781:9: (lv_anyContextEvent_16_0= 'context' )
                                            {
                                            // InternalKim.g:2781:9: (lv_anyContextEvent_16_0= 'context' )
                                            // InternalKim.g:2782:10: lv_anyContextEvent_16_0= 'context'
                                            {
                                            lv_anyContextEvent_16_0=(Token)match(input,61,FOLLOW_43); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_anyContextEvent_16_0, grammarAccess.getActionSpecificationAccess().getAnyContextEventContextKeyword_1_1_5_1_1_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              										}
                                              										setWithLastConsumed(current, "anyContextEvent", true, "context");
                                              									
                                            }

                                            }


                                            }


                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:2795:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            {
                                            // InternalKim.g:2795:8: ( ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) ) )
                                            // InternalKim.g:2796:9: ( (lv_relatedEventContext_17_0= 'related' ) ) ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            {
                                            // InternalKim.g:2796:9: ( (lv_relatedEventContext_17_0= 'related' ) )
                                            // InternalKim.g:2797:10: (lv_relatedEventContext_17_0= 'related' )
                                            {
                                            // InternalKim.g:2797:10: (lv_relatedEventContext_17_0= 'related' )
                                            // InternalKim.g:2798:11: lv_relatedEventContext_17_0= 'related'
                                            {
                                            lv_relatedEventContext_17_0=(Token)match(input,62,FOLLOW_19); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											newLeafNode(lv_relatedEventContext_17_0, grammarAccess.getActionSpecificationAccess().getRelatedEventContextRelatedKeyword_1_1_5_1_1_1_0_0());
                                              										
                                            }
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElement(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											setWithLastConsumed(current, "relatedEventContext", true, "related");
                                              										
                                            }

                                            }


                                            }

                                            // InternalKim.g:2810:9: ( (lv_eventContext_18_0= ruleConceptDeclaration ) )
                                            // InternalKim.g:2811:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            {
                                            // InternalKim.g:2811:10: (lv_eventContext_18_0= ruleConceptDeclaration )
                                            // InternalKim.g:2812:11: lv_eventContext_18_0= ruleConceptDeclaration
                                            {
                                            if ( state.backtracking==0 ) {

                                              											newCompositeNode(grammarAccess.getActionSpecificationAccess().getEventContextConceptDeclarationParserRuleCall_1_1_5_1_1_1_1_0());
                                              										
                                            }
                                            pushFollow(FOLLOW_43);
                                            lv_eventContext_18_0=ruleConceptDeclaration();

                                            state._fsp--;
                                            if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              											if (current==null) {
                                              												current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                                              											}
                                              											set(
                                              												current,
                                              												"eventContext",
                                              												lv_eventContext_18_0,
                                              												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                                              											afterParserOrEnumRuleCall();
                                              										
                                            }

                                            }


                                            }


                                            }


                                            }
                                            break;

                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:2834:4: ( (lv_parameters_19_0= ruleList ) )?
                    int alt56=2;
                    alt56 = dfa56.predict(input);
                    switch (alt56) {
                        case 1 :
                            // InternalKim.g:2835:5: (lv_parameters_19_0= ruleList )
                            {
                            // InternalKim.g:2835:5: (lv_parameters_19_0= ruleList )
                            // InternalKim.g:2836:6: lv_parameters_19_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
                              					
                            }
                            pushFollow(FOLLOW_46);
                            lv_parameters_19_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_19_0,
                              							"org.integratedmodelling.kim.Kim.List");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:2853:4: ( ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )* )?
                    int alt58=2;
                    int LA58_0 = input.LA(1);

                    if ( ((LA58_0>=63 && LA58_0<=67)) ) {
                        alt58=1;
                    }
                    switch (alt58) {
                        case 1 :
                            // InternalKim.g:2854:5: ( (lv_actions_20_0= ruleAction ) ) ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            {
                            // InternalKim.g:2854:5: ( (lv_actions_20_0= ruleAction ) )
                            // InternalKim.g:2855:6: (lv_actions_20_0= ruleAction )
                            {
                            // InternalKim.g:2855:6: (lv_actions_20_0= ruleAction )
                            // InternalKim.g:2856:7: lv_actions_20_0= ruleAction
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_0_0());
                              						
                            }
                            pushFollow(FOLLOW_24);
                            lv_actions_20_0=ruleAction();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                              							}
                              							add(
                              								current,
                              								"actions",
                              								lv_actions_20_0,
                              								"org.integratedmodelling.kim.Kim.Action");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }

                            // InternalKim.g:2873:5: ( ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) ) )*
                            loop57:
                            do {
                                int alt57=2;
                                int LA57_0 = input.LA(1);

                                if ( (LA57_0==25) ) {
                                    alt57=1;
                                }


                                switch (alt57) {
                            	case 1 :
                            	    // InternalKim.g:2874:6: ( ( ',' )=>otherlv_21= ',' ) ( (lv_actions_22_0= ruleAction ) )
                            	    {
                            	    // InternalKim.g:2874:6: ( ( ',' )=>otherlv_21= ',' )
                            	    // InternalKim.g:2875:7: ( ',' )=>otherlv_21= ','
                            	    {
                            	    otherlv_21=(Token)match(input,25,FOLLOW_41); if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      							newLeafNode(otherlv_21, grammarAccess.getActionSpecificationAccess().getCommaKeyword_1_3_1_0());
                            	      						
                            	    }

                            	    }

                            	    // InternalKim.g:2881:6: ( (lv_actions_22_0= ruleAction ) )
                            	    // InternalKim.g:2882:7: (lv_actions_22_0= ruleAction )
                            	    {
                            	    // InternalKim.g:2882:7: (lv_actions_22_0= ruleAction )
                            	    // InternalKim.g:2883:8: lv_actions_22_0= ruleAction
                            	    {
                            	    if ( state.backtracking==0 ) {

                            	      								newCompositeNode(grammarAccess.getActionSpecificationAccess().getActionsActionParserRuleCall_1_3_1_1_0());
                            	      							
                            	    }
                            	    pushFollow(FOLLOW_24);
                            	    lv_actions_22_0=ruleAction();

                            	    state._fsp--;
                            	    if (state.failed) return current;
                            	    if ( state.backtracking==0 ) {

                            	      								if (current==null) {
                            	      									current = createModelElementForParent(grammarAccess.getActionSpecificationRule());
                            	      								}
                            	      								add(
                            	      									current,
                            	      									"actions",
                            	      									lv_actions_22_0,
                            	      									"org.integratedmodelling.kim.Kim.Action");
                            	      								afterParserOrEnumRuleCall();
                            	      							
                            	    }

                            	    }


                            	    }


                            	    }
                            	    break;

                            	default :
                            	    break loop57;
                                }
                            } while (true);


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleActionSpecification"


    // $ANTLR start "entryRuleFunctionOrID"
    // InternalKim.g:2907:1: entryRuleFunctionOrID returns [EObject current=null] : iv_ruleFunctionOrID= ruleFunctionOrID EOF ;
    public final EObject entryRuleFunctionOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunctionOrID = null;


        try {
            // InternalKim.g:2907:53: (iv_ruleFunctionOrID= ruleFunctionOrID EOF )
            // InternalKim.g:2908:2: iv_ruleFunctionOrID= ruleFunctionOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunctionOrID=ruleFunctionOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunctionOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunctionOrID"


    // $ANTLR start "ruleFunctionOrID"
    // InternalKim.g:2914:1: ruleFunctionOrID returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleFunctionOrID() throws RecognitionException {
        EObject current = null;

        Token lv_functionId_1_1=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_functionId_1_2 = null;



        	enterRule();

        try {
            // InternalKim.g:2920:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:2921:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:2921:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) ) )
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( (LA61_0==RULE_LOWERCASE_ID) ) {
                int LA61_1 = input.LA(2);

                if ( (synpred116_InternalKim()) ) {
                    alt61=1;
                }
                else if ( (true) ) {
                    alt61=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 61, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 61, 0, input);

                throw nvae;
            }
            switch (alt61) {
                case 1 :
                    // InternalKim.g:2922:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:2922:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:2923:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:2923:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:2924:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:2942:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:2942:3: ( ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) ) )
                    // InternalKim.g:2943:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:2943:4: ( (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId ) )
                    // InternalKim.g:2944:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    {
                    // InternalKim.g:2944:5: (lv_functionId_1_1= RULE_LOWERCASE_ID | lv_functionId_1_2= ruleNamespaceId )
                    int alt60=2;
                    int LA60_0 = input.LA(1);

                    if ( (LA60_0==RULE_LOWERCASE_ID) ) {
                        int LA60_1 = input.LA(2);

                        if ( (LA60_1==EOF||(LA60_1>=RULE_LOWERCASE_ID && LA60_1<=RULE_STRING)||LA60_1==RULE_CAMELCASE_ID||LA60_1==18||LA60_1==25||LA60_1==28||(LA60_1>=33 && LA60_1<=34)||(LA60_1>=53 && LA60_1<=55)||(LA60_1>=63 && LA60_1<=67)||(LA60_1>=107 && LA60_1<=108)||(LA60_1>=115 && LA60_1<=116)||(LA60_1>=118 && LA60_1<=129)) ) {
                            alt60=1;
                        }
                        else if ( (LA60_1==51||LA60_1==89) ) {
                            alt60=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 60, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 60, 0, input);

                        throw nvae;
                    }
                    switch (alt60) {
                        case 1 :
                            // InternalKim.g:2945:6: lv_functionId_1_1= RULE_LOWERCASE_ID
                            {
                            lv_functionId_1_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_functionId_1_1, grammarAccess.getFunctionOrIDAccess().getFunctionIdLOWERCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getFunctionOrIDRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"functionId",
                              							lv_functionId_1_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:2960:6: lv_functionId_1_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionIdNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_functionId_1_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getFunctionOrIDRule());
                              						}
                              						set(
                              							current,
                              							"functionId",
                              							lv_functionId_1_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunctionOrID"


    // $ANTLR start "entryRuleAction"
    // InternalKim.g:2982:1: entryRuleAction returns [EObject current=null] : iv_ruleAction= ruleAction EOF ;
    public final EObject entryRuleAction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAction = null;


        try {
            // InternalKim.g:2982:47: (iv_ruleAction= ruleAction EOF )
            // InternalKim.g:2983:2: iv_ruleAction= ruleAction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getActionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAction=ruleAction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAction"


    // $ANTLR start "ruleAction"
    // InternalKim.g:2989:1: ruleAction returns [EObject current=null] : ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) ;
    public final EObject ruleAction() throws RecognitionException {
        EObject current = null;

        Token lv_change_0_0=null;
        Token lv_set_1_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token lv_conditionNegative_6_0=null;
        Token lv_integrate_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token lv_conditionNegative_13_0=null;
        Token lv_do_15_0=null;
        Token otherlv_17=null;
        Token otherlv_19=null;
        Token lv_conditionNegative_20_0=null;
        Token lv_move_22_0=null;
        Token lv_away_24_0=null;
        EObject lv_assignments_2_0 = null;

        EObject lv_assignments_4_0 = null;

        EObject lv_condition_7_0 = null;

        EObject lv_assignments_9_0 = null;

        EObject lv_assignments_11_0 = null;

        EObject lv_condition_14_0 = null;

        EObject lv_executed_16_0 = null;

        EObject lv_executed_18_0 = null;

        EObject lv_condition_21_0 = null;

        EObject lv_where_23_0 = null;

        EObject lv_condition_25_0 = null;



        	enterRule();

        try {
            // InternalKim.g:2995:2: ( ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) ) )
            // InternalKim.g:2996:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            {
            // InternalKim.g:2996:2: ( ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? ) | ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? ) | ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? ) | ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? ) )
            int alt74=4;
            switch ( input.LA(1) ) {
            case 63:
            case 64:
                {
                alt74=1;
                }
                break;
            case 65:
                {
                alt74=2;
                }
                break;
            case 66:
                {
                alt74=3;
                }
                break;
            case 67:
                {
                alt74=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 74, 0, input);

                throw nvae;
            }

            switch (alt74) {
                case 1 :
                    // InternalKim.g:2997:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:2997:3: ( ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )? )
                    // InternalKim.g:2998:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) ) ( (lv_assignments_2_0= ruleValueAssignment ) ) (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:2998:4: ( ( (lv_change_0_0= 'change' ) ) | ( (lv_set_1_0= 'set' ) ) )
                    int alt62=2;
                    int LA62_0 = input.LA(1);

                    if ( (LA62_0==63) ) {
                        alt62=1;
                    }
                    else if ( (LA62_0==64) ) {
                        alt62=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 62, 0, input);

                        throw nvae;
                    }
                    switch (alt62) {
                        case 1 :
                            // InternalKim.g:2999:5: ( (lv_change_0_0= 'change' ) )
                            {
                            // InternalKim.g:2999:5: ( (lv_change_0_0= 'change' ) )
                            // InternalKim.g:3000:6: (lv_change_0_0= 'change' )
                            {
                            // InternalKim.g:3000:6: (lv_change_0_0= 'change' )
                            // InternalKim.g:3001:7: lv_change_0_0= 'change'
                            {
                            lv_change_0_0=(Token)match(input,63,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_change_0_0, grammarAccess.getActionAccess().getChangeChangeKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "change", true, "change");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3014:5: ( (lv_set_1_0= 'set' ) )
                            {
                            // InternalKim.g:3014:5: ( (lv_set_1_0= 'set' ) )
                            // InternalKim.g:3015:6: (lv_set_1_0= 'set' )
                            {
                            // InternalKim.g:3015:6: (lv_set_1_0= 'set' )
                            // InternalKim.g:3016:7: lv_set_1_0= 'set'
                            {
                            lv_set_1_0=(Token)match(input,64,FOLLOW_47); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_set_1_0, grammarAccess.getActionAccess().getSetSetKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "set", true, "set");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3029:4: ( (lv_assignments_2_0= ruleValueAssignment ) )
                    // InternalKim.g:3030:5: (lv_assignments_2_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3030:5: (lv_assignments_2_0= ruleValueAssignment )
                    // InternalKim.g:3031:6: lv_assignments_2_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_assignments_2_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_2_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3048:4: (otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) ) )*
                    loop63:
                    do {
                        int alt63=2;
                        int LA63_0 = input.LA(1);

                        if ( (LA63_0==25) ) {
                            int LA63_2 = input.LA(2);

                            if ( ((LA63_2>=RULE_LOWERCASE_ID && LA63_2<=RULE_CAMELCASE_ID)||(LA63_2>=RULE_ID && LA63_2<=RULE_INT)||(LA63_2>=22 && LA63_2<=23)||LA63_2==25||LA63_2==33||LA63_2==39||LA63_2==46||(LA63_2>=226 && LA63_2<=227)) ) {
                                alt63=1;
                            }


                        }


                        switch (alt63) {
                    	case 1 :
                    	    // InternalKim.g:3049:5: otherlv_3= ',' ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_3, grammarAccess.getActionAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3053:5: ( (lv_assignments_4_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3054:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3054:6: (lv_assignments_4_0= ruleValueAssignment )
                    	    // InternalKim.g:3055:7: lv_assignments_4_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_assignments_4_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_4_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop63;
                        }
                    } while (true);

                    // InternalKim.g:3073:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) ) )?
                    int alt65=2;
                    int LA65_0 = input.LA(1);

                    if ( ((LA65_0>=41 && LA65_0<=42)) ) {
                        alt65=1;
                    }
                    switch (alt65) {
                        case 1 :
                            // InternalKim.g:3074:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) ) ( (lv_condition_7_0= ruleValue ) )
                            {
                            // InternalKim.g:3074:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) ) )
                            // InternalKim.g:3075:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3085:6: (otherlv_5= 'if' | ( (lv_conditionNegative_6_0= 'unless' ) ) )
                            int alt64=2;
                            int LA64_0 = input.LA(1);

                            if ( (LA64_0==41) ) {
                                alt64=1;
                            }
                            else if ( (LA64_0==42) ) {
                                alt64=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 64, 0, input);

                                throw nvae;
                            }
                            switch (alt64) {
                                case 1 :
                                    // InternalKim.g:3086:7: otherlv_5= 'if'
                                    {
                                    otherlv_5=(Token)match(input,41,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_5, grammarAccess.getActionAccess().getIfKeyword_0_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3091:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3091:7: ( (lv_conditionNegative_6_0= 'unless' ) )
                                    // InternalKim.g:3092:8: (lv_conditionNegative_6_0= 'unless' )
                                    {
                                    // InternalKim.g:3092:8: (lv_conditionNegative_6_0= 'unless' )
                                    // InternalKim.g:3093:9: lv_conditionNegative_6_0= 'unless'
                                    {
                                    lv_conditionNegative_6_0=(Token)match(input,42,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_6_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_0_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3107:5: ( (lv_condition_7_0= ruleValue ) )
                            // InternalKim.g:3108:6: (lv_condition_7_0= ruleValue )
                            {
                            // InternalKim.g:3108:6: (lv_condition_7_0= ruleValue )
                            // InternalKim.g:3109:7: lv_condition_7_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_7_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_7_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3129:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3129:3: ( ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )? )
                    // InternalKim.g:3130:4: ( (lv_integrate_8_0= 'integrate' ) ) ( (lv_assignments_9_0= ruleValueAssignment ) ) (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3130:4: ( (lv_integrate_8_0= 'integrate' ) )
                    // InternalKim.g:3131:5: (lv_integrate_8_0= 'integrate' )
                    {
                    // InternalKim.g:3131:5: (lv_integrate_8_0= 'integrate' )
                    // InternalKim.g:3132:6: lv_integrate_8_0= 'integrate'
                    {
                    lv_integrate_8_0=(Token)match(input,65,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_integrate_8_0, grammarAccess.getActionAccess().getIntegrateIntegrateKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "integrate", true, "integrate");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3144:4: ( (lv_assignments_9_0= ruleValueAssignment ) )
                    // InternalKim.g:3145:5: (lv_assignments_9_0= ruleValueAssignment )
                    {
                    // InternalKim.g:3145:5: (lv_assignments_9_0= ruleValueAssignment )
                    // InternalKim.g:3146:6: lv_assignments_9_0= ruleValueAssignment
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_assignments_9_0=ruleValueAssignment();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"assignments",
                      							lv_assignments_9_0,
                      							"org.integratedmodelling.kim.Kim.ValueAssignment");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3163:4: (otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) ) )*
                    loop66:
                    do {
                        int alt66=2;
                        int LA66_0 = input.LA(1);

                        if ( (LA66_0==25) ) {
                            int LA66_2 = input.LA(2);

                            if ( ((LA66_2>=RULE_LOWERCASE_ID && LA66_2<=RULE_CAMELCASE_ID)||(LA66_2>=RULE_ID && LA66_2<=RULE_INT)||(LA66_2>=22 && LA66_2<=23)||LA66_2==25||LA66_2==33||LA66_2==39||LA66_2==46||(LA66_2>=226 && LA66_2<=227)) ) {
                                alt66=1;
                            }


                        }


                        switch (alt66) {
                    	case 1 :
                    	    // InternalKim.g:3164:5: otherlv_10= ',' ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    {
                    	    otherlv_10=(Token)match(input,25,FOLLOW_47); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_10, grammarAccess.getActionAccess().getCommaKeyword_1_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3168:5: ( (lv_assignments_11_0= ruleValueAssignment ) )
                    	    // InternalKim.g:3169:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    {
                    	    // InternalKim.g:3169:6: (lv_assignments_11_0= ruleValueAssignment )
                    	    // InternalKim.g:3170:7: lv_assignments_11_0= ruleValueAssignment
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getAssignmentsValueAssignmentParserRuleCall_1_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_assignments_11_0=ruleValueAssignment();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"assignments",
                    	      								lv_assignments_11_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueAssignment");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop66;
                        }
                    } while (true);

                    // InternalKim.g:3188:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) ) )?
                    int alt68=2;
                    int LA68_0 = input.LA(1);

                    if ( ((LA68_0>=41 && LA68_0<=42)) ) {
                        alt68=1;
                    }
                    switch (alt68) {
                        case 1 :
                            // InternalKim.g:3189:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) ) ( (lv_condition_14_0= ruleValue ) )
                            {
                            // InternalKim.g:3189:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) ) )
                            // InternalKim.g:3190:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3200:6: (otherlv_12= 'if' | ( (lv_conditionNegative_13_0= 'unless' ) ) )
                            int alt67=2;
                            int LA67_0 = input.LA(1);

                            if ( (LA67_0==41) ) {
                                alt67=1;
                            }
                            else if ( (LA67_0==42) ) {
                                alt67=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 67, 0, input);

                                throw nvae;
                            }
                            switch (alt67) {
                                case 1 :
                                    // InternalKim.g:3201:7: otherlv_12= 'if'
                                    {
                                    otherlv_12=(Token)match(input,41,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_12, grammarAccess.getActionAccess().getIfKeyword_1_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3206:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3206:7: ( (lv_conditionNegative_13_0= 'unless' ) )
                                    // InternalKim.g:3207:8: (lv_conditionNegative_13_0= 'unless' )
                                    {
                                    // InternalKim.g:3207:8: (lv_conditionNegative_13_0= 'unless' )
                                    // InternalKim.g:3208:9: lv_conditionNegative_13_0= 'unless'
                                    {
                                    lv_conditionNegative_13_0=(Token)match(input,42,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_13_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_1_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3222:5: ( (lv_condition_14_0= ruleValue ) )
                            // InternalKim.g:3223:6: (lv_condition_14_0= ruleValue )
                            {
                            // InternalKim.g:3223:6: (lv_condition_14_0= ruleValue )
                            // InternalKim.g:3224:7: lv_condition_14_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_1_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_14_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_14_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3244:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    {
                    // InternalKim.g:3244:3: ( ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )? )
                    // InternalKim.g:3245:4: ( (lv_do_15_0= 'do' ) ) ( (lv_executed_16_0= ruleValueExecution ) ) (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )* ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    {
                    // InternalKim.g:3245:4: ( (lv_do_15_0= 'do' ) )
                    // InternalKim.g:3246:5: (lv_do_15_0= 'do' )
                    {
                    // InternalKim.g:3246:5: (lv_do_15_0= 'do' )
                    // InternalKim.g:3247:6: lv_do_15_0= 'do'
                    {
                    lv_do_15_0=(Token)match(input,66,FOLLOW_50); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_do_15_0, grammarAccess.getActionAccess().getDoDoKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "do", true, "do");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3259:4: ( (lv_executed_16_0= ruleValueExecution ) )
                    // InternalKim.g:3260:5: (lv_executed_16_0= ruleValueExecution )
                    {
                    // InternalKim.g:3260:5: (lv_executed_16_0= ruleValueExecution )
                    // InternalKim.g:3261:6: lv_executed_16_0= ruleValueExecution
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_48);
                    lv_executed_16_0=ruleValueExecution();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getActionRule());
                      						}
                      						add(
                      							current,
                      							"executed",
                      							lv_executed_16_0,
                      							"org.integratedmodelling.kim.Kim.ValueExecution");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:3278:4: (otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) ) )*
                    loop69:
                    do {
                        int alt69=2;
                        int LA69_0 = input.LA(1);

                        if ( (LA69_0==25) ) {
                            int LA69_2 = input.LA(2);

                            if ( (LA69_2==RULE_LOWERCASE_ID||LA69_2==RULE_EXPR||LA69_2==87) ) {
                                alt69=1;
                            }


                        }


                        switch (alt69) {
                    	case 1 :
                    	    // InternalKim.g:3279:5: otherlv_17= ',' ( (lv_executed_18_0= ruleValueExecution ) )
                    	    {
                    	    otherlv_17=(Token)match(input,25,FOLLOW_50); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_17, grammarAccess.getActionAccess().getCommaKeyword_2_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:3283:5: ( (lv_executed_18_0= ruleValueExecution ) )
                    	    // InternalKim.g:3284:6: (lv_executed_18_0= ruleValueExecution )
                    	    {
                    	    // InternalKim.g:3284:6: (lv_executed_18_0= ruleValueExecution )
                    	    // InternalKim.g:3285:7: lv_executed_18_0= ruleValueExecution
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getActionAccess().getExecutedValueExecutionParserRuleCall_2_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_48);
                    	    lv_executed_18_0=ruleValueExecution();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getActionRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"executed",
                    	      								lv_executed_18_0,
                    	      								"org.integratedmodelling.kim.Kim.ValueExecution");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop69;
                        }
                    } while (true);

                    // InternalKim.g:3303:4: ( ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) ) )?
                    int alt71=2;
                    int LA71_0 = input.LA(1);

                    if ( ((LA71_0>=41 && LA71_0<=42)) ) {
                        alt71=1;
                    }
                    switch (alt71) {
                        case 1 :
                            // InternalKim.g:3304:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) ) ( (lv_condition_21_0= ruleValue ) )
                            {
                            // InternalKim.g:3304:5: ( ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) ) )
                            // InternalKim.g:3305:6: ( ( 'if' | ( ( 'unless' ) ) ) )=> (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            {
                            // InternalKim.g:3315:6: (otherlv_19= 'if' | ( (lv_conditionNegative_20_0= 'unless' ) ) )
                            int alt70=2;
                            int LA70_0 = input.LA(1);

                            if ( (LA70_0==41) ) {
                                alt70=1;
                            }
                            else if ( (LA70_0==42) ) {
                                alt70=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 70, 0, input);

                                throw nvae;
                            }
                            switch (alt70) {
                                case 1 :
                                    // InternalKim.g:3316:7: otherlv_19= 'if'
                                    {
                                    otherlv_19=(Token)match(input,41,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(otherlv_19, grammarAccess.getActionAccess().getIfKeyword_2_3_0_0_0());
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3321:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    {
                                    // InternalKim.g:3321:7: ( (lv_conditionNegative_20_0= 'unless' ) )
                                    // InternalKim.g:3322:8: (lv_conditionNegative_20_0= 'unless' )
                                    {
                                    // InternalKim.g:3322:8: (lv_conditionNegative_20_0= 'unless' )
                                    // InternalKim.g:3323:9: lv_conditionNegative_20_0= 'unless'
                                    {
                                    lv_conditionNegative_20_0=(Token)match(input,42,FOLLOW_49); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_conditionNegative_20_0, grammarAccess.getActionAccess().getConditionNegativeUnlessKeyword_2_3_0_0_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getActionRule());
                                      									}
                                      									setWithLastConsumed(current, "conditionNegative", true, "unless");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }

                            // InternalKim.g:3337:5: ( (lv_condition_21_0= ruleValue ) )
                            // InternalKim.g:3338:6: (lv_condition_21_0= ruleValue )
                            {
                            // InternalKim.g:3338:6: (lv_condition_21_0= ruleValue )
                            // InternalKim.g:3339:7: lv_condition_21_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_2_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_21_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"condition",
                              								lv_condition_21_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3359:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    {
                    // InternalKim.g:3359:3: ( ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )? )
                    // InternalKim.g:3360:4: ( (lv_move_22_0= 'move' ) ) ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) ) ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    {
                    // InternalKim.g:3360:4: ( (lv_move_22_0= 'move' ) )
                    // InternalKim.g:3361:5: (lv_move_22_0= 'move' )
                    {
                    // InternalKim.g:3361:5: (lv_move_22_0= 'move' )
                    // InternalKim.g:3362:6: lv_move_22_0= 'move'
                    {
                    lv_move_22_0=(Token)match(input,67,FOLLOW_51); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_move_22_0, grammarAccess.getActionAccess().getMoveMoveKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getActionRule());
                      						}
                      						setWithLastConsumed(current, "move", true, "move");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3374:4: ( ( (lv_where_23_0= ruleValue ) ) | ( (lv_away_24_0= 'away' ) ) )
                    int alt72=2;
                    int LA72_0 = input.LA(1);

                    if ( ((LA72_0>=RULE_LOWERCASE_ID && LA72_0<=RULE_CAMELCASE_ID)||(LA72_0>=RULE_ID && LA72_0<=RULE_INT)||(LA72_0>=22 && LA72_0<=23)||LA72_0==25||LA72_0==33||LA72_0==46||LA72_0==183||(LA72_0>=226 && LA72_0<=227)) ) {
                        alt72=1;
                    }
                    else if ( (LA72_0==68) ) {
                        alt72=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 72, 0, input);

                        throw nvae;
                    }
                    switch (alt72) {
                        case 1 :
                            // InternalKim.g:3375:5: ( (lv_where_23_0= ruleValue ) )
                            {
                            // InternalKim.g:3375:5: ( (lv_where_23_0= ruleValue ) )
                            // InternalKim.g:3376:6: (lv_where_23_0= ruleValue )
                            {
                            // InternalKim.g:3376:6: (lv_where_23_0= ruleValue )
                            // InternalKim.g:3377:7: lv_where_23_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getActionAccess().getWhereValueParserRuleCall_3_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_52);
                            lv_where_23_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getActionRule());
                              							}
                              							set(
                              								current,
                              								"where",
                              								lv_where_23_0,
                              								"org.integratedmodelling.kim.Kim.Value");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:3395:5: ( (lv_away_24_0= 'away' ) )
                            {
                            // InternalKim.g:3395:5: ( (lv_away_24_0= 'away' ) )
                            // InternalKim.g:3396:6: (lv_away_24_0= 'away' )
                            {
                            // InternalKim.g:3396:6: (lv_away_24_0= 'away' )
                            // InternalKim.g:3397:7: lv_away_24_0= 'away'
                            {
                            lv_away_24_0=(Token)match(input,68,FOLLOW_52); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_away_24_0, grammarAccess.getActionAccess().getAwayAwayKeyword_3_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getActionRule());
                              							}
                              							setWithLastConsumed(current, "away", true, "away");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:3410:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?
                    int alt73=2;
                    alt73 = dfa73.predict(input);
                    switch (alt73) {
                        case 1 :
                            // InternalKim.g:3411:5: ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue )
                            {
                            // InternalKim.g:3415:5: (lv_condition_25_0= ruleValue )
                            // InternalKim.g:3416:6: lv_condition_25_0= ruleValue
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getActionAccess().getConditionValueParserRuleCall_3_2_0());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_condition_25_0=ruleValue();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getActionRule());
                              						}
                              						set(
                              							current,
                              							"condition",
                              							lv_condition_25_0,
                              							"org.integratedmodelling.kim.Kim.Value");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAction"


    // $ANTLR start "entryRuleValueAssignment"
    // InternalKim.g:3438:1: entryRuleValueAssignment returns [EObject current=null] : iv_ruleValueAssignment= ruleValueAssignment EOF ;
    public final EObject entryRuleValueAssignment() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueAssignment = null;


        try {
            // InternalKim.g:3438:56: (iv_ruleValueAssignment= ruleValueAssignment EOF )
            // InternalKim.g:3439:2: iv_ruleValueAssignment= ruleValueAssignment EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueAssignmentRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueAssignment=ruleValueAssignment();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueAssignment; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueAssignment"


    // $ANTLR start "ruleValueAssignment"
    // InternalKim.g:3445:1: ruleValueAssignment returns [EObject current=null] : ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) ;
    public final EObject ruleValueAssignment() throws RecognitionException {
        EObject current = null;

        Token lv_target_0_0=null;
        Token otherlv_1=null;
        EObject lv_assignedValue_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3451:2: ( ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) ) )
            // InternalKim.g:3452:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            {
            // InternalKim.g:3452:2: ( ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) ) )
            // InternalKim.g:3453:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )? ( (lv_assignedValue_2_0= ruleComputableValue ) )
            {
            // InternalKim.g:3453:3: ( ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to' )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( (LA76_0==RULE_LOWERCASE_ID) ) {
                int LA76_1 = input.LA(2);

                if ( (LA76_1==39) ) {
                    alt76=1;
                }
            }
            else if ( (LA76_0==39) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalKim.g:3454:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )? otherlv_1= 'to'
                    {
                    // InternalKim.g:3454:4: ( (lv_target_0_0= RULE_LOWERCASE_ID ) )?
                    int alt75=2;
                    int LA75_0 = input.LA(1);

                    if ( (LA75_0==RULE_LOWERCASE_ID) ) {
                        alt75=1;
                    }
                    switch (alt75) {
                        case 1 :
                            // InternalKim.g:3455:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            {
                            // InternalKim.g:3455:5: (lv_target_0_0= RULE_LOWERCASE_ID )
                            // InternalKim.g:3456:6: lv_target_0_0= RULE_LOWERCASE_ID
                            {
                            lv_target_0_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_22); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_target_0_0, grammarAccess.getValueAssignmentAccess().getTargetLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueAssignmentRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"target",
                              							lv_target_0_0,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_1=(Token)match(input,39,FOLLOW_47); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueAssignmentAccess().getToKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:3477:3: ( (lv_assignedValue_2_0= ruleComputableValue ) )
            // InternalKim.g:3478:4: (lv_assignedValue_2_0= ruleComputableValue )
            {
            // InternalKim.g:3478:4: (lv_assignedValue_2_0= ruleComputableValue )
            // InternalKim.g:3479:5: lv_assignedValue_2_0= ruleComputableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueAssignmentAccess().getAssignedValueComputableValueParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_assignedValue_2_0=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueAssignmentRule());
              					}
              					set(
              						current,
              						"assignedValue",
              						lv_assignedValue_2_0,
              						"org.integratedmodelling.kim.Kim.ComputableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueAssignment"


    // $ANTLR start "entryRuleComputableValue"
    // InternalKim.g:3500:1: entryRuleComputableValue returns [EObject current=null] : iv_ruleComputableValue= ruleComputableValue EOF ;
    public final EObject entryRuleComputableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleComputableValue = null;


        try {
            // InternalKim.g:3500:56: (iv_ruleComputableValue= ruleComputableValue EOF )
            // InternalKim.g:3501:2: iv_ruleComputableValue= ruleComputableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getComputableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleComputableValue=ruleComputableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleComputableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleComputableValue"


    // $ANTLR start "ruleComputableValue"
    // InternalKim.g:3507:1: ruleComputableValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) ;
    public final EObject ruleComputableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token otherlv_3=null;
        Token lv_language_4_1=null;
        Token lv_language_4_2=null;
        Token lv_language_4_3=null;
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;
        Token lv_null_7_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3513:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) ) )
            // InternalKim.g:3514:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            {
            // InternalKim.g:3514:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )
            int alt80=6;
            alt80 = dfa80.predict(input);
            switch (alt80) {
                case 1 :
                    // InternalKim.g:3515:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:3515:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:3516:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:3516:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:3517:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3535:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:3535:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:3536:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:3536:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:3537:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3555:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3555:3: ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3556:4: ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3556:4: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:3557:5: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:3557:5: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:3558:6: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_2_0, grammarAccess.getComputableValueAccess().getExprEXPRTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getComputableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_2_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3574:4: (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt78=2;
                    int LA78_0 = input.LA(1);

                    if ( (LA78_0==45) ) {
                        alt78=1;
                    }
                    switch (alt78) {
                        case 1 :
                            // InternalKim.g:3575:5: otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_3=(Token)match(input,45,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getComputableValueAccess().getInKeyword_2_1_0());
                              				
                            }
                            // InternalKim.g:3579:5: ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3580:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3580:6: ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3581:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3581:7: (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID )
                            int alt77=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt77=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt77=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt77=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 77, 0, input);

                                throw nvae;
                            }

                            switch (alt77) {
                                case 1 :
                                    // InternalKim.g:3582:8: lv_language_4_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_4_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_1, grammarAccess.getComputableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_2_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3597:8: lv_language_4_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_4_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_2, grammarAccess.getComputableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_2_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3612:8: lv_language_4_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_4_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_4_3, grammarAccess.getComputableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_2_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getComputableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_4_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:3632:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:3632:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:3633:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:3633:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:3634:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:3634:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
                    int alt79=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt79=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt79=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt79=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 79, 0, input);

                        throw nvae;
                    }

                    switch (alt79) {
                        case 1 :
                            // InternalKim.g:3635:6: lv_id_5_1= RULE_LOWERCASE_ID
                            {
                            lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_1, grammarAccess.getComputableValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:3650:6: lv_id_5_2= RULE_UPPERCASE_ID
                            {
                            lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_2, grammarAccess.getComputableValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:3665:6: lv_id_5_3= RULE_CAMELCASE_ID
                            {
                            lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_5_3, grammarAccess.getComputableValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getComputableValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_5_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:3683:3: ( (lv_list_6_0= ruleList ) )
                    {
                    // InternalKim.g:3683:3: ( (lv_list_6_0= ruleList ) )
                    // InternalKim.g:3684:4: (lv_list_6_0= ruleList )
                    {
                    // InternalKim.g:3684:4: (lv_list_6_0= ruleList )
                    // InternalKim.g:3685:5: lv_list_6_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getComputableValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_6_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getComputableValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_6_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:3703:3: ( (lv_null_7_0= 'unknown' ) )
                    {
                    // InternalKim.g:3703:3: ( (lv_null_7_0= 'unknown' ) )
                    // InternalKim.g:3704:4: (lv_null_7_0= 'unknown' )
                    {
                    // InternalKim.g:3704:4: (lv_null_7_0= 'unknown' )
                    // InternalKim.g:3705:5: lv_null_7_0= 'unknown'
                    {
                    lv_null_7_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_7_0, grammarAccess.getComputableValueAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getComputableValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleComputableValue"


    // $ANTLR start "entryRuleValueExecution"
    // InternalKim.g:3721:1: entryRuleValueExecution returns [EObject current=null] : iv_ruleValueExecution= ruleValueExecution EOF ;
    public final EObject entryRuleValueExecution() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueExecution = null;


        try {
            // InternalKim.g:3721:55: (iv_ruleValueExecution= ruleValueExecution EOF )
            // InternalKim.g:3722:2: iv_ruleValueExecution= ruleValueExecution EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueExecutionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueExecution=ruleValueExecution();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueExecution; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueExecution"


    // $ANTLR start "ruleValueExecution"
    // InternalKim.g:3728:1: ruleValueExecution returns [EObject current=null] : ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) ;
    public final EObject ruleValueExecution() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_target_2_0=null;
        EObject lv_execValue_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3734:2: ( ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? ) )
            // InternalKim.g:3735:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            {
            // InternalKim.g:3735:2: ( ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )? )
            // InternalKim.g:3736:3: ( (lv_execValue_0_0= ruleExecutableValue ) ) (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            {
            // InternalKim.g:3736:3: ( (lv_execValue_0_0= ruleExecutableValue ) )
            // InternalKim.g:3737:4: (lv_execValue_0_0= ruleExecutableValue )
            {
            // InternalKim.g:3737:4: (lv_execValue_0_0= ruleExecutableValue )
            // InternalKim.g:3738:5: lv_execValue_0_0= ruleExecutableValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getValueExecutionAccess().getExecValueExecutableValueParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_55);
            lv_execValue_0_0=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getValueExecutionRule());
              					}
              					set(
              						current,
              						"execValue",
              						lv_execValue_0_0,
              						"org.integratedmodelling.kim.Kim.ExecutableValue");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:3755:3: (otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) ) )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==24) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalKim.g:3756:4: otherlv_1= 'as' ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    {
                    otherlv_1=(Token)match(input,24,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getValueExecutionAccess().getAsKeyword_1_0());
                      			
                    }
                    // InternalKim.g:3760:4: ( (lv_target_2_0= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:3761:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:3761:5: (lv_target_2_0= RULE_LOWERCASE_ID )
                    // InternalKim.g:3762:6: lv_target_2_0= RULE_LOWERCASE_ID
                    {
                    lv_target_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_target_2_0, grammarAccess.getValueExecutionAccess().getTargetLOWERCASE_IDTerminalRuleCall_1_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getValueExecutionRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"target",
                      							lv_target_2_0,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueExecution"


    // $ANTLR start "entryRuleExecutableValue"
    // InternalKim.g:3783:1: entryRuleExecutableValue returns [EObject current=null] : iv_ruleExecutableValue= ruleExecutableValue EOF ;
    public final EObject entryRuleExecutableValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExecutableValue = null;


        try {
            // InternalKim.g:3783:56: (iv_ruleExecutableValue= ruleExecutableValue EOF )
            // InternalKim.g:3784:2: iv_ruleExecutableValue= ruleExecutableValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExecutableValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExecutableValue=ruleExecutableValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExecutableValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExecutableValue"


    // $ANTLR start "ruleExecutableValue"
    // InternalKim.g:3790:1: ruleExecutableValue returns [EObject current=null] : ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) ;
    public final EObject ruleExecutableValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_1_0=null;
        Token otherlv_2=null;
        Token lv_language_3_1=null;
        Token lv_language_3_2=null;
        Token lv_language_3_3=null;
        EObject lv_function_0_0 = null;

        AntlrDatatypeRuleToken lv_urn_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:3796:2: ( ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) ) )
            // InternalKim.g:3797:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            {
            // InternalKim.g:3797:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )
            int alt84=3;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalKim.g:3798:3: ( (lv_function_0_0= ruleFunction ) )
                    {
                    // InternalKim.g:3798:3: ( (lv_function_0_0= ruleFunction ) )
                    // InternalKim.g:3799:4: (lv_function_0_0= ruleFunction )
                    {
                    // InternalKim.g:3799:4: (lv_function_0_0= ruleFunction )
                    // InternalKim.g:3800:5: lv_function_0_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getFunctionFunctionParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_0_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_0_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:3818:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    {
                    // InternalKim.g:3818:3: ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? )
                    // InternalKim.g:3819:4: ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    {
                    // InternalKim.g:3819:4: ( (lv_expr_1_0= RULE_EXPR ) )
                    // InternalKim.g:3820:5: (lv_expr_1_0= RULE_EXPR )
                    {
                    // InternalKim.g:3820:5: (lv_expr_1_0= RULE_EXPR )
                    // InternalKim.g:3821:6: lv_expr_1_0= RULE_EXPR
                    {
                    lv_expr_1_0=(Token)match(input,RULE_EXPR,FOLLOW_53); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_expr_1_0, grammarAccess.getExecutableValueAccess().getExprEXPRTerminalRuleCall_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getExecutableValueRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"expr",
                      							lv_expr_1_0,
                      							"org.integratedmodelling.kim.Kim.EXPR");
                      					
                    }

                    }


                    }

                    // InternalKim.g:3837:4: (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )?
                    int alt83=2;
                    int LA83_0 = input.LA(1);

                    if ( (LA83_0==45) ) {
                        alt83=1;
                    }
                    switch (alt83) {
                        case 1 :
                            // InternalKim.g:3838:5: otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            {
                            otherlv_2=(Token)match(input,45,FOLLOW_54); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getExecutableValueAccess().getInKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:3842:5: ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) )
                            // InternalKim.g:3843:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            {
                            // InternalKim.g:3843:6: ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) )
                            // InternalKim.g:3844:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            {
                            // InternalKim.g:3844:7: (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID )
                            int alt82=3;
                            switch ( input.LA(1) ) {
                            case RULE_LOWERCASE_ID:
                                {
                                alt82=1;
                                }
                                break;
                            case RULE_UPPERCASE_ID:
                                {
                                alt82=2;
                                }
                                break;
                            case RULE_CAMELCASE_ID:
                                {
                                alt82=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 82, 0, input);

                                throw nvae;
                            }

                            switch (alt82) {
                                case 1 :
                                    // InternalKim.g:3845:8: lv_language_3_1= RULE_LOWERCASE_ID
                                    {
                                    lv_language_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_1, grammarAccess.getExecutableValueAccess().getLanguageLOWERCASE_IDTerminalRuleCall_1_1_1_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_1,
                                      									"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:3860:8: lv_language_3_2= RULE_UPPERCASE_ID
                                    {
                                    lv_language_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_2, grammarAccess.getExecutableValueAccess().getLanguageUPPERCASE_IDTerminalRuleCall_1_1_1_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:3875:8: lv_language_3_3= RULE_CAMELCASE_ID
                                    {
                                    lv_language_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_language_3_3, grammarAccess.getExecutableValueAccess().getLanguageCAMELCASE_IDTerminalRuleCall_1_1_1_0_2());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getExecutableValueRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"language",
                                      									lv_language_3_3,
                                      									"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:3895:3: ( (lv_urn_4_0= ruleUrnId ) )
                    {
                    // InternalKim.g:3895:3: ( (lv_urn_4_0= ruleUrnId ) )
                    // InternalKim.g:3896:4: (lv_urn_4_0= ruleUrnId )
                    {
                    // InternalKim.g:3896:4: (lv_urn_4_0= ruleUrnId )
                    // InternalKim.g:3897:5: lv_urn_4_0= ruleUrnId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getExecutableValueAccess().getUrnUrnIdParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_urn_4_0=ruleUrnId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getExecutableValueRule());
                      					}
                      					set(
                      						current,
                      						"urn",
                      						lv_urn_4_0,
                      						"org.integratedmodelling.kim.Kim.UrnId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExecutableValue"


    // $ANTLR start "entryRuleMODEL_TYPE"
    // InternalKim.g:3918:1: entryRuleMODEL_TYPE returns [String current=null] : iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF ;
    public final String entryRuleMODEL_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleMODEL_TYPE = null;


        try {
            // InternalKim.g:3918:50: (iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF )
            // InternalKim.g:3919:2: iv_ruleMODEL_TYPE= ruleMODEL_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMODEL_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMODEL_TYPE=ruleMODEL_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMODEL_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMODEL_TYPE"


    // $ANTLR start "ruleMODEL_TYPE"
    // InternalKim.g:3925:1: ruleMODEL_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) ;
    public final AntlrDatatypeRuleToken ruleMODEL_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:3931:2: ( (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' ) )
            // InternalKim.g:3932:2: (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            {
            // InternalKim.g:3932:2: (kw= 'model' | kw= 'assess' | kw= 'learn' | kw= 'number' | kw= 'text' | kw= 'boolean' )
            int alt85=6;
            switch ( input.LA(1) ) {
            case 69:
                {
                alt85=1;
                }
                break;
            case 70:
                {
                alt85=2;
                }
                break;
            case 71:
                {
                alt85=3;
                }
                break;
            case 72:
                {
                alt85=4;
                }
                break;
            case 73:
                {
                alt85=5;
                }
                break;
            case 74:
                {
                alt85=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 85, 0, input);

                throw nvae;
            }

            switch (alt85) {
                case 1 :
                    // InternalKim.g:3933:3: kw= 'model'
                    {
                    kw=(Token)match(input,69,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getModelKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:3939:3: kw= 'assess'
                    {
                    kw=(Token)match(input,70,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getAssessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:3945:3: kw= 'learn'
                    {
                    kw=(Token)match(input,71,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getLearnKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:3951:3: kw= 'number'
                    {
                    kw=(Token)match(input,72,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getNumberKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:3957:3: kw= 'text'
                    {
                    kw=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getTextKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:3963:3: kw= 'boolean'
                    {
                    kw=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getMODEL_TYPEAccess().getBooleanKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMODEL_TYPE"


    // $ANTLR start "entryRuleNamespace"
    // InternalKim.g:3972:1: entryRuleNamespace returns [EObject current=null] : iv_ruleNamespace= ruleNamespace EOF ;
    public final EObject entryRuleNamespace() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamespace = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:3978:2: (iv_ruleNamespace= ruleNamespace EOF )
            // InternalKim.g:3979:2: iv_ruleNamespace= ruleNamespace EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespace=ruleNamespace();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespace; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleNamespace"


    // $ANTLR start "ruleNamespace"
    // InternalKim.g:3988:1: ruleNamespace returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) ) )? otherlv_47= ';' ) ;
    public final EObject ruleNamespace() throws RecognitionException {
        EObject current = null;

        Token lv_private_2_0=null;
        Token lv_inactive_3_0=null;
        Token otherlv_4=null;
        Token lv_scenario_5_0=null;
        Token lv_worldviewBound_6_0=null;
        Token lv_docstring_8_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_rootDomain_24_0=null;
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        Token otherlv_31=null;
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token otherlv_42=null;
        Token otherlv_44=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_name_7_0 = null;

        EObject lv_imported_11_0 = null;

        EObject lv_imported_13_0 = null;

        EObject lv_owlImports_15_0 = null;

        EObject lv_owlImports_17_0 = null;

        EObject lv_coverage_19_0 = null;

        EObject lv_coverage_21_0 = null;

        EObject lv_domainConcept_25_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_28_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_30_0 = null;

        AntlrDatatypeRuleToken lv_version_32_0 = null;

        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;

        EObject lv_weights_40_0 = null;

        EObject lv_metadata_43_0 = null;

        EObject lv_documentation_46_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 
        	grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()
        	);

        try {
            // InternalKim.g:3999:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) ) )? otherlv_47= ';' ) )
            // InternalKim.g:4000:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) ) )? otherlv_47= ';' )
            {
            // InternalKim.g:4000:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) ) )? otherlv_47= ';' )
            // InternalKim.g:4001:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) ) (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) ) ( (lv_name_7_0= rulePathName ) ) ( (lv_docstring_8_0= RULE_STRING ) )? ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) ) (otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) ) )? (otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) ) )? otherlv_47= ';'
            {
            // InternalKim.g:4001:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==RULE_ANNOTATION_ID) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalKim.g:4002:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:4002:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:4003:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getNamespaceAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_56);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            // InternalKim.g:4020:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) ) )
            // InternalKim.g:4021:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4021:4: ( ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* ) )
            // InternalKim.g:4022:5: ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());
            // InternalKim.g:4025:5: ( ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )* )
            // InternalKim.g:4026:6: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )*
            {
            // InternalKim.g:4026:6: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )*
            loop87:
            do {
                int alt87=3;
                int LA87_0 = input.LA(1);

                if ( LA87_0 == 20 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
                    alt87=1;
                }
                else if ( LA87_0 == 19 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
                    alt87=2;
                }


                switch (alt87) {
            	case 1 :
            	    // InternalKim.g:4027:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
            	    {
            	    // InternalKim.g:4027:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
            	    // InternalKim.g:4028:5: {...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:4028:106: ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
            	    // InternalKim.g:4029:6: ({...}? => ( (lv_private_2_0= 'private' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:4032:9: ({...}? => ( (lv_private_2_0= 'private' ) ) )
            	    // InternalKim.g:4032:10: {...}? => ( (lv_private_2_0= 'private' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4032:19: ( (lv_private_2_0= 'private' ) )
            	    // InternalKim.g:4032:20: (lv_private_2_0= 'private' )
            	    {
            	    // InternalKim.g:4032:20: (lv_private_2_0= 'private' )
            	    // InternalKim.g:4033:10: lv_private_2_0= 'private'
            	    {
            	    lv_private_2_0=(Token)match(input,20,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_private_2_0, grammarAccess.getNamespaceAccess().getPrivatePrivateKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "private", true, "private");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4050:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
            	    {
            	    // InternalKim.g:4050:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
            	    // InternalKim.g:4051:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:4051:106: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
            	    // InternalKim.g:4052:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:4055:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
            	    // InternalKim.g:4055:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4055:19: ( (lv_inactive_3_0= 'void' ) )
            	    // InternalKim.g:4055:20: (lv_inactive_3_0= 'void' )
            	    {
            	    // InternalKim.g:4055:20: (lv_inactive_3_0= 'void' )
            	    // InternalKim.g:4056:10: lv_inactive_3_0= 'void'
            	    {
            	    lv_inactive_3_0=(Token)match(input,19,FOLLOW_57); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_inactive_3_0, grammarAccess.getNamespaceAccess().getInactiveVoidKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getNamespaceRule());
            	      										}
            	      										setWithLastConsumed(current, "inactive", true, "void");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:4080:3: (otherlv_4= 'namespace' | ( (lv_scenario_5_0= 'scenario' ) ) | ( (lv_worldviewBound_6_0= 'worldview' ) ) )
            int alt88=3;
            switch ( input.LA(1) ) {
            case 75:
                {
                alt88=1;
                }
                break;
            case 76:
                {
                alt88=2;
                }
                break;
            case 77:
                {
                alt88=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 88, 0, input);

                throw nvae;
            }

            switch (alt88) {
                case 1 :
                    // InternalKim.g:4081:4: otherlv_4= 'namespace'
                    {
                    otherlv_4=(Token)match(input,75,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getNamespaceAccess().getNamespaceKeyword_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4086:4: ( (lv_scenario_5_0= 'scenario' ) )
                    {
                    // InternalKim.g:4086:4: ( (lv_scenario_5_0= 'scenario' ) )
                    // InternalKim.g:4087:5: (lv_scenario_5_0= 'scenario' )
                    {
                    // InternalKim.g:4087:5: (lv_scenario_5_0= 'scenario' )
                    // InternalKim.g:4088:6: lv_scenario_5_0= 'scenario'
                    {
                    lv_scenario_5_0=(Token)match(input,76,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_scenario_5_0, grammarAccess.getNamespaceAccess().getScenarioScenarioKeyword_2_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "scenario", true, "scenario");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:4101:4: ( (lv_worldviewBound_6_0= 'worldview' ) )
                    {
                    // InternalKim.g:4101:4: ( (lv_worldviewBound_6_0= 'worldview' ) )
                    // InternalKim.g:4102:5: (lv_worldviewBound_6_0= 'worldview' )
                    {
                    // InternalKim.g:4102:5: (lv_worldviewBound_6_0= 'worldview' )
                    // InternalKim.g:4103:6: lv_worldviewBound_6_0= 'worldview'
                    {
                    lv_worldviewBound_6_0=(Token)match(input,77,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_worldviewBound_6_0, grammarAccess.getNamespaceAccess().getWorldviewBoundWorldviewKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamespaceRule());
                      						}
                      						setWithLastConsumed(current, "worldviewBound", true, "worldview");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4116:3: ( (lv_name_7_0= rulePathName ) )
            // InternalKim.g:4117:4: (lv_name_7_0= rulePathName )
            {
            // InternalKim.g:4117:4: (lv_name_7_0= rulePathName )
            // InternalKim.g:4118:5: lv_name_7_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamespaceAccess().getNamePathNameParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_58);
            lv_name_7_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamespaceRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_7_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:4135:3: ( (lv_docstring_8_0= RULE_STRING ) )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==RULE_STRING) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalKim.g:4136:4: (lv_docstring_8_0= RULE_STRING )
                    {
                    // InternalKim.g:4136:4: (lv_docstring_8_0= RULE_STRING )
                    // InternalKim.g:4137:5: lv_docstring_8_0= RULE_STRING
                    {
                    lv_docstring_8_0=(Token)match(input,RULE_STRING,FOLLOW_59); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_docstring_8_0, grammarAccess.getNamespaceAccess().getDocstringSTRINGTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getNamespaceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"docstring",
                      						lv_docstring_8_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:4153:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) ) )
            // InternalKim.g:4154:4: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:4154:4: ( ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* ) )
            // InternalKim.g:4155:5: ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());
            // InternalKim.g:4158:5: ( ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )* )
            // InternalKim.g:4159:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            {
            // InternalKim.g:4159:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*
            loop99:
            do {
                int alt99=8;
                alt99 = dfa99.predict(input);
                switch (alt99) {
            	case 1 :
            	    // InternalKim.g:4160:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4160:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
            	    // InternalKim.g:4161:5: {...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
            	    }
            	    // InternalKim.g:4161:106: ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
            	    // InternalKim.g:4162:6: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
            	    // InternalKim.g:4165:9: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
            	    // InternalKim.g:4165:10: {...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4165:19: (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
            	    // InternalKim.g:4165:20: otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
            	    {
            	    otherlv_10=(Token)match(input,27,FOLLOW_60); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getNamespaceAccess().getUsingKeyword_5_0_0());
            	      								
            	    }
            	    // InternalKim.g:4169:9: ( (lv_imported_11_0= ruleImport ) )
            	    // InternalKim.g:4170:10: (lv_imported_11_0= ruleImport )
            	    {
            	    // InternalKim.g:4170:10: (lv_imported_11_0= ruleImport )
            	    // InternalKim.g:4171:11: lv_imported_11_0= ruleImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_imported_11_0=ruleImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"imported",
            	      												lv_imported_11_0,
            	      												"org.integratedmodelling.kim.Kim.Import");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4188:9: ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
            	    loop90:
            	    do {
            	        int alt90=2;
            	        int LA90_0 = input.LA(1);

            	        if ( (LA90_0==25) ) {
            	            alt90=1;
            	        }


            	        switch (alt90) {
            	    	case 1 :
            	    	    // InternalKim.g:4189:10: ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) )
            	    	    {
            	    	    // InternalKim.g:4189:10: ( ( ',' )=>otherlv_12= ',' )
            	    	    // InternalKim.g:4190:11: ( ',' )=>otherlv_12= ','
            	    	    {
            	    	    otherlv_12=(Token)match(input,25,FOLLOW_60); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_12, grammarAccess.getNamespaceAccess().getCommaKeyword_5_0_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4196:10: ( (lv_imported_13_0= ruleImport ) )
            	    	    // InternalKim.g:4197:11: (lv_imported_13_0= ruleImport )
            	    	    {
            	    	    // InternalKim.g:4197:11: (lv_imported_13_0= ruleImport )
            	    	    // InternalKim.g:4198:12: lv_imported_13_0= ruleImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_61);
            	    	    lv_imported_13_0=ruleImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"imported",
            	    	      													lv_imported_13_0,
            	    	      													"org.integratedmodelling.kim.Kim.Import");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop90;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:4222:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4222:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
            	    // InternalKim.g:4223:5: {...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
            	    }
            	    // InternalKim.g:4223:106: ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
            	    // InternalKim.g:4224:6: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
            	    // InternalKim.g:4227:9: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
            	    // InternalKim.g:4227:10: {...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4227:19: (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
            	    // InternalKim.g:4227:20: otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
            	    {
            	    otherlv_14=(Token)match(input,78,FOLLOW_62); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_14, grammarAccess.getNamespaceAccess().getImportsKeyword_5_1_0());
            	      								
            	    }
            	    // InternalKim.g:4231:9: ( (lv_owlImports_15_0= ruleOwlImport ) )
            	    // InternalKim.g:4232:10: (lv_owlImports_15_0= ruleOwlImport )
            	    {
            	    // InternalKim.g:4232:10: (lv_owlImports_15_0= ruleOwlImport )
            	    // InternalKim.g:4233:11: lv_owlImports_15_0= ruleOwlImport
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_owlImports_15_0=ruleOwlImport();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"owlImports",
            	      												lv_owlImports_15_0,
            	      												"org.integratedmodelling.kim.Kim.OwlImport");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4250:9: (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
            	    loop91:
            	    do {
            	        int alt91=2;
            	        int LA91_0 = input.LA(1);

            	        if ( (LA91_0==25) ) {
            	            alt91=1;
            	        }


            	        switch (alt91) {
            	    	case 1 :
            	    	    // InternalKim.g:4251:10: otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) )
            	    	    {
            	    	    otherlv_16=(Token)match(input,25,FOLLOW_62); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_16, grammarAccess.getNamespaceAccess().getCommaKeyword_5_1_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:4255:10: ( (lv_owlImports_17_0= ruleOwlImport ) )
            	    	    // InternalKim.g:4256:11: (lv_owlImports_17_0= ruleOwlImport )
            	    	    {
            	    	    // InternalKim.g:4256:11: (lv_owlImports_17_0= ruleOwlImport )
            	    	    // InternalKim.g:4257:12: lv_owlImports_17_0= ruleOwlImport
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_61);
            	    	    lv_owlImports_17_0=ruleOwlImport();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"owlImports",
            	    	      													lv_owlImports_17_0,
            	    	      													"org.integratedmodelling.kim.Kim.OwlImport");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop91;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:4281:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:4281:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
            	    // InternalKim.g:4282:5: {...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
            	    }
            	    // InternalKim.g:4282:106: ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
            	    // InternalKim.g:4283:6: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
            	    // InternalKim.g:4286:9: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
            	    // InternalKim.g:4286:10: {...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4286:19: (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
            	    // InternalKim.g:4286:20: otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
            	    {
            	    otherlv_18=(Token)match(input,79,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getNamespaceAccess().getCoveringKeyword_5_2_0());
            	      								
            	    }
            	    // InternalKim.g:4290:9: ( (lv_coverage_19_0= ruleFunction ) )
            	    // InternalKim.g:4291:10: (lv_coverage_19_0= ruleFunction )
            	    {
            	    // InternalKim.g:4291:10: (lv_coverage_19_0= ruleFunction )
            	    // InternalKim.g:4292:11: lv_coverage_19_0= ruleFunction
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_61);
            	    lv_coverage_19_0=ruleFunction();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"coverage",
            	      												lv_coverage_19_0,
            	      												"org.integratedmodelling.kim.Kim.Function");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4309:9: ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
            	    loop92:
            	    do {
            	        int alt92=2;
            	        int LA92_0 = input.LA(1);

            	        if ( (LA92_0==25) ) {
            	            alt92=1;
            	        }


            	        switch (alt92) {
            	    	case 1 :
            	    	    // InternalKim.g:4310:10: ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) )
            	    	    {
            	    	    // InternalKim.g:4310:10: ( ( ',' )=>otherlv_20= ',' )
            	    	    // InternalKim.g:4311:11: ( ',' )=>otherlv_20= ','
            	    	    {
            	    	    otherlv_20=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_20, grammarAccess.getNamespaceAccess().getCommaKeyword_5_2_2_0());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:4317:10: ( (lv_coverage_21_0= ruleFunction ) )
            	    	    // InternalKim.g:4318:11: (lv_coverage_21_0= ruleFunction )
            	    	    {
            	    	    // InternalKim.g:4318:11: (lv_coverage_21_0= ruleFunction )
            	    	    // InternalKim.g:4319:12: lv_coverage_21_0= ruleFunction
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_61);
            	    	    lv_coverage_21_0=ruleFunction();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"coverage",
            	    	      													lv_coverage_21_0,
            	    	      													"org.integratedmodelling.kim.Kim.Function");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop92;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:4343:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4343:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:4344:5: {...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
            	    }
            	    // InternalKim.g:4344:106: ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:4345:6: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
            	    // InternalKim.g:4348:9: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:4348:10: {...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4348:19: (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
            	    // InternalKim.g:4348:20: otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
            	    {
            	    otherlv_22=(Token)match(input,45,FOLLOW_63); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_22, grammarAccess.getNamespaceAccess().getInKeyword_5_3_0());
            	      								
            	    }
            	    otherlv_23=(Token)match(input,80,FOLLOW_64); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getNamespaceAccess().getDomainKeyword_5_3_1());
            	      								
            	    }
            	    // InternalKim.g:4356:9: ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
            	    int alt93=2;
            	    int LA93_0 = input.LA(1);

            	    if ( (LA93_0==81) ) {
            	        alt93=1;
            	    }
            	    else if ( (LA93_0==RULE_LOWERCASE_ID||LA93_0==RULE_CAMELCASE_ID||LA93_0==33||(LA93_0>=107 && LA93_0<=108)||(LA93_0>=115 && LA93_0<=116)||(LA93_0>=118 && LA93_0<=129)) ) {
            	        alt93=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 93, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt93) {
            	        case 1 :
            	            // InternalKim.g:4357:10: ( (lv_rootDomain_24_0= 'root' ) )
            	            {
            	            // InternalKim.g:4357:10: ( (lv_rootDomain_24_0= 'root' ) )
            	            // InternalKim.g:4358:11: (lv_rootDomain_24_0= 'root' )
            	            {
            	            // InternalKim.g:4358:11: (lv_rootDomain_24_0= 'root' )
            	            // InternalKim.g:4359:12: lv_rootDomain_24_0= 'root'
            	            {
            	            lv_rootDomain_24_0=(Token)match(input,81,FOLLOW_59); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_rootDomain_24_0, grammarAccess.getNamespaceAccess().getRootDomainRootKeyword_5_3_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getNamespaceRule());
            	              												}
            	              												setWithLastConsumed(current, "rootDomain", true, "root");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:4372:10: ( (lv_domainConcept_25_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:4372:10: ( (lv_domainConcept_25_0= ruleConcept ) )
            	            // InternalKim.g:4373:11: (lv_domainConcept_25_0= ruleConcept )
            	            {
            	            // InternalKim.g:4373:11: (lv_domainConcept_25_0= ruleConcept )
            	            // InternalKim.g:4374:12: lv_domainConcept_25_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_59);
            	            lv_domainConcept_25_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	              												}
            	              												set(
            	              													current,
            	              													"domainConcept",
            	              													lv_domainConcept_25_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:4398:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:4398:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
            	    // InternalKim.g:4399:5: {...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
            	    }
            	    // InternalKim.g:4399:106: ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
            	    // InternalKim.g:4400:6: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
            	    // InternalKim.g:4403:9: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
            	    // InternalKim.g:4403:10: {...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4403:19: (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
            	    // InternalKim.g:4403:20: otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
            	    {
            	    otherlv_26=(Token)match(input,82,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_26, grammarAccess.getNamespaceAccess().getDisjointKeyword_5_4_0());
            	      								
            	    }
            	    otherlv_27=(Token)match(input,28,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getNamespaceAccess().getWithKeyword_5_4_1());
            	      								
            	    }
            	    // InternalKim.g:4411:9: ( (lv_disjointNamespaces_28_0= rulePathName ) )
            	    // InternalKim.g:4412:10: (lv_disjointNamespaces_28_0= rulePathName )
            	    {
            	    // InternalKim.g:4412:10: (lv_disjointNamespaces_28_0= rulePathName )
            	    // InternalKim.g:4413:11: lv_disjointNamespaces_28_0= rulePathName
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_66);
            	    lv_disjointNamespaces_28_0=rulePathName();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											add(
            	      												current,
            	      												"disjointNamespaces",
            	      												lv_disjointNamespaces_28_0,
            	      												"org.integratedmodelling.kim.Kim.PathName");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:4430:9: (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
            	    // InternalKim.g:4431:10: otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )*
            	    {
            	    otherlv_29=(Token)match(input,25,FOLLOW_67); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_29, grammarAccess.getNamespaceAccess().getCommaKeyword_5_4_3_0());
            	      									
            	    }
            	    // InternalKim.g:4435:10: ( (lv_disjointNamespaces_30_0= rulePathName ) )*
            	    loop94:
            	    do {
            	        int alt94=2;
            	        int LA94_0 = input.LA(1);

            	        if ( (LA94_0==RULE_LOWERCASE_ID) ) {
            	            alt94=1;
            	        }


            	        switch (alt94) {
            	    	case 1 :
            	    	    // InternalKim.g:4436:11: (lv_disjointNamespaces_30_0= rulePathName )
            	    	    {
            	    	    // InternalKim.g:4436:11: (lv_disjointNamespaces_30_0= rulePathName )
            	    	    // InternalKim.g:4437:12: lv_disjointNamespaces_30_0= rulePathName
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_67);
            	    	    lv_disjointNamespaces_30_0=rulePathName();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"disjointNamespaces",
            	    	      													lv_disjointNamespaces_30_0,
            	    	      													"org.integratedmodelling.kim.Kim.PathName");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop94;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:4461:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:4461:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
            	    // InternalKim.g:4462:5: {...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
            	    }
            	    // InternalKim.g:4462:106: ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
            	    // InternalKim.g:4463:6: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
            	    // InternalKim.g:4466:9: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
            	    // InternalKim.g:4466:10: {...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4466:19: (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
            	    // InternalKim.g:4466:20: otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) )
            	    {
            	    otherlv_31=(Token)match(input,83,FOLLOW_68); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getNamespaceAccess().getVersionKeyword_5_5_0());
            	      								
            	    }
            	    // InternalKim.g:4470:9: ( (lv_version_32_0= ruleVersionNumber ) )
            	    // InternalKim.g:4471:10: (lv_version_32_0= ruleVersionNumber )
            	    {
            	    // InternalKim.g:4471:10: (lv_version_32_0= ruleVersionNumber )
            	    // InternalKim.g:4472:11: lv_version_32_0= ruleVersionNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_59);
            	    lv_version_32_0=ruleVersionNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	      											}
            	      											set(
            	      												current,
            	      												"version",
            	      												lv_version_32_0,
            	      												"org.integratedmodelling.kim.Kim.VersionNumber");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:4495:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    {
            	    // InternalKim.g:4495:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
            	    // InternalKim.g:4496:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
            	    }
            	    // InternalKim.g:4496:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
            	    // InternalKim.g:4497:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
            	    // InternalKim.g:4500:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
            	    // InternalKim.g:4500:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    }
            	    // InternalKim.g:4500:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
            	    // InternalKim.g:4500:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    {
            	    // InternalKim.g:4500:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
            	    // InternalKim.g:4501:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    {
            	    getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
            	    // InternalKim.g:4504:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
            	    // InternalKim.g:4505:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
            	    {
            	    // InternalKim.g:4505:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+
            	    int cnt98=0;
            	    loop98:
            	    do {
            	        int alt98=4;
            	        switch ( input.LA(1) ) {
            	        case 27:
            	            {
            	            int LA98_2 = input.LA(2);

            	            if ( synpred186_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	                alt98=3;
            	            }


            	            }
            	            break;
            	        case 84:
            	            {
            	            int LA98_3 = input.LA(2);

            	            if ( synpred183_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	                alt98=1;
            	            }


            	            }
            	            break;
            	        case 86:
            	            {
            	            int LA98_4 = input.LA(2);

            	            if ( synpred185_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	                alt98=2;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt98) {
            	    	case 1 :
            	    	    // InternalKim.g:4506:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4506:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
            	    	    // InternalKim.g:4507:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
            	    	    }
            	    	    // InternalKim.g:4507:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
            	    	    // InternalKim.g:4508:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
            	    	    // InternalKim.g:4511:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
            	    	    // InternalKim.g:4511:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4511:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
            	    	    // InternalKim.g:4511:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
            	    	    {
            	    	    otherlv_34=(Token)match(input,84,FOLLOW_69); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_34, grammarAccess.getNamespaceAccess().getResolveKeyword_5_6_0_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4515:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
            	    	    int alt96=2;
            	    	    int LA96_0 = input.LA(1);

            	    	    if ( (LA96_0==85) ) {
            	    	        alt96=1;
            	    	    }
            	    	    switch (alt96) {
            	    	        case 1 :
            	    	            // InternalKim.g:4516:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
            	    	            {
            	    	            otherlv_35=(Token)match(input,85,FOLLOW_67); if (state.failed) return current;
            	    	            if ( state.backtracking==0 ) {

            	    	              															newLeafNode(otherlv_35, grammarAccess.getNamespaceAccess().getFromKeyword_5_6_0_1_0());
            	    	              														
            	    	            }
            	    	            // InternalKim.g:4520:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
            	    	            loop95:
            	    	            do {
            	    	                int alt95=2;
            	    	                int LA95_0 = input.LA(1);

            	    	                if ( (LA95_0==RULE_LOWERCASE_ID) ) {
            	    	                    alt95=1;
            	    	                }


            	    	                switch (alt95) {
            	    	            	case 1 :
            	    	            	    // InternalKim.g:4521:16: (lv_lookupNamespace_36_0= rulePathName )
            	    	            	    {
            	    	            	    // InternalKim.g:4521:16: (lv_lookupNamespace_36_0= rulePathName )
            	    	            	    // InternalKim.g:4522:17: lv_lookupNamespace_36_0= rulePathName
            	    	            	    {
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
            	    	            	      																
            	    	            	    }
            	    	            	    pushFollow(FOLLOW_67);
            	    	            	    lv_lookupNamespace_36_0=rulePathName();

            	    	            	    state._fsp--;
            	    	            	    if (state.failed) return current;
            	    	            	    if ( state.backtracking==0 ) {

            	    	            	      																	if (current==null) {
            	    	            	      																		current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	            	      																	}
            	    	            	      																	add(
            	    	            	      																		current,
            	    	            	      																		"lookupNamespace",
            	    	            	      																		lv_lookupNamespace_36_0,
            	    	            	      																		"org.integratedmodelling.kim.Kim.PathName");
            	    	            	      																	afterParserOrEnumRuleCall();
            	    	            	      																
            	    	            	    }

            	    	            	    }


            	    	            	    }
            	    	            	    break;

            	    	            	default :
            	    	            	    break loop95;
            	    	                }
            	    	            } while (true);


            	    	            }
            	    	            break;

            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 2 :
            	    	    // InternalKim.g:4546:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4546:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
            	    	    // InternalKim.g:4547:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
            	    	    }
            	    	    // InternalKim.g:4547:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
            	    	    // InternalKim.g:4548:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
            	    	    // InternalKim.g:4551:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
            	    	    // InternalKim.g:4551:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4551:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
            	    	    // InternalKim.g:4551:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
            	    	    {
            	    	    otherlv_37=(Token)match(input,86,FOLLOW_67); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_37, grammarAccess.getNamespaceAccess().getOutsideKeyword_5_6_1_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4555:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
            	    	    loop97:
            	    	    do {
            	    	        int alt97=2;
            	    	        int LA97_0 = input.LA(1);

            	    	        if ( (LA97_0==RULE_LOWERCASE_ID) ) {
            	    	            alt97=1;
            	    	        }


            	    	        switch (alt97) {
            	    	    	case 1 :
            	    	    	    // InternalKim.g:4556:15: (lv_blacklistNamespace_38_0= rulePathName )
            	    	    	    {
            	    	    	    // InternalKim.g:4556:15: (lv_blacklistNamespace_38_0= rulePathName )
            	    	    	    // InternalKim.g:4557:16: lv_blacklistNamespace_38_0= rulePathName
            	    	    	    {
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
            	    	    	      															
            	    	    	    }
            	    	    	    pushFollow(FOLLOW_67);
            	    	    	    lv_blacklistNamespace_38_0=rulePathName();

            	    	    	    state._fsp--;
            	    	    	    if (state.failed) return current;
            	    	    	    if ( state.backtracking==0 ) {

            	    	    	      																if (current==null) {
            	    	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	    	      																}
            	    	    	      																add(
            	    	    	      																	current,
            	    	    	      																	"blacklistNamespace",
            	    	    	      																	lv_blacklistNamespace_38_0,
            	    	    	      																	"org.integratedmodelling.kim.Kim.PathName");
            	    	    	      																afterParserOrEnumRuleCall();
            	    	    	      															
            	    	    	    }

            	    	    	    }


            	    	    	    }
            	    	    	    break;

            	    	    	default :
            	    	    	    break loop97;
            	    	        }
            	    	    } while (true);


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;
            	    	case 3 :
            	    	    // InternalKim.g:4580:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
            	    	    {
            	    	    // InternalKim.g:4580:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
            	    	    // InternalKim.g:4581:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
            	    	    {
            	    	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
            	    	    }
            	    	    // InternalKim.g:4581:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
            	    	    // InternalKim.g:4582:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
            	    	    {
            	    	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
            	    	    // InternalKim.g:4585:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
            	    	    // InternalKim.g:4585:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleNamespace", "true");
            	    	    }
            	    	    // InternalKim.g:4585:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
            	    	    // InternalKim.g:4585:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
            	    	    {
            	    	    otherlv_39=(Token)match(input,27,FOLLOW_15); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      														newLeafNode(otherlv_39, grammarAccess.getNamespaceAccess().getUsingKeyword_5_6_2_0());
            	    	      													
            	    	    }
            	    	    // InternalKim.g:4589:14: ( (lv_weights_40_0= ruleMetadata ) )
            	    	    // InternalKim.g:4590:15: (lv_weights_40_0= ruleMetadata )
            	    	    {
            	    	    // InternalKim.g:4590:15: (lv_weights_40_0= ruleMetadata )
            	    	    // InternalKim.g:4591:16: lv_weights_40_0= ruleMetadata
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
            	    	      															
            	    	    }
            	    	    pushFollow(FOLLOW_59);
            	    	    lv_weights_40_0=ruleMetadata();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      																if (current==null) {
            	    	      																	current = createModelElementForParent(grammarAccess.getNamespaceRule());
            	    	      																}
            	    	      																set(
            	    	      																	current,
            	    	      																	"weights",
            	    	      																	lv_weights_40_0,
            	    	      																	"org.integratedmodelling.kim.Kim.Metadata");
            	    	      																afterParserOrEnumRuleCall();
            	    	      															
            	    	    }

            	    	    }


            	    	    }


            	    	    }


            	    	    }

            	    	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt98 >= 1 ) break loop98;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(98, input);
            	                throw eee;
            	        }
            	        cnt98++;
            	    } while (true);

            	    if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleNamespace", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
            	    }

            	    }


            	    }

            	    getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop99;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5());

            }

            // InternalKim.g:4634:3: (otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) ) )?
            int alt100=2;
            int LA100_0 = input.LA(1);

            if ( (LA100_0==28) ) {
                int LA100_1 = input.LA(2);

                if ( (LA100_1==29) ) {
                    alt100=1;
                }
            }
            switch (alt100) {
                case 1 :
                    // InternalKim.g:4635:4: otherlv_41= 'with' otherlv_42= 'metadata' ( (lv_metadata_43_0= ruleMetadata ) )
                    {
                    otherlv_41=(Token)match(input,28,FOLLOW_14); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_41, grammarAccess.getNamespaceAccess().getWithKeyword_6_0());
                      			
                    }
                    otherlv_42=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_42, grammarAccess.getNamespaceAccess().getMetadataKeyword_6_1());
                      			
                    }
                    // InternalKim.g:4643:4: ( (lv_metadata_43_0= ruleMetadata ) )
                    // InternalKim.g:4644:5: (lv_metadata_43_0= ruleMetadata )
                    {
                    // InternalKim.g:4644:5: (lv_metadata_43_0= ruleMetadata )
                    // InternalKim.g:4645:6: lv_metadata_43_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getMetadataMetadataParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_70);
                    lv_metadata_43_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"metadata",
                      							lv_metadata_43_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:4663:3: (otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) ) )?
            int alt101=2;
            int LA101_0 = input.LA(1);

            if ( (LA101_0==28) ) {
                alt101=1;
            }
            switch (alt101) {
                case 1 :
                    // InternalKim.g:4664:4: otherlv_44= 'with' otherlv_45= 'documentation' ( (lv_documentation_46_0= ruleMetadata ) )
                    {
                    otherlv_44=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getNamespaceAccess().getWithKeyword_7_0());
                      			
                    }
                    otherlv_45=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_45, grammarAccess.getNamespaceAccess().getDocumentationKeyword_7_1());
                      			
                    }
                    // InternalKim.g:4672:4: ( (lv_documentation_46_0= ruleMetadata ) )
                    // InternalKim.g:4673:5: (lv_documentation_46_0= ruleMetadata )
                    {
                    // InternalKim.g:4673:5: (lv_documentation_46_0= ruleMetadata )
                    // InternalKim.g:4674:6: lv_documentation_46_0= ruleMetadata
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getNamespaceAccess().getDocumentationMetadataParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_4);
                    lv_documentation_46_0=ruleMetadata();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getNamespaceRule());
                      						}
                      						set(
                      							current,
                      							"documentation",
                      							lv_documentation_46_0,
                      							"org.integratedmodelling.kim.Kim.Metadata");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            otherlv_47=(Token)match(input,18,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_47, grammarAccess.getNamespaceAccess().getSemicolonKeyword_8());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleNamespace"


    // $ANTLR start "entryRuleOwlImport"
    // InternalKim.g:4703:1: entryRuleOwlImport returns [EObject current=null] : iv_ruleOwlImport= ruleOwlImport EOF ;
    public final EObject entryRuleOwlImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleOwlImport = null;


        try {
            // InternalKim.g:4703:50: (iv_ruleOwlImport= ruleOwlImport EOF )
            // InternalKim.g:4704:2: iv_ruleOwlImport= ruleOwlImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOwlImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOwlImport=ruleOwlImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOwlImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOwlImport"


    // $ANTLR start "ruleOwlImport"
    // InternalKim.g:4710:1: ruleOwlImport returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) ;
    public final EObject ruleOwlImport() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token lv_prefix_2_0=null;


        	enterRule();

        try {
            // InternalKim.g:4716:2: ( ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) ) )
            // InternalKim.g:4717:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            {
            // InternalKim.g:4717:2: ( ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) ) )
            // InternalKim.g:4718:3: ( (lv_name_0_0= RULE_STRING ) ) (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            {
            // InternalKim.g:4718:3: ( (lv_name_0_0= RULE_STRING ) )
            // InternalKim.g:4719:4: (lv_name_0_0= RULE_STRING )
            {
            // InternalKim.g:4719:4: (lv_name_0_0= RULE_STRING )
            // InternalKim.g:4720:5: lv_name_0_0= RULE_STRING
            {
            lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_7); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getOwlImportAccess().getNameSTRINGTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getOwlImportRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.eclipse.xtext.common.Terminals.STRING");
              				
            }

            }


            }

            // InternalKim.g:4736:3: (otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) ) )
            // InternalKim.g:4737:4: otherlv_1= 'as' ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            {
            otherlv_1=(Token)match(input,24,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              				newLeafNode(otherlv_1, grammarAccess.getOwlImportAccess().getAsKeyword_1_0());
              			
            }
            // InternalKim.g:4741:4: ( (lv_prefix_2_0= RULE_LOWERCASE_ID ) )
            // InternalKim.g:4742:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            {
            // InternalKim.g:4742:5: (lv_prefix_2_0= RULE_LOWERCASE_ID )
            // InternalKim.g:4743:6: lv_prefix_2_0= RULE_LOWERCASE_ID
            {
            lv_prefix_2_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              						newLeafNode(lv_prefix_2_0, grammarAccess.getOwlImportAccess().getPrefixLOWERCASE_IDTerminalRuleCall_1_1_0());
              					
            }
            if ( state.backtracking==0 ) {

              						if (current==null) {
              							current = createModelElement(grammarAccess.getOwlImportRule());
              						}
              						setWithLastConsumed(
              							current,
              							"prefix",
              							lv_prefix_2_0,
              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
              					
            }

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOwlImport"


    // $ANTLR start "entryRuleImport"
    // InternalKim.g:4764:1: entryRuleImport returns [EObject current=null] : iv_ruleImport= ruleImport EOF ;
    public final EObject entryRuleImport() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleImport = null;


        try {
            // InternalKim.g:4764:47: (iv_ruleImport= ruleImport EOF )
            // InternalKim.g:4765:2: iv_ruleImport= ruleImport EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getImportRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleImport=ruleImport();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleImport; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleImport"


    // $ANTLR start "ruleImport"
    // InternalKim.g:4771:1: ruleImport returns [EObject current=null] : ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) ;
    public final EObject ruleImport() throws RecognitionException {
        EObject current = null;

        Token lv_star_1_0=null;
        Token otherlv_2=null;
        EObject lv_imports_0_0 = null;

        AntlrDatatypeRuleToken lv_name_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:4777:2: ( ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) ) )
            // InternalKim.g:4778:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            {
            // InternalKim.g:4778:2: ( ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) ) )
            // InternalKim.g:4779:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )? ( (lv_name_3_0= rulePathName ) )
            {
            // InternalKim.g:4779:3: ( ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from' )?
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( (LA103_0==33||LA103_0==47) ) {
                alt103=1;
            }
            switch (alt103) {
                case 1 :
                    // InternalKim.g:4780:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) ) otherlv_2= 'from'
                    {
                    // InternalKim.g:4780:4: ( ( (lv_imports_0_0= ruleList ) ) | ( (lv_star_1_0= '*' ) ) )
                    int alt102=2;
                    int LA102_0 = input.LA(1);

                    if ( (LA102_0==33) ) {
                        alt102=1;
                    }
                    else if ( (LA102_0==47) ) {
                        alt102=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 102, 0, input);

                        throw nvae;
                    }
                    switch (alt102) {
                        case 1 :
                            // InternalKim.g:4781:5: ( (lv_imports_0_0= ruleList ) )
                            {
                            // InternalKim.g:4781:5: ( (lv_imports_0_0= ruleList ) )
                            // InternalKim.g:4782:6: (lv_imports_0_0= ruleList )
                            {
                            // InternalKim.g:4782:6: (lv_imports_0_0= ruleList )
                            // InternalKim.g:4783:7: lv_imports_0_0= ruleList
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getImportAccess().getImportsListParserRuleCall_0_0_0_0());
                              						
                            }
                            pushFollow(FOLLOW_71);
                            lv_imports_0_0=ruleList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getImportRule());
                              							}
                              							set(
                              								current,
                              								"imports",
                              								lv_imports_0_0,
                              								"org.integratedmodelling.kim.Kim.List");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:4801:5: ( (lv_star_1_0= '*' ) )
                            {
                            // InternalKim.g:4801:5: ( (lv_star_1_0= '*' ) )
                            // InternalKim.g:4802:6: (lv_star_1_0= '*' )
                            {
                            // InternalKim.g:4802:6: (lv_star_1_0= '*' )
                            // InternalKim.g:4803:7: lv_star_1_0= '*'
                            {
                            lv_star_1_0=(Token)match(input,47,FOLLOW_71); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_star_1_0, grammarAccess.getImportAccess().getStarAsteriskKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getImportRule());
                              							}
                              							setWithLastConsumed(current, "star", true, "*");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_2=(Token)match(input,85,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getImportAccess().getFromKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4821:3: ( (lv_name_3_0= rulePathName ) )
            // InternalKim.g:4822:4: (lv_name_3_0= rulePathName )
            {
            // InternalKim.g:4822:4: (lv_name_3_0= rulePathName )
            // InternalKim.g:4823:5: lv_name_3_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getImportAccess().getNamePathNameParserRuleCall_1_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_name_3_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getImportRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_3_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleImport"


    // $ANTLR start "entryRuleUrnId"
    // InternalKim.g:4844:1: entryRuleUrnId returns [String current=null] : iv_ruleUrnId= ruleUrnId EOF ;
    public final String entryRuleUrnId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleUrnId = null;


        try {
            // InternalKim.g:4844:45: (iv_ruleUrnId= ruleUrnId EOF )
            // InternalKim.g:4845:2: iv_ruleUrnId= ruleUrnId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUrnIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUrnId=ruleUrnId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUrnId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUrnId"


    // $ANTLR start "ruleUrnId"
    // InternalKim.g:4851:1: ruleUrnId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleUrnId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_LOWERCASE_ID_11=null;
        AntlrDatatypeRuleToken this_PathName_1 = null;

        AntlrDatatypeRuleToken this_PathName_3 = null;

        AntlrDatatypeRuleToken this_PathName_5 = null;

        AntlrDatatypeRuleToken this_Path_7 = null;

        AntlrDatatypeRuleToken this_VersionNumber_9 = null;



        	enterRule();

        try {
            // InternalKim.g:4857:2: ( ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:4858:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:4858:2: ( (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )? )
            // InternalKim.g:4859:3: (kw= 'urn:klab:' )? this_PathName_1= rulePathName kw= ':' this_PathName_3= rulePathName kw= ':' this_PathName_5= rulePathName kw= ':' this_Path_7= rulePath (kw= ':' this_VersionNumber_9= ruleVersionNumber )? (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:4859:3: (kw= 'urn:klab:' )?
            int alt104=2;
            int LA104_0 = input.LA(1);

            if ( (LA104_0==87) ) {
                alt104=1;
            }
            switch (alt104) {
                case 1 :
                    // InternalKim.g:4860:4: kw= 'urn:klab:'
                    {
                    kw=(Token)match(input,87,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getUrnKlabKeyword_0());
                      			
                    }

                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_1());
              		
            }
            pushFollow(FOLLOW_37);
            this_PathName_1=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_1);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,51,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_2());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_3());
              		
            }
            pushFollow(FOLLOW_37);
            this_PathName_3=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_3);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,51,FOLLOW_23); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_4());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathNameParserRuleCall_5());
              		
            }
            pushFollow(FOLLOW_37);
            this_PathName_5=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_5);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,51,FOLLOW_35); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_6());
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getUrnIdAccess().getPathParserRuleCall_7());
              		
            }
            pushFollow(FOLLOW_72);
            this_Path_7=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_Path_7);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:4921:3: (kw= ':' this_VersionNumber_9= ruleVersionNumber )?
            int alt105=2;
            int LA105_0 = input.LA(1);

            if ( (LA105_0==51) ) {
                alt105=1;
            }
            switch (alt105) {
                case 1 :
                    // InternalKim.g:4922:4: kw= ':' this_VersionNumber_9= ruleVersionNumber
                    {
                    kw=(Token)match(input,51,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getColonKeyword_8_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getUrnIdAccess().getVersionNumberParserRuleCall_8_1());
                      			
                    }
                    pushFollow(FOLLOW_73);
                    this_VersionNumber_9=ruleVersionNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_VersionNumber_9);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4938:3: (kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID )?
            int alt106=2;
            int LA106_0 = input.LA(1);

            if ( (LA106_0==52) ) {
                alt106=1;
            }
            switch (alt106) {
                case 1 :
                    // InternalKim.g:4939:4: kw= '#' this_LOWERCASE_ID_11= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,52,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getUrnIdAccess().getNumberSignKeyword_9_0());
                      			
                    }
                    this_LOWERCASE_ID_11=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_11);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_11, grammarAccess.getUrnIdAccess().getLOWERCASE_IDTerminalRuleCall_9_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUrnId"


    // $ANTLR start "entryRuleLocalFilePath"
    // InternalKim.g:4956:1: entryRuleLocalFilePath returns [String current=null] : iv_ruleLocalFilePath= ruleLocalFilePath EOF ;
    public final String entryRuleLocalFilePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleLocalFilePath = null;


        try {
            // InternalKim.g:4956:53: (iv_ruleLocalFilePath= ruleLocalFilePath EOF )
            // InternalKim.g:4957:2: iv_ruleLocalFilePath= ruleLocalFilePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLocalFilePathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLocalFilePath=ruleLocalFilePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLocalFilePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLocalFilePath"


    // $ANTLR start "ruleLocalFilePath"
    // InternalKim.g:4963:1: ruleLocalFilePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleLocalFilePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_CAMELCASE_ID_0=null;
        Token this_LOWERCASE_ID_1=null;
        Token this_LOWERCASE_DASHID_2=null;
        Token kw=null;
        Token this_CAMELCASE_ID_4=null;
        Token this_LOWERCASE_ID_5=null;
        Token this_LOWERCASE_DASHID_6=null;
        Token this_LOWERCASE_ID_8=null;
        Token this_LOWERCASE_ID_10=null;


        	enterRule();

        try {
            // InternalKim.g:4969:2: ( ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? ) )
            // InternalKim.g:4970:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            {
            // InternalKim.g:4970:2: ( (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )? )
            // InternalKim.g:4971:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID ) (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )* (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )? (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            {
            // InternalKim.g:4971:3: (this_CAMELCASE_ID_0= RULE_CAMELCASE_ID | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID )
            int alt107=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt107=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt107=2;
                }
                break;
            case RULE_LOWERCASE_DASHID:
                {
                alt107=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }

            switch (alt107) {
                case 1 :
                    // InternalKim.g:4972:4: this_CAMELCASE_ID_0= RULE_CAMELCASE_ID
                    {
                    this_CAMELCASE_ID_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_CAMELCASE_ID_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_CAMELCASE_ID_0, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:4980:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:4988:4: this_LOWERCASE_DASHID_2= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_74); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_2, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_0_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:4996:3: (kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID ) )*
            loop109:
            do {
                int alt109=2;
                int LA109_0 = input.LA(1);

                if ( (LA109_0==88) ) {
                    alt109=1;
                }


                switch (alt109) {
            	case 1 :
            	    // InternalKim.g:4997:4: kw= '/' (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    {
            	    kw=(Token)match(input,88,FOLLOW_75); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getSolidusKeyword_1_0());
            	      			
            	    }
            	    // InternalKim.g:5002:4: (this_CAMELCASE_ID_4= RULE_CAMELCASE_ID | this_LOWERCASE_ID_5= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID )
            	    int alt108=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_CAMELCASE_ID:
            	        {
            	        alt108=1;
            	        }
            	        break;
            	    case RULE_LOWERCASE_ID:
            	        {
            	        alt108=2;
            	        }
            	        break;
            	    case RULE_LOWERCASE_DASHID:
            	        {
            	        alt108=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 108, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt108) {
            	        case 1 :
            	            // InternalKim.g:5003:5: this_CAMELCASE_ID_4= RULE_CAMELCASE_ID
            	            {
            	            this_CAMELCASE_ID_4=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_74); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_CAMELCASE_ID_4);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_CAMELCASE_ID_4, grammarAccess.getLocalFilePathAccess().getCAMELCASE_IDTerminalRuleCall_1_1_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5011:5: this_LOWERCASE_ID_5= RULE_LOWERCASE_ID
            	            {
            	            this_LOWERCASE_ID_5=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_74); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_ID_5);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_ID_5, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_1_1_1());
            	              				
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:5019:5: this_LOWERCASE_DASHID_6= RULE_LOWERCASE_DASHID
            	            {
            	            this_LOWERCASE_DASHID_6=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_74); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(this_LOWERCASE_DASHID_6);
            	              				
            	            }
            	            if ( state.backtracking==0 ) {

            	              					newLeafNode(this_LOWERCASE_DASHID_6, grammarAccess.getLocalFilePathAccess().getLOWERCASE_DASHIDTerminalRuleCall_1_1_2());
            	              				
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop109;
                }
            } while (true);

            // InternalKim.g:5028:3: (kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID )?
            int alt110=2;
            int LA110_0 = input.LA(1);

            if ( (LA110_0==89) ) {
                alt110=1;
            }
            switch (alt110) {
                case 1 :
                    // InternalKim.g:5029:4: kw= '.' this_LOWERCASE_ID_8= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,89,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getFullStopKeyword_2_0());
                      			
                    }
                    this_LOWERCASE_ID_8=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_73); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_8);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_8, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5042:3: (kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID )?
            int alt111=2;
            int LA111_0 = input.LA(1);

            if ( (LA111_0==52) ) {
                alt111=1;
            }
            switch (alt111) {
                case 1 :
                    // InternalKim.g:5043:4: kw= '#' this_LOWERCASE_ID_10= RULE_LOWERCASE_ID
                    {
                    kw=(Token)match(input,52,FOLLOW_35); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getLocalFilePathAccess().getNumberSignKeyword_3_0());
                      			
                    }
                    this_LOWERCASE_ID_10=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_10);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_10, grammarAccess.getLocalFilePathAccess().getLOWERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLocalFilePath"


    // $ANTLR start "entryRuleObserveStatement"
    // InternalKim.g:5060:1: entryRuleObserveStatement returns [EObject current=null] : iv_ruleObserveStatement= ruleObserveStatement EOF ;
    public final EObject entryRuleObserveStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatement = null;


        try {
            // InternalKim.g:5060:57: (iv_ruleObserveStatement= ruleObserveStatement EOF )
            // InternalKim.g:5061:2: iv_ruleObserveStatement= ruleObserveStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatement=ruleObserveStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatement"


    // $ANTLR start "ruleObserveStatement"
    // InternalKim.g:5067:1: ruleObserveStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) ) ;
    public final EObject ruleObserveStatement() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_body_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5073:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) ) )
            // InternalKim.g:5074:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) )
            {
            // InternalKim.g:5074:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) ) )
            // InternalKim.g:5075:3: ( (lv_annotations_0_0= ruleAnnotation ) )* otherlv_1= 'observe' ( (lv_body_2_0= ruleObserveStatementBody ) )
            {
            // InternalKim.g:5075:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop112:
            do {
                int alt112=2;
                int LA112_0 = input.LA(1);

                if ( (LA112_0==RULE_ANNOTATION_ID) ) {
                    alt112=1;
                }


                switch (alt112) {
            	case 1 :
            	    // InternalKim.g:5076:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:5076:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:5077:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getObserveStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_76);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop112;
                }
            } while (true);

            otherlv_1=(Token)match(input,90,FOLLOW_77); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getObserveStatementAccess().getObserveKeyword_1());
              		
            }
            // InternalKim.g:5098:3: ( (lv_body_2_0= ruleObserveStatementBody ) )
            // InternalKim.g:5099:4: (lv_body_2_0= ruleObserveStatementBody )
            {
            // InternalKim.g:5099:4: (lv_body_2_0= ruleObserveStatementBody )
            // InternalKim.g:5100:5: lv_body_2_0= ruleObserveStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObserveStatementAccess().getBodyObserveStatementBodyParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_body_2_0=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObserveStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_2_0,
              						"org.integratedmodelling.kim.Kim.ObserveStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleObserveStatement"


    // $ANTLR start "entryRuleObserveStatementBody"
    // InternalKim.g:5121:1: entryRuleObserveStatementBody returns [EObject current=null] : iv_ruleObserveStatementBody= ruleObserveStatementBody EOF ;
    public final EObject entryRuleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObserveStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5125:2: (iv_ruleObserveStatementBody= ruleObserveStatementBody EOF )
            // InternalKim.g:5126:2: iv_ruleObserveStatementBody= ruleObserveStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObserveStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObserveStatementBody=ruleObserveStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObserveStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObserveStatementBody"


    // $ANTLR start "ruleObserveStatementBody"
    // InternalKim.g:5135:1: ruleObserveStatementBody returns [EObject current=null] : ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) ;
    public final EObject ruleObserveStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_docstring_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_concept_1_0 = null;

        AntlrDatatypeRuleToken lv_parents_4_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        EObject lv_observations_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_observations_14_0 = null;

        EObject lv_states_16_0 = null;

        EObject lv_accessor_18_0 = null;

        EObject lv_actions_19_0 = null;

        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()
        	);

        try {
            // InternalKim.g:5144:2: ( ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) ) )
            // InternalKim.g:5145:2: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            {
            // InternalKim.g:5145:2: ( ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) ) )
            // InternalKim.g:5146:3: ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            {
            // InternalKim.g:5146:3: ( ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?) )
            // InternalKim.g:5147:4: ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());
            // InternalKim.g:5150:4: ( ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?)
            // InternalKim.g:5151:5: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+ {...}?
            {
            // InternalKim.g:5151:5: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+
            int cnt125=0;
            loop125:
            do {
                int alt125=3;
                alt125 = dfa125.predict(input);
                switch (alt125) {
            	case 1 :
            	    // InternalKim.g:5152:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
            	    {
            	    // InternalKim.g:5152:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
            	    // InternalKim.g:5153:4: {...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
            	    }
            	    // InternalKim.g:5153:114: ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
            	    // InternalKim.g:5154:5: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
            	    // InternalKim.g:5157:8: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
            	    // InternalKim.g:5157:9: {...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5157:18: ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
            	    // InternalKim.g:5157:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
            	    {
            	    // InternalKim.g:5157:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) )
            	    // InternalKim.g:5158:9: (lv_concept_1_0= ruleNamedObservableSemantics )
            	    {
            	    // InternalKim.g:5158:9: (lv_concept_1_0= ruleNamedObservableSemantics )
            	    // InternalKim.g:5159:10: lv_concept_1_0= ruleNamedObservableSemantics
            	    {
            	    if ( state.backtracking==0 ) {

            	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_0_0());
            	      									
            	    }
            	    pushFollow(FOLLOW_78);
            	    lv_concept_1_0=ruleNamedObservableSemantics();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	      										}
            	      										set(
            	      											current,
            	      											"concept",
            	      											lv_concept_1_0,
            	      											"org.integratedmodelling.kim.Kim.NamedObservableSemantics");
            	      										afterParserOrEnumRuleCall();
            	      									
            	    }

            	    }


            	    }

            	    // InternalKim.g:5176:8: ( (lv_docstring_2_0= RULE_STRING ) )?
            	    int alt113=2;
            	    int LA113_0 = input.LA(1);

            	    if ( (LA113_0==RULE_STRING) ) {
            	        int LA113_1 = input.LA(2);

            	        if ( (synpred203_InternalKim()) ) {
            	            alt113=1;
            	        }
            	    }
            	    switch (alt113) {
            	        case 1 :
            	            // InternalKim.g:5177:9: (lv_docstring_2_0= RULE_STRING )
            	            {
            	            // InternalKim.g:5177:9: (lv_docstring_2_0= RULE_STRING )
            	            // InternalKim.g:5178:10: lv_docstring_2_0= RULE_STRING
            	            {
            	            lv_docstring_2_0=(Token)match(input,RULE_STRING,FOLLOW_78); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(lv_docstring_2_0, grammarAccess.getObserveStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_0_1_0());
            	              									
            	            }
            	            if ( state.backtracking==0 ) {

            	              										if (current==null) {
            	              											current = createModelElement(grammarAccess.getObserveStatementBodyRule());
            	              										}
            	              										setWithLastConsumed(
            	              											current,
            	              											"docstring",
            	              											lv_docstring_2_0,
            	              											"org.eclipse.xtext.common.Terminals.STRING");
            	              									
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5194:8: (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )?
            	    int alt115=2;
            	    int LA115_0 = input.LA(1);

            	    if ( (LA115_0==91) ) {
            	        alt115=1;
            	    }
            	    switch (alt115) {
            	        case 1 :
            	            // InternalKim.g:5195:9: otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
            	            {
            	            otherlv_3=(Token)match(input,91,FOLLOW_23); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_3, grammarAccess.getObserveStatementBodyAccess().getExtendsKeyword_0_2_0());
            	              								
            	            }
            	            // InternalKim.g:5199:9: ( (lv_parents_4_0= rulePathName ) )
            	            // InternalKim.g:5200:10: (lv_parents_4_0= rulePathName )
            	            {
            	            // InternalKim.g:5200:10: (lv_parents_4_0= rulePathName )
            	            // InternalKim.g:5201:11: lv_parents_4_0= rulePathName
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_1_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_79);
            	            lv_parents_4_0=rulePathName();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											add(
            	              												current,
            	              												"parents",
            	              												lv_parents_4_0,
            	              												"org.integratedmodelling.kim.Kim.PathName");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }

            	            // InternalKim.g:5218:9: (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
            	            loop114:
            	            do {
            	                int alt114=2;
            	                int LA114_0 = input.LA(1);

            	                if ( (LA114_0==25) ) {
            	                    alt114=1;
            	                }


            	                switch (alt114) {
            	            	case 1 :
            	            	    // InternalKim.g:5219:10: otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) )
            	            	    {
            	            	    otherlv_5=(Token)match(input,25,FOLLOW_23); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_5, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_2_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5223:10: ( (lv_parents_6_0= rulePathName ) )
            	            	    // InternalKim.g:5224:11: (lv_parents_6_0= rulePathName )
            	            	    {
            	            	    // InternalKim.g:5224:11: (lv_parents_6_0= rulePathName )
            	            	    // InternalKim.g:5225:12: lv_parents_6_0= rulePathName
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_2_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_79);
            	            	    lv_parents_6_0=rulePathName();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"parents",
            	            	      													lv_parents_6_0,
            	            	      													"org.integratedmodelling.kim.Kim.PathName");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop114;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5244:8: (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )?
            	    int alt119=2;
            	    int LA119_0 = input.LA(1);

            	    if ( (LA119_0==26) ) {
            	        alt119=1;
            	    }
            	    switch (alt119) {
            	        case 1 :
            	            // InternalKim.g:5245:9: otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
            	            {
            	            otherlv_7=(Token)match(input,26,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_7, grammarAccess.getObserveStatementBodyAccess().getObservingKeyword_0_3_0());
            	              								
            	            }
            	            // InternalKim.g:5249:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )
            	            int alt116=2;
            	            alt116 = dfa116.predict(input);
            	            switch (alt116) {
            	                case 1 :
            	                    // InternalKim.g:5250:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
            	                    {
            	                    // InternalKim.g:5250:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
            	                    // InternalKim.g:5251:11: otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')'
            	                    {
            	                    otherlv_8=(Token)match(input,33,FOLLOW_80); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											newLeafNode(otherlv_8, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_3_1_0_0());
            	                      										
            	                    }
            	                    // InternalKim.g:5255:11: ( (lv_observations_9_0= ruleObserveStatementBody ) )
            	                    // InternalKim.g:5256:12: (lv_observations_9_0= ruleObserveStatementBody )
            	                    {
            	                    // InternalKim.g:5256:12: (lv_observations_9_0= ruleObserveStatementBody )
            	                    // InternalKim.g:5257:13: lv_observations_9_0= ruleObserveStatementBody
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_1_0_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_20);
            	                    lv_observations_9_0=ruleObserveStatementBody();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      													}
            	                      													add(
            	                      														current,
            	                      														"observations",
            	                      														lv_observations_9_0,
            	                      														"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }

            	                    otherlv_10=(Token)match(input,34,FOLLOW_81); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											newLeafNode(otherlv_10, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_3_1_0_2());
            	                      										
            	                    }

            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:5280:10: ( (lv_states_11_0= ruleObservableSemantics ) )
            	                    {
            	                    // InternalKim.g:5280:10: ( (lv_states_11_0= ruleObservableSemantics ) )
            	                    // InternalKim.g:5281:11: (lv_states_11_0= ruleObservableSemantics )
            	                    {
            	                    // InternalKim.g:5281:11: (lv_states_11_0= ruleObservableSemantics )
            	                    // InternalKim.g:5282:12: lv_states_11_0= ruleObservableSemantics
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_1_1_0());
            	                      											
            	                    }
            	                    pushFollow(FOLLOW_81);
            	                    lv_states_11_0=ruleObservableSemantics();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      												}
            	                      												add(
            	                      													current,
            	                      													"states",
            	                      													lv_states_11_0,
            	                      													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	                      												afterParserOrEnumRuleCall();
            	                      											
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }

            	            // InternalKim.g:5300:9: (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
            	            loop118:
            	            do {
            	                int alt118=2;
            	                int LA118_0 = input.LA(1);

            	                if ( (LA118_0==25) ) {
            	                    alt118=1;
            	                }


            	                switch (alt118) {
            	            	case 1 :
            	            	    // InternalKim.g:5301:10: otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
            	            	    {
            	            	    otherlv_12=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      										newLeafNode(otherlv_12, grammarAccess.getObserveStatementBodyAccess().getCommaKeyword_0_3_2_0());
            	            	      									
            	            	    }
            	            	    // InternalKim.g:5305:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
            	            	    int alt117=2;
            	            	    alt117 = dfa117.predict(input);
            	            	    switch (alt117) {
            	            	        case 1 :
            	            	            // InternalKim.g:5306:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
            	            	            {
            	            	            // InternalKim.g:5306:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
            	            	            // InternalKim.g:5307:12: otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')'
            	            	            {
            	            	            otherlv_13=(Token)match(input,33,FOLLOW_80); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              												newLeafNode(otherlv_13, grammarAccess.getObserveStatementBodyAccess().getLeftParenthesisKeyword_0_3_2_1_0_0());
            	            	              											
            	            	            }
            	            	            // InternalKim.g:5311:12: ( (lv_observations_14_0= ruleObserveStatementBody ) )
            	            	            // InternalKim.g:5312:13: (lv_observations_14_0= ruleObserveStatementBody )
            	            	            {
            	            	            // InternalKim.g:5312:13: (lv_observations_14_0= ruleObserveStatementBody )
            	            	            // InternalKim.g:5313:14: lv_observations_14_0= ruleObserveStatementBody
            	            	            {
            	            	            if ( state.backtracking==0 ) {

            	            	              														newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_2_1_0_1_0());
            	            	              													
            	            	            }
            	            	            pushFollow(FOLLOW_20);
            	            	            lv_observations_14_0=ruleObserveStatementBody();

            	            	            state._fsp--;
            	            	            if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              														if (current==null) {
            	            	              															current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	              														}
            	            	              														add(
            	            	              															current,
            	            	              															"observations",
            	            	              															lv_observations_14_0,
            	            	              															"org.integratedmodelling.kim.Kim.ObserveStatementBody");
            	            	              														afterParserOrEnumRuleCall();
            	            	              													
            	            	            }

            	            	            }


            	            	            }

            	            	            otherlv_15=(Token)match(input,34,FOLLOW_81); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              												newLeafNode(otherlv_15, grammarAccess.getObserveStatementBodyAccess().getRightParenthesisKeyword_0_3_2_1_0_2());
            	            	              											
            	            	            }

            	            	            }


            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:5336:11: ( (lv_states_16_0= ruleObservableSemantics ) )
            	            	            {
            	            	            // InternalKim.g:5336:11: ( (lv_states_16_0= ruleObservableSemantics ) )
            	            	            // InternalKim.g:5337:12: (lv_states_16_0= ruleObservableSemantics )
            	            	            {
            	            	            // InternalKim.g:5337:12: (lv_states_16_0= ruleObservableSemantics )
            	            	            // InternalKim.g:5338:13: lv_states_16_0= ruleObservableSemantics
            	            	            {
            	            	            if ( state.backtracking==0 ) {

            	            	              													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_2_1_1_0());
            	            	              												
            	            	            }
            	            	            pushFollow(FOLLOW_81);
            	            	            lv_states_16_0=ruleObservableSemantics();

            	            	            state._fsp--;
            	            	            if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              													if (current==null) {
            	            	              														current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	            	              													}
            	            	              													add(
            	            	              														current,
            	            	              														"states",
            	            	              														lv_states_16_0,
            	            	              														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	              													afterParserOrEnumRuleCall();
            	            	              												
            	            	            }

            	            	            }


            	            	            }


            	            	            }
            	            	            break;

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop118;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5358:8: (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
            	    int alt121=2;
            	    int LA121_0 = input.LA(1);

            	    if ( (LA121_0==27) ) {
            	        alt121=1;
            	    }
            	    switch (alt121) {
            	        case 1 :
            	            // InternalKim.g:5359:9: otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )?
            	            {
            	            otherlv_17=(Token)match(input,27,FOLLOW_82); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_17, grammarAccess.getObserveStatementBodyAccess().getUsingKeyword_0_4_0());
            	              								
            	            }
            	            // InternalKim.g:5363:9: ( (lv_accessor_18_0= ruleFunction ) )?
            	            int alt120=2;
            	            alt120 = dfa120.predict(input);
            	            switch (alt120) {
            	                case 1 :
            	                    // InternalKim.g:5364:10: (lv_accessor_18_0= ruleFunction )
            	                    {
            	                    // InternalKim.g:5364:10: (lv_accessor_18_0= ruleFunction )
            	                    // InternalKim.g:5365:11: lv_accessor_18_0= ruleFunction
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_4_1_0());
            	                      										
            	                    }
            	                    pushFollow(FOLLOW_82);
            	                    lv_accessor_18_0=ruleFunction();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      											if (current==null) {
            	                      												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	                      											}
            	                      											set(
            	                      												current,
            	                      												"accessor",
            	                      												lv_accessor_18_0,
            	                      												"org.integratedmodelling.kim.Kim.Function");
            	                      											afterParserOrEnumRuleCall();
            	                      										
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5389:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
            	    {
            	    // InternalKim.g:5389:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
            	    // InternalKim.g:5390:4: {...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
            	    }
            	    // InternalKim.g:5390:114: ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
            	    // InternalKim.g:5391:5: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
            	    // InternalKim.g:5394:8: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
            	    // InternalKim.g:5394:9: {...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObserveStatementBody", "true");
            	    }
            	    // InternalKim.g:5394:18: ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
            	    // InternalKim.g:5394:19: ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
            	    {
            	    // InternalKim.g:5394:19: ( (lv_actions_19_0= ruleActionSpecification ) )*
            	    loop122:
            	    do {
            	        int alt122=2;
            	        switch ( input.LA(1) ) {
            	        case 53:
            	            {
            	            int LA122_2 = input.LA(2);

            	            if ( (synpred213_InternalKim()) ) {
            	                alt122=1;
            	            }


            	            }
            	            break;
            	        case 54:
            	            {
            	            int LA122_3 = input.LA(2);

            	            if ( (synpred213_InternalKim()) ) {
            	                alt122=1;
            	            }


            	            }
            	            break;
            	        case 55:
            	            {
            	            int LA122_4 = input.LA(2);

            	            if ( (synpred213_InternalKim()) ) {
            	                alt122=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt122) {
            	    	case 1 :
            	    	    // InternalKim.g:5395:9: (lv_actions_19_0= ruleActionSpecification )
            	    	    {
            	    	    // InternalKim.g:5395:9: (lv_actions_19_0= ruleActionSpecification )
            	    	    // InternalKim.g:5396:10: lv_actions_19_0= ruleActionSpecification
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_1_0_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_82);
            	    	    lv_actions_19_0=ruleActionSpecification();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"actions",
            	    	      											lv_actions_19_0,
            	    	      											"org.integratedmodelling.kim.Kim.ActionSpecification");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop122;
            	        }
            	    } while (true);

            	    // InternalKim.g:5413:8: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
            	    int alt123=2;
            	    int LA123_0 = input.LA(1);

            	    if ( (LA123_0==28) ) {
            	        int LA123_1 = input.LA(2);

            	        if ( (synpred214_InternalKim()) ) {
            	            alt123=1;
            	        }
            	    }
            	    switch (alt123) {
            	        case 1 :
            	            // InternalKim.g:5414:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
            	            {
            	            otherlv_20=(Token)match(input,28,FOLLOW_14); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_20, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_1_0());
            	              								
            	            }
            	            otherlv_21=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObserveStatementBodyAccess().getMetadataKeyword_1_1_1());
            	              								
            	            }
            	            // InternalKim.g:5422:9: ( (lv_metadata_22_0= ruleMetadata ) )
            	            // InternalKim.g:5423:10: (lv_metadata_22_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5423:10: (lv_metadata_22_0= ruleMetadata )
            	            // InternalKim.g:5424:11: lv_metadata_22_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_1_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_82);
            	            lv_metadata_22_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"metadata",
            	              												lv_metadata_22_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:5442:8: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
            	    int alt124=2;
            	    int LA124_0 = input.LA(1);

            	    if ( (LA124_0==28) ) {
            	        int LA124_1 = input.LA(2);

            	        if ( (synpred215_InternalKim()) ) {
            	            alt124=1;
            	        }
            	    }
            	    switch (alt124) {
            	        case 1 :
            	            // InternalKim.g:5443:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
            	            {
            	            otherlv_23=(Token)match(input,28,FOLLOW_17); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_23, grammarAccess.getObserveStatementBodyAccess().getWithKeyword_1_2_0());
            	              								
            	            }
            	            otherlv_24=(Token)match(input,30,FOLLOW_15); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_24, grammarAccess.getObserveStatementBodyAccess().getDocumentationKeyword_1_2_1());
            	              								
            	            }
            	            // InternalKim.g:5451:9: ( (lv_documentation_25_0= ruleMetadata ) )
            	            // InternalKim.g:5452:10: (lv_documentation_25_0= ruleMetadata )
            	            {
            	            // InternalKim.g:5452:10: (lv_documentation_25_0= ruleMetadata )
            	            // InternalKim.g:5453:11: lv_documentation_25_0= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_2_2_0());
            	              										
            	            }
            	            pushFollow(FOLLOW_82);
            	            lv_documentation_25_0=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElementForParent(grammarAccess.getObserveStatementBodyRule());
            	              											}
            	              											set(
            	              												current,
            	              												"documentation",
            	              												lv_documentation_25_0,
            	              												"org.integratedmodelling.kim.Kim.Metadata");
            	              											afterParserOrEnumRuleCall();
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt125 >= 1 ) break loop125;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(125, input);
                        throw eee;
                }
                cnt125++;
            } while (true);

            if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {
                if (state.backtracking>0) {state.failed=true; return current;}
                throw new FailedPredicateException(input, "ruleObserveStatementBody", "getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup())");
            }

            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup());

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObserveStatementBody"


    // $ANTLR start "entryRuleObservableSemantics"
    // InternalKim.g:5491:1: entryRuleObservableSemantics returns [EObject current=null] : iv_ruleObservableSemantics= ruleObservableSemantics EOF ;
    public final EObject entryRuleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:5495:2: (iv_ruleObservableSemantics= ruleObservableSemantics EOF )
            // InternalKim.g:5496:2: iv_ruleObservableSemantics= ruleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleObservableSemantics=ruleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleObservableSemantics"


    // $ANTLR start "ruleObservableSemantics"
    // InternalKim.g:5505:1: ruleObservableSemantics returns [EObject current=null] : ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_generic_2_0=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_downTo_9_1=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_18=null;
        Token lv_optional_20_0=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_25=null;
        Token lv_name_26_0=null;
        EObject lv_value_0_0 = null;

        EObject lv_declaration_3_0 = null;

        EObject lv_by_6_0 = null;

        AntlrDatatypeRuleToken lv_downTo_9_2 = null;

        EObject lv_role_11_0 = null;

        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;

        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;

        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:5514:2: ( ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:5515:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:5515:2: ( ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:5516:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )? ( (lv_generic_2_0= 'any' ) )? ( (lv_declaration_3_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:5516:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?
            int alt126=2;
            alt126 = dfa126.predict(input);
            switch (alt126) {
                case 1 :
                    // InternalKim.g:5517:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
                    {
                    // InternalKim.g:5517:4: ( (lv_value_0_0= ruleValue ) )
                    // InternalKim.g:5518:5: (lv_value_0_0= ruleValue )
                    {
                    // InternalKim.g:5518:5: (lv_value_0_0= ruleValue )
                    // InternalKim.g:5519:6: lv_value_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_7);
                    lv_value_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_0_0,
                      							"org.integratedmodelling.kim.Kim.Value");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_1=(Token)match(input,24,FOLLOW_83); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getObservableSemanticsAccess().getAsKeyword_0_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:5541:3: ( (lv_generic_2_0= 'any' ) )?
            int alt127=2;
            int LA127_0 = input.LA(1);

            if ( (LA127_0==92) ) {
                alt127=1;
            }
            switch (alt127) {
                case 1 :
                    // InternalKim.g:5542:4: (lv_generic_2_0= 'any' )
                    {
                    // InternalKim.g:5542:4: (lv_generic_2_0= 'any' )
                    // InternalKim.g:5543:5: lv_generic_2_0= 'any'
                    {
                    lv_generic_2_0=(Token)match(input,92,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_generic_2_0, grammarAccess.getObservableSemanticsAccess().getGenericAnyKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getObservableSemanticsRule());
                      					}
                      					setWithLastConsumed(current, "generic", true, "any");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:5555:3: ( (lv_declaration_3_0= ruleConceptDeclaration ) )
            // InternalKim.g:5556:4: (lv_declaration_3_0= ruleConceptDeclaration )
            {
            // InternalKim.g:5556:4: (lv_declaration_3_0= ruleConceptDeclaration )
            // InternalKim.g:5557:5: lv_declaration_3_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_84);
            lv_declaration_3_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_3_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:5574:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:5575:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:5575:4: ( ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:5576:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());
            // InternalKim.g:5579:5: ( ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:5580:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:5580:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop132:
            do {
                int alt132=9;
                alt132 = dfa132.predict(input);
                switch (alt132) {
            	case 1 :
            	    // InternalKim.g:5581:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5581:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5582:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:5582:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5583:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:5586:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5586:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5586:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
            	    // InternalKim.g:5586:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
            	    {
            	    otherlv_5=(Token)match(input,93,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getObservableSemanticsAccess().getByKeyword_3_0_0());
            	      								
            	    }
            	    // InternalKim.g:5590:9: ( (lv_by_6_0= ruleConcept ) )
            	    // InternalKim.g:5591:10: (lv_by_6_0= ruleConcept )
            	    {
            	    // InternalKim.g:5591:10: (lv_by_6_0= ruleConcept )
            	    // InternalKim.g:5592:11: lv_by_6_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_by_6_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_6_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:5615:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5615:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) )
            	    // InternalKim.g:5616:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:5616:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) )
            	    // InternalKim.g:5617:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:5620:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) )
            	    // InternalKim.g:5620:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5620:19: (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) )
            	    // InternalKim.g:5620:20: otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) )
            	    {
            	    otherlv_7=(Token)match(input,94,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getObservableSemanticsAccess().getDownKeyword_3_1_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,39,FOLLOW_85); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_1_1());
            	      								
            	    }
            	    // InternalKim.g:5628:9: ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) )
            	    // InternalKim.g:5629:10: ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) )
            	    {
            	    // InternalKim.g:5629:10: ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) )
            	    // InternalKim.g:5630:11: (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId )
            	    {
            	    // InternalKim.g:5630:11: (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId )
            	    int alt128=2;
            	    int LA128_0 = input.LA(1);

            	    if ( (LA128_0==RULE_CAMELCASE_ID) ) {
            	        alt128=1;
            	    }
            	    else if ( (LA128_0==RULE_LOWERCASE_ID) ) {
            	        alt128=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 128, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt128) {
            	        case 1 :
            	            // InternalKim.g:5631:12: lv_downTo_9_1= RULE_CAMELCASE_ID
            	            {
            	            lv_downTo_9_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_84); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_downTo_9_1, grammarAccess.getObservableSemanticsAccess().getDownToCAMELCASE_IDTerminalRuleCall_3_1_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"downTo",
            	              													lv_downTo_9_1,
            	              													"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5646:12: lv_downTo_9_2= ruleNamespaceId
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToNamespaceIdParserRuleCall_3_1_2_0_1());
            	              											
            	            }
            	            pushFollow(FOLLOW_84);
            	            lv_downTo_9_2=ruleNamespaceId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"downTo",
            	              													lv_downTo_9_2,
            	              													"org.integratedmodelling.kim.Kim.NamespaceId");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:5670:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5670:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:5671:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:5671:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:5672:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:5675:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
            	    // InternalKim.g:5675:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5675:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
            	    // InternalKim.g:5675:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
            	    {
            	    otherlv_10=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getObservableSemanticsAccess().getAsKeyword_3_2_0());
            	      								
            	    }
            	    // InternalKim.g:5679:9: ( (lv_role_11_0= ruleConcept ) )
            	    // InternalKim.g:5680:10: (lv_role_11_0= ruleConcept )
            	    {
            	    // InternalKim.g:5680:10: (lv_role_11_0= ruleConcept )
            	    // InternalKim.g:5681:11: lv_role_11_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_role_11_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"role",
            	      												lv_role_11_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:5704:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5704:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:5705:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:5705:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:5706:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:5709:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:5709:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5709:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
            	    // InternalKim.g:5709:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    {
            	    otherlv_12=(Token)match(input,38,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getObservableSemanticsAccess().getAccordingKeyword_3_3_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_3_1());
            	      								
            	    }
            	    // InternalKim.g:5717:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
            	    // InternalKim.g:5718:10: (lv_accordingTo_14_0= rulePropertyId )
            	    {
            	    // InternalKim.g:5718:10: (lv_accordingTo_14_0= rulePropertyId )
            	    // InternalKim.g:5719:11: lv_accordingTo_14_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_accordingTo_14_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_14_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:5742:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5742:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:5743:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:5743:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:5744:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:5747:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:5747:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5747:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
            	    int alt130=2;
            	    int LA130_0 = input.LA(1);

            	    if ( (LA130_0==45) ) {
            	        alt130=1;
            	    }
            	    else if ( (LA130_0==95) ) {
            	        alt130=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 130, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt130) {
            	        case 1 :
            	            // InternalKim.g:5747:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:5747:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:5748:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            {
            	            otherlv_15=(Token)match(input,45,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_15, grammarAccess.getObservableSemanticsAccess().getInKeyword_3_4_0_0());
            	              									
            	            }
            	            // InternalKim.g:5752:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
            	            int alt129=2;
            	            alt129 = dfa129.predict(input);
            	            switch (alt129) {
            	                case 1 :
            	                    // InternalKim.g:5753:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:5753:11: ( (lv_unit_16_0= ruleUnit ) )
            	                    // InternalKim.g:5754:12: (lv_unit_16_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:5754:12: (lv_unit_16_0= ruleUnit )
            	                    // InternalKim.g:5755:13: lv_unit_16_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_84);
            	                    lv_unit_16_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_16_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:5773:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:5773:11: ( (lv_currency_17_0= ruleCurrency ) )
            	                    // InternalKim.g:5774:12: (lv_currency_17_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:5774:12: (lv_currency_17_0= ruleCurrency )
            	                    // InternalKim.g:5775:13: lv_currency_17_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_84);
            	                    lv_currency_17_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_17_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5795:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:5795:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
            	            // InternalKim.g:5796:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
            	            {
            	            otherlv_18=(Token)match(input,95,FOLLOW_87); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_18, grammarAccess.getObservableSemanticsAccess().getPerKeyword_3_4_1_0());
            	              									
            	            }
            	            // InternalKim.g:5800:10: ( (lv_unit_19_0= ruleUnit ) )
            	            // InternalKim.g:5801:11: (lv_unit_19_0= ruleUnit )
            	            {
            	            // InternalKim.g:5801:11: (lv_unit_19_0= ruleUnit )
            	            // InternalKim.g:5802:12: lv_unit_19_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_84);
            	            lv_unit_19_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_19_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:5826:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    {
            	    // InternalKim.g:5826:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
            	    // InternalKim.g:5827:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:5827:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
            	    // InternalKim.g:5828:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:5831:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
            	    // InternalKim.g:5831:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5831:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
            	    int alt131=2;
            	    int LA131_0 = input.LA(1);

            	    if ( (LA131_0==96) ) {
            	        alt131=1;
            	    }
            	    else if ( (LA131_0==97) ) {
            	        alt131=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 131, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt131) {
            	        case 1 :
            	            // InternalKim.g:5831:20: ( (lv_optional_20_0= 'optional' ) )
            	            {
            	            // InternalKim.g:5831:20: ( (lv_optional_20_0= 'optional' ) )
            	            // InternalKim.g:5832:10: (lv_optional_20_0= 'optional' )
            	            {
            	            // InternalKim.g:5832:10: (lv_optional_20_0= 'optional' )
            	            // InternalKim.g:5833:11: lv_optional_20_0= 'optional'
            	            {
            	            lv_optional_20_0=(Token)match(input,96,FOLLOW_84); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_optional_20_0, grammarAccess.getObservableSemanticsAccess().getOptionalOptionalKeyword_3_5_0_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	              											}
            	              											setWithLastConsumed(current, "optional", true, "optional");
            	              										
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:5846:9: otherlv_21= 'required'
            	            {
            	            otherlv_21=(Token)match(input,97,FOLLOW_84); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              									newLeafNode(otherlv_21, grammarAccess.getObservableSemanticsAccess().getRequiredKeyword_3_5_1());
            	              								
            	            }

            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:5856:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5856:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:5857:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:5857:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:5858:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:5861:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
            	    // InternalKim.g:5861:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5861:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
            	    // InternalKim.g:5861:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:5861:20: ( (lv_from_22_0= ruleNumber ) )
            	    // InternalKim.g:5862:10: (lv_from_22_0= ruleNumber )
            	    {
            	    // InternalKim.g:5862:10: (lv_from_22_0= ruleNumber )
            	    // InternalKim.g:5863:11: lv_from_22_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_from_22_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_22_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_23=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_23, grammarAccess.getObservableSemanticsAccess().getToKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:5884:9: ( (lv_to_24_0= ruleNumber ) )
            	    // InternalKim.g:5885:10: (lv_to_24_0= ruleNumber )
            	    {
            	    // InternalKim.g:5885:10: (lv_to_24_0= ruleNumber )
            	    // InternalKim.g:5886:11: lv_to_24_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_84);
            	    lv_to_24_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_24_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:5909:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:5909:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:5910:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:5910:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:5911:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:5914:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:5914:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:5914:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:5914:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_25=(Token)match(input,98,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_25, grammarAccess.getObservableSemanticsAccess().getNamedKeyword_3_7_0());
            	      								
            	    }
            	    // InternalKim.g:5918:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:5919:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:5919:10: (lv_name_26_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:5920:11: lv_name_26_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_84); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_26_0, grammarAccess.getObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_3_7_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_26_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop132;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleObservableSemantics"


    // $ANTLR start "entryRuleDependency"
    // InternalKim.g:5956:1: entryRuleDependency returns [EObject current=null] : iv_ruleDependency= ruleDependency EOF ;
    public final EObject entryRuleDependency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDependency = null;


        try {
            // InternalKim.g:5956:51: (iv_ruleDependency= ruleDependency EOF )
            // InternalKim.g:5957:2: iv_ruleDependency= ruleDependency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDependencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDependency=ruleDependency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDependency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDependency"


    // $ANTLR start "ruleDependency"
    // InternalKim.g:5963:1: ruleDependency returns [EObject current=null] : ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) ;
    public final EObject ruleDependency() throws RecognitionException {
        EObject current = null;

        Token lv_modelReference_0_1=null;
        AntlrDatatypeRuleToken lv_modelReference_0_2 = null;

        EObject lv_observable_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:5969:2: ( ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) ) )
            // InternalKim.g:5970:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            {
            // InternalKim.g:5970:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )
            int alt134=2;
            alt134 = dfa134.predict(input);
            switch (alt134) {
                case 1 :
                    // InternalKim.g:5971:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    {
                    // InternalKim.g:5971:3: ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) )
                    // InternalKim.g:5972:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    {
                    // InternalKim.g:5972:4: ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) )
                    // InternalKim.g:5973:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    {
                    // InternalKim.g:5973:5: (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName )
                    int alt133=2;
                    int LA133_0 = input.LA(1);

                    if ( (LA133_0==RULE_LOWERCASE_ID) ) {
                        int LA133_1 = input.LA(2);

                        if ( (synpred231_InternalKim()) ) {
                            alt133=1;
                        }
                        else if ( (true) ) {
                            alt133=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return current;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 133, 1, input);

                            throw nvae;
                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 133, 0, input);

                        throw nvae;
                    }
                    switch (alt133) {
                        case 1 :
                            // InternalKim.g:5974:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
                            {
                            lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_modelReference_0_1, grammarAccess.getDependencyAccess().getModelReferenceLOWERCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getDependencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:5989:6: lv_modelReference_0_2= rulePathName
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getDependencyAccess().getModelReferencePathNameParserRuleCall_0_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_modelReference_0_2=rulePathName();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getDependencyRule());
                              						}
                              						set(
                              							current,
                              							"modelReference",
                              							lv_modelReference_0_2,
                              							"org.integratedmodelling.kim.Kim.PathName");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6008:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    {
                    // InternalKim.g:6008:3: ( (lv_observable_1_0= ruleObservableSemantics ) )
                    // InternalKim.g:6009:4: (lv_observable_1_0= ruleObservableSemantics )
                    {
                    // InternalKim.g:6009:4: (lv_observable_1_0= ruleObservableSemantics )
                    // InternalKim.g:6010:5: lv_observable_1_0= ruleObservableSemantics
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDependencyAccess().getObservableObservableSemanticsParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_observable_1_0=ruleObservableSemantics();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDependencyRule());
                      					}
                      					set(
                      						current,
                      						"observable",
                      						lv_observable_1_0,
                      						"org.integratedmodelling.kim.Kim.ObservableSemantics");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDependency"


    // $ANTLR start "entryRuleConceptDeclaration"
    // InternalKim.g:6031:1: entryRuleConceptDeclaration returns [EObject current=null] : iv_ruleConceptDeclaration= ruleConceptDeclaration EOF ;
    public final EObject entryRuleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptDeclaration = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6035:2: (iv_ruleConceptDeclaration= ruleConceptDeclaration EOF )
            // InternalKim.g:6036:2: iv_ruleConceptDeclaration= ruleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptDeclaration=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptDeclaration"


    // $ANTLR start "ruleConceptDeclaration"
    // InternalKim.g:6045:1: ruleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? ) ;
    public final EObject ruleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_9=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token otherlv_20=null;
        Token otherlv_22=null;
        EObject lv_main_1_0 = null;

        EObject lv_inherency_4_0 = null;

        EObject lv_motivation_6_0 = null;

        EObject lv_compresent_8_0 = null;

        EObject lv_causant_11_0 = null;

        EObject lv_adjacent_14_0 = null;

        EObject lv_container_17_0 = null;

        EObject lv_contained_19_0 = null;

        EObject lv_caused_21_0 = null;

        EObject lv_context_23_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2()
        	);

        try {
            // InternalKim.g:6054:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? ) )
            // InternalKim.g:6055:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:6055:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )? )
            // InternalKim.g:6056:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) ) (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )?
            {
            // InternalKim.g:6056:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt135=2;
            int LA135_0 = input.LA(1);

            if ( (LA135_0==RULE_STRING) ) {
                alt135=1;
            }
            switch (alt135) {
                case 1 :
                    // InternalKim.g:6057:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:6057:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:6058:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:6074:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt136=0;
            loop136:
            do {
                int alt136=2;
                alt136 = dfa136.predict(input);
                switch (alt136) {
            	case 1 :
            	    // InternalKim.g:6075:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:6075:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:6076:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_88);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt136 >= 1 ) break loop136;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(136, input);
                        throw eee;
                }
                cnt136++;
            } while (true);

            // InternalKim.g:6093:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:6094:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:6094:4: ( ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* ) )
            // InternalKim.g:6095:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());
            // InternalKim.g:6098:5: ( ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )* )
            // InternalKim.g:6099:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
            {
            // InternalKim.g:6099:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*
            loop137:
            do {
                int alt137=9;
                alt137 = dfa137.predict(input);
                switch (alt137) {
            	case 1 :
            	    // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6101:5: {...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0)");
            	    }
            	    // InternalKim.g:6101:115: ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6102:6: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0);
            	    // InternalKim.g:6105:9: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6105:10: {...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6105:19: (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6105:20: otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_3=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_3, grammarAccess.getConceptDeclarationAccess().getOfKeyword_2_0_0());
            	      								
            	    }
            	    // InternalKim.g:6109:9: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6110:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6110:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6111:11: lv_inherency_4_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_inherency_4_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inherency",
            	      												lv_inherency_4_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6135:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1)");
            	    }
            	    // InternalKim.g:6135:115: ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6136:6: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1);
            	    // InternalKim.g:6139:9: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6139:10: {...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6139:19: (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6139:20: otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_5=(Token)match(input,100,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getConceptDeclarationAccess().getForKeyword_2_1_0());
            	      								
            	    }
            	    // InternalKim.g:6143:9: ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6144:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6144:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6145:11: lv_motivation_6_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_2_1_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_motivation_6_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"motivation",
            	      												lv_motivation_6_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:6168:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6168:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6169:5: {...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2)");
            	    }
            	    // InternalKim.g:6169:115: ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6170:6: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2);
            	    // InternalKim.g:6173:9: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6173:10: {...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6173:19: (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6173:20: otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_7=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getConceptDeclarationAccess().getWithKeyword_2_2_0());
            	      								
            	    }
            	    // InternalKim.g:6177:9: ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6178:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6178:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6179:11: lv_compresent_8_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_2_2_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_compresent_8_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"compresent",
            	      												lv_compresent_8_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:6202:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6202:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6203:5: {...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3)");
            	    }
            	    // InternalKim.g:6203:115: ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6204:6: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3);
            	    // InternalKim.g:6207:9: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6207:10: {...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6207:19: (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6207:20: otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_9=(Token)match(input,101,FOLLOW_90); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_9, grammarAccess.getConceptDeclarationAccess().getCausedKeyword_2_3_0());
            	      								
            	    }
            	    otherlv_10=(Token)match(input,93,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_10, grammarAccess.getConceptDeclarationAccess().getByKeyword_2_3_1());
            	      								
            	    }
            	    // InternalKim.g:6215:9: ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6216:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6216:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6217:11: lv_causant_11_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_2_3_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_causant_11_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"causant",
            	      												lv_causant_11_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6241:5: {...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4)");
            	    }
            	    // InternalKim.g:6241:115: ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6242:6: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4);
            	    // InternalKim.g:6245:9: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6245:10: {...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6245:19: (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6245:20: otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_12=(Token)match(input,102,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_12, grammarAccess.getConceptDeclarationAccess().getAdjacentKeyword_2_4_0());
            	      								
            	    }
            	    otherlv_13=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_13, grammarAccess.getConceptDeclarationAccess().getToKeyword_2_4_1());
            	      								
            	    }
            	    // InternalKim.g:6253:9: ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6254:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6254:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6255:11: lv_adjacent_14_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_2_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_adjacent_14_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"adjacent",
            	      												lv_adjacent_14_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:6278:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6278:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6279:5: {...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5)");
            	    }
            	    // InternalKim.g:6279:115: ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6280:6: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5);
            	    // InternalKim.g:6283:9: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6283:10: {...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6283:19: (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6283:20: otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_15=(Token)match(input,103,FOLLOW_91); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_15, grammarAccess.getConceptDeclarationAccess().getContainedKeyword_2_5_0());
            	      								
            	    }
            	    otherlv_16=(Token)match(input,45,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getConceptDeclarationAccess().getInKeyword_2_5_1());
            	      								
            	    }
            	    // InternalKim.g:6291:9: ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6292:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6292:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6293:11: lv_container_17_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_2_5_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_container_17_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"container",
            	      												lv_container_17_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:6316:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6316:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6317:5: {...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6)");
            	    }
            	    // InternalKim.g:6317:115: ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6318:6: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6);
            	    // InternalKim.g:6321:9: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6321:10: {...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6321:19: (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6321:20: otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_18=(Token)match(input,104,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getConceptDeclarationAccess().getContainingKeyword_2_6_0());
            	      								
            	    }
            	    // InternalKim.g:6325:9: ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6326:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6326:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6327:11: lv_contained_19_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_2_6_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_contained_19_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"contained",
            	      												lv_contained_19_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:6350:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:6350:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:6351:5: {...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7)");
            	    }
            	    // InternalKim.g:6351:115: ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:6352:6: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7);
            	    // InternalKim.g:6355:9: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
            	    // InternalKim.g:6355:10: {...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptDeclaration", "true");
            	    }
            	    // InternalKim.g:6355:19: (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
            	    // InternalKim.g:6355:20: otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
            	    {
            	    otherlv_20=(Token)match(input,105,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_20, grammarAccess.getConceptDeclarationAccess().getCausingKeyword_2_7_0());
            	      								
            	    }
            	    // InternalKim.g:6359:9: ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:6360:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:6360:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:6361:11: lv_caused_21_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_2_7_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_89);
            	    lv_caused_21_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
            	      											}
            	      											set(
            	      												current,
            	      												"caused",
            	      												lv_caused_21_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop137;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2());

            }

            // InternalKim.g:6391:3: (otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) ) )?
            int alt138=2;
            int LA138_0 = input.LA(1);

            if ( (LA138_0==106) ) {
                alt138=1;
            }
            switch (alt138) {
                case 1 :
                    // InternalKim.g:6392:4: otherlv_22= 'within' ( (lv_context_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    otherlv_22=(Token)match(input,106,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptDeclarationAccess().getWithinKeyword_3_0());
                      			
                    }
                    // InternalKim.g:6396:4: ( (lv_context_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:6397:5: (lv_context_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:6397:5: (lv_context_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:6398:6: lv_context_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContextSimpleConceptDeclarationParserRuleCall_3_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_context_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptDeclarationRule());
                      						}
                      						set(
                      							current,
                      							"context",
                      							lv_context_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptDeclaration"


    // $ANTLR start "entryRuleConceptReference"
    // InternalKim.g:6423:1: entryRuleConceptReference returns [EObject current=null] : iv_ruleConceptReference= ruleConceptReference EOF ;
    public final EObject entryRuleConceptReference() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptReference = null;


        try {
            // InternalKim.g:6423:57: (iv_ruleConceptReference= ruleConceptReference EOF )
            // InternalKim.g:6424:2: iv_ruleConceptReference= ruleConceptReference EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptReferenceRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptReference=ruleConceptReference();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptReference; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConceptReference"


    // $ANTLR start "ruleConceptReference"
    // InternalKim.g:6430:1: ruleConceptReference returns [EObject current=null] : ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) ) ;
    public final EObject ruleConceptReference() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token lv_templateType_2_1=null;
        Token lv_templateType_2_2=null;
        Token lv_name_3_0=null;
        Token otherlv_5=null;
        Token lv_name_7_0=null;
        Token otherlv_9=null;
        Token lv_name_11_0=null;
        Token otherlv_13=null;
        Token lv_name_15_0=null;
        Token otherlv_17=null;
        Token lv_name_19_0=null;
        Token otherlv_21=null;
        Token lv_name_23_0=null;
        Token otherlv_25=null;
        Token lv_name_27_0=null;
        Token otherlv_29=null;
        Token lv_name_31_0=null;
        Token otherlv_33=null;
        Token lv_name_35_0=null;
        Token otherlv_37=null;
        Token lv_template_39_0=null;
        AntlrDatatypeRuleToken lv_name_1_0 = null;

        AntlrDatatypeRuleToken lv_type_4_0 = null;

        EObject lv_extends_6_0 = null;

        AntlrDatatypeRuleToken lv_type_8_0 = null;

        EObject lv_extends_10_0 = null;

        AntlrDatatypeRuleToken lv_type_12_0 = null;

        EObject lv_extends_14_0 = null;

        AntlrDatatypeRuleToken lv_type_16_0 = null;

        EObject lv_extends_18_0 = null;

        AntlrDatatypeRuleToken lv_type_20_0 = null;

        EObject lv_extends_22_0 = null;

        AntlrDatatypeRuleToken lv_type_24_0 = null;

        EObject lv_extends_26_0 = null;

        AntlrDatatypeRuleToken lv_type_28_0 = null;

        EObject lv_extends_30_0 = null;

        AntlrDatatypeRuleToken lv_type_32_0 = null;

        EObject lv_extends_34_0 = null;

        AntlrDatatypeRuleToken lv_type_36_0 = null;

        EObject lv_extends_38_0 = null;



        	enterRule();

        try {
            // InternalKim.g:6436:2: ( ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) ) )
            // InternalKim.g:6437:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) )
            {
            // InternalKim.g:6437:2: ( ( (lv_name_0_0= RULE_CAMELCASE_ID ) ) | ( (lv_name_1_0= ruleNamespaceId ) ) | ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) ) )
            int alt150=3;
            switch ( input.LA(1) ) {
            case RULE_CAMELCASE_ID:
                {
                alt150=1;
                }
                break;
            case RULE_LOWERCASE_ID:
                {
                alt150=2;
                }
                break;
            case 107:
            case 108:
                {
                alt150=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 150, 0, input);

                throw nvae;
            }

            switch (alt150) {
                case 1 :
                    // InternalKim.g:6438:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:6438:3: ( (lv_name_0_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:6439:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:6439:4: (lv_name_0_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:6440:5: lv_name_0_0= RULE_CAMELCASE_ID
                    {
                    lv_name_0_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getConceptReferenceAccess().getNameCAMELCASE_IDTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptReferenceRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:6457:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    {
                    // InternalKim.g:6457:3: ( (lv_name_1_0= ruleNamespaceId ) )
                    // InternalKim.g:6458:4: (lv_name_1_0= ruleNamespaceId )
                    {
                    // InternalKim.g:6458:4: (lv_name_1_0= ruleNamespaceId )
                    // InternalKim.g:6459:5: lv_name_1_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getConceptReferenceAccess().getNameNamespaceIdParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_1_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                      					}
                      					set(
                      						current,
                      						"name",
                      						lv_name_1_0,
                      						"org.integratedmodelling.kim.Kim.NamespaceId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:6477:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) )
                    {
                    // InternalKim.g:6477:3: ( ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) ) )
                    // InternalKim.g:6478:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) ) ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) ) ( (lv_template_39_0= '}' ) )
                    {
                    // InternalKim.g:6478:4: ( ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) ) )
                    // InternalKim.g:6479:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    {
                    // InternalKim.g:6479:5: ( (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' ) )
                    // InternalKim.g:6480:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    {
                    // InternalKim.g:6480:6: (lv_templateType_2_1= '${' | lv_templateType_2_2= '#{' )
                    int alt139=2;
                    int LA139_0 = input.LA(1);

                    if ( (LA139_0==107) ) {
                        alt139=1;
                    }
                    else if ( (LA139_0==108) ) {
                        alt139=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 139, 0, input);

                        throw nvae;
                    }
                    switch (alt139) {
                        case 1 :
                            // InternalKim.g:6481:7: lv_templateType_2_1= '${'
                            {
                            lv_templateType_2_1=(Token)match(input,107,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_1, grammarAccess.getConceptReferenceAccess().getTemplateTypeDollarSignLeftCurlyBracketKeyword_2_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:6492:7: lv_templateType_2_2= '#{'
                            {
                            lv_templateType_2_2=(Token)match(input,108,FOLLOW_92); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_templateType_2_2, grammarAccess.getConceptReferenceAccess().getTemplateTypeNumberSignLeftCurlyBracketKeyword_2_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getConceptReferenceRule());
                              							}
                              							setWithLastConsumed(current, "templateType", lv_templateType_2_2, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:6505:4: ( ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) ) | ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) ) )
                    int alt149=9;
                    switch ( input.LA(1) ) {
                    case 61:
                        {
                        alt149=1;
                        }
                        break;
                    case 109:
                        {
                        alt149=2;
                        }
                        break;
                    case 110:
                        {
                        alt149=3;
                        }
                        break;
                    case 102:
                        {
                        alt149=4;
                        }
                        break;
                    case 111:
                        {
                        alt149=5;
                        }
                        break;
                    case 103:
                        {
                        alt149=6;
                        }
                        break;
                    case 112:
                        {
                        alt149=7;
                        }
                        break;
                    case 113:
                        {
                        alt149=8;
                        }
                        break;
                    case 101:
                        {
                        alt149=9;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 149, 0, input);

                        throw nvae;
                    }

                    switch (alt149) {
                        case 1 :
                            // InternalKim.g:6506:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6506:5: ( ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6507:6: ( (lv_name_3_0= 'context' ) ) ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6507:6: ( (lv_name_3_0= 'context' ) )
                            // InternalKim.g:6508:7: (lv_name_3_0= 'context' )
                            {
                            // InternalKim.g:6508:7: (lv_name_3_0= 'context' )
                            // InternalKim.g:6509:8: lv_name_3_0= 'context'
                            {
                            lv_name_3_0=(Token)match(input,61,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_3_0, grammarAccess.getConceptReferenceAccess().getNameContextKeyword_2_1_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_3_0, "context");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6521:6: ( ( (lv_type_4_0= ruleCONCEPT_TYPE ) ) | (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) ) )
                            int alt140=2;
                            int LA140_0 = input.LA(1);

                            if ( (LA140_0==80||(LA140_0>=136 && LA140_0<=137)||LA140_0==158||(LA140_0>=170 && LA140_0<=173)||(LA140_0>=187 && LA140_0<=215)) ) {
                                alt140=1;
                            }
                            else if ( (LA140_0==91) ) {
                                alt140=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 140, 0, input);

                                throw nvae;
                            }
                            switch (alt140) {
                                case 1 :
                                    // InternalKim.g:6522:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6522:7: ( (lv_type_4_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6523:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6523:8: (lv_type_4_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6524:9: lv_type_4_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_4_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_4_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6542:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6542:7: (otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) ) )
                                    // InternalKim.g:6543:8: otherlv_5= 'extends' ( (lv_extends_6_0= ruleConcept ) )
                                    {
                                    otherlv_5=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_0_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6547:8: ( (lv_extends_6_0= ruleConcept ) )
                                    // InternalKim.g:6548:9: (lv_extends_6_0= ruleConcept )
                                    {
                                    // InternalKim.g:6548:9: (lv_extends_6_0= ruleConcept )
                                    // InternalKim.g:6549:10: lv_extends_6_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_0_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_6_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_6_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:6570:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6570:5: ( ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6571:6: ( (lv_name_7_0= 'inherent' ) ) ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6571:6: ( (lv_name_7_0= 'inherent' ) )
                            // InternalKim.g:6572:7: (lv_name_7_0= 'inherent' )
                            {
                            // InternalKim.g:6572:7: (lv_name_7_0= 'inherent' )
                            // InternalKim.g:6573:8: lv_name_7_0= 'inherent'
                            {
                            lv_name_7_0=(Token)match(input,109,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_7_0, grammarAccess.getConceptReferenceAccess().getNameInherentKeyword_2_1_1_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_7_0, "inherent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6585:6: ( ( (lv_type_8_0= ruleCONCEPT_TYPE ) ) | (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) ) )
                            int alt141=2;
                            int LA141_0 = input.LA(1);

                            if ( (LA141_0==80||(LA141_0>=136 && LA141_0<=137)||LA141_0==158||(LA141_0>=170 && LA141_0<=173)||(LA141_0>=187 && LA141_0<=215)) ) {
                                alt141=1;
                            }
                            else if ( (LA141_0==91) ) {
                                alt141=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 141, 0, input);

                                throw nvae;
                            }
                            switch (alt141) {
                                case 1 :
                                    // InternalKim.g:6586:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6586:7: ( (lv_type_8_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6587:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6587:8: (lv_type_8_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6588:9: lv_type_8_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_1_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_8_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_8_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6606:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6606:7: (otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) ) )
                                    // InternalKim.g:6607:8: otherlv_9= 'extends' ( (lv_extends_10_0= ruleConcept ) )
                                    {
                                    otherlv_9=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_9, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_1_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6611:8: ( (lv_extends_10_0= ruleConcept ) )
                                    // InternalKim.g:6612:9: (lv_extends_10_0= ruleConcept )
                                    {
                                    // InternalKim.g:6612:9: (lv_extends_10_0= ruleConcept )
                                    // InternalKim.g:6613:10: lv_extends_10_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_1_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_10_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_10_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:6634:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6634:5: ( ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6635:6: ( (lv_name_11_0= 'compresent' ) ) ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6635:6: ( (lv_name_11_0= 'compresent' ) )
                            // InternalKim.g:6636:7: (lv_name_11_0= 'compresent' )
                            {
                            // InternalKim.g:6636:7: (lv_name_11_0= 'compresent' )
                            // InternalKim.g:6637:8: lv_name_11_0= 'compresent'
                            {
                            lv_name_11_0=(Token)match(input,110,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_11_0, grammarAccess.getConceptReferenceAccess().getNameCompresentKeyword_2_1_2_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_11_0, "compresent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6649:6: ( ( (lv_type_12_0= ruleCONCEPT_TYPE ) ) | (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) ) )
                            int alt142=2;
                            int LA142_0 = input.LA(1);

                            if ( (LA142_0==80||(LA142_0>=136 && LA142_0<=137)||LA142_0==158||(LA142_0>=170 && LA142_0<=173)||(LA142_0>=187 && LA142_0<=215)) ) {
                                alt142=1;
                            }
                            else if ( (LA142_0==91) ) {
                                alt142=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 142, 0, input);

                                throw nvae;
                            }
                            switch (alt142) {
                                case 1 :
                                    // InternalKim.g:6650:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6650:7: ( (lv_type_12_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6651:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6651:8: (lv_type_12_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6652:9: lv_type_12_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_2_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_12_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_12_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6670:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6670:7: (otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) ) )
                                    // InternalKim.g:6671:8: otherlv_13= 'extends' ( (lv_extends_14_0= ruleConcept ) )
                                    {
                                    otherlv_13=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_13, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_2_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6675:8: ( (lv_extends_14_0= ruleConcept ) )
                                    // InternalKim.g:6676:9: (lv_extends_14_0= ruleConcept )
                                    {
                                    // InternalKim.g:6676:9: (lv_extends_14_0= ruleConcept )
                                    // InternalKim.g:6677:10: lv_extends_14_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_2_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_14_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_14_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:6698:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6698:5: ( ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6699:6: ( (lv_name_15_0= 'adjacent' ) ) ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6699:6: ( (lv_name_15_0= 'adjacent' ) )
                            // InternalKim.g:6700:7: (lv_name_15_0= 'adjacent' )
                            {
                            // InternalKim.g:6700:7: (lv_name_15_0= 'adjacent' )
                            // InternalKim.g:6701:8: lv_name_15_0= 'adjacent'
                            {
                            lv_name_15_0=(Token)match(input,102,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_15_0, grammarAccess.getConceptReferenceAccess().getNameAdjacentKeyword_2_1_3_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_15_0, "adjacent");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6713:6: ( ( (lv_type_16_0= ruleCONCEPT_TYPE ) ) | (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) ) )
                            int alt143=2;
                            int LA143_0 = input.LA(1);

                            if ( (LA143_0==80||(LA143_0>=136 && LA143_0<=137)||LA143_0==158||(LA143_0>=170 && LA143_0<=173)||(LA143_0>=187 && LA143_0<=215)) ) {
                                alt143=1;
                            }
                            else if ( (LA143_0==91) ) {
                                alt143=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 143, 0, input);

                                throw nvae;
                            }
                            switch (alt143) {
                                case 1 :
                                    // InternalKim.g:6714:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6714:7: ( (lv_type_16_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6715:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6715:8: (lv_type_16_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6716:9: lv_type_16_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_3_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_16_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_16_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6734:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6734:7: (otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) ) )
                                    // InternalKim.g:6735:8: otherlv_17= 'extends' ( (lv_extends_18_0= ruleConcept ) )
                                    {
                                    otherlv_17=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_17, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_3_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6739:8: ( (lv_extends_18_0= ruleConcept ) )
                                    // InternalKim.g:6740:9: (lv_extends_18_0= ruleConcept )
                                    {
                                    // InternalKim.g:6740:9: (lv_extends_18_0= ruleConcept )
                                    // InternalKim.g:6741:10: lv_extends_18_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_3_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_18_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_18_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 5 :
                            // InternalKim.g:6762:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6762:5: ( ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6763:6: ( (lv_name_19_0= 'container' ) ) ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6763:6: ( (lv_name_19_0= 'container' ) )
                            // InternalKim.g:6764:7: (lv_name_19_0= 'container' )
                            {
                            // InternalKim.g:6764:7: (lv_name_19_0= 'container' )
                            // InternalKim.g:6765:8: lv_name_19_0= 'container'
                            {
                            lv_name_19_0=(Token)match(input,111,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_19_0, grammarAccess.getConceptReferenceAccess().getNameContainerKeyword_2_1_4_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_19_0, "container");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6777:6: ( ( (lv_type_20_0= ruleCONCEPT_TYPE ) ) | (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) ) )
                            int alt144=2;
                            int LA144_0 = input.LA(1);

                            if ( (LA144_0==80||(LA144_0>=136 && LA144_0<=137)||LA144_0==158||(LA144_0>=170 && LA144_0<=173)||(LA144_0>=187 && LA144_0<=215)) ) {
                                alt144=1;
                            }
                            else if ( (LA144_0==91) ) {
                                alt144=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 144, 0, input);

                                throw nvae;
                            }
                            switch (alt144) {
                                case 1 :
                                    // InternalKim.g:6778:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6778:7: ( (lv_type_20_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6779:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6779:8: (lv_type_20_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6780:9: lv_type_20_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_4_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_20_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_20_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6798:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6798:7: (otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) ) )
                                    // InternalKim.g:6799:8: otherlv_21= 'extends' ( (lv_extends_22_0= ruleConcept ) )
                                    {
                                    otherlv_21=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_21, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_4_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6803:8: ( (lv_extends_22_0= ruleConcept ) )
                                    // InternalKim.g:6804:9: (lv_extends_22_0= ruleConcept )
                                    {
                                    // InternalKim.g:6804:9: (lv_extends_22_0= ruleConcept )
                                    // InternalKim.g:6805:10: lv_extends_22_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_4_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_22_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_22_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 6 :
                            // InternalKim.g:6826:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6826:5: ( ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6827:6: ( (lv_name_23_0= 'contained' ) ) ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6827:6: ( (lv_name_23_0= 'contained' ) )
                            // InternalKim.g:6828:7: (lv_name_23_0= 'contained' )
                            {
                            // InternalKim.g:6828:7: (lv_name_23_0= 'contained' )
                            // InternalKim.g:6829:8: lv_name_23_0= 'contained'
                            {
                            lv_name_23_0=(Token)match(input,103,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_23_0, grammarAccess.getConceptReferenceAccess().getNameContainedKeyword_2_1_5_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_23_0, "contained");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6841:6: ( ( (lv_type_24_0= ruleCONCEPT_TYPE ) ) | (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) ) )
                            int alt145=2;
                            int LA145_0 = input.LA(1);

                            if ( (LA145_0==80||(LA145_0>=136 && LA145_0<=137)||LA145_0==158||(LA145_0>=170 && LA145_0<=173)||(LA145_0>=187 && LA145_0<=215)) ) {
                                alt145=1;
                            }
                            else if ( (LA145_0==91) ) {
                                alt145=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 145, 0, input);

                                throw nvae;
                            }
                            switch (alt145) {
                                case 1 :
                                    // InternalKim.g:6842:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6842:7: ( (lv_type_24_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6843:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6843:8: (lv_type_24_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6844:9: lv_type_24_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_5_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_24_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_24_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6862:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6862:7: (otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) ) )
                                    // InternalKim.g:6863:8: otherlv_25= 'extends' ( (lv_extends_26_0= ruleConcept ) )
                                    {
                                    otherlv_25=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_25, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_5_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6867:8: ( (lv_extends_26_0= ruleConcept ) )
                                    // InternalKim.g:6868:9: (lv_extends_26_0= ruleConcept )
                                    {
                                    // InternalKim.g:6868:9: (lv_extends_26_0= ruleConcept )
                                    // InternalKim.g:6869:10: lv_extends_26_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_5_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_26_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_26_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 7 :
                            // InternalKim.g:6890:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6890:5: ( ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6891:6: ( (lv_name_27_0= 'purpose' ) ) ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6891:6: ( (lv_name_27_0= 'purpose' ) )
                            // InternalKim.g:6892:7: (lv_name_27_0= 'purpose' )
                            {
                            // InternalKim.g:6892:7: (lv_name_27_0= 'purpose' )
                            // InternalKim.g:6893:8: lv_name_27_0= 'purpose'
                            {
                            lv_name_27_0=(Token)match(input,112,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_27_0, grammarAccess.getConceptReferenceAccess().getNamePurposeKeyword_2_1_6_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_27_0, "purpose");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6905:6: ( ( (lv_type_28_0= ruleCONCEPT_TYPE ) ) | (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) ) )
                            int alt146=2;
                            int LA146_0 = input.LA(1);

                            if ( (LA146_0==80||(LA146_0>=136 && LA146_0<=137)||LA146_0==158||(LA146_0>=170 && LA146_0<=173)||(LA146_0>=187 && LA146_0<=215)) ) {
                                alt146=1;
                            }
                            else if ( (LA146_0==91) ) {
                                alt146=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 146, 0, input);

                                throw nvae;
                            }
                            switch (alt146) {
                                case 1 :
                                    // InternalKim.g:6906:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6906:7: ( (lv_type_28_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6907:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6907:8: (lv_type_28_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6908:9: lv_type_28_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_6_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_28_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_28_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6926:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6926:7: (otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) ) )
                                    // InternalKim.g:6927:8: otherlv_29= 'extends' ( (lv_extends_30_0= ruleConcept ) )
                                    {
                                    otherlv_29=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_29, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_6_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6931:8: ( (lv_extends_30_0= ruleConcept ) )
                                    // InternalKim.g:6932:9: (lv_extends_30_0= ruleConcept )
                                    {
                                    // InternalKim.g:6932:9: (lv_extends_30_0= ruleConcept )
                                    // InternalKim.g:6933:10: lv_extends_30_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_6_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_30_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_30_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 8 :
                            // InternalKim.g:6954:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:6954:5: ( ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:6955:6: ( (lv_name_31_0= 'causant' ) ) ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:6955:6: ( (lv_name_31_0= 'causant' ) )
                            // InternalKim.g:6956:7: (lv_name_31_0= 'causant' )
                            {
                            // InternalKim.g:6956:7: (lv_name_31_0= 'causant' )
                            // InternalKim.g:6957:8: lv_name_31_0= 'causant'
                            {
                            lv_name_31_0=(Token)match(input,113,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_31_0, grammarAccess.getConceptReferenceAccess().getNameCausantKeyword_2_1_7_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_31_0, "causant");
                              							
                            }

                            }


                            }

                            // InternalKim.g:6969:6: ( ( (lv_type_32_0= ruleCONCEPT_TYPE ) ) | (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) ) )
                            int alt147=2;
                            int LA147_0 = input.LA(1);

                            if ( (LA147_0==80||(LA147_0>=136 && LA147_0<=137)||LA147_0==158||(LA147_0>=170 && LA147_0<=173)||(LA147_0>=187 && LA147_0<=215)) ) {
                                alt147=1;
                            }
                            else if ( (LA147_0==91) ) {
                                alt147=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 147, 0, input);

                                throw nvae;
                            }
                            switch (alt147) {
                                case 1 :
                                    // InternalKim.g:6970:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:6970:7: ( (lv_type_32_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:6971:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:6971:8: (lv_type_32_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:6972:9: lv_type_32_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_7_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_32_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_32_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:6990:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:6990:7: (otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) ) )
                                    // InternalKim.g:6991:8: otherlv_33= 'extends' ( (lv_extends_34_0= ruleConcept ) )
                                    {
                                    otherlv_33=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_33, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_7_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:6995:8: ( (lv_extends_34_0= ruleConcept ) )
                                    // InternalKim.g:6996:9: (lv_extends_34_0= ruleConcept )
                                    {
                                    // InternalKim.g:6996:9: (lv_extends_34_0= ruleConcept )
                                    // InternalKim.g:6997:10: lv_extends_34_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_7_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_34_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_34_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;
                        case 9 :
                            // InternalKim.g:7018:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            {
                            // InternalKim.g:7018:5: ( ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) ) )
                            // InternalKim.g:7019:6: ( (lv_name_35_0= 'caused' ) ) ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            {
                            // InternalKim.g:7019:6: ( (lv_name_35_0= 'caused' ) )
                            // InternalKim.g:7020:7: (lv_name_35_0= 'caused' )
                            {
                            // InternalKim.g:7020:7: (lv_name_35_0= 'caused' )
                            // InternalKim.g:7021:8: lv_name_35_0= 'caused'
                            {
                            lv_name_35_0=(Token)match(input,101,FOLLOW_93); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_name_35_0, grammarAccess.getConceptReferenceAccess().getNameCausedKeyword_2_1_8_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getConceptReferenceRule());
                              								}
                              								setWithLastConsumed(current, "name", lv_name_35_0, "caused");
                              							
                            }

                            }


                            }

                            // InternalKim.g:7033:6: ( ( (lv_type_36_0= ruleCONCEPT_TYPE ) ) | (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) ) )
                            int alt148=2;
                            int LA148_0 = input.LA(1);

                            if ( (LA148_0==80||(LA148_0>=136 && LA148_0<=137)||LA148_0==158||(LA148_0>=170 && LA148_0<=173)||(LA148_0>=187 && LA148_0<=215)) ) {
                                alt148=1;
                            }
                            else if ( (LA148_0==91) ) {
                                alt148=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 148, 0, input);

                                throw nvae;
                            }
                            switch (alt148) {
                                case 1 :
                                    // InternalKim.g:7034:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    {
                                    // InternalKim.g:7034:7: ( (lv_type_36_0= ruleCONCEPT_TYPE ) )
                                    // InternalKim.g:7035:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    {
                                    // InternalKim.g:7035:8: (lv_type_36_0= ruleCONCEPT_TYPE )
                                    // InternalKim.g:7036:9: lv_type_36_0= ruleCONCEPT_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getConceptReferenceAccess().getTypeCONCEPT_TYPEParserRuleCall_2_1_8_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_type_36_0=ruleCONCEPT_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      									}
                                      									set(
                                      										current,
                                      										"type",
                                      										lv_type_36_0,
                                      										"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7054:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    {
                                    // InternalKim.g:7054:7: (otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) ) )
                                    // InternalKim.g:7055:8: otherlv_37= 'extends' ( (lv_extends_38_0= ruleConcept ) )
                                    {
                                    otherlv_37=(Token)match(input,91,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_37, grammarAccess.getConceptReferenceAccess().getExtendsKeyword_2_1_8_1_1_0());
                                      							
                                    }
                                    // InternalKim.g:7059:8: ( (lv_extends_38_0= ruleConcept ) )
                                    // InternalKim.g:7060:9: (lv_extends_38_0= ruleConcept )
                                    {
                                    // InternalKim.g:7060:9: (lv_extends_38_0= ruleConcept )
                                    // InternalKim.g:7061:10: lv_extends_38_0= ruleConcept
                                    {
                                    if ( state.backtracking==0 ) {

                                      										newCompositeNode(grammarAccess.getConceptReferenceAccess().getExtendsConceptParserRuleCall_2_1_8_1_1_1_0());
                                      									
                                    }
                                    pushFollow(FOLLOW_94);
                                    lv_extends_38_0=ruleConcept();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElementForParent(grammarAccess.getConceptReferenceRule());
                                      										}
                                      										set(
                                      											current,
                                      											"extends",
                                      											lv_extends_38_0,
                                      											"org.integratedmodelling.kim.Kim.Concept");
                                      										afterParserOrEnumRuleCall();
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7082:4: ( (lv_template_39_0= '}' ) )
                    // InternalKim.g:7083:5: (lv_template_39_0= '}' )
                    {
                    // InternalKim.g:7083:5: (lv_template_39_0= '}' )
                    // InternalKim.g:7084:6: lv_template_39_0= '}'
                    {
                    lv_template_39_0=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_template_39_0, grammarAccess.getConceptReferenceAccess().getTemplateRightCurlyBracketKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptReferenceRule());
                      						}
                      						setWithLastConsumed(current, "template", true, "}");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConceptReference"


    // $ANTLR start "entryRuleOPERATOR_TARGET"
    // InternalKim.g:7101:1: entryRuleOPERATOR_TARGET returns [String current=null] : iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF ;
    public final String entryRuleOPERATOR_TARGET() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleOPERATOR_TARGET = null;


        try {
            // InternalKim.g:7101:55: (iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF )
            // InternalKim.g:7102:2: iv_ruleOPERATOR_TARGET= ruleOPERATOR_TARGET EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getOPERATOR_TARGETRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleOPERATOR_TARGET=ruleOPERATOR_TARGET();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleOPERATOR_TARGET.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleOPERATOR_TARGET"


    // $ANTLR start "ruleOPERATOR_TARGET"
    // InternalKim.g:7108:1: ruleOPERATOR_TARGET returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) ;
    public final AntlrDatatypeRuleToken ruleOPERATOR_TARGET() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:7114:2: ( (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' ) )
            // InternalKim.g:7115:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            {
            // InternalKim.g:7115:2: (kw= 'context' | kw= 'inherent' | kw= 'compresent' | kw= 'adjacent' | kw= 'container' | kw= 'contained' | kw= 'purpose' | kw= 'causant' | kw= 'caused' )
            int alt151=9;
            switch ( input.LA(1) ) {
            case 61:
                {
                alt151=1;
                }
                break;
            case 109:
                {
                alt151=2;
                }
                break;
            case 110:
                {
                alt151=3;
                }
                break;
            case 102:
                {
                alt151=4;
                }
                break;
            case 111:
                {
                alt151=5;
                }
                break;
            case 103:
                {
                alt151=6;
                }
                break;
            case 112:
                {
                alt151=7;
                }
                break;
            case 113:
                {
                alt151=8;
                }
                break;
            case 101:
                {
                alt151=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 151, 0, input);

                throw nvae;
            }

            switch (alt151) {
                case 1 :
                    // InternalKim.g:7116:3: kw= 'context'
                    {
                    kw=(Token)match(input,61,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContextKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:7122:3: kw= 'inherent'
                    {
                    kw=(Token)match(input,109,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getInherentKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:7128:3: kw= 'compresent'
                    {
                    kw=(Token)match(input,110,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCompresentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:7134:3: kw= 'adjacent'
                    {
                    kw=(Token)match(input,102,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getAdjacentKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:7140:3: kw= 'container'
                    {
                    kw=(Token)match(input,111,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainerKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:7146:3: kw= 'contained'
                    {
                    kw=(Token)match(input,103,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getContainedKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:7152:3: kw= 'purpose'
                    {
                    kw=(Token)match(input,112,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getPurposeKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:7158:3: kw= 'causant'
                    {
                    kw=(Token)match(input,113,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausantKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:7164:3: kw= 'caused'
                    {
                    kw=(Token)match(input,101,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getOPERATOR_TARGETAccess().getCausedKeyword_8());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleOPERATOR_TARGET"


    // $ANTLR start "entryRuleConcept"
    // InternalKim.g:7173:1: entryRuleConcept returns [EObject current=null] : iv_ruleConcept= ruleConcept EOF ;
    public final EObject entryRuleConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConcept = null;


        try {
            // InternalKim.g:7173:48: (iv_ruleConcept= ruleConcept EOF )
            // InternalKim.g:7174:2: iv_ruleConcept= ruleConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConcept=ruleConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleConcept"


    // $ANTLR start "ruleConcept"
    // InternalKim.g:7180:1: ruleConcept returns [EObject current=null] : ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) ) ;
    public final EObject ruleConcept() throws RecognitionException {
        EObject current = null;

        Token lv_negated_0_1=null;
        Token lv_negated_0_2=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token lv_stringIdentifier_4_1=null;
        Token lv_stringIdentifier_4_2=null;
        Token lv_intIdentifier_5_0=null;
        Token otherlv_6=null;
        Token lv_authority_7_1=null;
        Token lv_authority_7_2=null;
        Token lv_presence_8_0=null;
        Token otherlv_9=null;
        Token lv_count_11_0=null;
        Token otherlv_12=null;
        Token lv_distance_14_0=null;
        Token otherlv_15=null;
        Token otherlv_16=null;
        Token lv_probability_18_0=null;
        Token otherlv_19=null;
        Token lv_assessment_21_0=null;
        Token otherlv_22=null;
        Token lv_uncertainty_24_0=null;
        Token otherlv_25=null;
        Token lv_type_27_0=null;
        Token otherlv_28=null;
        Token lv_observability_30_0=null;
        Token otherlv_31=null;
        Token lv_proportion_33_0=null;
        Token otherlv_34=null;
        Token otherlv_36=null;
        Token lv_ratio_38_0=null;
        Token otherlv_39=null;
        Token otherlv_41=null;
        Token lv_value_43_0=null;
        Token otherlv_44=null;
        Token otherlv_46=null;
        Token lv_occurrence_48_0=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        EObject lv_name_1_0 = null;

        EObject lv_concept_10_0 = null;

        EObject lv_concept_13_0 = null;

        EObject lv_concept_17_0 = null;

        EObject lv_concept_20_0 = null;

        EObject lv_concept_23_0 = null;

        EObject lv_concept_26_0 = null;

        EObject lv_concept_29_0 = null;

        EObject lv_concept_32_0 = null;

        EObject lv_concept_35_0 = null;

        EObject lv_other_37_0 = null;

        EObject lv_concept_40_0 = null;

        EObject lv_other_42_0 = null;

        EObject lv_concept_45_0 = null;

        EObject lv_other_47_0 = null;

        EObject lv_concept_50_0 = null;

        EObject lv_declaration_52_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7186:2: ( ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) ) )
            // InternalKim.g:7187:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) )
            {
            // InternalKim.g:7187:2: ( ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? ) | ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) ) | ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? ) | ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) ) | (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' ) )
            int alt161=14;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case 107:
            case 108:
            case 115:
            case 116:
                {
                alt161=1;
                }
                break;
            case 118:
                {
                alt161=2;
                }
                break;
            case 119:
                {
                alt161=3;
                }
                break;
            case 120:
                {
                alt161=4;
                }
                break;
            case 121:
                {
                alt161=5;
                }
                break;
            case 122:
                {
                alt161=6;
                }
                break;
            case 123:
                {
                alt161=7;
                }
                break;
            case 124:
                {
                alt161=8;
                }
                break;
            case 125:
                {
                alt161=9;
                }
                break;
            case 126:
                {
                alt161=10;
                }
                break;
            case 127:
                {
                alt161=11;
                }
                break;
            case 128:
                {
                alt161=12;
                }
                break;
            case 129:
                {
                alt161=13;
                }
                break;
            case 33:
                {
                alt161=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 161, 0, input);

                throw nvae;
            }

            switch (alt161) {
                case 1 :
                    // InternalKim.g:7188:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:7188:3: ( ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:7189:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )? ( (lv_name_1_0= ruleConceptReference ) ) (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:7189:4: ( ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) ) )?
                    int alt153=2;
                    int LA153_0 = input.LA(1);

                    if ( ((LA153_0>=115 && LA153_0<=116)) ) {
                        alt153=1;
                    }
                    switch (alt153) {
                        case 1 :
                            // InternalKim.g:7190:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            {
                            // InternalKim.g:7190:5: ( (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' ) )
                            // InternalKim.g:7191:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            {
                            // InternalKim.g:7191:6: (lv_negated_0_1= 'not' | lv_negated_0_2= 'no' )
                            int alt152=2;
                            int LA152_0 = input.LA(1);

                            if ( (LA152_0==115) ) {
                                alt152=1;
                            }
                            else if ( (LA152_0==116) ) {
                                alt152=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 152, 0, input);

                                throw nvae;
                            }
                            switch (alt152) {
                                case 1 :
                                    // InternalKim.g:7192:7: lv_negated_0_1= 'not'
                                    {
                                    lv_negated_0_1=(Token)match(input,115,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_1, grammarAccess.getConceptAccess().getNegatedNotKeyword_0_0_0_0());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7203:7: lv_negated_0_2= 'no'
                                    {
                                    lv_negated_0_2=(Token)match(input,116,FOLLOW_95); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      							newLeafNode(lv_negated_0_2, grammarAccess.getConceptAccess().getNegatedNoKeyword_0_0_0_1());
                                      						
                                    }
                                    if ( state.backtracking==0 ) {

                                      							if (current==null) {
                                      								current = createModelElement(grammarAccess.getConceptRule());
                                      							}
                                      							setWithLastConsumed(current, "negated", true, null);
                                      						
                                    }

                                    }
                                    break;

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:7216:4: ( (lv_name_1_0= ruleConceptReference ) )
                    // InternalKim.g:7217:5: (lv_name_1_0= ruleConceptReference )
                    {
                    // InternalKim.g:7217:5: (lv_name_1_0= ruleConceptReference )
                    // InternalKim.g:7218:6: lv_name_1_0= ruleConceptReference
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getNameConceptReferenceParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_96);
                    lv_name_1_0=ruleConceptReference();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.ConceptReference");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7235:4: (otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt157=2;
                    int LA157_0 = input.LA(1);

                    if ( (LA157_0==117) ) {
                        alt157=1;
                    }
                    switch (alt157) {
                        case 1 :
                            // InternalKim.g:7236:5: otherlv_2= 'identified' otherlv_3= 'as' ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) ) otherlv_6= 'by' ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_2=(Token)match(input,117,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getConceptAccess().getIdentifiedKeyword_0_2_0());
                              				
                            }
                            otherlv_3=(Token)match(input,24,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getConceptAccess().getAsKeyword_0_2_1());
                              				
                            }
                            // InternalKim.g:7244:5: ( ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_5_0= RULE_INT ) ) )
                            int alt155=2;
                            int LA155_0 = input.LA(1);

                            if ( (LA155_0==RULE_STRING||LA155_0==RULE_ID) ) {
                                alt155=1;
                            }
                            else if ( (LA155_0==RULE_INT) ) {
                                alt155=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 155, 0, input);

                                throw nvae;
                            }
                            switch (alt155) {
                                case 1 :
                                    // InternalKim.g:7245:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:7245:6: ( ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) ) )
                                    // InternalKim.g:7246:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:7246:7: ( (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING ) )
                                    // InternalKim.g:7247:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    {
                                    // InternalKim.g:7247:8: (lv_stringIdentifier_4_1= RULE_ID | lv_stringIdentifier_4_2= RULE_STRING )
                                    int alt154=2;
                                    int LA154_0 = input.LA(1);

                                    if ( (LA154_0==RULE_ID) ) {
                                        alt154=1;
                                    }
                                    else if ( (LA154_0==RULE_STRING) ) {
                                        alt154=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 154, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt154) {
                                        case 1 :
                                            // InternalKim.g:7248:9: lv_stringIdentifier_4_1= RULE_ID
                                            {
                                            lv_stringIdentifier_4_1=(Token)match(input,RULE_ID,FOLLOW_90); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_1, grammarAccess.getConceptAccess().getStringIdentifierIDTerminalRuleCall_0_2_2_0_0_0());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_1,
                                              										"org.eclipse.xtext.common.Terminals.ID");
                                              								
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:7263:9: lv_stringIdentifier_4_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_4_2=(Token)match(input,RULE_STRING,FOLLOW_90); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              									newLeafNode(lv_stringIdentifier_4_2, grammarAccess.getConceptAccess().getStringIdentifierSTRINGTerminalRuleCall_0_2_2_0_0_1());
                                              								
                                            }
                                            if ( state.backtracking==0 ) {

                                              									if (current==null) {
                                              										current = createModelElement(grammarAccess.getConceptRule());
                                              									}
                                              									setWithLastConsumed(
                                              										current,
                                              										"stringIdentifier",
                                              										lv_stringIdentifier_4_2,
                                              										"org.eclipse.xtext.common.Terminals.STRING");
                                              								
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7281:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:7281:6: ( (lv_intIdentifier_5_0= RULE_INT ) )
                                    // InternalKim.g:7282:7: (lv_intIdentifier_5_0= RULE_INT )
                                    {
                                    // InternalKim.g:7282:7: (lv_intIdentifier_5_0= RULE_INT )
                                    // InternalKim.g:7283:8: lv_intIdentifier_5_0= RULE_INT
                                    {
                                    lv_intIdentifier_5_0=(Token)match(input,RULE_INT,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_intIdentifier_5_0, grammarAccess.getConceptAccess().getIntIdentifierINTTerminalRuleCall_0_2_2_1_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"intIdentifier",
                                      									lv_intIdentifier_5_0,
                                      									"org.eclipse.xtext.common.Terminals.INT");
                                      							
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_6=(Token)match(input,93,FOLLOW_98); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_6, grammarAccess.getConceptAccess().getByKeyword_0_2_3());
                              				
                            }
                            // InternalKim.g:7304:5: ( ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:7305:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:7305:6: ( (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:7306:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:7306:7: (lv_authority_7_1= RULE_UPPERCASE_ID | lv_authority_7_2= RULE_UPPERCASE_PATH )
                            int alt156=2;
                            int LA156_0 = input.LA(1);

                            if ( (LA156_0==RULE_UPPERCASE_ID) ) {
                                alt156=1;
                            }
                            else if ( (LA156_0==RULE_UPPERCASE_PATH) ) {
                                alt156=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 156, 0, input);

                                throw nvae;
                            }
                            switch (alt156) {
                                case 1 :
                                    // InternalKim.g:7307:8: lv_authority_7_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_7_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_1, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_0_2_4_0_0());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_1,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      							
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:7322:8: lv_authority_7_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_7_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(lv_authority_7_2, grammarAccess.getConceptAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_0_2_4_0_1());
                                      							
                                    }
                                    if ( state.backtracking==0 ) {

                                      								if (current==null) {
                                      									current = createModelElement(grammarAccess.getConceptRule());
                                      								}
                                      								setWithLastConsumed(
                                      									current,
                                      									"authority",
                                      									lv_authority_7_2,
                                      									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      							
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:7342:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7342:3: ( ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7343:4: ( (lv_presence_8_0= 'presence' ) ) otherlv_9= 'of' ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7343:4: ( (lv_presence_8_0= 'presence' ) )
                    // InternalKim.g:7344:5: (lv_presence_8_0= 'presence' )
                    {
                    // InternalKim.g:7344:5: (lv_presence_8_0= 'presence' )
                    // InternalKim.g:7345:6: lv_presence_8_0= 'presence'
                    {
                    lv_presence_8_0=(Token)match(input,118,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_presence_8_0, grammarAccess.getConceptAccess().getPresencePresenceKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "presence", true, "presence");
                      					
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getConceptAccess().getOfKeyword_1_1());
                      			
                    }
                    // InternalKim.g:7361:4: ( (lv_concept_10_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7362:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7362:5: (lv_concept_10_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7363:6: lv_concept_10_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_1_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_10_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_10_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:7382:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7382:3: ( ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7383:4: ( (lv_count_11_0= 'count' ) ) otherlv_12= 'of' ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7383:4: ( (lv_count_11_0= 'count' ) )
                    // InternalKim.g:7384:5: (lv_count_11_0= 'count' )
                    {
                    // InternalKim.g:7384:5: (lv_count_11_0= 'count' )
                    // InternalKim.g:7385:6: lv_count_11_0= 'count'
                    {
                    lv_count_11_0=(Token)match(input,119,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_count_11_0, grammarAccess.getConceptAccess().getCountCountKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "count", true, "count");
                      					
                    }

                    }


                    }

                    otherlv_12=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_12, grammarAccess.getConceptAccess().getOfKeyword_2_1());
                      			
                    }
                    // InternalKim.g:7401:4: ( (lv_concept_13_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7402:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7402:5: (lv_concept_13_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7403:6: lv_concept_13_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_2_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_13_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_13_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:7422:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7422:3: ( ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7423:4: ( (lv_distance_14_0= 'distance' ) ) (otherlv_15= 'to' | otherlv_16= 'from' ) ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7423:4: ( (lv_distance_14_0= 'distance' ) )
                    // InternalKim.g:7424:5: (lv_distance_14_0= 'distance' )
                    {
                    // InternalKim.g:7424:5: (lv_distance_14_0= 'distance' )
                    // InternalKim.g:7425:6: lv_distance_14_0= 'distance'
                    {
                    lv_distance_14_0=(Token)match(input,120,FOLLOW_100); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_distance_14_0, grammarAccess.getConceptAccess().getDistanceDistanceKeyword_3_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "distance", true, "distance");
                      					
                    }

                    }


                    }

                    // InternalKim.g:7437:4: (otherlv_15= 'to' | otherlv_16= 'from' )
                    int alt158=2;
                    int LA158_0 = input.LA(1);

                    if ( (LA158_0==39) ) {
                        alt158=1;
                    }
                    else if ( (LA158_0==85) ) {
                        alt158=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 158, 0, input);

                        throw nvae;
                    }
                    switch (alt158) {
                        case 1 :
                            // InternalKim.g:7438:5: otherlv_15= 'to'
                            {
                            otherlv_15=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_15, grammarAccess.getConceptAccess().getToKeyword_3_1_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:7443:5: otherlv_16= 'from'
                            {
                            otherlv_16=(Token)match(input,85,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getConceptAccess().getFromKeyword_3_1_1());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:7448:4: ( (lv_concept_17_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7449:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7449:5: (lv_concept_17_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7450:6: lv_concept_17_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_3_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_17_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_17_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:7469:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7469:3: ( ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7470:4: ( (lv_probability_18_0= 'probability' ) ) otherlv_19= 'of' ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7470:4: ( (lv_probability_18_0= 'probability' ) )
                    // InternalKim.g:7471:5: (lv_probability_18_0= 'probability' )
                    {
                    // InternalKim.g:7471:5: (lv_probability_18_0= 'probability' )
                    // InternalKim.g:7472:6: lv_probability_18_0= 'probability'
                    {
                    lv_probability_18_0=(Token)match(input,121,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_probability_18_0, grammarAccess.getConceptAccess().getProbabilityProbabilityKeyword_4_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "probability", true, "probability");
                      					
                    }

                    }


                    }

                    otherlv_19=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_19, grammarAccess.getConceptAccess().getOfKeyword_4_1());
                      			
                    }
                    // InternalKim.g:7488:4: ( (lv_concept_20_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7489:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7489:5: (lv_concept_20_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7490:6: lv_concept_20_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_4_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_20_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_20_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:7509:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7509:3: ( ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7510:4: ( (lv_assessment_21_0= 'assessment' ) ) otherlv_22= 'of' ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7510:4: ( (lv_assessment_21_0= 'assessment' ) )
                    // InternalKim.g:7511:5: (lv_assessment_21_0= 'assessment' )
                    {
                    // InternalKim.g:7511:5: (lv_assessment_21_0= 'assessment' )
                    // InternalKim.g:7512:6: lv_assessment_21_0= 'assessment'
                    {
                    lv_assessment_21_0=(Token)match(input,122,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_assessment_21_0, grammarAccess.getConceptAccess().getAssessmentAssessmentKeyword_5_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "assessment", true, "assessment");
                      					
                    }

                    }


                    }

                    otherlv_22=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_22, grammarAccess.getConceptAccess().getOfKeyword_5_1());
                      			
                    }
                    // InternalKim.g:7528:4: ( (lv_concept_23_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7529:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7529:5: (lv_concept_23_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7530:6: lv_concept_23_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_5_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_23_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_23_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:7549:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7549:3: ( ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7550:4: ( (lv_uncertainty_24_0= 'uncertainty' ) ) otherlv_25= 'of' ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7550:4: ( (lv_uncertainty_24_0= 'uncertainty' ) )
                    // InternalKim.g:7551:5: (lv_uncertainty_24_0= 'uncertainty' )
                    {
                    // InternalKim.g:7551:5: (lv_uncertainty_24_0= 'uncertainty' )
                    // InternalKim.g:7552:6: lv_uncertainty_24_0= 'uncertainty'
                    {
                    lv_uncertainty_24_0=(Token)match(input,123,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_uncertainty_24_0, grammarAccess.getConceptAccess().getUncertaintyUncertaintyKeyword_6_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "uncertainty", true, "uncertainty");
                      					
                    }

                    }


                    }

                    otherlv_25=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_25, grammarAccess.getConceptAccess().getOfKeyword_6_1());
                      			
                    }
                    // InternalKim.g:7568:4: ( (lv_concept_26_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7569:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7569:5: (lv_concept_26_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7570:6: lv_concept_26_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_6_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_26_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_26_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:7589:3: ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7589:3: ( ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7590:4: ( (lv_type_27_0= 'type' ) ) otherlv_28= 'of' ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7590:4: ( (lv_type_27_0= 'type' ) )
                    // InternalKim.g:7591:5: (lv_type_27_0= 'type' )
                    {
                    // InternalKim.g:7591:5: (lv_type_27_0= 'type' )
                    // InternalKim.g:7592:6: lv_type_27_0= 'type'
                    {
                    lv_type_27_0=(Token)match(input,124,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_type_27_0, grammarAccess.getConceptAccess().getTypeTypeKeyword_7_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "type", true, "type");
                      					
                    }

                    }


                    }

                    otherlv_28=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_28, grammarAccess.getConceptAccess().getOfKeyword_7_1());
                      			
                    }
                    // InternalKim.g:7608:4: ( (lv_concept_29_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7609:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7609:5: (lv_concept_29_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7610:6: lv_concept_29_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_7_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_29_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_29_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:7629:3: ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7629:3: ( ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7630:4: ( (lv_observability_30_0= 'observability' ) ) otherlv_31= 'of' ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7630:4: ( (lv_observability_30_0= 'observability' ) )
                    // InternalKim.g:7631:5: (lv_observability_30_0= 'observability' )
                    {
                    // InternalKim.g:7631:5: (lv_observability_30_0= 'observability' )
                    // InternalKim.g:7632:6: lv_observability_30_0= 'observability'
                    {
                    lv_observability_30_0=(Token)match(input,125,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_observability_30_0, grammarAccess.getConceptAccess().getObservabilityObservabilityKeyword_8_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "observability", true, "observability");
                      					
                    }

                    }


                    }

                    otherlv_31=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_31, grammarAccess.getConceptAccess().getOfKeyword_8_1());
                      			
                    }
                    // InternalKim.g:7648:4: ( (lv_concept_32_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7649:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7649:5: (lv_concept_32_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7650:6: lv_concept_32_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_8_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_32_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_32_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 10 :
                    // InternalKim.g:7669:3: ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:7669:3: ( ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:7670:4: ( (lv_proportion_33_0= 'proportion' ) ) otherlv_34= 'of' ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:7670:4: ( (lv_proportion_33_0= 'proportion' ) )
                    // InternalKim.g:7671:5: (lv_proportion_33_0= 'proportion' )
                    {
                    // InternalKim.g:7671:5: (lv_proportion_33_0= 'proportion' )
                    // InternalKim.g:7672:6: lv_proportion_33_0= 'proportion'
                    {
                    lv_proportion_33_0=(Token)match(input,126,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_proportion_33_0, grammarAccess.getConceptAccess().getProportionProportionKeyword_9_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "proportion", true, "proportion");
                      					
                    }

                    }


                    }

                    otherlv_34=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_34, grammarAccess.getConceptAccess().getOfKeyword_9_1());
                      			
                    }
                    // InternalKim.g:7688:4: ( (lv_concept_35_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7689:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7689:5: (lv_concept_35_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7690:6: lv_concept_35_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_9_2_0());
                      					
                    }
                    pushFollow(FOLLOW_53);
                    lv_concept_35_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_35_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7707:4: ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt159=2;
                    int LA159_0 = input.LA(1);

                    if ( (LA159_0==45) ) {
                        int LA159_1 = input.LA(2);

                        if ( (synpred289_InternalKim()) ) {
                            alt159=1;
                        }
                    }
                    switch (alt159) {
                        case 1 :
                            // InternalKim.g:7708:5: ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:7708:5: ( ( 'in' )=>otherlv_36= 'in' )
                            // InternalKim.g:7709:6: ( 'in' )=>otherlv_36= 'in'
                            {
                            otherlv_36=(Token)match(input,45,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_36, grammarAccess.getConceptAccess().getInKeyword_9_3_0());
                              					
                            }

                            }

                            // InternalKim.g:7715:5: ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:7716:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:7716:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:7717:7: lv_other_37_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_9_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_37_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_37_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 11 :
                    // InternalKim.g:7737:3: ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7737:3: ( ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7738:4: ( (lv_ratio_38_0= 'ratio' ) ) otherlv_39= 'of' ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_41= 'to' ) ( (lv_other_42_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7738:4: ( (lv_ratio_38_0= 'ratio' ) )
                    // InternalKim.g:7739:5: (lv_ratio_38_0= 'ratio' )
                    {
                    // InternalKim.g:7739:5: (lv_ratio_38_0= 'ratio' )
                    // InternalKim.g:7740:6: lv_ratio_38_0= 'ratio'
                    {
                    lv_ratio_38_0=(Token)match(input,127,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_ratio_38_0, grammarAccess.getConceptAccess().getRatioRatioKeyword_10_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "ratio", true, "ratio");
                      					
                    }

                    }


                    }

                    otherlv_39=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_39, grammarAccess.getConceptAccess().getOfKeyword_10_1());
                      			
                    }
                    // InternalKim.g:7756:4: ( (lv_concept_40_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7757:5: (lv_concept_40_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7757:5: (lv_concept_40_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7758:6: lv_concept_40_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_10_2_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_concept_40_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_40_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7775:4: ( ( 'to' )=>otherlv_41= 'to' )
                    // InternalKim.g:7776:5: ( 'to' )=>otherlv_41= 'to'
                    {
                    otherlv_41=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_41, grammarAccess.getConceptAccess().getToKeyword_10_3());
                      				
                    }

                    }

                    // InternalKim.g:7782:4: ( (lv_other_42_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7783:5: (lv_other_42_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7783:5: (lv_other_42_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7784:6: lv_other_42_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_10_4_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_other_42_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"other",
                      							lv_other_42_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 12 :
                    // InternalKim.g:7803:3: ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:7803:3: ( ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )? )
                    // InternalKim.g:7804:4: ( (lv_value_43_0= 'value' ) ) otherlv_44= 'of' ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) ) ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:7804:4: ( (lv_value_43_0= 'value' ) )
                    // InternalKim.g:7805:5: (lv_value_43_0= 'value' )
                    {
                    // InternalKim.g:7805:5: (lv_value_43_0= 'value' )
                    // InternalKim.g:7806:6: lv_value_43_0= 'value'
                    {
                    lv_value_43_0=(Token)match(input,128,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_value_43_0, grammarAccess.getConceptAccess().getValueValueKeyword_11_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "value", true, "value");
                      					
                    }

                    }


                    }

                    otherlv_44=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_44, grammarAccess.getConceptAccess().getOfKeyword_11_1());
                      			
                    }
                    // InternalKim.g:7822:4: ( (lv_concept_45_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7823:5: (lv_concept_45_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7823:5: (lv_concept_45_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7824:6: lv_concept_45_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_11_2_0());
                      					
                    }
                    pushFollow(FOLLOW_101);
                    lv_concept_45_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_45_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:7841:4: ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )?
                    int alt160=2;
                    int LA160_0 = input.LA(1);

                    if ( (LA160_0==54) ) {
                        int LA160_1 = input.LA(2);

                        if ( (synpred294_InternalKim()) ) {
                            alt160=1;
                        }
                    }
                    switch (alt160) {
                        case 1 :
                            // InternalKim.g:7842:5: ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
                            {
                            // InternalKim.g:7842:5: ( ( 'over' )=>otherlv_46= 'over' )
                            // InternalKim.g:7843:6: ( 'over' )=>otherlv_46= 'over'
                            {
                            otherlv_46=(Token)match(input,54,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_46, grammarAccess.getConceptAccess().getOverKeyword_11_3_0());
                              					
                            }

                            }

                            // InternalKim.g:7849:5: ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
                            // InternalKim.g:7850:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
                            {
                            // InternalKim.g:7850:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
                            // InternalKim.g:7851:7: lv_other_47_0= ruleSimpleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_other_47_0=ruleSimpleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getConceptRule());
                              							}
                              							set(
                              								current,
                              								"other",
                              								lv_other_47_0,
                              								"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 13 :
                    // InternalKim.g:7871:3: ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) )
                    {
                    // InternalKim.g:7871:3: ( ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) ) )
                    // InternalKim.g:7872:4: ( (lv_occurrence_48_0= 'occurrence' ) ) otherlv_49= 'of' ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) )
                    {
                    // InternalKim.g:7872:4: ( (lv_occurrence_48_0= 'occurrence' ) )
                    // InternalKim.g:7873:5: (lv_occurrence_48_0= 'occurrence' )
                    {
                    // InternalKim.g:7873:5: (lv_occurrence_48_0= 'occurrence' )
                    // InternalKim.g:7874:6: lv_occurrence_48_0= 'occurrence'
                    {
                    lv_occurrence_48_0=(Token)match(input,129,FOLLOW_99); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_occurrence_48_0, grammarAccess.getConceptAccess().getOccurrenceOccurrenceKeyword_12_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptRule());
                      						}
                      						setWithLastConsumed(current, "occurrence", true, "occurrence");
                      					
                    }

                    }


                    }

                    otherlv_49=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_49, grammarAccess.getConceptAccess().getOfKeyword_12_1());
                      			
                    }
                    // InternalKim.g:7890:4: ( (lv_concept_50_0= ruleSimpleConceptDeclaration ) )
                    // InternalKim.g:7891:5: (lv_concept_50_0= ruleSimpleConceptDeclaration )
                    {
                    // InternalKim.g:7891:5: (lv_concept_50_0= ruleSimpleConceptDeclaration )
                    // InternalKim.g:7892:6: lv_concept_50_0= ruleSimpleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getConceptSimpleConceptDeclarationParserRuleCall_12_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_50_0=ruleSimpleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"concept",
                      							lv_concept_50_0,
                      							"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 14 :
                    // InternalKim.g:7911:3: (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' )
                    {
                    // InternalKim.g:7911:3: (otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')' )
                    // InternalKim.g:7912:4: otherlv_51= '(' ( (lv_declaration_52_0= ruleExpression ) ) otherlv_53= ')'
                    {
                    otherlv_51=(Token)match(input,33,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_51, grammarAccess.getConceptAccess().getLeftParenthesisKeyword_13_0());
                      			
                    }
                    // InternalKim.g:7916:4: ( (lv_declaration_52_0= ruleExpression ) )
                    // InternalKim.g:7917:5: (lv_declaration_52_0= ruleExpression )
                    {
                    // InternalKim.g:7917:5: (lv_declaration_52_0= ruleExpression )
                    // InternalKim.g:7918:6: lv_declaration_52_0= ruleExpression
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptAccess().getDeclarationExpressionParserRuleCall_13_1_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_declaration_52_0=ruleExpression();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptRule());
                      						}
                      						set(
                      							current,
                      							"declaration",
                      							lv_declaration_52_0,
                      							"org.integratedmodelling.kim.Kim.Expression");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_53=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_53, grammarAccess.getConceptAccess().getRightParenthesisKeyword_13_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleConcept"


    // $ANTLR start "entryRuleExpression"
    // InternalKim.g:7944:1: entryRuleExpression returns [EObject current=null] : iv_ruleExpression= ruleExpression EOF ;
    public final EObject entryRuleExpression() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleExpression = null;


        try {
            // InternalKim.g:7944:51: (iv_ruleExpression= ruleExpression EOF )
            // InternalKim.g:7945:2: iv_ruleExpression= ruleExpression EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleExpression=ruleExpression();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleExpression; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleExpression"


    // $ANTLR start "ruleExpression"
    // InternalKim.g:7951:1: ruleExpression returns [EObject current=null] : this_Term_0= ruleTerm ;
    public final EObject ruleExpression() throws RecognitionException {
        EObject current = null;

        EObject this_Term_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7957:2: (this_Term_0= ruleTerm )
            // InternalKim.g:7958:2: this_Term_0= ruleTerm
            {
            if ( state.backtracking==0 ) {

              		/* */
              	
            }
            if ( state.backtracking==0 ) {

              		newCompositeNode(grammarAccess.getExpressionAccess().getTermParserRuleCall());
              	
            }
            pushFollow(FOLLOW_2);
            this_Term_0=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              		current = this_Term_0;
              		afterParserOrEnumRuleCall();
              	
            }

            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleExpression"


    // $ANTLR start "entryRuleTerm"
    // InternalKim.g:7972:1: entryRuleTerm returns [EObject current=null] : iv_ruleTerm= ruleTerm EOF ;
    public final EObject entryRuleTerm() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleTerm = null;


        try {
            // InternalKim.g:7972:45: (iv_ruleTerm= ruleTerm EOF )
            // InternalKim.g:7973:2: iv_ruleTerm= ruleTerm EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTermRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTerm=ruleTerm();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTerm; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTerm"


    // $ANTLR start "ruleTerm"
    // InternalKim.g:7979:1: ruleTerm returns [EObject current=null] : (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) ;
    public final EObject ruleTerm() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_0=null;
        EObject this_Factor_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:7985:2: ( (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* ) )
            // InternalKim.g:7986:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            {
            // InternalKim.g:7986:2: (this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )* )
            // InternalKim.g:7987:3: this_Factor_0= ruleFactor ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getTermAccess().getFactorParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_102);
            this_Factor_0=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_Factor_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:7998:3: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )*
            loop162:
            do {
                int alt162=2;
                int LA162_0 = input.LA(1);

                if ( (LA162_0==130) ) {
                    int LA162_2 = input.LA(2);

                    if ( (synpred297_InternalKim()) ) {
                        alt162=1;
                    }


                }


                switch (alt162) {
            	case 1 :
            	    // InternalKim.g:7999:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
            	    {
            	    // InternalKim.g:7999:4: ( (lv_operators_1_0= 'or' ) )
            	    // InternalKim.g:8000:5: (lv_operators_1_0= 'or' )
            	    {
            	    // InternalKim.g:8000:5: (lv_operators_1_0= 'or' )
            	    // InternalKim.g:8001:6: lv_operators_1_0= 'or'
            	    {
            	    lv_operators_1_0=(Token)match(input,130,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						newLeafNode(lv_operators_1_0, grammarAccess.getTermAccess().getOperatorsOrKeyword_1_0_0());
            	      					
            	    }
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElement(grammarAccess.getTermRule());
            	      						}
            	      						addWithLastConsumed(current, "operators", lv_operators_1_0, "or");
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:8013:4: ( (lv_operands_2_0= ruleFactor ) )
            	    // InternalKim.g:8014:5: (lv_operands_2_0= ruleFactor )
            	    {
            	    // InternalKim.g:8014:5: (lv_operands_2_0= ruleFactor )
            	    // InternalKim.g:8015:6: lv_operands_2_0= ruleFactor
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_102);
            	    lv_operands_2_0=ruleFactor();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getTermRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Factor");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop162;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTerm"


    // $ANTLR start "entryRuleFactor"
    // InternalKim.g:8037:1: entryRuleFactor returns [EObject current=null] : iv_ruleFactor= ruleFactor EOF ;
    public final EObject entryRuleFactor() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFactor = null;


        try {
            // InternalKim.g:8037:47: (iv_ruleFactor= ruleFactor EOF )
            // InternalKim.g:8038:2: iv_ruleFactor= ruleFactor EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFactorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFactor=ruleFactor();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFactor; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFactor"


    // $ANTLR start "ruleFactor"
    // InternalKim.g:8044:1: ruleFactor returns [EObject current=null] : (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) ;
    public final EObject ruleFactor() throws RecognitionException {
        EObject current = null;

        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject this_ConceptDeclaration_0 = null;

        EObject lv_operands_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8050:2: ( (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* ) )
            // InternalKim.g:8051:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            {
            // InternalKim.g:8051:2: (this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )* )
            // InternalKim.g:8052:3: this_ConceptDeclaration_0= ruleConceptDeclaration ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            {
            if ( state.backtracking==0 ) {

              			/* */
              		
            }
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getFactorAccess().getConceptDeclarationParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_103);
            this_ConceptDeclaration_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current = this_ConceptDeclaration_0;
              			afterParserOrEnumRuleCall();
              		
            }
            // InternalKim.g:8063:3: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )*
            loop164:
            do {
                int alt164=2;
                int LA164_0 = input.LA(1);

                if ( (LA164_0==131) ) {
                    int LA164_2 = input.LA(2);

                    if ( (synpred299_InternalKim()) ) {
                        alt164=1;
                    }


                }
                else if ( (LA164_0==132) ) {
                    int LA164_3 = input.LA(2);

                    if ( (synpred299_InternalKim()) ) {
                        alt164=1;
                    }


                }


                switch (alt164) {
            	case 1 :
            	    // InternalKim.g:8064:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
            	    {
            	    // InternalKim.g:8064:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
            	    // InternalKim.g:8065:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    {
            	    // InternalKim.g:8065:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
            	    // InternalKim.g:8066:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    {
            	    // InternalKim.g:8066:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
            	    int alt163=2;
            	    int LA163_0 = input.LA(1);

            	    if ( (LA163_0==131) ) {
            	        alt163=1;
            	    }
            	    else if ( (LA163_0==132) ) {
            	        alt163=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 163, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt163) {
            	        case 1 :
            	            // InternalKim.g:8067:7: lv_operators_1_1= 'and'
            	            {
            	            lv_operators_1_1=(Token)match(input,131,FOLLOW_19); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_1, grammarAccess.getFactorAccess().getOperatorsAndKeyword_1_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_1, null);
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8078:7: lv_operators_1_2= 'follows'
            	            {
            	            lv_operators_1_2=(Token)match(input,132,FOLLOW_19); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_operators_1_2, grammarAccess.getFactorAccess().getOperatorsFollowsKeyword_1_0_0_1());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getFactorRule());
            	              							}
            	              							addWithLastConsumed(current, "operators", lv_operators_1_2, null);
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:8091:4: ( (lv_operands_2_0= ruleTerm ) )
            	    // InternalKim.g:8092:5: (lv_operands_2_0= ruleTerm )
            	    {
            	    // InternalKim.g:8092:5: (lv_operands_2_0= ruleTerm )
            	    // InternalKim.g:8093:6: lv_operands_2_0= ruleTerm
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_103);
            	    lv_operands_2_0=ruleTerm();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getFactorRule());
            	      						}
            	      						add(
            	      							current,
            	      							"operands",
            	      							lv_operands_2_0,
            	      							"org.integratedmodelling.kim.Kim.Term");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop164;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFactor"


    // $ANTLR start "entryRuleSimpleConceptDeclaration"
    // InternalKim.g:8115:1: entryRuleSimpleConceptDeclaration returns [EObject current=null] : iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF ;
    public final EObject entryRuleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleConceptDeclaration = null;


        try {
            // InternalKim.g:8115:65: (iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF )
            // InternalKim.g:8116:2: iv_ruleSimpleConceptDeclaration= ruleSimpleConceptDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleConceptDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleConceptDeclaration=ruleSimpleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleConceptDeclaration; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleConceptDeclaration"


    // $ANTLR start "ruleSimpleConceptDeclaration"
    // InternalKim.g:8122:1: ruleSimpleConceptDeclaration returns [EObject current=null] : ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) ;
    public final EObject ruleSimpleConceptDeclaration() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        EObject lv_main_1_0 = null;



        	enterRule();

        try {
            // InternalKim.g:8128:2: ( ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ ) )
            // InternalKim.g:8129:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            {
            // InternalKim.g:8129:2: ( ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+ )
            // InternalKim.g:8130:3: ( (lv_name_0_0= RULE_STRING ) )? ( (lv_main_1_0= ruleConcept ) )+
            {
            // InternalKim.g:8130:3: ( (lv_name_0_0= RULE_STRING ) )?
            int alt165=2;
            int LA165_0 = input.LA(1);

            if ( (LA165_0==RULE_STRING) ) {
                alt165=1;
            }
            switch (alt165) {
                case 1 :
                    // InternalKim.g:8131:4: (lv_name_0_0= RULE_STRING )
                    {
                    // InternalKim.g:8131:4: (lv_name_0_0= RULE_STRING )
                    // InternalKim.g:8132:5: lv_name_0_0= RULE_STRING
                    {
                    lv_name_0_0=(Token)match(input,RULE_STRING,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_name_0_0, grammarAccess.getSimpleConceptDeclarationAccess().getNameSTRINGTerminalRuleCall_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getSimpleConceptDeclarationRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"name",
                      						lv_name_0_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8148:3: ( (lv_main_1_0= ruleConcept ) )+
            int cnt166=0;
            loop166:
            do {
                int alt166=2;
                alt166 = dfa166.predict(input);
                switch (alt166) {
            	case 1 :
            	    // InternalKim.g:8149:4: (lv_main_1_0= ruleConcept )
            	    {
            	    // InternalKim.g:8149:4: (lv_main_1_0= ruleConcept )
            	    // InternalKim.g:8150:5: lv_main_1_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_104);
            	    lv_main_1_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getSimpleConceptDeclarationRule());
            	      					}
            	      					add(
            	      						current,
            	      						"main",
            	      						lv_main_1_0,
            	      						"org.integratedmodelling.kim.Kim.Concept");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt166 >= 1 ) break loop166;
            	    if (state.backtracking>0) {state.failed=true; return current;}
                        EarlyExitException eee =
                            new EarlyExitException(166, input);
                        throw eee;
                }
                cnt166++;
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleSimpleConceptDeclaration"


    // $ANTLR start "entryRuleUpperOntologyDefinition"
    // InternalKim.g:8171:1: entryRuleUpperOntologyDefinition returns [EObject current=null] : iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF ;
    public final EObject entryRuleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUpperOntologyDefinition = null;


        try {
            // InternalKim.g:8171:64: (iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF )
            // InternalKim.g:8172:2: iv_ruleUpperOntologyDefinition= ruleUpperOntologyDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUpperOntologyDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUpperOntologyDefinition=ruleUpperOntologyDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUpperOntologyDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUpperOntologyDefinition"


    // $ANTLR start "ruleUpperOntologyDefinition"
    // InternalKim.g:8178:1: ruleUpperOntologyDefinition returns [EObject current=null] : (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) ;
    public final EObject ruleUpperOntologyDefinition() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_agentSpecifier_1_1=null;
        Token lv_agentSpecifier_1_2=null;
        Token lv_agentSpecifier_1_3=null;
        Token lv_concept_2_0=null;
        Token lv_concept_5_0=null;
        Token otherlv_6=null;
        Token otherlv_9=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_3_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_4_0 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_1 = null;

        AntlrDatatypeRuleToken lv_coreconcept_7_2 = null;

        AntlrDatatypeRuleToken lv_operand_8_0 = null;

        AntlrDatatypeRuleToken lv_property_10_1 = null;

        AntlrDatatypeRuleToken lv_property_10_2 = null;



        	enterRule();

        try {
            // InternalKim.g:8184:2: ( (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) ) )
            // InternalKim.g:8185:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            {
            // InternalKim.g:8185:2: (otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:8186:3: otherlv_0= 'model' ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            {
            otherlv_0=(Token)match(input,69,FOLLOW_105); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_0, grammarAccess.getUpperOntologyDefinitionAccess().getModelKeyword_0());
              		
            }
            // InternalKim.g:8190:3: ( ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) ) | ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) ) )
            int alt173=2;
            int LA173_0 = input.LA(1);

            if ( (LA173_0==27||(LA173_0>=133 && LA173_0<=135)||(LA173_0>=216 && LA173_0<=219)) ) {
                alt173=1;
            }
            else if ( (LA173_0==61||(LA173_0>=101 && LA173_0<=103)||(LA173_0>=109 && LA173_0<=113)) ) {
                alt173=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 173, 0, input);

                throw nvae;
            }
            switch (alt173) {
                case 1 :
                    // InternalKim.g:8191:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    {
                    // InternalKim.g:8191:4: ( ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) ) )
                    // InternalKim.g:8192:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? ) otherlv_6= 'using' ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    {
                    // InternalKim.g:8192:5: ( ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) ) | ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )? )
                    int alt170=2;
                    int LA170_0 = input.LA(1);

                    if ( ((LA170_0>=133 && LA170_0<=135)) ) {
                        alt170=1;
                    }
                    else if ( (LA170_0==27||(LA170_0>=216 && LA170_0<=219)) ) {
                        alt170=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 170, 0, input);

                        throw nvae;
                    }
                    switch (alt170) {
                        case 1 :
                            // InternalKim.g:8193:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            {
                            // InternalKim.g:8193:6: ( ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) ) )
                            // InternalKim.g:8194:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) ) ( (lv_concept_2_0= 'agent' ) )
                            {
                            // InternalKim.g:8194:7: ( ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) ) )
                            // InternalKim.g:8195:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            {
                            // InternalKim.g:8195:8: ( (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' ) )
                            // InternalKim.g:8196:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            {
                            // InternalKim.g:8196:9: (lv_agentSpecifier_1_1= 'deliberative' | lv_agentSpecifier_1_2= 'interactive' | lv_agentSpecifier_1_3= 'reactive' )
                            int alt167=3;
                            switch ( input.LA(1) ) {
                            case 133:
                                {
                                alt167=1;
                                }
                                break;
                            case 134:
                                {
                                alt167=2;
                                }
                                break;
                            case 135:
                                {
                                alt167=3;
                                }
                                break;
                            default:
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 167, 0, input);

                                throw nvae;
                            }

                            switch (alt167) {
                                case 1 :
                                    // InternalKim.g:8197:10: lv_agentSpecifier_1_1= 'deliberative'
                                    {
                                    lv_agentSpecifier_1_1=(Token)match(input,133,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_1, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierDeliberativeKeyword_1_0_0_0_0_0_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_1, null);
                                      									
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8208:10: lv_agentSpecifier_1_2= 'interactive'
                                    {
                                    lv_agentSpecifier_1_2=(Token)match(input,134,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_2, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierInteractiveKeyword_1_0_0_0_0_0_1());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_2, null);
                                      									
                                    }

                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:8219:10: lv_agentSpecifier_1_3= 'reactive'
                                    {
                                    lv_agentSpecifier_1_3=(Token)match(input,135,FOLLOW_106); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_agentSpecifier_1_3, grammarAccess.getUpperOntologyDefinitionAccess().getAgentSpecifierReactiveKeyword_1_0_0_0_0_0_2());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_1_3, null);
                                      									
                                    }

                                    }
                                    break;

                            }


                            }


                            }

                            // InternalKim.g:8232:7: ( (lv_concept_2_0= 'agent' ) )
                            // InternalKim.g:8233:8: (lv_concept_2_0= 'agent' )
                            {
                            // InternalKim.g:8233:8: (lv_concept_2_0= 'agent' )
                            // InternalKim.g:8234:9: lv_concept_2_0= 'agent'
                            {
                            lv_concept_2_0=(Token)match(input,136,FOLLOW_107); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              									newLeafNode(lv_concept_2_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptAgentKeyword_1_0_0_0_1_0());
                              								
                            }
                            if ( state.backtracking==0 ) {

                              									if (current==null) {
                              										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                              									}
                              									setWithLastConsumed(current, "concept", lv_concept_2_0, "agent");
                              								
                            }

                            }


                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:8248:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            {
                            // InternalKim.g:8248:6: ( ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) ) )?
                            int alt169=2;
                            int LA169_0 = input.LA(1);

                            if ( ((LA169_0>=216 && LA169_0<=219)) ) {
                                alt169=1;
                            }
                            switch (alt169) {
                                case 1 :
                                    // InternalKim.g:8249:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )* ( (lv_concept_5_0= 'relationship' ) )
                                    {
                                    // InternalKim.g:8249:7: ( (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE ) )
                                    // InternalKim.g:8250:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    {
                                    // InternalKim.g:8250:8: (lv_propertySpecifiers_3_0= rulePROPERTY_TYPE )
                                    // InternalKim.g:8251:9: lv_propertySpecifiers_3_0= rulePROPERTY_TYPE
                                    {
                                    if ( state.backtracking==0 ) {

                                      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_0_0());
                                      								
                                    }
                                    pushFollow(FOLLOW_108);
                                    lv_propertySpecifiers_3_0=rulePROPERTY_TYPE();

                                    state._fsp--;
                                    if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									add(
                                      										current,
                                      										"propertySpecifiers",
                                      										lv_propertySpecifiers_3_0,
                                      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                      									afterParserOrEnumRuleCall();
                                      								
                                    }

                                    }


                                    }

                                    // InternalKim.g:8268:7: ( (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE ) )*
                                    loop168:
                                    do {
                                        int alt168=2;
                                        int LA168_0 = input.LA(1);

                                        if ( ((LA168_0>=216 && LA168_0<=219)) ) {
                                            alt168=1;
                                        }


                                        switch (alt168) {
                                    	case 1 :
                                    	    // InternalKim.g:8269:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    {
                                    	    // InternalKim.g:8269:8: (lv_propertySpecifiers_4_0= rulePROPERTY_TYPE )
                                    	    // InternalKim.g:8270:9: lv_propertySpecifiers_4_0= rulePROPERTY_TYPE
                                    	    {
                                    	    if ( state.backtracking==0 ) {

                                    	      									newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_0_0_1_1_0());
                                    	      								
                                    	    }
                                    	    pushFollow(FOLLOW_108);
                                    	    lv_propertySpecifiers_4_0=rulePROPERTY_TYPE();

                                    	    state._fsp--;
                                    	    if (state.failed) return current;
                                    	    if ( state.backtracking==0 ) {

                                    	      									if (current==null) {
                                    	      										current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                                    	      									}
                                    	      									add(
                                    	      										current,
                                    	      										"propertySpecifiers",
                                    	      										lv_propertySpecifiers_4_0,
                                    	      										"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
                                    	      									afterParserOrEnumRuleCall();
                                    	      								
                                    	    }

                                    	    }


                                    	    }
                                    	    break;

                                    	default :
                                    	    break loop168;
                                        }
                                    } while (true);

                                    // InternalKim.g:8287:7: ( (lv_concept_5_0= 'relationship' ) )
                                    // InternalKim.g:8288:8: (lv_concept_5_0= 'relationship' )
                                    {
                                    // InternalKim.g:8288:8: (lv_concept_5_0= 'relationship' )
                                    // InternalKim.g:8289:9: lv_concept_5_0= 'relationship'
                                    {
                                    lv_concept_5_0=(Token)match(input,137,FOLLOW_107); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_concept_5_0, grammarAccess.getUpperOntologyDefinitionAccess().getConceptRelationshipKeyword_1_0_0_1_2_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getUpperOntologyDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "concept", lv_concept_5_0, "relationship");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }


                            }
                            break;

                    }

                    otherlv_6=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_6, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_0_1());
                      				
                    }
                    // InternalKim.g:8307:5: ( ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) ) )
                    // InternalKim.g:8308:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    {
                    // InternalKim.g:8308:6: ( (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId ) )
                    // InternalKim.g:8309:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    {
                    // InternalKim.g:8309:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )
                    int alt171=2;
                    alt171 = dfa171.predict(input);
                    switch (alt171) {
                        case 1 :
                            // InternalKim.g:8310:8: lv_coreconcept_7_1= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptNamespaceIdParserRuleCall_1_0_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_1=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_1,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8326:8: lv_coreconcept_7_2= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getCoreconceptPropertyIdParserRuleCall_1_0_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_coreconcept_7_2=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"coreconcept",
                              									lv_coreconcept_7_2,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8346:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:8346:4: ( ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:8347:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) ) otherlv_9= 'using' ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:8347:5: ( (lv_operand_8_0= ruleOPERATOR_TARGET ) )
                    // InternalKim.g:8348:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    {
                    // InternalKim.g:8348:6: (lv_operand_8_0= ruleOPERATOR_TARGET )
                    // InternalKim.g:8349:7: lv_operand_8_0= ruleOPERATOR_TARGET
                    {
                    if ( state.backtracking==0 ) {

                      							newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getOperandOPERATOR_TARGETParserRuleCall_1_1_0_0());
                      						
                    }
                    pushFollow(FOLLOW_107);
                    lv_operand_8_0=ruleOPERATOR_TARGET();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                      							}
                      							set(
                      								current,
                      								"operand",
                      								lv_operand_8_0,
                      								"org.integratedmodelling.kim.Kim.OPERATOR_TARGET");
                      							afterParserOrEnumRuleCall();
                      						
                    }

                    }


                    }

                    otherlv_9=(Token)match(input,27,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_9, grammarAccess.getUpperOntologyDefinitionAccess().getUsingKeyword_1_1_1());
                      				
                    }
                    // InternalKim.g:8370:5: ( ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) ) )
                    // InternalKim.g:8371:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:8371:6: ( (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId ) )
                    // InternalKim.g:8372:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    {
                    // InternalKim.g:8372:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )
                    int alt172=2;
                    alt172 = dfa172.predict(input);
                    switch (alt172) {
                        case 1 :
                            // InternalKim.g:8373:8: lv_property_10_1= rulePropertyId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_1_2_0_0());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_1=rulePropertyId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_1,
                              									"org.integratedmodelling.kim.Kim.PropertyId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:8389:8: lv_property_10_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              								newCompositeNode(grammarAccess.getUpperOntologyDefinitionAccess().getPropertyNamespaceIdParserRuleCall_1_1_2_0_1());
                              							
                            }
                            pushFollow(FOLLOW_2);
                            lv_property_10_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElementForParent(grammarAccess.getUpperOntologyDefinitionRule());
                              								}
                              								set(
                              									current,
                              									"property",
                              									lv_property_10_2,
                              									"org.integratedmodelling.kim.Kim.NamespaceId");
                              								afterParserOrEnumRuleCall();
                              							
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUpperOntologyDefinition"


    // $ANTLR start "entryRuleConceptStatement"
    // InternalKim.g:8413:1: entryRuleConceptStatement returns [EObject current=null] : iv_ruleConceptStatement= ruleConceptStatement EOF ;
    public final EObject entryRuleConceptStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatement = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8417:2: (iv_ruleConceptStatement= ruleConceptStatement EOF )
            // InternalKim.g:8418:2: iv_ruleConceptStatement= ruleConceptStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatement=ruleConceptStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatement"


    // $ANTLR start "ruleConceptStatement"
    // InternalKim.g:8427:1: ruleConceptStatement returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) ;
    public final EObject ruleConceptStatement() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_2_0=null;
        Token lv_deniable_3_0=null;
        Token lv_subjective_4_0=null;
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        Token otherlv_10=null;
        EObject lv_annotations_0_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;

        AntlrDatatypeRuleToken lv_concept_8_0 = null;

        EObject lv_body_9_0 = null;

        AntlrDatatypeRuleToken lv_name_11_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:8436:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? ) )
            // InternalKim.g:8437:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            {
            // InternalKim.g:8437:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )? )
            // InternalKim.g:8438:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) ) ( (lv_concept_8_0= ruleCONCEPT_TYPE ) ) ( (lv_body_9_0= ruleConceptStatementBody ) ) (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            {
            // InternalKim.g:8438:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop174:
            do {
                int alt174=2;
                int LA174_0 = input.LA(1);

                if ( (LA174_0==RULE_ANNOTATION_ID) ) {
                    alt174=1;
                }


                switch (alt174) {
            	case 1 :
            	    // InternalKim.g:8439:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8439:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8440:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_109);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop174;
                }
            } while (true);

            // InternalKim.g:8457:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) ) )
            // InternalKim.g:8458:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            {
            // InternalKim.g:8458:4: ( ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* ) )
            // InternalKim.g:8459:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());
            // InternalKim.g:8462:5: ( ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )* )
            // InternalKim.g:8463:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            {
            // InternalKim.g:8463:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*
            loop178:
            do {
                int alt178=5;
                alt178 = dfa178.predict(input);
                switch (alt178) {
            	case 1 :
            	    // InternalKim.g:8464:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    {
            	    // InternalKim.g:8464:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
            	    // InternalKim.g:8465:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:8465:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
            	    // InternalKim.g:8466:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:8469:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
            	    // InternalKim.g:8469:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8469:19: ( (lv_abstract_2_0= 'abstract' ) )
            	    // InternalKim.g:8469:20: (lv_abstract_2_0= 'abstract' )
            	    {
            	    // InternalKim.g:8469:20: (lv_abstract_2_0= 'abstract' )
            	    // InternalKim.g:8470:10: lv_abstract_2_0= 'abstract'
            	    {
            	    lv_abstract_2_0=(Token)match(input,138,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_abstract_2_0, grammarAccess.getConceptStatementAccess().getAbstractAbstractKeyword_1_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "abstract", true, "abstract");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:8487:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    {
            	    // InternalKim.g:8487:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
            	    // InternalKim.g:8488:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:8488:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
            	    // InternalKim.g:8489:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:8492:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
            	    // InternalKim.g:8492:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8492:19: ( (lv_deniable_3_0= 'deniable' ) )
            	    // InternalKim.g:8492:20: (lv_deniable_3_0= 'deniable' )
            	    {
            	    // InternalKim.g:8492:20: (lv_deniable_3_0= 'deniable' )
            	    // InternalKim.g:8493:10: lv_deniable_3_0= 'deniable'
            	    {
            	    lv_deniable_3_0=(Token)match(input,139,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_deniable_3_0, grammarAccess.getConceptStatementAccess().getDeniableDeniableKeyword_1_1_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "deniable", true, "deniable");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:8510:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    {
            	    // InternalKim.g:8510:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
            	    // InternalKim.g:8511:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:8511:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
            	    // InternalKim.g:8512:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:8515:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
            	    // InternalKim.g:8515:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8515:19: ( (lv_subjective_4_0= 'subjective' ) )
            	    // InternalKim.g:8515:20: (lv_subjective_4_0= 'subjective' )
            	    {
            	    // InternalKim.g:8515:20: (lv_subjective_4_0= 'subjective' )
            	    // InternalKim.g:8516:10: lv_subjective_4_0= 'subjective'
            	    {
            	    lv_subjective_4_0=(Token)match(input,140,FOLLOW_109); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_subjective_4_0, grammarAccess.getConceptStatementAccess().getSubjectiveSubjectiveKeyword_1_2_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementRule());
            	      										}
            	      										setWithLastConsumed(current, "subjective", true, "subjective");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:8533:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:8533:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
            	    // InternalKim.g:8534:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:8534:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
            	    // InternalKim.g:8535:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:8538:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
            	    // InternalKim.g:8538:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatement", "true");
            	    }
            	    // InternalKim.g:8538:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
            	    int alt177=2;
            	    int LA177_0 = input.LA(1);

            	    if ( ((LA177_0>=133 && LA177_0<=135)) ) {
            	        alt177=1;
            	    }
            	    else if ( ((LA177_0>=216 && LA177_0<=219)) ) {
            	        alt177=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 177, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt177) {
            	        case 1 :
            	            // InternalKim.g:8538:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            {
            	            // InternalKim.g:8538:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
            	            // InternalKim.g:8539:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            {
            	            // InternalKim.g:8539:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
            	            // InternalKim.g:8540:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            {
            	            // InternalKim.g:8540:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
            	            int alt175=3;
            	            switch ( input.LA(1) ) {
            	            case 133:
            	                {
            	                alt175=1;
            	                }
            	                break;
            	            case 134:
            	                {
            	                alt175=2;
            	                }
            	                break;
            	            case 135:
            	                {
            	                alt175=3;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 175, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt175) {
            	                case 1 :
            	                    // InternalKim.g:8541:12: lv_agentSpecifier_5_1= 'deliberative'
            	                    {
            	                    lv_agentSpecifier_5_1=(Token)match(input,133,FOLLOW_109); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_1, grammarAccess.getConceptStatementAccess().getAgentSpecifierDeliberativeKeyword_1_3_0_0_0());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_1, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:8552:12: lv_agentSpecifier_5_2= 'interactive'
            	                    {
            	                    lv_agentSpecifier_5_2=(Token)match(input,134,FOLLOW_109); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_2, grammarAccess.getConceptStatementAccess().getAgentSpecifierInteractiveKeyword_1_3_0_0_1());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_2, null);
            	                      											
            	                    }

            	                    }
            	                    break;
            	                case 3 :
            	                    // InternalKim.g:8563:12: lv_agentSpecifier_5_3= 'reactive'
            	                    {
            	                    lv_agentSpecifier_5_3=(Token)match(input,135,FOLLOW_109); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      												newLeafNode(lv_agentSpecifier_5_3, grammarAccess.getConceptStatementAccess().getAgentSpecifierReactiveKeyword_1_3_0_0_2());
            	                      											
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      												if (current==null) {
            	                      													current = createModelElement(grammarAccess.getConceptStatementRule());
            	                      												}
            	                      												setWithLastConsumed(current, "agentSpecifier", lv_agentSpecifier_5_3, null);
            	                      											
            	                    }

            	                    }
            	                    break;

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8577:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            {
            	            // InternalKim.g:8577:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
            	            // InternalKim.g:8578:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            {
            	            // InternalKim.g:8578:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
            	            // InternalKim.g:8579:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            {
            	            // InternalKim.g:8579:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
            	            // InternalKim.g:8580:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_109);
            	            lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	              												}
            	              												add(
            	              													current,
            	              													"propertySpecifiers",
            	              													lv_propertySpecifiers_6_0,
            	              													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:8597:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
            	            loop176:
            	            do {
            	                int alt176=2;
            	                switch ( input.LA(1) ) {
            	                case 216:
            	                    {
            	                    int LA176_2 = input.LA(2);

            	                    if ( (synpred317_InternalKim()) ) {
            	                        alt176=1;
            	                    }


            	                    }
            	                    break;
            	                case 217:
            	                    {
            	                    int LA176_3 = input.LA(2);

            	                    if ( (synpred317_InternalKim()) ) {
            	                        alt176=1;
            	                    }


            	                    }
            	                    break;
            	                case 218:
            	                    {
            	                    int LA176_4 = input.LA(2);

            	                    if ( (synpred317_InternalKim()) ) {
            	                        alt176=1;
            	                    }


            	                    }
            	                    break;
            	                case 219:
            	                    {
            	                    int LA176_5 = input.LA(2);

            	                    if ( (synpred317_InternalKim()) ) {
            	                        alt176=1;
            	                    }


            	                    }
            	                    break;

            	                }

            	                switch (alt176) {
            	            	case 1 :
            	            	    // InternalKim.g:8598:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    {
            	            	    // InternalKim.g:8598:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
            	            	    // InternalKim.g:8599:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
            	            	      											
            	            	    }
            	            	    pushFollow(FOLLOW_109);
            	            	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      												if (current==null) {
            	            	      													current = createModelElementForParent(grammarAccess.getConceptStatementRule());
            	            	      												}
            	            	      												add(
            	            	      													current,
            	            	      													"propertySpecifiers",
            	            	      													lv_propertySpecifiers_7_0,
            	            	      													"org.integratedmodelling.kim.Kim.PROPERTY_TYPE");
            	            	      												afterParserOrEnumRuleCall();
            	            	      											
            	            	    }

            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop176;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop178;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1());

            }

            // InternalKim.g:8630:3: ( (lv_concept_8_0= ruleCONCEPT_TYPE ) )
            // InternalKim.g:8631:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            {
            // InternalKim.g:8631:4: (lv_concept_8_0= ruleCONCEPT_TYPE )
            // InternalKim.g:8632:5: lv_concept_8_0= ruleCONCEPT_TYPE
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getConceptCONCEPT_TYPEParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_110);
            lv_concept_8_0=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"concept",
              						lv_concept_8_0,
              						"org.integratedmodelling.kim.Kim.CONCEPT_TYPE");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:8649:3: ( (lv_body_9_0= ruleConceptStatementBody ) )
            // InternalKim.g:8650:4: (lv_body_9_0= ruleConceptStatementBody )
            {
            // InternalKim.g:8650:4: (lv_body_9_0= ruleConceptStatementBody )
            // InternalKim.g:8651:5: lv_body_9_0= ruleConceptStatementBody
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getConceptStatementAccess().getBodyConceptStatementBodyParserRuleCall_3_0());
              				
            }
            pushFollow(FOLLOW_111);
            lv_body_9_0=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getConceptStatementRule());
              					}
              					set(
              						current,
              						"body",
              						lv_body_9_0,
              						"org.integratedmodelling.kim.Kim.ConceptStatementBody");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:8668:3: (otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) ) )?
            int alt179=2;
            int LA179_0 = input.LA(1);

            if ( (LA179_0==98) ) {
                alt179=1;
            }
            switch (alt179) {
                case 1 :
                    // InternalKim.g:8669:4: otherlv_10= 'named' ( (lv_name_11_0= ruleNamespaceId ) )
                    {
                    otherlv_10=(Token)match(input,98,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_10, grammarAccess.getConceptStatementAccess().getNamedKeyword_4_0());
                      			
                    }
                    // InternalKim.g:8673:4: ( (lv_name_11_0= ruleNamespaceId ) )
                    // InternalKim.g:8674:5: (lv_name_11_0= ruleNamespaceId )
                    {
                    // InternalKim.g:8674:5: (lv_name_11_0= ruleNamespaceId )
                    // InternalKim.g:8675:6: lv_name_11_0= ruleNamespaceId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getConceptStatementAccess().getNameNamespaceIdParserRuleCall_4_1_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_name_11_0=ruleNamespaceId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getConceptStatementRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_11_0,
                      							"org.integratedmodelling.kim.Kim.NamespaceId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatement"


    // $ANTLR start "entryRuleConceptStatementBody"
    // InternalKim.g:8700:1: entryRuleConceptStatementBody returns [EObject current=null] : iv_ruleConceptStatementBody= ruleConceptStatementBody EOF ;
    public final EObject entryRuleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleConceptStatementBody = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:8704:2: (iv_ruleConceptStatementBody= ruleConceptStatementBody EOF )
            // InternalKim.g:8705:2: iv_ruleConceptStatementBody= ruleConceptStatementBody EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getConceptStatementBodyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleConceptStatementBody=ruleConceptStatementBody();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleConceptStatementBody; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleConceptStatementBody"


    // $ANTLR start "ruleConceptStatementBody"
    // InternalKim.g:8714:1: ruleConceptStatementBody returns [EObject current=null] : ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleConceptStatementBody() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_1_0=null;
        Token lv_root_2_0=null;
        Token lv_name_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_stringIdentifier_6_1=null;
        Token lv_stringIdentifier_6_2=null;
        Token lv_intIdentifier_7_0=null;
        Token otherlv_8=null;
        Token lv_authority_9_1=null;
        Token lv_authority_9_2=null;
        Token lv_docstring_11_0=null;
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        Token otherlv_31=null;
        Token otherlv_33=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_38=null;
        Token otherlv_40=null;
        Token otherlv_41=null;
        Token otherlv_43=null;
        Token otherlv_45=null;
        Token otherlv_47=null;
        Token otherlv_49=null;
        Token otherlv_51=null;
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        Token otherlv_79=null;
        Token otherlv_81=null;
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        Token otherlv_96=null;
        Token otherlv_97=null;
        Token otherlv_99=null;
        Token otherlv_101=null;
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_annotations_0_0 = null;

        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;

        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;

        EObject lv_upperConcept_30_0 = null;

        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;

        EObject lv_describedQuality_36_0 = null;

        EObject lv_describedProportionality_39_0 = null;

        EObject lv_describedInverseProportionalityQuality_42_0 = null;

        EObject lv_describedNonzeroQuality_44_0 = null;

        EObject lv_classifiesQuality_46_0 = null;

        EObject lv_discretizesQuality_48_0 = null;

        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;

        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;

        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;

        EObject lv_whole_78_0 = null;

        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;

        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;

        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;

        EObject lv_inverse_98_0 = null;

        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;

        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;

        EObject lv_restrictions_109_0 = null;

        EObject lv_metadata_112_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3()
        	);

        try {
            // InternalKim.g:8723:2: ( ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:8724:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:8724:2: ( ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:8725:3: ( (lv_annotations_0_0= ruleAnnotation ) )* ( (lv_abstract_1_0= 'abstract' ) )? ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) ) ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:8725:3: ( (lv_annotations_0_0= ruleAnnotation ) )*
            loop180:
            do {
                int alt180=2;
                int LA180_0 = input.LA(1);

                if ( (LA180_0==RULE_ANNOTATION_ID) ) {
                    alt180=1;
                }


                switch (alt180) {
            	case 1 :
            	    // InternalKim.g:8726:4: (lv_annotations_0_0= ruleAnnotation )
            	    {
            	    // InternalKim.g:8726:4: (lv_annotations_0_0= ruleAnnotation )
            	    // InternalKim.g:8727:5: lv_annotations_0_0= ruleAnnotation
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getAnnotationsAnnotationParserRuleCall_0_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_110);
            	    lv_annotations_0_0=ruleAnnotation();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      					}
            	      					add(
            	      						current,
            	      						"annotations",
            	      						lv_annotations_0_0,
            	      						"org.integratedmodelling.kim.Kim.Annotation");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop180;
                }
            } while (true);

            // InternalKim.g:8744:3: ( (lv_abstract_1_0= 'abstract' ) )?
            int alt181=2;
            int LA181_0 = input.LA(1);

            if ( (LA181_0==138) ) {
                alt181=1;
            }
            switch (alt181) {
                case 1 :
                    // InternalKim.g:8745:4: (lv_abstract_1_0= 'abstract' )
                    {
                    // InternalKim.g:8745:4: (lv_abstract_1_0= 'abstract' )
                    // InternalKim.g:8746:5: lv_abstract_1_0= 'abstract'
                    {
                    lv_abstract_1_0=(Token)match(input,138,FOLLOW_112); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_abstract_1_0, grammarAccess.getConceptStatementBodyAccess().getAbstractAbstractKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      					}
                      					setWithLastConsumed(current, "abstract", true, "abstract");
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:8758:3: ( ( (lv_root_2_0= 'root' ) ) | ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? ) )
            int alt186=2;
            int LA186_0 = input.LA(1);

            if ( (LA186_0==81) ) {
                alt186=1;
            }
            else if ( (LA186_0==RULE_CAMELCASE_ID) ) {
                alt186=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 186, 0, input);

                throw nvae;
            }
            switch (alt186) {
                case 1 :
                    // InternalKim.g:8759:4: ( (lv_root_2_0= 'root' ) )
                    {
                    // InternalKim.g:8759:4: ( (lv_root_2_0= 'root' ) )
                    // InternalKim.g:8760:5: (lv_root_2_0= 'root' )
                    {
                    // InternalKim.g:8760:5: (lv_root_2_0= 'root' )
                    // InternalKim.g:8761:6: lv_root_2_0= 'root'
                    {
                    lv_root_2_0=(Token)match(input,81,FOLLOW_113); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_root_2_0, grammarAccess.getConceptStatementBodyAccess().getRootRootKeyword_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      						}
                      						setWithLastConsumed(current, "root", true, "root");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:8774:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    {
                    // InternalKim.g:8774:4: ( ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )? )
                    // InternalKim.g:8775:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) ) (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    {
                    // InternalKim.g:8775:5: ( (lv_name_3_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:8776:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:8776:6: (lv_name_3_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:8777:7: lv_name_3_0= RULE_CAMELCASE_ID
                    {
                    lv_name_3_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_114); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_name_3_0, grammarAccess.getConceptStatementBodyAccess().getNameCAMELCASE_IDTerminalRuleCall_2_1_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"name",
                      								lv_name_3_0,
                      								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      						
                    }

                    }


                    }

                    // InternalKim.g:8793:5: (otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) ) )?
                    int alt185=2;
                    int LA185_0 = input.LA(1);

                    if ( (LA185_0==117) ) {
                        alt185=1;
                    }
                    switch (alt185) {
                        case 1 :
                            // InternalKim.g:8794:6: otherlv_4= 'identified' otherlv_5= 'as' ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) ) otherlv_8= 'by' ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            {
                            otherlv_4=(Token)match(input,117,FOLLOW_7); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_4, grammarAccess.getConceptStatementBodyAccess().getIdentifiedKeyword_2_1_1_0());
                              					
                            }
                            otherlv_5=(Token)match(input,24,FOLLOW_97); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_5, grammarAccess.getConceptStatementBodyAccess().getAsKeyword_2_1_1_1());
                              					
                            }
                            // InternalKim.g:8802:6: ( ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) ) | ( (lv_intIdentifier_7_0= RULE_INT ) ) )
                            int alt183=2;
                            int LA183_0 = input.LA(1);

                            if ( (LA183_0==RULE_STRING||LA183_0==RULE_ID) ) {
                                alt183=1;
                            }
                            else if ( (LA183_0==RULE_INT) ) {
                                alt183=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 183, 0, input);

                                throw nvae;
                            }
                            switch (alt183) {
                                case 1 :
                                    // InternalKim.g:8803:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    {
                                    // InternalKim.g:8803:7: ( ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) ) )
                                    // InternalKim.g:8804:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    {
                                    // InternalKim.g:8804:8: ( (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING ) )
                                    // InternalKim.g:8805:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    {
                                    // InternalKim.g:8805:9: (lv_stringIdentifier_6_1= RULE_ID | lv_stringIdentifier_6_2= RULE_STRING )
                                    int alt182=2;
                                    int LA182_0 = input.LA(1);

                                    if ( (LA182_0==RULE_ID) ) {
                                        alt182=1;
                                    }
                                    else if ( (LA182_0==RULE_STRING) ) {
                                        alt182=2;
                                    }
                                    else {
                                        if (state.backtracking>0) {state.failed=true; return current;}
                                        NoViableAltException nvae =
                                            new NoViableAltException("", 182, 0, input);

                                        throw nvae;
                                    }
                                    switch (alt182) {
                                        case 1 :
                                            // InternalKim.g:8806:10: lv_stringIdentifier_6_1= RULE_ID
                                            {
                                            lv_stringIdentifier_6_1=(Token)match(input,RULE_ID,FOLLOW_90); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_1, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierIDTerminalRuleCall_2_1_1_2_0_0_0());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_1,
                                              											"org.eclipse.xtext.common.Terminals.ID");
                                              									
                                            }

                                            }
                                            break;
                                        case 2 :
                                            // InternalKim.g:8821:10: lv_stringIdentifier_6_2= RULE_STRING
                                            {
                                            lv_stringIdentifier_6_2=(Token)match(input,RULE_STRING,FOLLOW_90); if (state.failed) return current;
                                            if ( state.backtracking==0 ) {

                                              										newLeafNode(lv_stringIdentifier_6_2, grammarAccess.getConceptStatementBodyAccess().getStringIdentifierSTRINGTerminalRuleCall_2_1_1_2_0_0_1());
                                              									
                                            }
                                            if ( state.backtracking==0 ) {

                                              										if (current==null) {
                                              											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                              										}
                                              										setWithLastConsumed(
                                              											current,
                                              											"stringIdentifier",
                                              											lv_stringIdentifier_6_2,
                                              											"org.eclipse.xtext.common.Terminals.STRING");
                                              									
                                            }

                                            }
                                            break;

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8839:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    {
                                    // InternalKim.g:8839:7: ( (lv_intIdentifier_7_0= RULE_INT ) )
                                    // InternalKim.g:8840:8: (lv_intIdentifier_7_0= RULE_INT )
                                    {
                                    // InternalKim.g:8840:8: (lv_intIdentifier_7_0= RULE_INT )
                                    // InternalKim.g:8841:9: lv_intIdentifier_7_0= RULE_INT
                                    {
                                    lv_intIdentifier_7_0=(Token)match(input,RULE_INT,FOLLOW_90); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_intIdentifier_7_0, grammarAccess.getConceptStatementBodyAccess().getIntIdentifierINTTerminalRuleCall_2_1_1_2_1_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"intIdentifier",
                                      										lv_intIdentifier_7_0,
                                      										"org.eclipse.xtext.common.Terminals.INT");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;

                            }

                            otherlv_8=(Token)match(input,93,FOLLOW_98); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_8, grammarAccess.getConceptStatementBodyAccess().getByKeyword_2_1_1_3());
                              					
                            }
                            // InternalKim.g:8862:6: ( ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) ) )
                            // InternalKim.g:8863:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            {
                            // InternalKim.g:8863:7: ( (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH ) )
                            // InternalKim.g:8864:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            {
                            // InternalKim.g:8864:8: (lv_authority_9_1= RULE_UPPERCASE_ID | lv_authority_9_2= RULE_UPPERCASE_PATH )
                            int alt184=2;
                            int LA184_0 = input.LA(1);

                            if ( (LA184_0==RULE_UPPERCASE_ID) ) {
                                alt184=1;
                            }
                            else if ( (LA184_0==RULE_UPPERCASE_PATH) ) {
                                alt184=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 184, 0, input);

                                throw nvae;
                            }
                            switch (alt184) {
                                case 1 :
                                    // InternalKim.g:8865:9: lv_authority_9_1= RULE_UPPERCASE_ID
                                    {
                                    lv_authority_9_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_113); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_1, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_2_1_1_4_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_1,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                                      								
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:8880:9: lv_authority_9_2= RULE_UPPERCASE_PATH
                                    {
                                    lv_authority_9_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_113); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_authority_9_2, grammarAccess.getConceptStatementBodyAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_2_1_1_4_0_1());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getConceptStatementBodyRule());
                                      									}
                                      									setWithLastConsumed(
                                      										current,
                                      										"authority",
                                      										lv_authority_9_2,
                                      										"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                                      								
                                    }

                                    }
                                    break;

                            }


                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:8900:3: ( ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:8901:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:8901:4: ( ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* ) )
            // InternalKim.g:8902:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());
            // InternalKim.g:8905:5: ( ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )* )
            // InternalKim.g:8906:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            {
            // InternalKim.g:8906:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*
            loop213:
            do {
                int alt213=24;
                alt213 = dfa213.predict(input);
                switch (alt213) {
            	case 1 :
            	    // InternalKim.g:8907:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    {
            	    // InternalKim.g:8907:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
            	    // InternalKim.g:8908:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
            	    }
            	    // InternalKim.g:8908:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
            	    // InternalKim.g:8909:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
            	    // InternalKim.g:8912:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
            	    // InternalKim.g:8912:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:8912:19: ( (lv_docstring_11_0= RULE_STRING ) )
            	    // InternalKim.g:8912:20: (lv_docstring_11_0= RULE_STRING )
            	    {
            	    // InternalKim.g:8912:20: (lv_docstring_11_0= RULE_STRING )
            	    // InternalKim.g:8913:10: lv_docstring_11_0= RULE_STRING
            	    {
            	    lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_113); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(lv_docstring_11_0, grammarAccess.getConceptStatementBodyAccess().getDocstringSTRINGTerminalRuleCall_3_0_0());
            	      									
            	    }
            	    if ( state.backtracking==0 ) {

            	      										if (current==null) {
            	      											current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      										}
            	      										setWithLastConsumed(
            	      											current,
            	      											"docstring",
            	      											lv_docstring_11_0,
            	      											"org.eclipse.xtext.common.Terminals.STRING");
            	      									
            	    }

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:8934:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    {
            	    // InternalKim.g:8934:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
            	    // InternalKim.g:8935:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
            	    }
            	    // InternalKim.g:8935:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:8936:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
            	    // InternalKim.g:8939:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:8939:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:8939:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:8939:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    // InternalKim.g:8939:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
            	    int alt188=2;
            	    int LA188_0 = input.LA(1);

            	    if ( (LA188_0==141) ) {
            	        alt188=1;
            	    }
            	    else if ( (LA188_0==143) ) {
            	        alt188=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 188, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt188) {
            	        case 1 :
            	            // InternalKim.g:8940:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            {
            	            // InternalKim.g:8940:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
            	            // InternalKim.g:8941:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
            	            {
            	            otherlv_12=(Token)match(input,141,FOLLOW_115); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_12, grammarAccess.getConceptStatementBodyAccess().getIsKeyword_3_1_0_0_0());
            	              										
            	            }
            	            // InternalKim.g:8945:11: ( (lv_coreConcept_13_0= 'core' ) )?
            	            int alt187=2;
            	            int LA187_0 = input.LA(1);

            	            if ( (LA187_0==142) ) {
            	                alt187=1;
            	            }
            	            switch (alt187) {
            	                case 1 :
            	                    // InternalKim.g:8946:12: (lv_coreConcept_13_0= 'core' )
            	                    {
            	                    // InternalKim.g:8946:12: (lv_coreConcept_13_0= 'core' )
            	                    // InternalKim.g:8947:13: lv_coreConcept_13_0= 'core'
            	                    {
            	                    lv_coreConcept_13_0=(Token)match(input,142,FOLLOW_116); if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													newLeafNode(lv_coreConcept_13_0, grammarAccess.getConceptStatementBodyAccess().getCoreConceptCoreKeyword_3_1_0_0_1_0());
            	                      												
            	                    }
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	                      													}
            	                      													setWithLastConsumed(current, "coreConcept", true, "core");
            	                      												
            	                    }

            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8961:10: ( (lv_alias_14_0= 'equals' ) )
            	            {
            	            // InternalKim.g:8961:10: ( (lv_alias_14_0= 'equals' ) )
            	            // InternalKim.g:8962:11: (lv_alias_14_0= 'equals' )
            	            {
            	            // InternalKim.g:8962:11: (lv_alias_14_0= 'equals' )
            	            // InternalKim.g:8963:12: lv_alias_14_0= 'equals'
            	            {
            	            lv_alias_14_0=(Token)match(input,143,FOLLOW_116); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_alias_14_0, grammarAccess.getConceptStatementBodyAccess().getAliasEqualsKeyword_3_1_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "alias", true, "equals");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:8976:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt191=2;
            	    int LA191_0 = input.LA(1);

            	    if ( (LA191_0==144) ) {
            	        alt191=1;
            	    }
            	    else if ( ((LA191_0>=RULE_LOWERCASE_ID && LA191_0<=RULE_STRING)||LA191_0==RULE_CAMELCASE_ID||LA191_0==33||(LA191_0>=107 && LA191_0<=108)||(LA191_0>=115 && LA191_0<=116)||(LA191_0>=118 && LA191_0<=129)) ) {
            	        alt191=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 191, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt191) {
            	        case 1 :
            	            // InternalKim.g:8977:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            {
            	            // InternalKim.g:8977:10: ( (lv_nothing_15_0= 'nothing' ) )
            	            // InternalKim.g:8978:11: (lv_nothing_15_0= 'nothing' )
            	            {
            	            // InternalKim.g:8978:11: (lv_nothing_15_0= 'nothing' )
            	            // InternalKim.g:8979:12: lv_nothing_15_0= 'nothing'
            	            {
            	            lv_nothing_15_0=(Token)match(input,144,FOLLOW_113); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_nothing_15_0, grammarAccess.getConceptStatementBodyAccess().getNothingNothingKeyword_3_1_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "nothing", true, "nothing");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:8992:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:8992:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:8993:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:8993:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:8994:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:8994:12: (lv_parents_16_0= ruleConceptDeclaration )
            	            // InternalKim.g:8995:13: lv_parents_16_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
            	              												
            	            }
            	            pushFollow(FOLLOW_117);
            	            lv_parents_16_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													add(
            	              														current,
            	              														"parents",
            	              														lv_parents_16_0,
            	              														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              													afterParserOrEnumRuleCall();
            	              												
            	            }

            	            }


            	            }

            	            // InternalKim.g:9012:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
            	            loop190:
            	            do {
            	                int alt190=2;
            	                int LA190_0 = input.LA(1);

            	                if ( (LA190_0==25||(LA190_0>=130 && LA190_0<=131)) ) {
            	                    alt190=1;
            	                }


            	                switch (alt190) {
            	            	case 1 :
            	            	    // InternalKim.g:9013:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    // InternalKim.g:9013:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
            	            	    // InternalKim.g:9014:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    {
            	            	    // InternalKim.g:9014:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
            	            	    // InternalKim.g:9015:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    {
            	            	    // InternalKim.g:9015:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
            	            	    int alt189=3;
            	            	    switch ( input.LA(1) ) {
            	            	    case 25:
            	            	        {
            	            	        alt189=1;
            	            	        }
            	            	        break;
            	            	    case 130:
            	            	        {
            	            	        alt189=2;
            	            	        }
            	            	        break;
            	            	    case 131:
            	            	        {
            	            	        alt189=3;
            	            	        }
            	            	        break;
            	            	    default:
            	            	        if (state.backtracking>0) {state.failed=true; return current;}
            	            	        NoViableAltException nvae =
            	            	            new NoViableAltException("", 189, 0, input);

            	            	        throw nvae;
            	            	    }

            	            	    switch (alt189) {
            	            	        case 1 :
            	            	            // InternalKim.g:9016:15: lv_connectors_17_1= ','
            	            	            {
            	            	            lv_connectors_17_1=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_1, grammarAccess.getConceptStatementBodyAccess().getConnectorsCommaKeyword_3_1_1_1_1_0_0_0());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_1, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 2 :
            	            	            // InternalKim.g:9027:15: lv_connectors_17_2= 'or'
            	            	            {
            	            	            lv_connectors_17_2=(Token)match(input,130,FOLLOW_19); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_2, grammarAccess.getConceptStatementBodyAccess().getConnectorsOrKeyword_3_1_1_1_1_0_0_1());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_2, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;
            	            	        case 3 :
            	            	            // InternalKim.g:9038:15: lv_connectors_17_3= 'and'
            	            	            {
            	            	            lv_connectors_17_3=(Token)match(input,131,FOLLOW_19); if (state.failed) return current;
            	            	            if ( state.backtracking==0 ) {

            	            	              															newLeafNode(lv_connectors_17_3, grammarAccess.getConceptStatementBodyAccess().getConnectorsAndKeyword_3_1_1_1_1_0_0_2());
            	            	              														
            	            	            }
            	            	            if ( state.backtracking==0 ) {

            	            	              															if (current==null) {
            	            	              																current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	            	              															}
            	            	              															addWithLastConsumed(current, "connectors", lv_connectors_17_3, null);
            	            	              														
            	            	            }

            	            	            }
            	            	            break;

            	            	    }


            	            	    }


            	            	    }

            	            	    // InternalKim.g:9051:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9052:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9052:13: (lv_parents_18_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9053:14: lv_parents_18_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
            	            	      													
            	            	    }
            	            	    pushFollow(FOLLOW_117);
            	            	    lv_parents_18_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      														if (current==null) {
            	            	      															current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      														}
            	            	      														add(
            	            	      															current,
            	            	      															"parents",
            	            	      															lv_parents_18_0,
            	            	      															"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      														afterParserOrEnumRuleCall();
            	            	      													
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop190;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:9079:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9079:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9080:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
            	    }
            	    // InternalKim.g:9080:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9081:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
            	    // InternalKim.g:9084:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9084:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9084:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
            	    int alt194=2;
            	    int LA194_0 = input.LA(1);

            	    if ( (LA194_0==145) ) {
            	        alt194=1;
            	    }
            	    else if ( (LA194_0==146) ) {
            	        alt194=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 194, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt194) {
            	        case 1 :
            	            // InternalKim.g:9084:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            {
            	            // InternalKim.g:9084:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
            	            // InternalKim.g:9085:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            {
            	            otherlv_19=(Token)match(input,145,FOLLOW_6); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_19, grammarAccess.getConceptStatementBodyAccess().getExposesKeyword_3_2_0_0());
            	              									
            	            }
            	            // InternalKim.g:9089:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
            	            // InternalKim.g:9090:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            {
            	            // InternalKim.g:9090:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
            	            // InternalKim.g:9091:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_118);
            	            lv_contextualizedTraits_20_0=ruleObservableSemantics();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizedTraits",
            	              													lv_contextualizedTraits_20_0,
            	              													"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9108:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
            	            loop192:
            	            do {
            	                int alt192=2;
            	                int LA192_0 = input.LA(1);

            	                if ( (LA192_0==25) ) {
            	                    alt192=1;
            	                }


            	                switch (alt192) {
            	            	case 1 :
            	            	    // InternalKim.g:9109:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    {
            	            	    otherlv_21=(Token)match(input,25,FOLLOW_6); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_21, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_0_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9113:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
            	            	    // InternalKim.g:9114:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    {
            	            	    // InternalKim.g:9114:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
            	            	    // InternalKim.g:9115:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_118);
            	            	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizedTraits",
            	            	      														lv_contextualizedTraits_22_0,
            	            	      														"org.integratedmodelling.kim.Kim.ObservableSemantics");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop192;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9135:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            {
            	            // InternalKim.g:9135:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
            	            // InternalKim.g:9136:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            {
            	            // InternalKim.g:9136:10: ( (lv_specific_23_0= 'exposing' ) )
            	            // InternalKim.g:9137:11: (lv_specific_23_0= 'exposing' )
            	            {
            	            // InternalKim.g:9137:11: (lv_specific_23_0= 'exposing' )
            	            // InternalKim.g:9138:12: lv_specific_23_0= 'exposing'
            	            {
            	            lv_specific_23_0=(Token)match(input,146,FOLLOW_19); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_specific_23_0, grammarAccess.getConceptStatementBodyAccess().getSpecificExposingKeyword_3_2_1_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "specific", true, "exposing");
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9150:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9151:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9151:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
            	            // InternalKim.g:9152:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_118);
            	            lv_contextualizesTraits_24_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"contextualizesTraits",
            	              													lv_contextualizesTraits_24_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9169:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
            	            loop193:
            	            do {
            	                int alt193=2;
            	                int LA193_0 = input.LA(1);

            	                if ( (LA193_0==25) ) {
            	                    alt193=1;
            	                }


            	                switch (alt193) {
            	            	case 1 :
            	            	    // InternalKim.g:9170:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_25=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_25, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_2_1_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9174:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9175:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9175:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9176:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_118);
            	            	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"contextualizesTraits",
            	            	      														lv_contextualizesTraits_26_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop193;
            	                }
            	            } while (true);


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:9201:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9201:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
            	    // InternalKim.g:9202:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
            	    }
            	    // InternalKim.g:9202:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:9203:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
            	    // InternalKim.g:9206:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:9206:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9206:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
            	    // InternalKim.g:9206:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    {
            	    otherlv_27=(Token)match(input,147,FOLLOW_119); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_27, grammarAccess.getConceptStatementBodyAccess().getDefinesKeyword_3_3_0());
            	      								
            	    }
            	    // InternalKim.g:9210:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
            	    int alt195=2;
            	    int LA195_0 = input.LA(1);

            	    if ( (LA195_0==148) ) {
            	        alt195=1;
            	    }
            	    else if ( (LA195_0==RULE_LOWERCASE_ID||LA195_0==RULE_CAMELCASE_ID||LA195_0==33||(LA195_0>=107 && LA195_0<=108)||(LA195_0>=115 && LA195_0<=116)||(LA195_0>=118 && LA195_0<=129)) ) {
            	        alt195=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 195, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt195) {
            	        case 1 :
            	            // InternalKim.g:9211:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            {
            	            // InternalKim.g:9211:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
            	            // InternalKim.g:9212:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            {
            	            otherlv_28=(Token)match(input,148,FOLLOW_120); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(otherlv_28, grammarAccess.getConceptStatementBodyAccess().getAuthorityKeyword_3_3_1_0_0());
            	              										
            	            }
            	            // InternalKim.g:9216:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
            	            // InternalKim.g:9217:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            {
            	            // InternalKim.g:9217:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
            	            // InternalKim.g:9218:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
            	            {
            	            lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_113); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              													newLeafNode(lv_definedAuthority_29_0, grammarAccess.getConceptStatementBodyAccess().getDefinedAuthorityUPPERCASE_PATHTerminalRuleCall_3_3_1_0_1_0());
            	              												
            	            }
            	            if ( state.backtracking==0 ) {

            	              													if (current==null) {
            	              														current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              													}
            	              													setWithLastConsumed(
            	              														current,
            	              														"definedAuthority",
            	              														lv_definedAuthority_29_0,
            	              														"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
            	              												
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9236:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            {
            	            // InternalKim.g:9236:10: ( (lv_upperConcept_30_0= ruleConcept ) )
            	            // InternalKim.g:9237:11: (lv_upperConcept_30_0= ruleConcept )
            	            {
            	            // InternalKim.g:9237:11: (lv_upperConcept_30_0= ruleConcept )
            	            // InternalKim.g:9238:12: lv_upperConcept_30_0= ruleConcept
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_113);
            	            lv_upperConcept_30_0=ruleConcept();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												set(
            	              													current,
            	              													"upperConcept",
            	              													lv_upperConcept_30_0,
            	              													"org.integratedmodelling.kim.Kim.Concept");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:9262:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9262:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
            	    // InternalKim.g:9263:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
            	    }
            	    // InternalKim.g:9263:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
            	    // InternalKim.g:9264:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
            	    // InternalKim.g:9267:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
            	    // InternalKim.g:9267:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9267:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
            	    // InternalKim.g:9267:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    {
            	    otherlv_31=(Token)match(input,149,FOLLOW_121); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_31, grammarAccess.getConceptStatementBodyAccess().getRequiresKeyword_3_4_0());
            	      								
            	    }
            	    // InternalKim.g:9271:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
            	    // InternalKim.g:9272:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    {
            	    // InternalKim.g:9272:10: (lv_requirements_32_0= ruleIdentityRequirement )
            	    // InternalKim.g:9273:11: lv_requirements_32_0= ruleIdentityRequirement
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_requirements_32_0=ruleIdentityRequirement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"requirements",
            	      												lv_requirements_32_0,
            	      												"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9290:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
            	    loop196:
            	    do {
            	        int alt196=2;
            	        int LA196_0 = input.LA(1);

            	        if ( (LA196_0==25) ) {
            	            alt196=1;
            	        }


            	        switch (alt196) {
            	    	case 1 :
            	    	    // InternalKim.g:9291:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    {
            	    	    otherlv_33=(Token)match(input,25,FOLLOW_121); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_33, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_4_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9295:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
            	    	    // InternalKim.g:9296:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    {
            	    	    // InternalKim.g:9296:11: (lv_requirements_34_0= ruleIdentityRequirement )
            	    	    // InternalKim.g:9297:12: lv_requirements_34_0= ruleIdentityRequirement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_requirements_34_0=ruleIdentityRequirement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"requirements",
            	    	      													lv_requirements_34_0,
            	    	      													"org.integratedmodelling.kim.Kim.IdentityRequirement");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop196;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:9321:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9321:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9322:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
            	    }
            	    // InternalKim.g:9322:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9323:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
            	    // InternalKim.g:9326:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9326:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9326:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9326:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_35=(Token)match(input,150,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_35, grammarAccess.getConceptStatementBodyAccess().getDescribesKeyword_3_5_0());
            	      								
            	    }
            	    // InternalKim.g:9330:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9331:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9331:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
            	    // InternalKim.g:9332:11: lv_describedQuality_36_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_describedQuality_36_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedQuality",
            	      												lv_describedQuality_36_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 7 :
            	    // InternalKim.g:9355:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9355:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9356:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
            	    }
            	    // InternalKim.g:9356:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9357:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
            	    // InternalKim.g:9360:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9360:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9360:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9360:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_37=(Token)match(input,151,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_37, grammarAccess.getConceptStatementBodyAccess().getIncreasesKeyword_3_6_0());
            	      								
            	    }
            	    otherlv_38=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_38, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_6_1());
            	      								
            	    }
            	    // InternalKim.g:9368:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9369:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9369:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
            	    // InternalKim.g:9370:11: lv_describedProportionality_39_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_describedProportionality_39_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedProportionality",
            	      												lv_describedProportionality_39_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 8 :
            	    // InternalKim.g:9393:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9393:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9394:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
            	    }
            	    // InternalKim.g:9394:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9395:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
            	    // InternalKim.g:9398:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9398:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9398:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9398:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_40=(Token)match(input,152,FOLLOW_65); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_40, grammarAccess.getConceptStatementBodyAccess().getDecreasesKeyword_3_7_0());
            	      								
            	    }
            	    otherlv_41=(Token)match(input,28,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_41, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_7_1());
            	      								
            	    }
            	    // InternalKim.g:9406:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9407:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9407:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
            	    // InternalKim.g:9408:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedInverseProportionalityQuality",
            	      												lv_describedInverseProportionalityQuality_42_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 9 :
            	    // InternalKim.g:9431:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9431:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9432:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
            	    }
            	    // InternalKim.g:9432:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9433:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
            	    // InternalKim.g:9436:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9436:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9436:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9436:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_43=(Token)match(input,153,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_43, grammarAccess.getConceptStatementBodyAccess().getMarksKeyword_3_8_0());
            	      								
            	    }
            	    // InternalKim.g:9440:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9441:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9441:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
            	    // InternalKim.g:9442:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"describedNonzeroQuality",
            	      												lv_describedNonzeroQuality_44_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 10 :
            	    // InternalKim.g:9465:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9465:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9466:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
            	    }
            	    // InternalKim.g:9466:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9467:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
            	    // InternalKim.g:9470:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9470:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9470:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9470:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_45=(Token)match(input,154,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_45, grammarAccess.getConceptStatementBodyAccess().getClassifiesKeyword_3_9_0());
            	      								
            	    }
            	    // InternalKim.g:9474:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9475:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9475:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
            	    // InternalKim.g:9476:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_classifiesQuality_46_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"classifiesQuality",
            	      												lv_classifiesQuality_46_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 11 :
            	    // InternalKim.g:9499:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9499:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9500:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
            	    }
            	    // InternalKim.g:9500:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9501:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
            	    // InternalKim.g:9504:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9504:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9504:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9504:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_47=(Token)match(input,155,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_47, grammarAccess.getConceptStatementBodyAccess().getDiscretizesKeyword_3_10_0());
            	      								
            	    }
            	    // InternalKim.g:9508:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9509:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9509:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
            	    // InternalKim.g:9510:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_discretizesQuality_48_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"discretizesQuality",
            	      												lv_discretizesQuality_48_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 12 :
            	    // InternalKim.g:9533:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9533:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9534:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
            	    }
            	    // InternalKim.g:9534:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9535:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
            	    // InternalKim.g:9538:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9538:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9538:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9538:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_49=(Token)match(input,156,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_49, grammarAccess.getConceptStatementBodyAccess().getInheritsKeyword_3_11_0());
            	      								
            	    }
            	    // InternalKim.g:9542:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9543:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9543:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
            	    // InternalKim.g:9544:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"actuallyInheritedTraits",
            	      												lv_actuallyInheritedTraits_50_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9561:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
            	    loop197:
            	    do {
            	        int alt197=2;
            	        int LA197_0 = input.LA(1);

            	        if ( (LA197_0==25) ) {
            	            alt197=1;
            	        }


            	        switch (alt197) {
            	    	case 1 :
            	    	    // InternalKim.g:9562:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_51=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_51, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_11_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9566:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9567:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9567:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9568:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"actuallyInheritedTraits",
            	    	      													lv_actuallyInheritedTraits_52_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop197;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 13 :
            	    // InternalKim.g:9592:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    {
            	    // InternalKim.g:9592:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
            	    // InternalKim.g:9593:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
            	    }
            	    // InternalKim.g:9593:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9594:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
            	    // InternalKim.g:9597:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9597:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9597:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9597:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    otherlv_53=(Token)match(input,157,FOLLOW_122); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_53, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_12_0());
            	      								
            	    }
            	    otherlv_54=(Token)match(input,158,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_54, grammarAccess.getConceptStatementBodyAccess().getRoleKeyword_3_12_1());
            	      								
            	    }
            	    // InternalKim.g:9605:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9606:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9606:10: (lv_roles_55_0= ruleConceptDeclaration )
            	    // InternalKim.g:9607:11: lv_roles_55_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_123);
            	    lv_roles_55_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"roles",
            	      												lv_roles_55_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9624:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
            	    loop198:
            	    do {
            	        int alt198=2;
            	        int LA198_0 = input.LA(1);

            	        if ( (LA198_0==25) ) {
            	            alt198=1;
            	        }


            	        switch (alt198) {
            	    	case 1 :
            	    	    // InternalKim.g:9625:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_56=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_56, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9629:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9630:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9630:11: (lv_roles_57_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9631:12: lv_roles_57_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_123);
            	    	    lv_roles_57_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"roles",
            	    	      													lv_roles_57_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop198;
            	        }
            	    } while (true);

            	    // InternalKim.g:9649:9: (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
            	    int alt200=2;
            	    int LA200_0 = input.LA(1);

            	    if ( (LA200_0==100) ) {
            	        alt200=1;
            	    }
            	    switch (alt200) {
            	        case 1 :
            	            // InternalKim.g:9650:10: otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_58=(Token)match(input,100,FOLLOW_19); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_58, grammarAccess.getConceptStatementBodyAccess().getForKeyword_3_12_4_0());
            	              									
            	            }
            	            // InternalKim.g:9654:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9655:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9655:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
            	            // InternalKim.g:9656:12: lv_targetObservables_59_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_124);
            	            lv_targetObservables_59_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"targetObservables",
            	              													lv_targetObservables_59_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9673:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
            	            loop199:
            	            do {
            	                int alt199=2;
            	                int LA199_0 = input.LA(1);

            	                if ( (LA199_0==25) ) {
            	                    alt199=1;
            	                }


            	                switch (alt199) {
            	            	case 1 :
            	            	    // InternalKim.g:9674:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_60=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_60, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_4_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9678:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9679:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9679:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9680:13: lv_targetObservables_61_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_124);
            	            	    lv_targetObservables_61_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"targetObservables",
            	            	      														lv_targetObservables_61_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop199;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }

            	    // InternalKim.g:9699:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9700:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_62=(Token)match(input,45,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_62, grammarAccess.getConceptStatementBodyAccess().getInKeyword_3_12_5_0());
            	      									
            	    }
            	    // InternalKim.g:9704:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9705:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9705:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
            	    // InternalKim.g:9706:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
            	      											
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_restrictedObservables_63_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      												if (current==null) {
            	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      												}
            	      												add(
            	      													current,
            	      													"restrictedObservables",
            	      													lv_restrictedObservables_63_0,
            	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      												afterParserOrEnumRuleCall();
            	      											
            	    }

            	    }


            	    }

            	    // InternalKim.g:9723:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
            	    loop201:
            	    do {
            	        int alt201=2;
            	        int LA201_0 = input.LA(1);

            	        if ( (LA201_0==25) ) {
            	            alt201=1;
            	        }


            	        switch (alt201) {
            	    	case 1 :
            	    	    // InternalKim.g:9724:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_64=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_64, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_12_5_2_0());
            	    	      										
            	    	    }
            	    	    // InternalKim.g:9728:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9729:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9729:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9730:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
            	    	      												
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      													if (current==null) {
            	    	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      													}
            	    	      													add(
            	    	      														current,
            	    	      														"restrictedObservables",
            	    	      														lv_restrictedObservables_65_0,
            	    	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      													afterParserOrEnumRuleCall();
            	    	      												
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop201;
            	        }
            	    } while (true);


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 14 :
            	    // InternalKim.g:9755:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    {
            	    // InternalKim.g:9755:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
            	    // InternalKim.g:9756:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
            	    }
            	    // InternalKim.g:9756:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
            	    // InternalKim.g:9757:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
            	    // InternalKim.g:9760:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
            	    // InternalKim.g:9760:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9760:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
            	    // InternalKim.g:9760:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    {
            	    otherlv_66=(Token)match(input,159,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_66, grammarAccess.getConceptStatementBodyAccess().getConfersKeyword_3_13_0());
            	      								
            	    }
            	    // InternalKim.g:9764:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9765:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9765:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
            	    // InternalKim.g:9766:11: lv_conferredTraits_67_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_125);
            	    lv_conferredTraits_67_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"conferredTraits",
            	      												lv_conferredTraits_67_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9783:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
            	    loop202:
            	    do {
            	        int alt202=2;
            	        int LA202_0 = input.LA(1);

            	        if ( (LA202_0==25) ) {
            	            alt202=1;
            	        }


            	        switch (alt202) {
            	    	case 1 :
            	    	    // InternalKim.g:9784:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_68=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_68, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9788:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9789:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9789:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9790:12: lv_conferredTraits_69_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_125);
            	    	    lv_conferredTraits_69_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"conferredTraits",
            	    	      													lv_conferredTraits_69_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop202;
            	        }
            	    } while (true);

            	    // InternalKim.g:9808:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
            	    int alt204=2;
            	    int LA204_0 = input.LA(1);

            	    if ( (LA204_0==39) ) {
            	        alt204=1;
            	    }
            	    switch (alt204) {
            	        case 1 :
            	            // InternalKim.g:9809:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            {
            	            otherlv_70=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_70, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_13_3_0());
            	              									
            	            }
            	            // InternalKim.g:9813:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
            	            // InternalKim.g:9814:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            {
            	            // InternalKim.g:9814:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
            	            // InternalKim.g:9815:12: lv_conferredTargets_71_0= ruleConceptDeclaration
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_118);
            	            lv_conferredTargets_71_0=ruleConceptDeclaration();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												add(
            	              													current,
            	              													"conferredTargets",
            	              													lv_conferredTargets_71_0,
            	              													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }

            	            // InternalKim.g:9832:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
            	            loop203:
            	            do {
            	                int alt203=2;
            	                int LA203_0 = input.LA(1);

            	                if ( (LA203_0==25) ) {
            	                    alt203=1;
            	                }


            	                switch (alt203) {
            	            	case 1 :
            	            	    // InternalKim.g:9833:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    {
            	            	    otherlv_72=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      											newLeafNode(otherlv_72, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_13_3_2_0());
            	            	      										
            	            	    }
            	            	    // InternalKim.g:9837:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
            	            	    // InternalKim.g:9838:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    {
            	            	    // InternalKim.g:9838:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
            	            	    // InternalKim.g:9839:13: lv_conferredTargets_73_0= ruleConceptDeclaration
            	            	    {
            	            	    if ( state.backtracking==0 ) {

            	            	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
            	            	      												
            	            	    }
            	            	    pushFollow(FOLLOW_118);
            	            	    lv_conferredTargets_73_0=ruleConceptDeclaration();

            	            	    state._fsp--;
            	            	    if (state.failed) return current;
            	            	    if ( state.backtracking==0 ) {

            	            	      													if (current==null) {
            	            	      														current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	            	      													}
            	            	      													add(
            	            	      														current,
            	            	      														"conferredTargets",
            	            	      														lv_conferredTargets_73_0,
            	            	      														"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	            	      													afterParserOrEnumRuleCall();
            	            	      												
            	            	    }

            	            	    }


            	            	    }


            	            	    }
            	            	    break;

            	            	default :
            	            	    break loop203;
            	                }
            	            } while (true);


            	            }
            	            break;

            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 15 :
            	    // InternalKim.g:9864:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:9864:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:9865:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
            	    }
            	    // InternalKim.g:9865:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:9866:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
            	    // InternalKim.g:9869:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:9869:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9869:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:9869:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    {
            	    // InternalKim.g:9869:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
            	    int alt205=3;
            	    switch ( input.LA(1) ) {
            	    case 160:
            	        {
            	        alt205=1;
            	        }
            	        break;
            	    case 161:
            	        {
            	        alt205=2;
            	        }
            	        break;
            	    case 162:
            	        {
            	        alt205=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 205, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt205) {
            	        case 1 :
            	            // InternalKim.g:9870:10: otherlv_74= 'part'
            	            {
            	            otherlv_74=(Token)match(input,160,FOLLOW_99); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_74, grammarAccess.getConceptStatementBodyAccess().getPartKeyword_3_14_0_0());
            	              									
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:9875:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            {
            	            // InternalKim.g:9875:10: ( (lv_constituent_75_0= 'constituent' ) )
            	            // InternalKim.g:9876:11: (lv_constituent_75_0= 'constituent' )
            	            {
            	            // InternalKim.g:9876:11: (lv_constituent_75_0= 'constituent' )
            	            // InternalKim.g:9877:12: lv_constituent_75_0= 'constituent'
            	            {
            	            lv_constituent_75_0=(Token)match(input,161,FOLLOW_99); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constituent_75_0, grammarAccess.getConceptStatementBodyAccess().getConstituentConstituentKeyword_3_14_0_1_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constituent", true, "constituent");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:9890:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            {
            	            // InternalKim.g:9890:10: ( (lv_constitutes_76_0= 'consists' ) )
            	            // InternalKim.g:9891:11: (lv_constitutes_76_0= 'consists' )
            	            {
            	            // InternalKim.g:9891:11: (lv_constitutes_76_0= 'consists' )
            	            // InternalKim.g:9892:12: lv_constitutes_76_0= 'consists'
            	            {
            	            lv_constitutes_76_0=(Token)match(input,162,FOLLOW_99); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_constitutes_76_0, grammarAccess.getConceptStatementBodyAccess().getConstitutesConsistsKeyword_3_14_0_2_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              												}
            	              												setWithLastConsumed(current, "constitutes", true, "consists");
            	              											
            	            }

            	            }


            	            }


            	            }
            	            break;

            	    }

            	    // InternalKim.g:9905:9: ( (lv_partOf_77_0= 'of' ) )
            	    // InternalKim.g:9906:10: (lv_partOf_77_0= 'of' )
            	    {
            	    // InternalKim.g:9906:10: (lv_partOf_77_0= 'of' )
            	    // InternalKim.g:9907:11: lv_partOf_77_0= 'of'
            	    {
            	    lv_partOf_77_0=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_partOf_77_0, grammarAccess.getConceptStatementBodyAccess().getPartOfOfKeyword_3_14_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											setWithLastConsumed(current, "partOf", true, "of");
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9919:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9920:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9920:10: (lv_whole_78_0= ruleConceptDeclaration )
            	    // InternalKim.g:9921:11: lv_whole_78_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_whole_78_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"whole",
            	      												lv_whole_78_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 16 :
            	    // InternalKim.g:9944:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:9944:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:9945:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
            	    }
            	    // InternalKim.g:9945:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:9946:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
            	    // InternalKim.g:9949:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:9949:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:9949:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:9949:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_79=(Token)match(input,163,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_79, grammarAccess.getConceptStatementBodyAccess().getCreatesKeyword_3_15_0());
            	      								
            	    }
            	    // InternalKim.g:9953:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:9954:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:9954:10: (lv_creates_80_0= ruleConceptDeclaration )
            	    // InternalKim.g:9955:11: lv_creates_80_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_creates_80_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"creates",
            	      												lv_creates_80_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:9972:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
            	    loop206:
            	    do {
            	        int alt206=2;
            	        int LA206_0 = input.LA(1);

            	        if ( (LA206_0==25) ) {
            	            alt206=1;
            	        }


            	        switch (alt206) {
            	    	case 1 :
            	    	    // InternalKim.g:9973:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_81=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_81, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_15_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:9977:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:9978:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:9978:11: (lv_creates_82_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:9979:12: lv_creates_82_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_creates_82_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"creates",
            	    	      													lv_creates_82_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop206;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 17 :
            	    // InternalKim.g:10003:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10003:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
            	    // InternalKim.g:10004:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
            	    }
            	    // InternalKim.g:10004:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
            	    // InternalKim.g:10005:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
            	    // InternalKim.g:10008:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
            	    // InternalKim.g:10008:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10008:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
            	    // InternalKim.g:10008:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    {
            	    otherlv_83=(Token)match(input,164,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_83, grammarAccess.getConceptStatementBodyAccess().getAppliesKeyword_3_16_0());
            	      								
            	    }
            	    otherlv_84=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_84, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_16_1());
            	      								
            	    }
            	    // InternalKim.g:10016:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
            	    // InternalKim.g:10017:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    {
            	    // InternalKim.g:10017:10: (lv_traitTargets_85_0= ruleApplicableTarget )
            	    // InternalKim.g:10018:11: lv_traitTargets_85_0= ruleApplicableTarget
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_traitTargets_85_0=ruleApplicableTarget();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"traitTargets",
            	      												lv_traitTargets_85_0,
            	      												"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10035:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
            	    loop207:
            	    do {
            	        int alt207=2;
            	        int LA207_0 = input.LA(1);

            	        if ( (LA207_0==25) ) {
            	            alt207=1;
            	        }


            	        switch (alt207) {
            	    	case 1 :
            	    	    // InternalKim.g:10036:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    {
            	    	    otherlv_86=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_86, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_16_3_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10040:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
            	    	    // InternalKim.g:10041:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    {
            	    	    // InternalKim.g:10041:11: (lv_traitTargets_87_0= ruleApplicableTarget )
            	    	    // InternalKim.g:10042:12: lv_traitTargets_87_0= ruleApplicableTarget
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_traitTargets_87_0=ruleApplicableTarget();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"traitTargets",
            	    	      													lv_traitTargets_87_0,
            	    	      													"org.integratedmodelling.kim.Kim.ApplicableTarget");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop207;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 18 :
            	    // InternalKim.g:10066:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10066:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10067:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
            	    }
            	    // InternalKim.g:10067:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10068:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
            	    // InternalKim.g:10071:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10071:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10071:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10071:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    {
            	    otherlv_88=(Token)match(input,165,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_88, grammarAccess.getConceptStatementBodyAccess().getLinksKeyword_3_17_0());
            	      								
            	    }
            	    // InternalKim.g:10075:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10076:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10076:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10077:11: lv_domains_89_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_domains_89_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"domains",
            	      												lv_domains_89_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10094:9: ( ( 'to' )=>otherlv_90= 'to' )
            	    // InternalKim.g:10095:10: ( 'to' )=>otherlv_90= 'to'
            	    {
            	    otherlv_90=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      										newLeafNode(otherlv_90, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_2());
            	      									
            	    }

            	    }

            	    // InternalKim.g:10101:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
            	    // InternalKim.g:10102:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    {
            	    // InternalKim.g:10102:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
            	    // InternalKim.g:10103:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_ranges_91_0=ruleSimpleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"ranges",
            	      												lv_ranges_91_0,
            	      												"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10120:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
            	    loop208:
            	    do {
            	        int alt208=2;
            	        int LA208_0 = input.LA(1);

            	        if ( (LA208_0==25) ) {
            	            alt208=1;
            	        }


            	        switch (alt208) {
            	    	case 1 :
            	    	    // InternalKim.g:10121:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_92=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_92, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_17_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10125:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10126:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10126:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10127:12: lv_domains_93_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_22);
            	    	    lv_domains_93_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"domains",
            	    	      													lv_domains_93_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }

            	    	    // InternalKim.g:10144:10: ( ( 'to' )=>otherlv_94= 'to' )
            	    	    // InternalKim.g:10145:11: ( 'to' )=>otherlv_94= 'to'
            	    	    {
            	    	    otherlv_94=(Token)match(input,39,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      											newLeafNode(otherlv_94, grammarAccess.getConceptStatementBodyAccess().getToKeyword_3_17_4_2());
            	    	      										
            	    	    }

            	    	    }

            	    	    // InternalKim.g:10151:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
            	    	    // InternalKim.g:10152:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10152:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
            	    	    // InternalKim.g:10153:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"ranges",
            	    	      													lv_ranges_95_0,
            	    	      													"org.integratedmodelling.kim.Kim.SimpleConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop208;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 19 :
            	    // InternalKim.g:10177:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10177:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
            	    // InternalKim.g:10178:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
            	    }
            	    // InternalKim.g:10178:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
            	    // InternalKim.g:10179:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
            	    // InternalKim.g:10182:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
            	    // InternalKim.g:10182:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10182:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
            	    // InternalKim.g:10182:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    {
            	    otherlv_96=(Token)match(input,166,FOLLOW_99); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_96, grammarAccess.getConceptStatementBodyAccess().getInverseKeyword_3_18_0());
            	      								
            	    }
            	    otherlv_97=(Token)match(input,99,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_97, grammarAccess.getConceptStatementBodyAccess().getOfKeyword_3_18_1());
            	      								
            	    }
            	    // InternalKim.g:10190:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10191:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10191:10: (lv_inverse_98_0= ruleConceptDeclaration )
            	    // InternalKim.g:10192:11: lv_inverse_98_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_inverse_98_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"inverse",
            	      												lv_inverse_98_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 20 :
            	    // InternalKim.g:10215:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10215:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
            	    // InternalKim.g:10216:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
            	    }
            	    // InternalKim.g:10216:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
            	    // InternalKim.g:10217:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
            	    // InternalKim.g:10220:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
            	    // InternalKim.g:10220:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10220:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
            	    // InternalKim.g:10220:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    {
            	    otherlv_99=(Token)match(input,167,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_99, grammarAccess.getConceptStatementBodyAccess().getAffectsKeyword_3_19_0());
            	      								
            	    }
            	    // InternalKim.g:10224:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
            	    // InternalKim.g:10225:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    {
            	    // InternalKim.g:10225:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
            	    // InternalKim.g:10226:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_qualitiesAffected_100_0=ruleConceptDeclaration();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"qualitiesAffected",
            	      												lv_qualitiesAffected_100_0,
            	      												"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10243:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
            	    loop209:
            	    do {
            	        int alt209=2;
            	        int LA209_0 = input.LA(1);

            	        if ( (LA209_0==25) ) {
            	            alt209=1;
            	        }


            	        switch (alt209) {
            	    	case 1 :
            	    	    // InternalKim.g:10244:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    {
            	    	    otherlv_101=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_101, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_19_2_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10248:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
            	    	    // InternalKim.g:10249:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    {
            	    	    // InternalKim.g:10249:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
            	    	    // InternalKim.g:10250:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"qualitiesAffected",
            	    	      													lv_qualitiesAffected_102_0,
            	    	      													"org.integratedmodelling.kim.Kim.ConceptDeclaration");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop209;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 21 :
            	    // InternalKim.g:10274:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    {
            	    // InternalKim.g:10274:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
            	    // InternalKim.g:10275:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
            	    }
            	    // InternalKim.g:10275:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
            	    // InternalKim.g:10276:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
            	    // InternalKim.g:10279:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
            	    // InternalKim.g:10279:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10279:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
            	    // InternalKim.g:10279:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    {
            	    otherlv_103=(Token)match(input,157,FOLLOW_126); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_103, grammarAccess.getConceptStatementBodyAccess().getHasKeyword_3_20_0());
            	      								
            	    }
            	    // InternalKim.g:10283:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
            	    int alt210=2;
            	    int LA210_0 = input.LA(1);

            	    if ( (LA210_0==82) ) {
            	        alt210=1;
            	    }
            	    switch (alt210) {
            	        case 1 :
            	            // InternalKim.g:10284:10: (lv_disjoint_104_0= 'disjoint' )
            	            {
            	            // InternalKim.g:10284:10: (lv_disjoint_104_0= 'disjoint' )
            	            // InternalKim.g:10285:11: lv_disjoint_104_0= 'disjoint'
            	            {
            	            lv_disjoint_104_0=(Token)match(input,82,FOLLOW_127); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              											newLeafNode(lv_disjoint_104_0, grammarAccess.getConceptStatementBodyAccess().getDisjointDisjointKeyword_3_20_1_0());
            	              										
            	            }
            	            if ( state.backtracking==0 ) {

            	              											if (current==null) {
            	              												current = createModelElement(grammarAccess.getConceptStatementBodyRule());
            	              											}
            	              											setWithLastConsumed(current, "disjoint", true, "disjoint");
            	              										
            	            }

            	            }


            	            }
            	            break;

            	    }

            	    otherlv_105=(Token)match(input,168,FOLLOW_128); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_105, grammarAccess.getConceptStatementBodyAccess().getChildrenKeyword_3_20_2());
            	      								
            	    }
            	    // InternalKim.g:10301:9: ( (lv_children_106_0= ruleChildConcept ) )
            	    // InternalKim.g:10302:10: (lv_children_106_0= ruleChildConcept )
            	    {
            	    // InternalKim.g:10302:10: (lv_children_106_0= ruleChildConcept )
            	    // InternalKim.g:10303:11: lv_children_106_0= ruleChildConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_118);
            	    lv_children_106_0=ruleChildConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											add(
            	      												current,
            	      												"children",
            	      												lv_children_106_0,
            	      												"org.integratedmodelling.kim.Kim.ChildConcept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    // InternalKim.g:10320:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
            	    loop211:
            	    do {
            	        int alt211=2;
            	        int LA211_0 = input.LA(1);

            	        if ( (LA211_0==25) ) {
            	            alt211=1;
            	        }


            	        switch (alt211) {
            	    	case 1 :
            	    	    // InternalKim.g:10321:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
            	    	    {
            	    	    otherlv_107=(Token)match(input,25,FOLLOW_128); if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										newLeafNode(otherlv_107, grammarAccess.getConceptStatementBodyAccess().getCommaKeyword_3_20_4_0());
            	    	      									
            	    	    }
            	    	    // InternalKim.g:10325:10: ( (lv_children_108_0= ruleChildConcept ) )
            	    	    // InternalKim.g:10326:11: (lv_children_108_0= ruleChildConcept )
            	    	    {
            	    	    // InternalKim.g:10326:11: (lv_children_108_0= ruleChildConcept )
            	    	    // InternalKim.g:10327:12: lv_children_108_0= ruleChildConcept
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
            	    	      											
            	    	    }
            	    	    pushFollow(FOLLOW_118);
            	    	    lv_children_108_0=ruleChildConcept();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      												if (current==null) {
            	    	      													current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      												}
            	    	      												add(
            	    	      													current,
            	    	      													"children",
            	    	      													lv_children_108_0,
            	    	      													"org.integratedmodelling.kim.Kim.ChildConcept");
            	    	      												afterParserOrEnumRuleCall();
            	    	      											
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop211;
            	        }
            	    } while (true);


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 22 :
            	    // InternalKim.g:10351:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    {
            	    // InternalKim.g:10351:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
            	    // InternalKim.g:10352:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
            	    }
            	    // InternalKim.g:10352:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
            	    // InternalKim.g:10353:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
            	    // InternalKim.g:10356:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
            	    int cnt212=0;
            	    loop212:
            	    do {
            	        int alt212=2;
            	        switch ( input.LA(1) ) {
            	        case 157:
            	            {
            	            int LA212_2 = input.LA(2);

            	            if ( ((synpred377_InternalKim()&&(true))) ) {
            	                alt212=1;
            	            }


            	            }
            	            break;
            	        case 174:
            	            {
            	            int LA212_3 = input.LA(2);

            	            if ( ((synpred377_InternalKim()&&(true))) ) {
            	                alt212=1;
            	            }


            	            }
            	            break;
            	        case 175:
            	            {
            	            int LA212_4 = input.LA(2);

            	            if ( ((synpred377_InternalKim()&&(true))) ) {
            	                alt212=1;
            	            }


            	            }
            	            break;
            	        case 176:
            	            {
            	            int LA212_5 = input.LA(2);

            	            if ( ((synpred377_InternalKim()&&(true))) ) {
            	                alt212=1;
            	            }


            	            }
            	            break;

            	        }

            	        switch (alt212) {
            	    	case 1 :
            	    	    // InternalKim.g:10356:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    {
            	    	    if ( !((true)) ) {
            	    	        if (state.backtracking>0) {state.failed=true; return current;}
            	    	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    	    }
            	    	    // InternalKim.g:10356:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
            	    	    // InternalKim.g:10356:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    {
            	    	    // InternalKim.g:10356:20: (lv_restrictions_109_0= ruleRestrictionStatement )
            	    	    // InternalKim.g:10357:10: lv_restrictions_109_0= ruleRestrictionStatement
            	    	    {
            	    	    if ( state.backtracking==0 ) {

            	    	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
            	    	      									
            	    	    }
            	    	    pushFollow(FOLLOW_113);
            	    	    lv_restrictions_109_0=ruleRestrictionStatement();

            	    	    state._fsp--;
            	    	    if (state.failed) return current;
            	    	    if ( state.backtracking==0 ) {

            	    	      										if (current==null) {
            	    	      											current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	    	      										}
            	    	      										add(
            	    	      											current,
            	    	      											"restrictions",
            	    	      											lv_restrictions_109_0,
            	    	      											"org.integratedmodelling.kim.Kim.RestrictionStatement");
            	    	      										afterParserOrEnumRuleCall();
            	    	      									
            	    	    }

            	    	    }


            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    if ( cnt212 >= 1 ) break loop212;
            	    	    if (state.backtracking>0) {state.failed=true; return current;}
            	                EarlyExitException eee =
            	                    new EarlyExitException(212, input);
            	                throw eee;
            	        }
            	        cnt212++;
            	    } while (true);

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;
            	case 23 :
            	    // InternalKim.g:10379:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    {
            	    // InternalKim.g:10379:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
            	    // InternalKim.g:10380:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
            	    }
            	    // InternalKim.g:10380:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
            	    // InternalKim.g:10381:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
            	    // InternalKim.g:10384:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
            	    // InternalKim.g:10384:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleConceptStatementBody", "true");
            	    }
            	    // InternalKim.g:10384:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
            	    // InternalKim.g:10384:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
            	    {
            	    otherlv_110=(Token)match(input,28,FOLLOW_14); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_110, grammarAccess.getConceptStatementBodyAccess().getWithKeyword_3_22_0());
            	      								
            	    }
            	    otherlv_111=(Token)match(input,29,FOLLOW_15); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_111, grammarAccess.getConceptStatementBodyAccess().getMetadataKeyword_3_22_1());
            	      								
            	    }
            	    // InternalKim.g:10392:9: ( (lv_metadata_112_0= ruleMetadata ) )
            	    // InternalKim.g:10393:10: (lv_metadata_112_0= ruleMetadata )
            	    {
            	    // InternalKim.g:10393:10: (lv_metadata_112_0= ruleMetadata )
            	    // InternalKim.g:10394:11: lv_metadata_112_0= ruleMetadata
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_113);
            	    lv_metadata_112_0=ruleMetadata();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getConceptStatementBodyRule());
            	      											}
            	      											set(
            	      												current,
            	      												"metadata",
            	      												lv_metadata_112_0,
            	      												"org.integratedmodelling.kim.Kim.Metadata");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop213;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleConceptStatementBody"


    // $ANTLR start "entryRuleApplicableTarget"
    // InternalKim.g:10431:1: entryRuleApplicableTarget returns [EObject current=null] : iv_ruleApplicableTarget= ruleApplicableTarget EOF ;
    public final EObject entryRuleApplicableTarget() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleApplicableTarget = null;


        try {
            // InternalKim.g:10431:57: (iv_ruleApplicableTarget= ruleApplicableTarget EOF )
            // InternalKim.g:10432:2: iv_ruleApplicableTarget= ruleApplicableTarget EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getApplicableTargetRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleApplicableTarget=ruleApplicableTarget();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleApplicableTarget; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleApplicableTarget"


    // $ANTLR start "ruleApplicableTarget"
    // InternalKim.g:10438:1: ruleApplicableTarget returns [EObject current=null] : ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) ;
    public final EObject ruleApplicableTarget() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_target_0_0 = null;

        EObject lv_linkFrom_2_0 = null;

        EObject lv_linkTo_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10444:2: ( ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? ) )
            // InternalKim.g:10445:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            {
            // InternalKim.g:10445:2: ( ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )? )
            // InternalKim.g:10446:3: ( (lv_target_0_0= ruleConceptDeclaration ) ) (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            {
            // InternalKim.g:10446:3: ( (lv_target_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:10447:4: (lv_target_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:10447:4: (lv_target_0_0= ruleConceptDeclaration )
            // InternalKim.g:10448:5: lv_target_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getApplicableTargetAccess().getTargetConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_129);
            lv_target_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
              					}
              					set(
              						current,
              						"target",
              						lv_target_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:10465:3: (otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) ) )?
            int alt214=2;
            int LA214_0 = input.LA(1);

            if ( (LA214_0==169) ) {
                alt214=1;
            }
            switch (alt214) {
                case 1 :
                    // InternalKim.g:10466:4: otherlv_1= 'between' ( (lv_linkFrom_2_0= ruleConceptDeclaration ) ) otherlv_3= 'and' ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    {
                    otherlv_1=(Token)match(input,169,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getApplicableTargetAccess().getBetweenKeyword_1_0());
                      			
                    }
                    // InternalKim.g:10470:4: ( (lv_linkFrom_2_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10471:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10471:5: (lv_linkFrom_2_0= ruleConceptDeclaration )
                    // InternalKim.g:10472:6: lv_linkFrom_2_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkFromConceptDeclarationParserRuleCall_1_1_0());
                      					
                    }
                    pushFollow(FOLLOW_130);
                    lv_linkFrom_2_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkFrom",
                      							lv_linkFrom_2_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_3=(Token)match(input,131,FOLLOW_19); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getApplicableTargetAccess().getAndKeyword_1_2());
                      			
                    }
                    // InternalKim.g:10493:4: ( (lv_linkTo_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10494:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10494:5: (lv_linkTo_4_0= ruleConceptDeclaration )
                    // InternalKim.g:10495:6: lv_linkTo_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getApplicableTargetAccess().getLinkToConceptDeclarationParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_linkTo_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getApplicableTargetRule());
                      						}
                      						set(
                      							current,
                      							"linkTo",
                      							lv_linkTo_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleApplicableTarget"


    // $ANTLR start "entryRuleChildConcept"
    // InternalKim.g:10517:1: entryRuleChildConcept returns [EObject current=null] : iv_ruleChildConcept= ruleChildConcept EOF ;
    public final EObject entryRuleChildConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleChildConcept = null;


        try {
            // InternalKim.g:10517:53: (iv_ruleChildConcept= ruleChildConcept EOF )
            // InternalKim.g:10518:2: iv_ruleChildConcept= ruleChildConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getChildConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleChildConcept=ruleChildConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleChildConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleChildConcept"


    // $ANTLR start "ruleChildConcept"
    // InternalKim.g:10524:1: ruleChildConcept returns [EObject current=null] : ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) ;
    public final EObject ruleChildConcept() throws RecognitionException {
        EObject current = null;

        Token lv_abstract_0_0=null;
        Token lv_name_1_0=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject this_ConceptStatementBody_3 = null;



        	enterRule();

        try {
            // InternalKim.g:10530:2: ( ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) ) )
            // InternalKim.g:10531:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            {
            // InternalKim.g:10531:2: ( ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) ) | (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' ) )
            int alt216=2;
            int LA216_0 = input.LA(1);

            if ( (LA216_0==RULE_CAMELCASE_ID||LA216_0==138) ) {
                alt216=1;
            }
            else if ( (LA216_0==33) ) {
                alt216=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 216, 0, input);

                throw nvae;
            }
            switch (alt216) {
                case 1 :
                    // InternalKim.g:10532:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:10532:3: ( ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:10533:4: ( (lv_abstract_0_0= 'abstract' ) )? ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:10533:4: ( (lv_abstract_0_0= 'abstract' ) )?
                    int alt215=2;
                    int LA215_0 = input.LA(1);

                    if ( (LA215_0==138) ) {
                        alt215=1;
                    }
                    switch (alt215) {
                        case 1 :
                            // InternalKim.g:10534:5: (lv_abstract_0_0= 'abstract' )
                            {
                            // InternalKim.g:10534:5: (lv_abstract_0_0= 'abstract' )
                            // InternalKim.g:10535:6: lv_abstract_0_0= 'abstract'
                            {
                            lv_abstract_0_0=(Token)match(input,138,FOLLOW_131); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_abstract_0_0, grammarAccess.getChildConceptAccess().getAbstractAbstractKeyword_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getChildConceptRule());
                              						}
                              						setWithLastConsumed(current, "abstract", true, "abstract");
                              					
                            }

                            }


                            }
                            break;

                    }

                    // InternalKim.g:10547:4: ( (lv_name_1_0= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:10548:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:10548:5: (lv_name_1_0= RULE_CAMELCASE_ID )
                    // InternalKim.g:10549:6: lv_name_1_0= RULE_CAMELCASE_ID
                    {
                    lv_name_1_0=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_1_0, grammarAccess.getChildConceptAccess().getNameCAMELCASE_IDTerminalRuleCall_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getChildConceptRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_1_0,
                      							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10567:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    {
                    // InternalKim.g:10567:3: (otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')' )
                    // InternalKim.g:10568:4: otherlv_2= '(' this_ConceptStatementBody_3= ruleConceptStatementBody otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,33,FOLLOW_110); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getChildConceptAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				/* */
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getChildConceptAccess().getConceptStatementBodyParserRuleCall_1_1());
                      			
                    }
                    pushFollow(FOLLOW_20);
                    this_ConceptStatementBody_3=ruleConceptStatementBody();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = this_ConceptStatementBody_3;
                      				afterParserOrEnumRuleCall();
                      			
                    }
                    otherlv_4=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getChildConceptAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleChildConcept"


    // $ANTLR start "entryRuleIdentityRequirement"
    // InternalKim.g:10592:1: entryRuleIdentityRequirement returns [EObject current=null] : iv_ruleIdentityRequirement= ruleIdentityRequirement EOF ;
    public final EObject entryRuleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleIdentityRequirement = null;


        try {
            // InternalKim.g:10592:60: (iv_ruleIdentityRequirement= ruleIdentityRequirement EOF )
            // InternalKim.g:10593:2: iv_ruleIdentityRequirement= ruleIdentityRequirement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getIdentityRequirementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleIdentityRequirement=ruleIdentityRequirement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleIdentityRequirement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleIdentityRequirement"


    // $ANTLR start "ruleIdentityRequirement"
    // InternalKim.g:10599:1: ruleIdentityRequirement returns [EObject current=null] : ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) ;
    public final EObject ruleIdentityRequirement() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token otherlv_1=null;
        Token otherlv_2=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token lv_authority_8_1=null;
        Token lv_authority_8_2=null;
        EObject lv_identities_4_0 = null;

        EObject lv_identities_6_0 = null;



        	enterRule();

        try {
            // InternalKim.g:10605:2: ( ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) ) )
            // InternalKim.g:10606:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            {
            // InternalKim.g:10606:2: ( ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* ) | (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) ) )
            int alt220=2;
            int LA220_0 = input.LA(1);

            if ( ((LA220_0>=170 && LA220_0<=173)) ) {
                alt220=1;
            }
            else if ( (LA220_0==148) ) {
                alt220=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 220, 0, input);

                throw nvae;
            }
            switch (alt220) {
                case 1 :
                    // InternalKim.g:10607:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    {
                    // InternalKim.g:10607:3: ( (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )* )
                    // InternalKim.g:10608:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' ) ( (lv_identities_4_0= ruleConceptDeclaration ) ) (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    {
                    // InternalKim.g:10608:4: (otherlv_0= 'identity' | otherlv_1= 'attribute' | otherlv_2= 'realm' | otherlv_3= 'extent' )
                    int alt217=4;
                    switch ( input.LA(1) ) {
                    case 170:
                        {
                        alt217=1;
                        }
                        break;
                    case 171:
                        {
                        alt217=2;
                        }
                        break;
                    case 172:
                        {
                        alt217=3;
                        }
                        break;
                    case 173:
                        {
                        alt217=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 217, 0, input);

                        throw nvae;
                    }

                    switch (alt217) {
                        case 1 :
                            // InternalKim.g:10609:5: otherlv_0= 'identity'
                            {
                            otherlv_0=(Token)match(input,170,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_0, grammarAccess.getIdentityRequirementAccess().getIdentityKeyword_0_0_0());
                              				
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10614:5: otherlv_1= 'attribute'
                            {
                            otherlv_1=(Token)match(input,171,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_1, grammarAccess.getIdentityRequirementAccess().getAttributeKeyword_0_0_1());
                              				
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:10619:5: otherlv_2= 'realm'
                            {
                            otherlv_2=(Token)match(input,172,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_2, grammarAccess.getIdentityRequirementAccess().getRealmKeyword_0_0_2());
                              				
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:10624:5: otherlv_3= 'extent'
                            {
                            otherlv_3=(Token)match(input,173,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_3, grammarAccess.getIdentityRequirementAccess().getExtentKeyword_0_0_3());
                              				
                            }

                            }
                            break;

                    }

                    // InternalKim.g:10629:4: ( (lv_identities_4_0= ruleConceptDeclaration ) )
                    // InternalKim.g:10630:5: (lv_identities_4_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:10630:5: (lv_identities_4_0= ruleConceptDeclaration )
                    // InternalKim.g:10631:6: lv_identities_4_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_identities_4_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                      						}
                      						add(
                      							current,
                      							"identities",
                      							lv_identities_4_0,
                      							"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10648:4: (otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) ) )*
                    loop218:
                    do {
                        int alt218=2;
                        int LA218_0 = input.LA(1);

                        if ( (LA218_0==25) ) {
                            int LA218_1 = input.LA(2);

                            if ( ((LA218_1>=RULE_LOWERCASE_ID && LA218_1<=RULE_STRING)||LA218_1==RULE_CAMELCASE_ID||LA218_1==33||(LA218_1>=107 && LA218_1<=108)||(LA218_1>=115 && LA218_1<=116)||(LA218_1>=118 && LA218_1<=129)) ) {
                                alt218=1;
                            }


                        }


                        switch (alt218) {
                    	case 1 :
                    	    // InternalKim.g:10649:5: otherlv_5= ',' ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    {
                    	    otherlv_5=(Token)match(input,25,FOLLOW_19); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_5, grammarAccess.getIdentityRequirementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:10653:5: ( (lv_identities_6_0= ruleConceptDeclaration ) )
                    	    // InternalKim.g:10654:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    {
                    	    // InternalKim.g:10654:6: (lv_identities_6_0= ruleConceptDeclaration )
                    	    // InternalKim.g:10655:7: lv_identities_6_0= ruleConceptDeclaration
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getIdentityRequirementAccess().getIdentitiesConceptDeclarationParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_identities_6_0=ruleConceptDeclaration();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getIdentityRequirementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"identities",
                    	      								lv_identities_6_0,
                    	      								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop218;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10675:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    {
                    // InternalKim.g:10675:3: (otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) ) )
                    // InternalKim.g:10676:4: otherlv_7= 'authority' ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    {
                    otherlv_7=(Token)match(input,148,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_7, grammarAccess.getIdentityRequirementAccess().getAuthorityKeyword_1_0());
                      			
                    }
                    // InternalKim.g:10680:4: ( ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:10681:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:10681:5: ( (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:10682:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:10682:6: (lv_authority_8_1= RULE_UPPERCASE_ID | lv_authority_8_2= RULE_UPPERCASE_PATH )
                    int alt219=2;
                    int LA219_0 = input.LA(1);

                    if ( (LA219_0==RULE_UPPERCASE_ID) ) {
                        alt219=1;
                    }
                    else if ( (LA219_0==RULE_UPPERCASE_PATH) ) {
                        alt219=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 219, 0, input);

                        throw nvae;
                    }
                    switch (alt219) {
                        case 1 :
                            // InternalKim.g:10683:7: lv_authority_8_1= RULE_UPPERCASE_ID
                            {
                            lv_authority_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_1, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_IDTerminalRuleCall_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10698:7: lv_authority_8_2= RULE_UPPERCASE_PATH
                            {
                            lv_authority_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authority_8_2, grammarAccess.getIdentityRequirementAccess().getAuthorityUPPERCASE_PATHTerminalRuleCall_1_1_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getIdentityRequirementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"authority",
                              								lv_authority_8_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleIdentityRequirement"


    // $ANTLR start "entryRuleRestrictionStatement"
    // InternalKim.g:10720:1: entryRuleRestrictionStatement returns [EObject current=null] : iv_ruleRestrictionStatement= ruleRestrictionStatement EOF ;
    public final EObject entryRuleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionStatement = null;


        try {
            // InternalKim.g:10720:61: (iv_ruleRestrictionStatement= ruleRestrictionStatement EOF )
            // InternalKim.g:10721:2: iv_ruleRestrictionStatement= ruleRestrictionStatement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionStatement=ruleRestrictionStatement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionStatement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionStatement"


    // $ANTLR start "ruleRestrictionStatement"
    // InternalKim.g:10727:1: ruleRestrictionStatement returns [EObject current=null] : ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) ;
    public final EObject ruleRestrictionStatement() throws RecognitionException {
        EObject current = null;

        Token lv_relType_0_1=null;
        Token lv_relType_0_2=null;
        Token lv_relType_0_3=null;
        Token lv_relType_0_4=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_authorities_6_1=null;
        Token lv_authorities_6_2=null;
        Token otherlv_7=null;
        Token lv_authorities_8_1=null;
        Token lv_authorities_8_2=null;
        Token otherlv_9=null;
        Token lv_literal_11_0=null;
        Token lv_subject_12_1=null;
        EObject lv_definitions_1_0 = null;

        EObject lv_definitions_3_0 = null;

        EObject lv_value_10_0 = null;

        AntlrDatatypeRuleToken lv_subject_12_2 = null;



        	enterRule();

        try {
            // InternalKim.g:10733:2: ( ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) ) )
            // InternalKim.g:10734:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            {
            // InternalKim.g:10734:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )
            int alt227=3;
            alt227 = dfa227.predict(input);
            switch (alt227) {
                case 1 :
                    // InternalKim.g:10735:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    {
                    // InternalKim.g:10735:3: ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* )
                    // InternalKim.g:10736:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    {
                    // InternalKim.g:10736:4: ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) )
                    // InternalKim.g:10737:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    {
                    // InternalKim.g:10737:5: ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) )
                    // InternalKim.g:10738:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    {
                    // InternalKim.g:10738:6: (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' )
                    int alt221=4;
                    switch ( input.LA(1) ) {
                    case 174:
                        {
                        alt221=1;
                        }
                        break;
                    case 157:
                        {
                        alt221=2;
                        }
                        break;
                    case 175:
                        {
                        alt221=3;
                        }
                        break;
                    case 176:
                        {
                        alt221=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 221, 0, input);

                        throw nvae;
                    }

                    switch (alt221) {
                        case 1 :
                            // InternalKim.g:10739:7: lv_relType_0_1= 'uses'
                            {
                            lv_relType_0_1=(Token)match(input,174,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_1, grammarAccess.getRestrictionStatementAccess().getRelTypeUsesKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_1, null);
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10750:7: lv_relType_0_2= 'has'
                            {
                            lv_relType_0_2=(Token)match(input,157,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_2, grammarAccess.getRestrictionStatementAccess().getRelTypeHasKeyword_0_0_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_2, null);
                              						
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:10761:7: lv_relType_0_3= 'contains'
                            {
                            lv_relType_0_3=(Token)match(input,175,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_3, grammarAccess.getRestrictionStatementAccess().getRelTypeContainsKeyword_0_0_0_2());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_3, null);
                              						
                            }

                            }
                            break;
                        case 4 :
                            // InternalKim.g:10772:7: lv_relType_0_4= 'implies'
                            {
                            lv_relType_0_4=(Token)match(input,176,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_relType_0_4, grammarAccess.getRestrictionStatementAccess().getRelTypeImpliesKeyword_0_0_0_3());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(current, "relType", lv_relType_0_4, null);
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:10785:4: ( (lv_definitions_1_0= ruleRestrictionDefinition ) )
                    // InternalKim.g:10786:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    {
                    // InternalKim.g:10786:5: (lv_definitions_1_0= ruleRestrictionDefinition )
                    // InternalKim.g:10787:6: lv_definitions_1_0= ruleRestrictionDefinition
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_1_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_definitions_1_0=ruleRestrictionDefinition();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						add(
                      							current,
                      							"definitions",
                      							lv_definitions_1_0,
                      							"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10804:4: (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )*
                    loop222:
                    do {
                        int alt222=2;
                        int LA222_0 = input.LA(1);

                        if ( (LA222_0==25) ) {
                            alt222=1;
                        }


                        switch (alt222) {
                    	case 1 :
                    	    // InternalKim.g:10805:5: otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_132); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      					newLeafNode(otherlv_2, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_0_2_0());
                    	      				
                    	    }
                    	    // InternalKim.g:10809:5: ( (lv_definitions_3_0= ruleRestrictionDefinition ) )
                    	    // InternalKim.g:10810:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    {
                    	    // InternalKim.g:10810:6: (lv_definitions_3_0= ruleRestrictionDefinition )
                    	    // InternalKim.g:10811:7: lv_definitions_3_0= ruleRestrictionDefinition
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getDefinitionsRestrictionDefinitionParserRuleCall_0_2_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_definitions_3_0=ruleRestrictionDefinition();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"definitions",
                    	      								lv_definitions_3_0,
                    	      								"org.integratedmodelling.kim.Kim.RestrictionDefinition");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop222;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:10831:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    {
                    // InternalKim.g:10831:3: (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* )
                    // InternalKim.g:10832:4: otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    {
                    otherlv_4=(Token)match(input,174,FOLLOW_133); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_1_0());
                      			
                    }
                    otherlv_5=(Token)match(input,148,FOLLOW_98); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_5, grammarAccess.getRestrictionStatementAccess().getAuthorityKeyword_1_1());
                      			
                    }
                    // InternalKim.g:10840:4: ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) )
                    // InternalKim.g:10841:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    {
                    // InternalKim.g:10841:5: ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) )
                    // InternalKim.g:10842:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    {
                    // InternalKim.g:10842:6: (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH )
                    int alt223=2;
                    int LA223_0 = input.LA(1);

                    if ( (LA223_0==RULE_UPPERCASE_ID) ) {
                        alt223=1;
                    }
                    else if ( (LA223_0==RULE_UPPERCASE_PATH) ) {
                        alt223=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 223, 0, input);

                        throw nvae;
                    }
                    switch (alt223) {
                        case 1 :
                            // InternalKim.g:10843:7: lv_authorities_6_1= RULE_UPPERCASE_ID
                            {
                            lv_authorities_6_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_2_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_1,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10858:7: lv_authorities_6_2= RULE_UPPERCASE_PATH
                            {
                            lv_authorities_6_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_24); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_authorities_6_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_2_0_1());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							addWithLastConsumed(
                              								current,
                              								"authorities",
                              								lv_authorities_6_2,
                              								"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                              						
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:10875:4: ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )*
                    loop225:
                    do {
                        int alt225=2;
                        int LA225_0 = input.LA(1);

                        if ( (LA225_0==25) ) {
                            alt225=1;
                        }


                        switch (alt225) {
                    	case 1 :
                    	    // InternalKim.g:10876:5: ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    {
                    	    // InternalKim.g:10876:5: ( ( ',' )=>otherlv_7= ',' )
                    	    // InternalKim.g:10877:6: ( ',' )=>otherlv_7= ','
                    	    {
                    	    otherlv_7=(Token)match(input,25,FOLLOW_98); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_7, grammarAccess.getRestrictionStatementAccess().getCommaKeyword_1_3_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:10883:5: ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) )
                    	    // InternalKim.g:10884:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    {
                    	    // InternalKim.g:10884:6: ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) )
                    	    // InternalKim.g:10885:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    {
                    	    // InternalKim.g:10885:7: (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH )
                    	    int alt224=2;
                    	    int LA224_0 = input.LA(1);

                    	    if ( (LA224_0==RULE_UPPERCASE_ID) ) {
                    	        alt224=1;
                    	    }
                    	    else if ( (LA224_0==RULE_UPPERCASE_PATH) ) {
                    	        alt224=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return current;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 224, 0, input);

                    	        throw nvae;
                    	    }
                    	    switch (alt224) {
                    	        case 1 :
                    	            // InternalKim.g:10886:8: lv_authorities_8_1= RULE_UPPERCASE_ID
                    	            {
                    	            lv_authorities_8_1=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_24); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_1, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_IDTerminalRuleCall_1_3_1_0_0());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_1,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                    	              							
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // InternalKim.g:10901:8: lv_authorities_8_2= RULE_UPPERCASE_PATH
                    	            {
                    	            lv_authorities_8_2=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_24); if (state.failed) return current;
                    	            if ( state.backtracking==0 ) {

                    	              								newLeafNode(lv_authorities_8_2, grammarAccess.getRestrictionStatementAccess().getAuthoritiesUPPERCASE_PATHTerminalRuleCall_1_3_1_0_1());
                    	              							
                    	            }
                    	            if ( state.backtracking==0 ) {

                    	              								if (current==null) {
                    	              									current = createModelElement(grammarAccess.getRestrictionStatementRule());
                    	              								}
                    	              								addWithLastConsumed(
                    	              									current,
                    	              									"authorities",
                    	              									lv_authorities_8_2,
                    	              									"org.integratedmodelling.kim.Kim.UPPERCASE_PATH");
                    	              							
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop225;
                        }
                    } while (true);


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:10921:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    {
                    // InternalKim.g:10921:3: (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) )
                    // InternalKim.g:10922:4: otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    {
                    otherlv_9=(Token)match(input,174,FOLLOW_132); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_9, grammarAccess.getRestrictionStatementAccess().getUsesKeyword_2_0());
                      			
                    }
                    // InternalKim.g:10926:4: ( (lv_value_10_0= ruleLiteral ) )
                    // InternalKim.g:10927:5: (lv_value_10_0= ruleLiteral )
                    {
                    // InternalKim.g:10927:5: (lv_value_10_0= ruleLiteral )
                    // InternalKim.g:10928:6: lv_value_10_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionStatementAccess().getValueLiteralParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_134);
                    lv_value_10_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_10_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:10945:4: ( (lv_literal_11_0= 'for' ) )
                    // InternalKim.g:10946:5: (lv_literal_11_0= 'for' )
                    {
                    // InternalKim.g:10946:5: (lv_literal_11_0= 'for' )
                    // InternalKim.g:10947:6: lv_literal_11_0= 'for'
                    {
                    lv_literal_11_0=(Token)match(input,100,FOLLOW_85); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_literal_11_0, grammarAccess.getRestrictionStatementAccess().getLiteralForKeyword_2_2_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getRestrictionStatementRule());
                      						}
                      						setWithLastConsumed(current, "literal", true, "for");
                      					
                    }

                    }


                    }

                    // InternalKim.g:10959:4: ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) )
                    // InternalKim.g:10960:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:10960:5: ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) )
                    // InternalKim.g:10961:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    {
                    // InternalKim.g:10961:6: (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId )
                    int alt226=2;
                    int LA226_0 = input.LA(1);

                    if ( (LA226_0==RULE_CAMELCASE_ID) ) {
                        alt226=1;
                    }
                    else if ( (LA226_0==RULE_LOWERCASE_ID) ) {
                        alt226=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 226, 0, input);

                        throw nvae;
                    }
                    switch (alt226) {
                        case 1 :
                            // InternalKim.g:10962:7: lv_subject_12_1= RULE_CAMELCASE_ID
                            {
                            lv_subject_12_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_subject_12_1, grammarAccess.getRestrictionStatementAccess().getSubjectCAMELCASE_IDTerminalRuleCall_2_3_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionStatementRule());
                              							}
                              							setWithLastConsumed(
                              								current,
                              								"subject",
                              								lv_subject_12_1,
                              								"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              						
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:10977:7: lv_subject_12_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionStatementAccess().getSubjectNamespaceIdParserRuleCall_2_3_0_1());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_12_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionStatementRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_12_2,
                              								"org.integratedmodelling.kim.Kim.NamespaceId");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }
                            break;

                    }


                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionStatement"


    // $ANTLR start "entryRuleRestrictionDefinition"
    // InternalKim.g:11000:1: entryRuleRestrictionDefinition returns [EObject current=null] : iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF ;
    public final EObject entryRuleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleRestrictionDefinition = null;


        try {
            // InternalKim.g:11000:62: (iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF )
            // InternalKim.g:11001:2: iv_ruleRestrictionDefinition= ruleRestrictionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getRestrictionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleRestrictionDefinition=ruleRestrictionDefinition();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleRestrictionDefinition; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleRestrictionDefinition"


    // $ANTLR start "ruleRestrictionDefinition"
    // InternalKim.g:11007:1: ruleRestrictionDefinition returns [EObject current=null] : ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) ) ;
    public final EObject ruleRestrictionDefinition() throws RecognitionException {
        EObject current = null;

        Token lv_only_0_0=null;
        Token lv_none_1_0=null;
        Token lv_exactly_2_0=null;
        Token otherlv_3=null;
        Token lv_atLeast_4_0=null;
        Token otherlv_5=null;
        Token lv_atMost_6_0=null;
        Token lv_howmany_7_0=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_source_8_0 = null;

        Enumerator lv_dataType_9_0 = null;

        EObject lv_traitType_11_0 = null;

        EObject lv_subject_14_0 = null;

        EObject lv_value_15_0 = null;

        EObject lv_maxValue_17_0 = null;

        AntlrDatatypeRuleToken lv_property_19_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11013:2: ( ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) ) )
            // InternalKim.g:11014:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) )
            {
            // InternalKim.g:11014:2: ( ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? ) | ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) ) )
            int alt235=2;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
            case 33:
            case 73:
            case 74:
            case 107:
            case 108:
            case 115:
            case 116:
            case 118:
            case 119:
            case 120:
            case 121:
            case 122:
            case 123:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 177:
            case 178:
            case 179:
            case 230:
            case 231:
            case 232:
            case 233:
            case 234:
            case 235:
            case 236:
                {
                alt235=1;
                }
                break;
            case RULE_STRING:
                {
                int LA235_2 = input.LA(2);

                if ( (LA235_2==39||LA235_2==100) ) {
                    alt235=2;
                }
                else if ( (LA235_2==RULE_LOWERCASE_ID||LA235_2==RULE_CAMELCASE_ID||LA235_2==33||(LA235_2>=107 && LA235_2<=108)||(LA235_2>=115 && LA235_2<=116)||(LA235_2>=118 && LA235_2<=129)) ) {
                    alt235=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 235, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
            case 22:
            case 23:
            case 226:
            case 227:
                {
                alt235=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 235, 0, input);

                throw nvae;
            }

            switch (alt235) {
                case 1 :
                    // InternalKim.g:11015:3: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? )
                    {
                    // InternalKim.g:11015:3: ( ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )? )
                    // InternalKim.g:11016:4: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )? ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) ) (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )? ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )?
                    {
                    // InternalKim.g:11016:4: ( ( (lv_only_0_0= 'only' ) ) | ( (lv_none_1_0= 'no' ) ) | ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) ) )?
                    int alt229=4;
                    switch ( input.LA(1) ) {
                        case 177:
                            {
                            alt229=1;
                            }
                            break;
                        case 116:
                            {
                            int LA229_2 = input.LA(2);

                            if ( (synpred401_InternalKim()) ) {
                                alt229=2;
                            }
                            }
                            break;
                        case 178:
                        case 179:
                            {
                            alt229=3;
                            }
                            break;
                    }

                    switch (alt229) {
                        case 1 :
                            // InternalKim.g:11017:5: ( (lv_only_0_0= 'only' ) )
                            {
                            // InternalKim.g:11017:5: ( (lv_only_0_0= 'only' ) )
                            // InternalKim.g:11018:6: (lv_only_0_0= 'only' )
                            {
                            // InternalKim.g:11018:6: (lv_only_0_0= 'only' )
                            // InternalKim.g:11019:7: lv_only_0_0= 'only'
                            {
                            lv_only_0_0=(Token)match(input,177,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_only_0_0, grammarAccess.getRestrictionDefinitionAccess().getOnlyOnlyKeyword_0_0_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "only", true, "only");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11032:5: ( (lv_none_1_0= 'no' ) )
                            {
                            // InternalKim.g:11032:5: ( (lv_none_1_0= 'no' ) )
                            // InternalKim.g:11033:6: (lv_none_1_0= 'no' )
                            {
                            // InternalKim.g:11033:6: (lv_none_1_0= 'no' )
                            // InternalKim.g:11034:7: lv_none_1_0= 'no'
                            {
                            lv_none_1_0=(Token)match(input,116,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_none_1_0, grammarAccess.getRestrictionDefinitionAccess().getNoneNoKeyword_0_0_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							setWithLastConsumed(current, "none", true, "no");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:11047:5: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                            {
                            // InternalKim.g:11047:5: ( ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) ) )
                            // InternalKim.g:11048:6: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) ) ( (lv_howmany_7_0= RULE_INT ) )
                            {
                            // InternalKim.g:11048:6: ( ( (lv_exactly_2_0= 'exactly' ) ) | (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) ) | (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) ) )
                            int alt228=3;
                            int LA228_0 = input.LA(1);

                            if ( (LA228_0==178) ) {
                                alt228=1;
                            }
                            else if ( (LA228_0==179) ) {
                                int LA228_2 = input.LA(2);

                                if ( (LA228_2==181) ) {
                                    alt228=3;
                                }
                                else if ( (LA228_2==180) ) {
                                    alt228=2;
                                }
                                else {
                                    if (state.backtracking>0) {state.failed=true; return current;}
                                    NoViableAltException nvae =
                                        new NoViableAltException("", 228, 2, input);

                                    throw nvae;
                                }
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 228, 0, input);

                                throw nvae;
                            }
                            switch (alt228) {
                                case 1 :
                                    // InternalKim.g:11049:7: ( (lv_exactly_2_0= 'exactly' ) )
                                    {
                                    // InternalKim.g:11049:7: ( (lv_exactly_2_0= 'exactly' ) )
                                    // InternalKim.g:11050:8: (lv_exactly_2_0= 'exactly' )
                                    {
                                    // InternalKim.g:11050:8: (lv_exactly_2_0= 'exactly' )
                                    // InternalKim.g:11051:9: lv_exactly_2_0= 'exactly'
                                    {
                                    lv_exactly_2_0=(Token)match(input,178,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      									newLeafNode(lv_exactly_2_0, grammarAccess.getRestrictionDefinitionAccess().getExactlyExactlyKeyword_0_0_2_0_0_0());
                                      								
                                    }
                                    if ( state.backtracking==0 ) {

                                      									if (current==null) {
                                      										current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      									}
                                      									setWithLastConsumed(current, "exactly", true, "exactly");
                                      								
                                    }

                                    }


                                    }


                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11064:7: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                                    {
                                    // InternalKim.g:11064:7: (otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) ) )
                                    // InternalKim.g:11065:8: otherlv_3= 'at' ( (lv_atLeast_4_0= 'least' ) )
                                    {
                                    otherlv_3=(Token)match(input,179,FOLLOW_135); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_3, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_0_2_0_1_0());
                                      							
                                    }
                                    // InternalKim.g:11069:8: ( (lv_atLeast_4_0= 'least' ) )
                                    // InternalKim.g:11070:9: (lv_atLeast_4_0= 'least' )
                                    {
                                    // InternalKim.g:11070:9: (lv_atLeast_4_0= 'least' )
                                    // InternalKim.g:11071:10: lv_atLeast_4_0= 'least'
                                    {
                                    lv_atLeast_4_0=(Token)match(input,180,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atLeast_4_0, grammarAccess.getRestrictionDefinitionAccess().getAtLeastLeastKeyword_0_0_2_0_1_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "atLeast", true, "least");
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;
                                case 3 :
                                    // InternalKim.g:11085:7: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                                    {
                                    // InternalKim.g:11085:7: (otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) ) )
                                    // InternalKim.g:11086:8: otherlv_5= 'at' ( (lv_atMost_6_0= 'most' ) )
                                    {
                                    otherlv_5=(Token)match(input,179,FOLLOW_136); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      								newLeafNode(otherlv_5, grammarAccess.getRestrictionDefinitionAccess().getAtKeyword_0_0_2_0_2_0());
                                      							
                                    }
                                    // InternalKim.g:11090:8: ( (lv_atMost_6_0= 'most' ) )
                                    // InternalKim.g:11091:9: (lv_atMost_6_0= 'most' )
                                    {
                                    // InternalKim.g:11091:9: (lv_atMost_6_0= 'most' )
                                    // InternalKim.g:11092:10: lv_atMost_6_0= 'most'
                                    {
                                    lv_atMost_6_0=(Token)match(input,181,FOLLOW_68); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      										newLeafNode(lv_atMost_6_0, grammarAccess.getRestrictionDefinitionAccess().getAtMostMostKeyword_0_0_2_0_2_1_0());
                                      									
                                    }
                                    if ( state.backtracking==0 ) {

                                      										if (current==null) {
                                      											current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                                      										}
                                      										setWithLastConsumed(current, "atMost", true, "most");
                                      									
                                    }

                                    }


                                    }


                                    }


                                    }
                                    break;

                            }

                            // InternalKim.g:11106:6: ( (lv_howmany_7_0= RULE_INT ) )
                            // InternalKim.g:11107:7: (lv_howmany_7_0= RULE_INT )
                            {
                            // InternalKim.g:11107:7: (lv_howmany_7_0= RULE_INT )
                            // InternalKim.g:11108:8: lv_howmany_7_0= RULE_INT
                            {
                            lv_howmany_7_0=(Token)match(input,RULE_INT,FOLLOW_132); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_howmany_7_0, grammarAccess.getRestrictionDefinitionAccess().getHowmanyINTTerminalRuleCall_0_0_2_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getRestrictionDefinitionRule());
                              								}
                              								setWithLastConsumed(
                              									current,
                              									"howmany",
                              									lv_howmany_7_0,
                              									"org.eclipse.xtext.common.Terminals.INT");
                              							
                            }

                            }


                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11126:4: ( ( (lv_source_8_0= ruleConceptDeclaration ) ) | ( (lv_dataType_9_0= ruleDataType ) ) )
                    int alt230=2;
                    int LA230_0 = input.LA(1);

                    if ( ((LA230_0>=RULE_LOWERCASE_ID && LA230_0<=RULE_STRING)||LA230_0==RULE_CAMELCASE_ID||LA230_0==33||(LA230_0>=107 && LA230_0<=108)||(LA230_0>=115 && LA230_0<=116)||(LA230_0>=118 && LA230_0<=129)) ) {
                        alt230=1;
                    }
                    else if ( ((LA230_0>=73 && LA230_0<=74)||(LA230_0>=230 && LA230_0<=236)) ) {
                        alt230=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 230, 0, input);

                        throw nvae;
                    }
                    switch (alt230) {
                        case 1 :
                            // InternalKim.g:11127:5: ( (lv_source_8_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:11127:5: ( (lv_source_8_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11128:6: (lv_source_8_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11128:6: (lv_source_8_0= ruleConceptDeclaration )
                            // InternalKim.g:11129:7: lv_source_8_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSourceConceptDeclarationParserRuleCall_0_1_0_0());
                              						
                            }
                            pushFollow(FOLLOW_137);
                            lv_source_8_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"source",
                              								lv_source_8_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:11147:5: ( (lv_dataType_9_0= ruleDataType ) )
                            {
                            // InternalKim.g:11147:5: ( (lv_dataType_9_0= ruleDataType ) )
                            // InternalKim.g:11148:6: (lv_dataType_9_0= ruleDataType )
                            {
                            // InternalKim.g:11148:6: (lv_dataType_9_0= ruleDataType )
                            // InternalKim.g:11149:7: lv_dataType_9_0= ruleDataType
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getDataTypeDataTypeEnumRuleCall_0_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_137);
                            lv_dataType_9_0=ruleDataType();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"dataType",
                              								lv_dataType_9_0,
                              								"org.integratedmodelling.kim.Kim.DataType");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11167:4: (otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) ) )?
                    int alt231=2;
                    int LA231_0 = input.LA(1);

                    if ( (LA231_0==182) ) {
                        alt231=1;
                    }
                    switch (alt231) {
                        case 1 :
                            // InternalKim.g:11168:5: otherlv_10= 'inheriting' ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                            {
                            otherlv_10=(Token)match(input,182,FOLLOW_19); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_10, grammarAccess.getRestrictionDefinitionAccess().getInheritingKeyword_0_2_0());
                              				
                            }
                            // InternalKim.g:11172:5: ( (lv_traitType_11_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11173:6: (lv_traitType_11_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11173:6: (lv_traitType_11_0= ruleConceptDeclaration )
                            // InternalKim.g:11174:7: lv_traitType_11_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getTraitTypeConceptDeclarationParserRuleCall_0_2_1_0());
                              						
                            }
                            pushFollow(FOLLOW_138);
                            lv_traitType_11_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"traitType",
                              								lv_traitType_11_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:11192:4: ( (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) ) )?
                    int alt233=2;
                    int LA233_0 = input.LA(1);

                    if ( (LA233_0==24||LA233_0==100) ) {
                        alt233=1;
                    }
                    switch (alt233) {
                        case 1 :
                            // InternalKim.g:11193:5: (otherlv_12= 'for' | otherlv_13= 'as' ) ( (lv_subject_14_0= ruleConceptDeclaration ) )
                            {
                            // InternalKim.g:11193:5: (otherlv_12= 'for' | otherlv_13= 'as' )
                            int alt232=2;
                            int LA232_0 = input.LA(1);

                            if ( (LA232_0==100) ) {
                                alt232=1;
                            }
                            else if ( (LA232_0==24) ) {
                                alt232=2;
                            }
                            else {
                                if (state.backtracking>0) {state.failed=true; return current;}
                                NoViableAltException nvae =
                                    new NoViableAltException("", 232, 0, input);

                                throw nvae;
                            }
                            switch (alt232) {
                                case 1 :
                                    // InternalKim.g:11194:6: otherlv_12= 'for'
                                    {
                                    otherlv_12=(Token)match(input,100,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_12, grammarAccess.getRestrictionDefinitionAccess().getForKeyword_0_3_0_0());
                                      					
                                    }

                                    }
                                    break;
                                case 2 :
                                    // InternalKim.g:11199:6: otherlv_13= 'as'
                                    {
                                    otherlv_13=(Token)match(input,24,FOLLOW_19); if (state.failed) return current;
                                    if ( state.backtracking==0 ) {

                                      						newLeafNode(otherlv_13, grammarAccess.getRestrictionDefinitionAccess().getAsKeyword_0_3_0_1());
                                      					
                                    }

                                    }
                                    break;

                            }

                            // InternalKim.g:11204:5: ( (lv_subject_14_0= ruleConceptDeclaration ) )
                            // InternalKim.g:11205:6: (lv_subject_14_0= ruleConceptDeclaration )
                            {
                            // InternalKim.g:11205:6: (lv_subject_14_0= ruleConceptDeclaration )
                            // InternalKim.g:11206:7: lv_subject_14_0= ruleConceptDeclaration
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getSubjectConceptDeclarationParserRuleCall_0_3_1_0());
                              						
                            }
                            pushFollow(FOLLOW_2);
                            lv_subject_14_0=ruleConceptDeclaration();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"subject",
                              								lv_subject_14_0,
                              								"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11226:3: ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) )
                    {
                    // InternalKim.g:11226:3: ( ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) ) )
                    // InternalKim.g:11227:4: ( (lv_value_15_0= ruleLiteral ) ) (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )? otherlv_18= 'for' ( (lv_property_19_0= rulePropertyId ) )
                    {
                    // InternalKim.g:11227:4: ( (lv_value_15_0= ruleLiteral ) )
                    // InternalKim.g:11228:5: (lv_value_15_0= ruleLiteral )
                    {
                    // InternalKim.g:11228:5: (lv_value_15_0= ruleLiteral )
                    // InternalKim.g:11229:6: lv_value_15_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getValueLiteralParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_139);
                    lv_value_15_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"value",
                      							lv_value_15_0,
                      							"org.integratedmodelling.kim.Kim.Literal");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11246:4: (otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) ) )?
                    int alt234=2;
                    int LA234_0 = input.LA(1);

                    if ( (LA234_0==39) ) {
                        alt234=1;
                    }
                    switch (alt234) {
                        case 1 :
                            // InternalKim.g:11247:5: otherlv_16= 'to' ( (lv_maxValue_17_0= ruleNumber ) )
                            {
                            otherlv_16=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					newLeafNode(otherlv_16, grammarAccess.getRestrictionDefinitionAccess().getToKeyword_1_1_0());
                              				
                            }
                            // InternalKim.g:11251:5: ( (lv_maxValue_17_0= ruleNumber ) )
                            // InternalKim.g:11252:6: (lv_maxValue_17_0= ruleNumber )
                            {
                            // InternalKim.g:11252:6: (lv_maxValue_17_0= ruleNumber )
                            // InternalKim.g:11253:7: lv_maxValue_17_0= ruleNumber
                            {
                            if ( state.backtracking==0 ) {

                              							newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getMaxValueNumberParserRuleCall_1_1_1_0());
                              						
                            }
                            pushFollow(FOLLOW_134);
                            lv_maxValue_17_0=ruleNumber();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                              							}
                              							set(
                              								current,
                              								"maxValue",
                              								lv_maxValue_17_0,
                              								"org.integratedmodelling.kim.Kim.Number");
                              							afterParserOrEnumRuleCall();
                              						
                            }

                            }


                            }


                            }
                            break;

                    }

                    otherlv_18=(Token)match(input,100,FOLLOW_23); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_18, grammarAccess.getRestrictionDefinitionAccess().getForKeyword_1_2());
                      			
                    }
                    // InternalKim.g:11275:4: ( (lv_property_19_0= rulePropertyId ) )
                    // InternalKim.g:11276:5: (lv_property_19_0= rulePropertyId )
                    {
                    // InternalKim.g:11276:5: (lv_property_19_0= rulePropertyId )
                    // InternalKim.g:11277:6: lv_property_19_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getRestrictionDefinitionAccess().getPropertyPropertyIdParserRuleCall_1_3_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_property_19_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getRestrictionDefinitionRule());
                      						}
                      						set(
                      							current,
                      							"property",
                      							lv_property_19_0,
                      							"org.integratedmodelling.kim.Kim.PropertyId");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleRestrictionDefinition"


    // $ANTLR start "entryRuleAnnotation"
    // InternalKim.g:11299:1: entryRuleAnnotation returns [EObject current=null] : iv_ruleAnnotation= ruleAnnotation EOF ;
    public final EObject entryRuleAnnotation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleAnnotation = null;


        try {
            // InternalKim.g:11299:51: (iv_ruleAnnotation= ruleAnnotation EOF )
            // InternalKim.g:11300:2: iv_ruleAnnotation= ruleAnnotation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAnnotationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAnnotation=ruleAnnotation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAnnotation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAnnotation"


    // $ANTLR start "ruleAnnotation"
    // InternalKim.g:11306:1: ruleAnnotation returns [EObject current=null] : ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) ;
    public final EObject ruleAnnotation() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_0=null;
        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11312:2: ( ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? ) )
            // InternalKim.g:11313:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            {
            // InternalKim.g:11313:2: ( ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )? )
            // InternalKim.g:11314:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) ) (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            {
            // InternalKim.g:11314:3: ( (lv_name_0_0= RULE_ANNOTATION_ID ) )
            // InternalKim.g:11315:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            {
            // InternalKim.g:11315:4: (lv_name_0_0= RULE_ANNOTATION_ID )
            // InternalKim.g:11316:5: lv_name_0_0= RULE_ANNOTATION_ID
            {
            lv_name_0_0=(Token)match(input,RULE_ANNOTATION_ID,FOLLOW_140); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_name_0_0, grammarAccess.getAnnotationAccess().getNameANNOTATION_IDTerminalRuleCall_0_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getAnnotationRule());
              					}
              					setWithLastConsumed(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.ANNOTATION_ID");
              				
            }

            }


            }

            // InternalKim.g:11332:3: (otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )?
            int alt237=2;
            int LA237_0 = input.LA(1);

            if ( (LA237_0==33) ) {
                alt237=1;
            }
            switch (alt237) {
                case 1 :
                    // InternalKim.g:11333:4: otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
                    {
                    otherlv_1=(Token)match(input,33,FOLLOW_141); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getAnnotationAccess().getLeftParenthesisKeyword_1_0());
                      			
                    }
                    // InternalKim.g:11337:4: ( (lv_parameters_2_0= ruleParameterList ) )?
                    int alt236=2;
                    int LA236_0 = input.LA(1);

                    if ( ((LA236_0>=RULE_LOWERCASE_ID && LA236_0<=RULE_CAMELCASE_ID)||(LA236_0>=RULE_ID && LA236_0<=RULE_INT)||(LA236_0>=22 && LA236_0<=23)||LA236_0==25||LA236_0==33||LA236_0==46||LA236_0==183||(LA236_0>=226 && LA236_0<=227)) ) {
                        alt236=1;
                    }
                    switch (alt236) {
                        case 1 :
                            // InternalKim.g:11338:5: (lv_parameters_2_0= ruleParameterList )
                            {
                            // InternalKim.g:11338:5: (lv_parameters_2_0= ruleParameterList )
                            // InternalKim.g:11339:6: lv_parameters_2_0= ruleParameterList
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getAnnotationAccess().getParametersParameterListParserRuleCall_1_1_0());
                              					
                            }
                            pushFollow(FOLLOW_20);
                            lv_parameters_2_0=ruleParameterList();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getAnnotationRule());
                              						}
                              						set(
                              							current,
                              							"parameters",
                              							lv_parameters_2_0,
                              							"org.integratedmodelling.kim.Kim.ParameterList");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }


                            }
                            break;

                    }

                    otherlv_3=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_3, grammarAccess.getAnnotationAccess().getRightParenthesisKeyword_1_2());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAnnotation"


    // $ANTLR start "entryRuleList"
    // InternalKim.g:11365:1: entryRuleList returns [EObject current=null] : iv_ruleList= ruleList EOF ;
    public final EObject entryRuleList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleList = null;


        try {
            // InternalKim.g:11365:45: (iv_ruleList= ruleList EOF )
            // InternalKim.g:11366:2: iv_ruleList= ruleList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleList=ruleList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleList"


    // $ANTLR start "ruleList"
    // InternalKim.g:11372:1: ruleList returns [EObject current=null] : ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) ;
    public final EObject ruleList() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        EObject lv_contents_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11378:2: ( ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' ) )
            // InternalKim.g:11379:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            {
            // InternalKim.g:11379:2: ( () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')' )
            // InternalKim.g:11380:3: () otherlv_1= '(' ( (lv_contents_2_0= ruleValue ) )* otherlv_3= ')'
            {
            // InternalKim.g:11380:3: ()
            // InternalKim.g:11381:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getListAccess().getListAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,33,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getListAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:11394:3: ( (lv_contents_2_0= ruleValue ) )*
            loop238:
            do {
                int alt238=2;
                int LA238_0 = input.LA(1);

                if ( ((LA238_0>=RULE_LOWERCASE_ID && LA238_0<=RULE_CAMELCASE_ID)||(LA238_0>=RULE_ID && LA238_0<=RULE_INT)||(LA238_0>=22 && LA238_0<=23)||LA238_0==25||LA238_0==33||LA238_0==46||LA238_0==183||(LA238_0>=226 && LA238_0<=227)) ) {
                    alt238=1;
                }


                switch (alt238) {
            	case 1 :
            	    // InternalKim.g:11395:4: (lv_contents_2_0= ruleValue )
            	    {
            	    // InternalKim.g:11395:4: (lv_contents_2_0= ruleValue )
            	    // InternalKim.g:11396:5: lv_contents_2_0= ruleValue
            	    {
            	    if ( state.backtracking==0 ) {

            	      					newCompositeNode(grammarAccess.getListAccess().getContentsValueParserRuleCall_2_0());
            	      				
            	    }
            	    pushFollow(FOLLOW_141);
            	    lv_contents_2_0=ruleValue();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      					if (current==null) {
            	      						current = createModelElementForParent(grammarAccess.getListRule());
            	      					}
            	      					add(
            	      						current,
            	      						"contents",
            	      						lv_contents_2_0,
            	      						"org.integratedmodelling.kim.Kim.Value");
            	      					afterParserOrEnumRuleCall();
            	      				
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop238;
                }
            } while (true);

            otherlv_3=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getListAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleList"


    // $ANTLR start "entryRuleLiteral"
    // InternalKim.g:11421:1: entryRuleLiteral returns [EObject current=null] : iv_ruleLiteral= ruleLiteral EOF ;
    public final EObject entryRuleLiteral() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteral = null;


        try {
            // InternalKim.g:11421:48: (iv_ruleLiteral= ruleLiteral EOF )
            // InternalKim.g:11422:2: iv_ruleLiteral= ruleLiteral EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteral=ruleLiteral();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteral; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteral"


    // $ANTLR start "ruleLiteral"
    // InternalKim.g:11428:1: ruleLiteral returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) ;
    public final EObject ruleLiteral() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11434:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) ) )
            // InternalKim.g:11435:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            {
            // InternalKim.g:11435:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )
            int alt240=4;
            alt240 = dfa240.predict(input);
            switch (alt240) {
                case 1 :
                    // InternalKim.g:11436:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:11436:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:11437:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:11437:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:11438:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:11438:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:11439:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11456:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:11457:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:11463:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:11464:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:11468:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:11469:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11488:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:11488:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:11489:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:11489:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:11490:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11508:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11508:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:11509:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:11509:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:11510:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11527:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:11527:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:11528:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:11528:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:11529:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:11529:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt239=2;
                    int LA239_0 = input.LA(1);

                    if ( (LA239_0==22) ) {
                        alt239=1;
                    }
                    else if ( (LA239_0==23) ) {
                        alt239=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 239, 0, input);

                        throw nvae;
                    }
                    switch (alt239) {
                        case 1 :
                            // InternalKim.g:11530:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11541:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteral"


    // $ANTLR start "entryRuleLiteralOrID"
    // InternalKim.g:11558:1: entryRuleLiteralOrID returns [EObject current=null] : iv_ruleLiteralOrID= ruleLiteralOrID EOF ;
    public final EObject entryRuleLiteralOrID() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrID = null;


        try {
            // InternalKim.g:11558:52: (iv_ruleLiteralOrID= ruleLiteralOrID EOF )
            // InternalKim.g:11559:2: iv_ruleLiteralOrID= ruleLiteralOrID EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIDRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrID=ruleLiteralOrID();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrID; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrID"


    // $ANTLR start "ruleLiteralOrID"
    // InternalKim.g:11565:1: ruleLiteralOrID returns [EObject current=null] : ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) ;
    public final EObject ruleLiteralOrID() throws RecognitionException {
        EObject current = null;

        Token lv_string_1_0=null;
        Token lv_boolean_2_1=null;
        Token lv_boolean_2_2=null;
        Token lv_id_3_0=null;
        EObject lv_number_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11571:2: ( ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) ) )
            // InternalKim.g:11572:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            {
            // InternalKim.g:11572:2: ( ( (lv_number_0_0= ruleNumber ) ) | ( (lv_string_1_0= RULE_STRING ) ) | ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) ) | ( (lv_id_3_0= RULE_ID ) ) )
            int alt242=4;
            switch ( input.LA(1) ) {
            case RULE_INT:
            case 226:
            case 227:
                {
                alt242=1;
                }
                break;
            case RULE_STRING:
                {
                alt242=2;
                }
                break;
            case 22:
            case 23:
                {
                alt242=3;
                }
                break;
            case RULE_ID:
                {
                alt242=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 242, 0, input);

                throw nvae;
            }

            switch (alt242) {
                case 1 :
                    // InternalKim.g:11573:3: ( (lv_number_0_0= ruleNumber ) )
                    {
                    // InternalKim.g:11573:3: ( (lv_number_0_0= ruleNumber ) )
                    // InternalKim.g:11574:4: (lv_number_0_0= ruleNumber )
                    {
                    // InternalKim.g:11574:4: (lv_number_0_0= ruleNumber )
                    // InternalKim.g:11575:5: lv_number_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIDAccess().getNumberNumberParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIDRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_0_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11593:3: ( (lv_string_1_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11593:3: ( (lv_string_1_0= RULE_STRING ) )
                    // InternalKim.g:11594:4: (lv_string_1_0= RULE_STRING )
                    {
                    // InternalKim.g:11594:4: (lv_string_1_0= RULE_STRING )
                    // InternalKim.g:11595:5: lv_string_1_0= RULE_STRING
                    {
                    lv_string_1_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_1_0, grammarAccess.getLiteralOrIDAccess().getStringSTRINGTerminalRuleCall_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_1_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11612:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    {
                    // InternalKim.g:11612:3: ( ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) ) )
                    // InternalKim.g:11613:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    {
                    // InternalKim.g:11613:4: ( (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' ) )
                    // InternalKim.g:11614:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    {
                    // InternalKim.g:11614:5: (lv_boolean_2_1= 'true' | lv_boolean_2_2= 'false' )
                    int alt241=2;
                    int LA241_0 = input.LA(1);

                    if ( (LA241_0==22) ) {
                        alt241=1;
                    }
                    else if ( (LA241_0==23) ) {
                        alt241=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 241, 0, input);

                        throw nvae;
                    }
                    switch (alt241) {
                        case 1 :
                            // InternalKim.g:11615:6: lv_boolean_2_1= 'true'
                            {
                            lv_boolean_2_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_1, grammarAccess.getLiteralOrIDAccess().getBooleanTrueKeyword_2_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11626:6: lv_boolean_2_2= 'false'
                            {
                            lv_boolean_2_2=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_2_2, grammarAccess.getLiteralOrIDAccess().getBooleanFalseKeyword_2_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIDRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_2_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11640:3: ( (lv_id_3_0= RULE_ID ) )
                    {
                    // InternalKim.g:11640:3: ( (lv_id_3_0= RULE_ID ) )
                    // InternalKim.g:11641:4: (lv_id_3_0= RULE_ID )
                    {
                    // InternalKim.g:11641:4: (lv_id_3_0= RULE_ID )
                    // InternalKim.g:11642:5: lv_id_3_0= RULE_ID
                    {
                    lv_id_3_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_3_0, grammarAccess.getLiteralOrIDAccess().getIdIDTerminalRuleCall_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIDRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_3_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrID"


    // $ANTLR start "entryRuleLiteralOrIdOrComma"
    // InternalKim.g:11662:1: entryRuleLiteralOrIdOrComma returns [EObject current=null] : iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF ;
    public final EObject entryRuleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleLiteralOrIdOrComma = null;


        try {
            // InternalKim.g:11662:59: (iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF )
            // InternalKim.g:11663:2: iv_ruleLiteralOrIdOrComma= ruleLiteralOrIdOrComma EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getLiteralOrIdOrCommaRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleLiteralOrIdOrComma=ruleLiteralOrIdOrComma();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleLiteralOrIdOrComma; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleLiteralOrIdOrComma"


    // $ANTLR start "ruleLiteralOrIdOrComma"
    // InternalKim.g:11669:1: ruleLiteralOrIdOrComma returns [EObject current=null] : ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) ;
    public final EObject ruleLiteralOrIdOrComma() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_string_4_0=null;
        Token lv_boolean_5_1=null;
        Token lv_boolean_5_2=null;
        Token lv_id_6_0=null;
        Token lv_comma_7_0=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;

        EObject lv_number_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11675:2: ( ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) ) )
            // InternalKim.g:11676:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            {
            // InternalKim.g:11676:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )
            int alt244=6;
            alt244 = dfa244.predict(input);
            switch (alt244) {
                case 1 :
                    // InternalKim.g:11677:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    {
                    // InternalKim.g:11677:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
                    // InternalKim.g:11678:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    {
                    // InternalKim.g:11678:4: ( (lv_from_0_0= ruleNumber ) )
                    // InternalKim.g:11679:5: (lv_from_0_0= ruleNumber )
                    {
                    // InternalKim.g:11679:5: (lv_from_0_0= ruleNumber )
                    // InternalKim.g:11680:6: lv_from_0_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getFromNumberParserRuleCall_0_0_0());
                      					
                    }
                    pushFollow(FOLLOW_22);
                    lv_from_0_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"from",
                      							lv_from_0_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:11697:4: ( ( 'to' )=>otherlv_1= 'to' )
                    // InternalKim.g:11698:5: ( 'to' )=>otherlv_1= 'to'
                    {
                    otherlv_1=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getLiteralOrIdOrCommaAccess().getToKeyword_0_1());
                      				
                    }

                    }

                    // InternalKim.g:11704:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
                    // InternalKim.g:11705:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
                    {
                    // InternalKim.g:11709:5: (lv_to_2_0= ruleNumber )
                    // InternalKim.g:11710:6: lv_to_2_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getToNumberParserRuleCall_0_2_0());
                      					
                    }
                    pushFollow(FOLLOW_2);
                    lv_to_2_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      						}
                      						set(
                      							current,
                      							"to",
                      							lv_to_2_0,
                      							"org.integratedmodelling.kim.Kim.Number");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:11729:3: ( (lv_number_3_0= ruleNumber ) )
                    {
                    // InternalKim.g:11729:3: ( (lv_number_3_0= ruleNumber ) )
                    // InternalKim.g:11730:4: (lv_number_3_0= ruleNumber )
                    {
                    // InternalKim.g:11730:4: (lv_number_3_0= ruleNumber )
                    // InternalKim.g:11731:5: lv_number_3_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getLiteralOrIdOrCommaAccess().getNumberNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_number_3_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					set(
                      						current,
                      						"number",
                      						lv_number_3_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:11749:3: ( (lv_string_4_0= RULE_STRING ) )
                    {
                    // InternalKim.g:11749:3: ( (lv_string_4_0= RULE_STRING ) )
                    // InternalKim.g:11750:4: (lv_string_4_0= RULE_STRING )
                    {
                    // InternalKim.g:11750:4: (lv_string_4_0= RULE_STRING )
                    // InternalKim.g:11751:5: lv_string_4_0= RULE_STRING
                    {
                    lv_string_4_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_string_4_0, grammarAccess.getLiteralOrIdOrCommaAccess().getStringSTRINGTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"string",
                      						lv_string_4_0,
                      						"org.eclipse.xtext.common.Terminals.STRING");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:11768:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    {
                    // InternalKim.g:11768:3: ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) )
                    // InternalKim.g:11769:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    {
                    // InternalKim.g:11769:4: ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) )
                    // InternalKim.g:11770:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    {
                    // InternalKim.g:11770:5: (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' )
                    int alt243=2;
                    int LA243_0 = input.LA(1);

                    if ( (LA243_0==22) ) {
                        alt243=1;
                    }
                    else if ( (LA243_0==23) ) {
                        alt243=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 243, 0, input);

                        throw nvae;
                    }
                    switch (alt243) {
                        case 1 :
                            // InternalKim.g:11771:6: lv_boolean_5_1= 'true'
                            {
                            lv_boolean_5_1=(Token)match(input,22,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_1, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanTrueKeyword_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_1, null);
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:11782:6: lv_boolean_5_2= 'false'
                            {
                            lv_boolean_5_2=(Token)match(input,23,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_boolean_5_2, grammarAccess.getLiteralOrIdOrCommaAccess().getBooleanFalseKeyword_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                              						}
                              						setWithLastConsumed(current, "boolean", lv_boolean_5_2, null);
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:11796:3: ( (lv_id_6_0= RULE_ID ) )
                    {
                    // InternalKim.g:11796:3: ( (lv_id_6_0= RULE_ID ) )
                    // InternalKim.g:11797:4: (lv_id_6_0= RULE_ID )
                    {
                    // InternalKim.g:11797:4: (lv_id_6_0= RULE_ID )
                    // InternalKim.g:11798:5: lv_id_6_0= RULE_ID
                    {
                    lv_id_6_0=(Token)match(input,RULE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_id_6_0, grammarAccess.getLiteralOrIdOrCommaAccess().getIdIDTerminalRuleCall_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"id",
                      						lv_id_6_0,
                      						"org.eclipse.xtext.common.Terminals.ID");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:11815:3: ( (lv_comma_7_0= ',' ) )
                    {
                    // InternalKim.g:11815:3: ( (lv_comma_7_0= ',' ) )
                    // InternalKim.g:11816:4: (lv_comma_7_0= ',' )
                    {
                    // InternalKim.g:11816:4: (lv_comma_7_0= ',' )
                    // InternalKim.g:11817:5: lv_comma_7_0= ','
                    {
                    lv_comma_7_0=(Token)match(input,25,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_comma_7_0, grammarAccess.getLiteralOrIdOrCommaAccess().getCommaCommaKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getLiteralOrIdOrCommaRule());
                      					}
                      					setWithLastConsumed(current, "comma", true, ",");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleLiteralOrIdOrComma"


    // $ANTLR start "entryRuleMetadata"
    // InternalKim.g:11833:1: entryRuleMetadata returns [EObject current=null] : iv_ruleMetadata= ruleMetadata EOF ;
    public final EObject entryRuleMetadata() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMetadata = null;


        try {
            // InternalKim.g:11833:49: (iv_ruleMetadata= ruleMetadata EOF )
            // InternalKim.g:11834:2: iv_ruleMetadata= ruleMetadata EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMetadataRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMetadata=ruleMetadata();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMetadata; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMetadata"


    // $ANTLR start "ruleMetadata"
    // InternalKim.g:11840:1: ruleMetadata returns [EObject current=null] : ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleMetadata() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_ids_2_1=null;
        Token otherlv_4=null;
        AntlrDatatypeRuleToken lv_ids_2_2 = null;

        EObject lv_values_3_1 = null;

        EObject lv_values_3_2 = null;

        EObject lv_values_3_3 = null;



        	enterRule();

        try {
            // InternalKim.g:11846:2: ( ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:11847:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:11847:2: ( () otherlv_1= '{' ( ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}' )
            // InternalKim.g:11848:3: () otherlv_1= '{' ( ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:11848:3: ()
            // InternalKim.g:11849:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMetadataAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,183,FOLLOW_142); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMetadataAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:11862:3: ( ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) ) )*
            loop247:
            do {
                int alt247=2;
                int LA247_0 = input.LA(1);

                if ( (LA247_0==RULE_LOWERCASE_ID) ) {
                    alt247=1;
                }


                switch (alt247) {
            	case 1 :
            	    // InternalKim.g:11863:4: ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) ) ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    {
            	    // InternalKim.g:11863:4: ( ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) ) )
            	    // InternalKim.g:11864:5: ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) )
            	    {
            	    // InternalKim.g:11864:5: ( (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId ) )
            	    // InternalKim.g:11865:6: (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId )
            	    {
            	    // InternalKim.g:11865:6: (lv_ids_2_1= RULE_LOWERCASE_ID | lv_ids_2_2= rulePropertyId )
            	    int alt245=2;
            	    int LA245_0 = input.LA(1);

            	    if ( (LA245_0==RULE_LOWERCASE_ID) ) {
            	        int LA245_1 = input.LA(2);

            	        if ( (LA245_1==51||LA245_1==89) ) {
            	            alt245=2;
            	        }
            	        else if ( (LA245_1==RULE_STRING||(LA245_1>=RULE_ID && LA245_1<=RULE_INT)||(LA245_1>=22 && LA245_1<=23)||LA245_1==33||LA245_1==183||(LA245_1>=226 && LA245_1<=227)) ) {
            	            alt245=1;
            	        }
            	        else {
            	            if (state.backtracking>0) {state.failed=true; return current;}
            	            NoViableAltException nvae =
            	                new NoViableAltException("", 245, 1, input);

            	            throw nvae;
            	        }
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 245, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt245) {
            	        case 1 :
            	            // InternalKim.g:11866:7: lv_ids_2_1= RULE_LOWERCASE_ID
            	            {
            	            lv_ids_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_143); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							newLeafNode(lv_ids_2_1, grammarAccess.getMetadataAccess().getIdsLOWERCASE_IDTerminalRuleCall_2_0_0_0());
            	              						
            	            }
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElement(grammarAccess.getMetadataRule());
            	              							}
            	              							addWithLastConsumed(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_1,
            	              								"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11881:7: lv_ids_2_2= rulePropertyId
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getIdsPropertyIdParserRuleCall_2_0_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_143);
            	            lv_ids_2_2=rulePropertyId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"ids",
            	              								lv_ids_2_2,
            	              								"org.integratedmodelling.kim.Kim.PropertyId");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }

            	    // InternalKim.g:11899:4: ( ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) ) )
            	    // InternalKim.g:11900:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    {
            	    // InternalKim.g:11900:5: ( (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList ) )
            	    // InternalKim.g:11901:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    {
            	    // InternalKim.g:11901:6: (lv_values_3_1= ruleLiteralOrID | lv_values_3_2= ruleMetadata | lv_values_3_3= ruleList )
            	    int alt246=3;
            	    switch ( input.LA(1) ) {
            	    case RULE_STRING:
            	    case RULE_ID:
            	    case RULE_INT:
            	    case 22:
            	    case 23:
            	    case 226:
            	    case 227:
            	        {
            	        alt246=1;
            	        }
            	        break;
            	    case 183:
            	        {
            	        alt246=2;
            	        }
            	        break;
            	    case 33:
            	        {
            	        alt246=3;
            	        }
            	        break;
            	    default:
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 246, 0, input);

            	        throw nvae;
            	    }

            	    switch (alt246) {
            	        case 1 :
            	            // InternalKim.g:11902:7: lv_values_3_1= ruleLiteralOrID
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesLiteralOrIDParserRuleCall_2_1_0_0());
            	              						
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_values_3_1=ruleLiteralOrID();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_1,
            	              								"org.integratedmodelling.kim.Kim.LiteralOrID");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:11918:7: lv_values_3_2= ruleMetadata
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesMetadataParserRuleCall_2_1_0_1());
            	              						
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_values_3_2=ruleMetadata();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_2,
            	              								"org.integratedmodelling.kim.Kim.Metadata");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;
            	        case 3 :
            	            // InternalKim.g:11934:7: lv_values_3_3= ruleList
            	            {
            	            if ( state.backtracking==0 ) {

            	              							newCompositeNode(grammarAccess.getMetadataAccess().getValuesListParserRuleCall_2_1_0_2());
            	              						
            	            }
            	            pushFollow(FOLLOW_142);
            	            lv_values_3_3=ruleList();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              							if (current==null) {
            	              								current = createModelElementForParent(grammarAccess.getMetadataRule());
            	              							}
            	              							add(
            	              								current,
            	              								"values",
            	              								lv_values_3_3,
            	              								"org.integratedmodelling.kim.Kim.List");
            	              							afterParserOrEnumRuleCall();
            	              						
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop247;
                }
            } while (true);

            otherlv_4=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getMetadataAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMetadata"


    // $ANTLR start "entryRuleDocumentation"
    // InternalKim.g:11961:1: entryRuleDocumentation returns [EObject current=null] : iv_ruleDocumentation= ruleDocumentation EOF ;
    public final EObject entryRuleDocumentation() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocumentation = null;


        try {
            // InternalKim.g:11961:54: (iv_ruleDocumentation= ruleDocumentation EOF )
            // InternalKim.g:11962:2: iv_ruleDocumentation= ruleDocumentation EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocumentationRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocumentation=ruleDocumentation();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocumentation; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocumentation"


    // $ANTLR start "ruleDocumentation"
    // InternalKim.g:11968:1: ruleDocumentation returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) ;
    public final EObject ruleDocumentation() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_4=null;
        EObject lv_selectors_2_0 = null;

        EObject lv_values_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:11974:2: ( ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' ) )
            // InternalKim.g:11975:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            {
            // InternalKim.g:11975:2: ( () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}' )
            // InternalKim.g:11976:3: () otherlv_1= '{' ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )* otherlv_4= '}'
            {
            // InternalKim.g:11976:3: ()
            // InternalKim.g:11977:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getDocumentationAccess().getMetadataAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,183,FOLLOW_144); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getDocumentationAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:11990:3: ( ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) ) )*
            loop248:
            do {
                int alt248=2;
                int LA248_0 = input.LA(1);

                if ( (LA248_0==RULE_LOWERCASE_ID||LA248_0==55) ) {
                    alt248=1;
                }


                switch (alt248) {
            	case 1 :
            	    // InternalKim.g:11991:4: ( (lv_selectors_2_0= ruleDocSelector ) ) ( (lv_values_3_0= ruleLiteralOrID ) )
            	    {
            	    // InternalKim.g:11991:4: ( (lv_selectors_2_0= ruleDocSelector ) )
            	    // InternalKim.g:11992:5: (lv_selectors_2_0= ruleDocSelector )
            	    {
            	    // InternalKim.g:11992:5: (lv_selectors_2_0= ruleDocSelector )
            	    // InternalKim.g:11993:6: lv_selectors_2_0= ruleDocSelector
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getSelectorsDocSelectorParserRuleCall_2_0_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_145);
            	    lv_selectors_2_0=ruleDocSelector();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"selectors",
            	      							lv_selectors_2_0,
            	      							"org.integratedmodelling.kim.Kim.DocSelector");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }

            	    // InternalKim.g:12010:4: ( (lv_values_3_0= ruleLiteralOrID ) )
            	    // InternalKim.g:12011:5: (lv_values_3_0= ruleLiteralOrID )
            	    {
            	    // InternalKim.g:12011:5: (lv_values_3_0= ruleLiteralOrID )
            	    // InternalKim.g:12012:6: lv_values_3_0= ruleLiteralOrID
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getDocumentationAccess().getValuesLiteralOrIDParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_144);
            	    lv_values_3_0=ruleLiteralOrID();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getDocumentationRule());
            	      						}
            	      						add(
            	      							current,
            	      							"values",
            	      							lv_values_3_0,
            	      							"org.integratedmodelling.kim.Kim.LiteralOrID");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop248;
                }
            } while (true);

            otherlv_4=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_4, grammarAccess.getDocumentationAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocumentation"


    // $ANTLR start "entryRuleMap"
    // InternalKim.g:12038:1: entryRuleMap returns [EObject current=null] : iv_ruleMap= ruleMap EOF ;
    public final EObject entryRuleMap() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMap = null;


        try {
            // InternalKim.g:12038:44: (iv_ruleMap= ruleMap EOF )
            // InternalKim.g:12039:2: iv_ruleMap= ruleMap EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMap=ruleMap();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMap; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMap"


    // $ANTLR start "ruleMap"
    // InternalKim.g:12045:1: ruleMap returns [EObject current=null] : ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) ;
    public final EObject ruleMap() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        EObject lv_entries_2_0 = null;

        EObject lv_entries_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12051:2: ( ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' ) )
            // InternalKim.g:12052:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            {
            // InternalKim.g:12052:2: ( () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}' )
            // InternalKim.g:12053:3: () otherlv_1= '{' ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )? otherlv_5= '}'
            {
            // InternalKim.g:12053:3: ()
            // InternalKim.g:12054:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getMapAccess().getMapAction_0(),
              					current);
              			
            }

            }

            otherlv_1=(Token)match(input,183,FOLLOW_146); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapAccess().getLeftCurlyBracketKeyword_1());
              		
            }
            // InternalKim.g:12067:3: ( ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )* )?
            int alt250=2;
            int LA250_0 = input.LA(1);

            if ( ((LA250_0>=RULE_LOWERCASE_ID && LA250_0<=RULE_STRING)||LA250_0==RULE_CAMELCASE_ID||LA250_0==RULE_INT||(LA250_0>=22 && LA250_0<=23)||LA250_0==33||(LA250_0>=45 && LA250_0<=47)||(LA250_0>=107 && LA250_0<=108)||(LA250_0>=115 && LA250_0<=116)||(LA250_0>=118 && LA250_0<=129)||LA250_0==186||(LA250_0>=220 && LA250_0<=224)||(LA250_0>=226 && LA250_0<=227)) ) {
                alt250=1;
            }
            switch (alt250) {
                case 1 :
                    // InternalKim.g:12068:4: ( (lv_entries_2_0= ruleMapEntry ) ) ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    {
                    // InternalKim.g:12068:4: ( (lv_entries_2_0= ruleMapEntry ) )
                    // InternalKim.g:12069:5: (lv_entries_2_0= ruleMapEntry )
                    {
                    // InternalKim.g:12069:5: (lv_entries_2_0= ruleMapEntry )
                    // InternalKim.g:12070:6: lv_entries_2_0= ruleMapEntry
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_0_0());
                      					
                    }
                    pushFollow(FOLLOW_147);
                    lv_entries_2_0=ruleMapEntry();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getMapRule());
                      						}
                      						add(
                      							current,
                      							"entries",
                      							lv_entries_2_0,
                      							"org.integratedmodelling.kim.Kim.MapEntry");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12087:4: ( ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) ) )*
                    loop249:
                    do {
                        int alt249=2;
                        int LA249_0 = input.LA(1);

                        if ( (LA249_0==25) ) {
                            alt249=1;
                        }


                        switch (alt249) {
                    	case 1 :
                    	    // InternalKim.g:12088:5: ( ( ',' )=>otherlv_3= ',' ) ( (lv_entries_4_0= ruleMapEntry ) )
                    	    {
                    	    // InternalKim.g:12088:5: ( ( ',' )=>otherlv_3= ',' )
                    	    // InternalKim.g:12089:6: ( ',' )=>otherlv_3= ','
                    	    {
                    	    otherlv_3=(Token)match(input,25,FOLLOW_26); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_3, grammarAccess.getMapAccess().getCommaKeyword_2_1_0_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12096:5: ( (lv_entries_4_0= ruleMapEntry ) )
                    	    // InternalKim.g:12097:6: (lv_entries_4_0= ruleMapEntry )
                    	    {
                    	    // InternalKim.g:12097:6: (lv_entries_4_0= ruleMapEntry )
                    	    // InternalKim.g:12098:7: lv_entries_4_0= ruleMapEntry
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getMapAccess().getEntriesMapEntryParserRuleCall_2_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_147);
                    	    lv_entries_4_0=ruleMapEntry();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getMapRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"entries",
                    	      								lv_entries_4_0,
                    	      								"org.integratedmodelling.kim.Kim.MapEntry");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop249;
                        }
                    } while (true);


                    }
                    break;

            }

            otherlv_5=(Token)match(input,114,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_5, grammarAccess.getMapAccess().getRightCurlyBracketKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMap"


    // $ANTLR start "entryRuleMapEntry"
    // InternalKim.g:12125:1: entryRuleMapEntry returns [EObject current=null] : iv_ruleMapEntry= ruleMapEntry EOF ;
    public final EObject entryRuleMapEntry() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleMapEntry = null;


        try {
            // InternalKim.g:12125:49: (iv_ruleMapEntry= ruleMapEntry EOF )
            // InternalKim.g:12126:2: iv_ruleMapEntry= ruleMapEntry EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getMapEntryRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleMapEntry=ruleMapEntry();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleMapEntry; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleMapEntry"


    // $ANTLR start "ruleMapEntry"
    // InternalKim.g:12132:1: ruleMapEntry returns [EObject current=null] : ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithConcept ) ) ) ;
    public final EObject ruleMapEntry() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        EObject lv_classifier_0_0 = null;

        EObject lv_value_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12138:2: ( ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithConcept ) ) ) )
            // InternalKim.g:12139:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithConcept ) ) )
            {
            // InternalKim.g:12139:2: ( ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithConcept ) ) )
            // InternalKim.g:12140:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) ) otherlv_1= ':' ( (lv_value_2_0= ruleValueWithConcept ) )
            {
            // InternalKim.g:12140:3: ( (lv_classifier_0_0= ruleClassifierRHSWithId ) )
            // InternalKim.g:12141:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            {
            // InternalKim.g:12141:4: (lv_classifier_0_0= ruleClassifierRHSWithId )
            // InternalKim.g:12142:5: lv_classifier_0_0= ruleClassifierRHSWithId
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getClassifierClassifierRHSWithIdParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_37);
            lv_classifier_0_0=ruleClassifierRHSWithId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"classifier",
              						lv_classifier_0_0,
              						"org.integratedmodelling.kim.Kim.ClassifierRHSWithId");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,51,FOLLOW_148); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getMapEntryAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:12163:3: ( (lv_value_2_0= ruleValueWithConcept ) )
            // InternalKim.g:12164:4: (lv_value_2_0= ruleValueWithConcept )
            {
            // InternalKim.g:12164:4: (lv_value_2_0= ruleValueWithConcept )
            // InternalKim.g:12165:5: lv_value_2_0= ruleValueWithConcept
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getMapEntryAccess().getValueValueWithConceptParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_2_0=ruleValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getMapEntryRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_2_0,
              						"org.integratedmodelling.kim.Kim.ValueWithConcept");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleMapEntry"


    // $ANTLR start "entryRuleDocSelector"
    // InternalKim.g:12186:1: entryRuleDocSelector returns [EObject current=null] : iv_ruleDocSelector= ruleDocSelector EOF ;
    public final EObject entryRuleDocSelector() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleDocSelector = null;


        try {
            // InternalKim.g:12186:52: (iv_ruleDocSelector= ruleDocSelector EOF )
            // InternalKim.g:12187:2: iv_ruleDocSelector= ruleDocSelector EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDocSelectorRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDocSelector=ruleDocSelector();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDocSelector; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDocSelector"


    // $ANTLR start "ruleDocSelector"
    // InternalKim.g:12193:1: ruleDocSelector returns [EObject current=null] : ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) ;
    public final EObject ruleDocSelector() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_definition_2_0=null;
        Token lv_initialization_3_0=null;
        Token lv_termination_4_0=null;
        Token lv_transition_5_0=null;
        AntlrDatatypeRuleToken lv_id_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12199:2: ( ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) ) )
            // InternalKim.g:12200:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            {
            // InternalKim.g:12200:2: ( ( (lv_id_0_0= rulePropertyId ) ) | (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) ) )
            int alt252=2;
            int LA252_0 = input.LA(1);

            if ( (LA252_0==RULE_LOWERCASE_ID) ) {
                alt252=1;
            }
            else if ( (LA252_0==55) ) {
                alt252=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 252, 0, input);

                throw nvae;
            }
            switch (alt252) {
                case 1 :
                    // InternalKim.g:12201:3: ( (lv_id_0_0= rulePropertyId ) )
                    {
                    // InternalKim.g:12201:3: ( (lv_id_0_0= rulePropertyId ) )
                    // InternalKim.g:12202:4: (lv_id_0_0= rulePropertyId )
                    {
                    // InternalKim.g:12202:4: (lv_id_0_0= rulePropertyId )
                    // InternalKim.g:12203:5: lv_id_0_0= rulePropertyId
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getDocSelectorAccess().getIdPropertyIdParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_id_0_0=rulePropertyId();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getDocSelectorRule());
                      					}
                      					set(
                      						current,
                      						"id",
                      						lv_id_0_0,
                      						"org.integratedmodelling.kim.Kim.PropertyId");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12221:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    {
                    // InternalKim.g:12221:3: (otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) ) )
                    // InternalKim.g:12222:4: otherlv_1= 'on' ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    {
                    otherlv_1=(Token)match(input,55,FOLLOW_149); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_1, grammarAccess.getDocSelectorAccess().getOnKeyword_1_0());
                      			
                    }
                    // InternalKim.g:12226:4: ( ( (lv_definition_2_0= 'definition' ) ) | ( (lv_initialization_3_0= 'initialization' ) ) | ( (lv_termination_4_0= 'termination' ) ) | ( (lv_transition_5_0= 'transition' ) ) )
                    int alt251=4;
                    switch ( input.LA(1) ) {
                    case 56:
                        {
                        alt251=1;
                        }
                        break;
                    case 60:
                        {
                        alt251=2;
                        }
                        break;
                    case 59:
                        {
                        alt251=3;
                        }
                        break;
                    case 184:
                        {
                        alt251=4;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 251, 0, input);

                        throw nvae;
                    }

                    switch (alt251) {
                        case 1 :
                            // InternalKim.g:12227:5: ( (lv_definition_2_0= 'definition' ) )
                            {
                            // InternalKim.g:12227:5: ( (lv_definition_2_0= 'definition' ) )
                            // InternalKim.g:12228:6: (lv_definition_2_0= 'definition' )
                            {
                            // InternalKim.g:12228:6: (lv_definition_2_0= 'definition' )
                            // InternalKim.g:12229:7: lv_definition_2_0= 'definition'
                            {
                            lv_definition_2_0=(Token)match(input,56,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_definition_2_0, grammarAccess.getDocSelectorAccess().getDefinitionDefinitionKeyword_1_1_0_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "definition", true, "definition");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 2 :
                            // InternalKim.g:12242:5: ( (lv_initialization_3_0= 'initialization' ) )
                            {
                            // InternalKim.g:12242:5: ( (lv_initialization_3_0= 'initialization' ) )
                            // InternalKim.g:12243:6: (lv_initialization_3_0= 'initialization' )
                            {
                            // InternalKim.g:12243:6: (lv_initialization_3_0= 'initialization' )
                            // InternalKim.g:12244:7: lv_initialization_3_0= 'initialization'
                            {
                            lv_initialization_3_0=(Token)match(input,60,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_initialization_3_0, grammarAccess.getDocSelectorAccess().getInitializationInitializationKeyword_1_1_1_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "initialization", true, "initialization");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 3 :
                            // InternalKim.g:12257:5: ( (lv_termination_4_0= 'termination' ) )
                            {
                            // InternalKim.g:12257:5: ( (lv_termination_4_0= 'termination' ) )
                            // InternalKim.g:12258:6: (lv_termination_4_0= 'termination' )
                            {
                            // InternalKim.g:12258:6: (lv_termination_4_0= 'termination' )
                            // InternalKim.g:12259:7: lv_termination_4_0= 'termination'
                            {
                            lv_termination_4_0=(Token)match(input,59,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_termination_4_0, grammarAccess.getDocSelectorAccess().getTerminationTerminationKeyword_1_1_2_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "termination", true, "termination");
                              						
                            }

                            }


                            }


                            }
                            break;
                        case 4 :
                            // InternalKim.g:12272:5: ( (lv_transition_5_0= 'transition' ) )
                            {
                            // InternalKim.g:12272:5: ( (lv_transition_5_0= 'transition' ) )
                            // InternalKim.g:12273:6: (lv_transition_5_0= 'transition' )
                            {
                            // InternalKim.g:12273:6: (lv_transition_5_0= 'transition' )
                            // InternalKim.g:12274:7: lv_transition_5_0= 'transition'
                            {
                            lv_transition_5_0=(Token)match(input,184,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              							newLeafNode(lv_transition_5_0, grammarAccess.getDocSelectorAccess().getTransitionTransitionKeyword_1_1_3_0());
                              						
                            }
                            if ( state.backtracking==0 ) {

                              							if (current==null) {
                              								current = createModelElement(grammarAccess.getDocSelectorRule());
                              							}
                              							setWithLastConsumed(current, "transition", true, "transition");
                              						
                            }

                            }


                            }


                            }
                            break;

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDocSelector"


    // $ANTLR start "entryRuleKeyValuePair"
    // InternalKim.g:12292:1: entryRuleKeyValuePair returns [EObject current=null] : iv_ruleKeyValuePair= ruleKeyValuePair EOF ;
    public final EObject entryRuleKeyValuePair() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleKeyValuePair = null;


        try {
            // InternalKim.g:12292:53: (iv_ruleKeyValuePair= ruleKeyValuePair EOF )
            // InternalKim.g:12293:2: iv_ruleKeyValuePair= ruleKeyValuePair EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getKeyValuePairRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleKeyValuePair=ruleKeyValuePair();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleKeyValuePair; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleKeyValuePair"


    // $ANTLR start "ruleKeyValuePair"
    // InternalKim.g:12299:1: ruleKeyValuePair returns [EObject current=null] : ( ( ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValue ) ) ) ;
    public final EObject ruleKeyValuePair() throws RecognitionException {
        EObject current = null;

        Token lv_name_0_1=null;
        Token lv_interactive_1_0=null;
        Token otherlv_2=null;
        AntlrDatatypeRuleToken lv_name_0_2 = null;

        EObject lv_value_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12305:2: ( ( ( ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValue ) ) ) )
            // InternalKim.g:12306:2: ( ( ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValue ) ) )
            {
            // InternalKim.g:12306:2: ( ( ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValue ) ) )
            // InternalKim.g:12307:3: ( ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) ) ) ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' ) ( (lv_value_3_0= ruleValue ) )
            {
            // InternalKim.g:12307:3: ( ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) ) )
            // InternalKim.g:12308:4: ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) )
            {
            // InternalKim.g:12308:4: ( (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName ) )
            // InternalKim.g:12309:5: (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName )
            {
            // InternalKim.g:12309:5: (lv_name_0_1= RULE_LOWERCASE_ID | lv_name_0_2= rulePathName )
            int alt253=2;
            int LA253_0 = input.LA(1);

            if ( (LA253_0==RULE_LOWERCASE_ID) ) {
                int LA253_1 = input.LA(2);

                if ( (synpred444_InternalKim()) ) {
                    alt253=1;
                }
                else if ( (true) ) {
                    alt253=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 253, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 253, 0, input);

                throw nvae;
            }
            switch (alt253) {
                case 1 :
                    // InternalKim.g:12310:6: lv_name_0_1= RULE_LOWERCASE_ID
                    {
                    lv_name_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_150); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_0_1, grammarAccess.getKeyValuePairAccess().getNameLOWERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_0_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:12325:6: lv_name_0_2= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getKeyValuePairAccess().getNamePathNameParserRuleCall_0_0_1());
                      					
                    }
                    pushFollow(FOLLOW_150);
                    lv_name_0_2=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
                      						}
                      						set(
                      							current,
                      							"name",
                      							lv_name_0_2,
                      							"org.integratedmodelling.kim.Kim.PathName");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }
                    break;

            }


            }


            }

            // InternalKim.g:12343:3: ( ( (lv_interactive_1_0= '?=' ) ) | otherlv_2= '=' )
            int alt254=2;
            int LA254_0 = input.LA(1);

            if ( (LA254_0==185) ) {
                alt254=1;
            }
            else if ( (LA254_0==186) ) {
                alt254=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 254, 0, input);

                throw nvae;
            }
            switch (alt254) {
                case 1 :
                    // InternalKim.g:12344:4: ( (lv_interactive_1_0= '?=' ) )
                    {
                    // InternalKim.g:12344:4: ( (lv_interactive_1_0= '?=' ) )
                    // InternalKim.g:12345:5: (lv_interactive_1_0= '?=' )
                    {
                    // InternalKim.g:12345:5: (lv_interactive_1_0= '?=' )
                    // InternalKim.g:12346:6: lv_interactive_1_0= '?='
                    {
                    lv_interactive_1_0=(Token)match(input,185,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_interactive_1_0, grammarAccess.getKeyValuePairAccess().getInteractiveQuestionMarkEqualsSignKeyword_1_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getKeyValuePairRule());
                      						}
                      						setWithLastConsumed(current, "interactive", true, "?=");
                      					
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12359:4: otherlv_2= '='
                    {
                    otherlv_2=(Token)match(input,186,FOLLOW_49); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getKeyValuePairAccess().getEqualsSignKeyword_1_1());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:12364:3: ( (lv_value_3_0= ruleValue ) )
            // InternalKim.g:12365:4: (lv_value_3_0= ruleValue )
            {
            // InternalKim.g:12365:4: (lv_value_3_0= ruleValue )
            // InternalKim.g:12366:5: lv_value_3_0= ruleValue
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getKeyValuePairAccess().getValueValueParserRuleCall_2_0());
              				
            }
            pushFollow(FOLLOW_2);
            lv_value_3_0=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getKeyValuePairRule());
              					}
              					set(
              						current,
              						"value",
              						lv_value_3_0,
              						"org.integratedmodelling.kim.Kim.Value");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleKeyValuePair"


    // $ANTLR start "entryRuleParameterList"
    // InternalKim.g:12387:1: entryRuleParameterList returns [EObject current=null] : iv_ruleParameterList= ruleParameterList EOF ;
    public final EObject entryRuleParameterList() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleParameterList = null;


        try {
            // InternalKim.g:12387:54: (iv_ruleParameterList= ruleParameterList EOF )
            // InternalKim.g:12388:2: iv_ruleParameterList= ruleParameterList EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getParameterListRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleParameterList=ruleParameterList();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleParameterList; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleParameterList"


    // $ANTLR start "ruleParameterList"
    // InternalKim.g:12394:1: ruleParameterList returns [EObject current=null] : ( ( (lv_singleValue_0_0= ruleValue ) ) | ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* ) ) ;
    public final EObject ruleParameterList() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        EObject lv_singleValue_0_0 = null;

        EObject lv_pairs_1_0 = null;

        EObject lv_pairs_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12400:2: ( ( ( (lv_singleValue_0_0= ruleValue ) ) | ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* ) ) )
            // InternalKim.g:12401:2: ( ( (lv_singleValue_0_0= ruleValue ) ) | ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* ) )
            {
            // InternalKim.g:12401:2: ( ( (lv_singleValue_0_0= ruleValue ) ) | ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* ) )
            int alt256=2;
            alt256 = dfa256.predict(input);
            switch (alt256) {
                case 1 :
                    // InternalKim.g:12402:3: ( (lv_singleValue_0_0= ruleValue ) )
                    {
                    // InternalKim.g:12402:3: ( (lv_singleValue_0_0= ruleValue ) )
                    // InternalKim.g:12403:4: (lv_singleValue_0_0= ruleValue )
                    {
                    // InternalKim.g:12403:4: (lv_singleValue_0_0= ruleValue )
                    // InternalKim.g:12404:5: lv_singleValue_0_0= ruleValue
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getParameterListAccess().getSingleValueValueParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_singleValue_0_0=ruleValue();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getParameterListRule());
                      					}
                      					set(
                      						current,
                      						"singleValue",
                      						lv_singleValue_0_0,
                      						"org.integratedmodelling.kim.Kim.Value");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12422:3: ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* )
                    {
                    // InternalKim.g:12422:3: ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* )
                    // InternalKim.g:12423:4: ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )*
                    {
                    // InternalKim.g:12423:4: ( (lv_pairs_1_0= ruleKeyValuePair ) )
                    // InternalKim.g:12424:5: (lv_pairs_1_0= ruleKeyValuePair )
                    {
                    // InternalKim.g:12424:5: (lv_pairs_1_0= ruleKeyValuePair )
                    // InternalKim.g:12425:6: lv_pairs_1_0= ruleKeyValuePair
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_0_0());
                      					
                    }
                    pushFollow(FOLLOW_24);
                    lv_pairs_1_0=ruleKeyValuePair();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getParameterListRule());
                      						}
                      						add(
                      							current,
                      							"pairs",
                      							lv_pairs_1_0,
                      							"org.integratedmodelling.kim.Kim.KeyValuePair");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    // InternalKim.g:12442:4: ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )*
                    loop255:
                    do {
                        int alt255=2;
                        int LA255_0 = input.LA(1);

                        if ( (LA255_0==25) ) {
                            alt255=1;
                        }


                        switch (alt255) {
                    	case 1 :
                    	    // InternalKim.g:12443:5: ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) )
                    	    {
                    	    // InternalKim.g:12443:5: ( ( ',' )=>otherlv_2= ',' )
                    	    // InternalKim.g:12444:6: ( ',' )=>otherlv_2= ','
                    	    {
                    	    otherlv_2=(Token)match(input,25,FOLLOW_49); if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      						newLeafNode(otherlv_2, grammarAccess.getParameterListAccess().getCommaKeyword_1_1_0());
                    	      					
                    	    }

                    	    }

                    	    // InternalKim.g:12450:5: ( (lv_pairs_3_0= ruleKeyValuePair ) )
                    	    // InternalKim.g:12451:6: (lv_pairs_3_0= ruleKeyValuePair )
                    	    {
                    	    // InternalKim.g:12451:6: (lv_pairs_3_0= ruleKeyValuePair )
                    	    // InternalKim.g:12452:7: lv_pairs_3_0= ruleKeyValuePair
                    	    {
                    	    if ( state.backtracking==0 ) {

                    	      							newCompositeNode(grammarAccess.getParameterListAccess().getPairsKeyValuePairParserRuleCall_1_1_1_0());
                    	      						
                    	    }
                    	    pushFollow(FOLLOW_24);
                    	    lv_pairs_3_0=ruleKeyValuePair();

                    	    state._fsp--;
                    	    if (state.failed) return current;
                    	    if ( state.backtracking==0 ) {

                    	      							if (current==null) {
                    	      								current = createModelElementForParent(grammarAccess.getParameterListRule());
                    	      							}
                    	      							add(
                    	      								current,
                    	      								"pairs",
                    	      								lv_pairs_3_0,
                    	      								"org.integratedmodelling.kim.Kim.KeyValuePair");
                    	      							afterParserOrEnumRuleCall();
                    	      						
                    	    }

                    	    }


                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop255;
                        }
                    } while (true);


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleParameterList"


    // $ANTLR start "entryRuleValueWithConcept"
    // InternalKim.g:12475:1: entryRuleValueWithConcept returns [EObject current=null] : iv_ruleValueWithConcept= ruleValueWithConcept EOF ;
    public final EObject entryRuleValueWithConcept() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValueWithConcept = null;


        try {
            // InternalKim.g:12475:57: (iv_ruleValueWithConcept= ruleValueWithConcept EOF )
            // InternalKim.g:12476:2: iv_ruleValueWithConcept= ruleValueWithConcept EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueWithConceptRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValueWithConcept=ruleValueWithConcept();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValueWithConcept; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValueWithConcept"


    // $ANTLR start "ruleValueWithConcept"
    // InternalKim.g:12482:1: ruleValueWithConcept returns [EObject current=null] : ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_literal_1_0= ruleLiteral ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( (lv_list_3_0= ruleList ) ) | ( (lv_map_4_0= ruleMap ) ) | ( (lv_null_5_0= 'unknown' ) ) ) ;
    public final EObject ruleValueWithConcept() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token lv_null_5_0=null;
        EObject lv_concept_0_0 = null;

        EObject lv_literal_1_0 = null;

        EObject lv_list_3_0 = null;

        EObject lv_map_4_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12488:2: ( ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_literal_1_0= ruleLiteral ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( (lv_list_3_0= ruleList ) ) | ( (lv_map_4_0= ruleMap ) ) | ( (lv_null_5_0= 'unknown' ) ) ) )
            // InternalKim.g:12489:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_literal_1_0= ruleLiteral ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( (lv_list_3_0= ruleList ) ) | ( (lv_map_4_0= ruleMap ) ) | ( (lv_null_5_0= 'unknown' ) ) )
            {
            // InternalKim.g:12489:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_literal_1_0= ruleLiteral ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( (lv_list_3_0= ruleList ) ) | ( (lv_map_4_0= ruleMap ) ) | ( (lv_null_5_0= 'unknown' ) ) )
            int alt257=6;
            alt257 = dfa257.predict(input);
            switch (alt257) {
                case 1 :
                    // InternalKim.g:12490:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    {
                    // InternalKim.g:12490:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
                    // InternalKim.g:12491:4: (lv_concept_0_0= ruleConceptDeclaration )
                    {
                    // InternalKim.g:12491:4: (lv_concept_0_0= ruleConceptDeclaration )
                    // InternalKim.g:12492:5: lv_concept_0_0= ruleConceptDeclaration
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_concept_0_0=ruleConceptDeclaration();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"concept",
                      						lv_concept_0_0,
                      						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12510:3: ( (lv_literal_1_0= ruleLiteral ) )
                    {
                    // InternalKim.g:12510:3: ( (lv_literal_1_0= ruleLiteral ) )
                    // InternalKim.g:12511:4: (lv_literal_1_0= ruleLiteral )
                    {
                    // InternalKim.g:12511:4: (lv_literal_1_0= ruleLiteral )
                    // InternalKim.g:12512:5: lv_literal_1_0= ruleLiteral
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithConceptAccess().getLiteralLiteralParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_1_0=ruleLiteral();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_1_0,
                      						"org.integratedmodelling.kim.Kim.Literal");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12530:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:12530:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:12531:4: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:12531:4: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:12532:5: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_2_0, grammarAccess.getValueWithConceptAccess().getExprEXPRTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithConceptRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12549:3: ( (lv_list_3_0= ruleList ) )
                    {
                    // InternalKim.g:12549:3: ( (lv_list_3_0= ruleList ) )
                    // InternalKim.g:12550:4: (lv_list_3_0= ruleList )
                    {
                    // InternalKim.g:12550:4: (lv_list_3_0= ruleList )
                    // InternalKim.g:12551:5: lv_list_3_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithConceptAccess().getListListParserRuleCall_3_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_3_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_3_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:12569:3: ( (lv_map_4_0= ruleMap ) )
                    {
                    // InternalKim.g:12569:3: ( (lv_map_4_0= ruleMap ) )
                    // InternalKim.g:12570:4: (lv_map_4_0= ruleMap )
                    {
                    // InternalKim.g:12570:4: (lv_map_4_0= ruleMap )
                    // InternalKim.g:12571:5: lv_map_4_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueWithConceptAccess().getMapMapParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_4_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueWithConceptRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_4_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:12589:3: ( (lv_null_5_0= 'unknown' ) )
                    {
                    // InternalKim.g:12589:3: ( (lv_null_5_0= 'unknown' ) )
                    // InternalKim.g:12590:4: (lv_null_5_0= 'unknown' )
                    {
                    // InternalKim.g:12590:4: (lv_null_5_0= 'unknown' )
                    // InternalKim.g:12591:5: lv_null_5_0= 'unknown'
                    {
                    lv_null_5_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_5_0, grammarAccess.getValueWithConceptAccess().getNullUnknownKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueWithConceptRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValueWithConcept"


    // $ANTLR start "entryRuleValue"
    // InternalKim.g:12607:1: entryRuleValue returns [EObject current=null] : iv_ruleValue= ruleValue EOF ;
    public final EObject entryRuleValue() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleValue = null;


        try {
            // InternalKim.g:12607:46: (iv_ruleValue= ruleValue EOF )
            // InternalKim.g:12608:2: iv_ruleValue= ruleValue EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getValueRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleValue=ruleValue();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleValue; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleValue"


    // $ANTLR start "ruleValue"
    // InternalKim.g:12614:1: ruleValue returns [EObject current=null] : ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_map_5_0= ruleMap ) ) | ( (lv_null_6_0= 'unknown' ) ) ) ;
    public final EObject ruleValue() throws RecognitionException {
        EObject current = null;

        Token lv_expr_2_0=null;
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;
        Token lv_null_6_0=null;
        EObject lv_literal_0_0 = null;

        EObject lv_function_1_0 = null;

        EObject lv_list_4_0 = null;

        EObject lv_map_5_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12620:2: ( ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_map_5_0= ruleMap ) ) | ( (lv_null_6_0= 'unknown' ) ) ) )
            // InternalKim.g:12621:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_map_5_0= ruleMap ) ) | ( (lv_null_6_0= 'unknown' ) ) )
            {
            // InternalKim.g:12621:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_map_5_0= ruleMap ) ) | ( (lv_null_6_0= 'unknown' ) ) )
            int alt259=7;
            alt259 = dfa259.predict(input);
            switch (alt259) {
                case 1 :
                    // InternalKim.g:12622:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    {
                    // InternalKim.g:12622:3: ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) )
                    // InternalKim.g:12623:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    {
                    // InternalKim.g:12623:4: (lv_literal_0_0= ruleLiteralOrIdOrComma )
                    // InternalKim.g:12624:5: lv_literal_0_0= ruleLiteralOrIdOrComma
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getLiteralLiteralOrIdOrCommaParserRuleCall_0_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_literal_0_0=ruleLiteralOrIdOrComma();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"literal",
                      						lv_literal_0_0,
                      						"org.integratedmodelling.kim.Kim.LiteralOrIdOrComma");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:12642:3: ( (lv_function_1_0= ruleFunction ) )
                    {
                    // InternalKim.g:12642:3: ( (lv_function_1_0= ruleFunction ) )
                    // InternalKim.g:12643:4: (lv_function_1_0= ruleFunction )
                    {
                    // InternalKim.g:12643:4: (lv_function_1_0= ruleFunction )
                    // InternalKim.g:12644:5: lv_function_1_0= ruleFunction
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_function_1_0=ruleFunction();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"function",
                      						lv_function_1_0,
                      						"org.integratedmodelling.kim.Kim.Function");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:12662:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    {
                    // InternalKim.g:12662:3: ( (lv_expr_2_0= RULE_EXPR ) )
                    // InternalKim.g:12663:4: (lv_expr_2_0= RULE_EXPR )
                    {
                    // InternalKim.g:12663:4: (lv_expr_2_0= RULE_EXPR )
                    // InternalKim.g:12664:5: lv_expr_2_0= RULE_EXPR
                    {
                    lv_expr_2_0=(Token)match(input,RULE_EXPR,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_expr_2_0, grammarAccess.getValueAccess().getExprEXPRTerminalRuleCall_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(
                      						current,
                      						"expr",
                      						lv_expr_2_0,
                      						"org.integratedmodelling.kim.Kim.EXPR");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:12681:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    {
                    // InternalKim.g:12681:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
                    // InternalKim.g:12682:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    {
                    // InternalKim.g:12682:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
                    // InternalKim.g:12683:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    {
                    // InternalKim.g:12683:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
                    int alt258=3;
                    switch ( input.LA(1) ) {
                    case RULE_LOWERCASE_ID:
                        {
                        alt258=1;
                        }
                        break;
                    case RULE_UPPERCASE_ID:
                        {
                        alt258=2;
                        }
                        break;
                    case RULE_CAMELCASE_ID:
                        {
                        alt258=3;
                        }
                        break;
                    default:
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 258, 0, input);

                        throw nvae;
                    }

                    switch (alt258) {
                        case 1 :
                            // InternalKim.g:12684:6: lv_id_3_1= RULE_LOWERCASE_ID
                            {
                            lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_1, grammarAccess.getValueAccess().getIdLOWERCASE_IDTerminalRuleCall_3_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_1,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:12699:6: lv_id_3_2= RULE_UPPERCASE_ID
                            {
                            lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_2, grammarAccess.getValueAccess().getIdUPPERCASE_IDTerminalRuleCall_3_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_2,
                              							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                              					
                            }

                            }
                            break;
                        case 3 :
                            // InternalKim.g:12714:6: lv_id_3_3= RULE_CAMELCASE_ID
                            {
                            lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_3_3, grammarAccess.getValueAccess().getIdCAMELCASE_IDTerminalRuleCall_3_0_2());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getValueRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_3_3,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:12732:3: ( (lv_list_4_0= ruleList ) )
                    {
                    // InternalKim.g:12732:3: ( (lv_list_4_0= ruleList ) )
                    // InternalKim.g:12733:4: (lv_list_4_0= ruleList )
                    {
                    // InternalKim.g:12733:4: (lv_list_4_0= ruleList )
                    // InternalKim.g:12734:5: lv_list_4_0= ruleList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getListListParserRuleCall_4_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_list_4_0=ruleList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"list",
                      						lv_list_4_0,
                      						"org.integratedmodelling.kim.Kim.List");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:12752:3: ( (lv_map_5_0= ruleMap ) )
                    {
                    // InternalKim.g:12752:3: ( (lv_map_5_0= ruleMap ) )
                    // InternalKim.g:12753:4: (lv_map_5_0= ruleMap )
                    {
                    // InternalKim.g:12753:4: (lv_map_5_0= ruleMap )
                    // InternalKim.g:12754:5: lv_map_5_0= ruleMap
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getValueAccess().getMapMapParserRuleCall_5_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_map_5_0=ruleMap();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getValueRule());
                      					}
                      					set(
                      						current,
                      						"map",
                      						lv_map_5_0,
                      						"org.integratedmodelling.kim.Kim.Map");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:12772:3: ( (lv_null_6_0= 'unknown' ) )
                    {
                    // InternalKim.g:12772:3: ( (lv_null_6_0= 'unknown' ) )
                    // InternalKim.g:12773:4: (lv_null_6_0= 'unknown' )
                    {
                    // InternalKim.g:12773:4: (lv_null_6_0= 'unknown' )
                    // InternalKim.g:12774:5: lv_null_6_0= 'unknown'
                    {
                    lv_null_6_0=(Token)match(input,46,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_null_6_0, grammarAccess.getValueAccess().getNullUnknownKeyword_6_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getValueRule());
                      					}
                      					setWithLastConsumed(current, "null", true, "unknown");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleValue"


    // $ANTLR start "entryRuleFunction"
    // InternalKim.g:12790:1: entryRuleFunction returns [EObject current=null] : iv_ruleFunction= ruleFunction EOF ;
    public final EObject entryRuleFunction() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleFunction = null;


        try {
            // InternalKim.g:12790:49: (iv_ruleFunction= ruleFunction EOF )
            // InternalKim.g:12791:2: iv_ruleFunction= ruleFunction EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleFunction=ruleFunction();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleFunction; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleFunction"


    // $ANTLR start "ruleFunction"
    // InternalKim.g:12797:1: ruleFunction returns [EObject current=null] : ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) ;
    public final EObject ruleFunction() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token otherlv_3=null;
        AntlrDatatypeRuleToken lv_name_0_0 = null;

        EObject lv_parameters_2_0 = null;



        	enterRule();

        try {
            // InternalKim.g:12803:2: ( ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' ) )
            // InternalKim.g:12804:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            {
            // InternalKim.g:12804:2: ( ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')' )
            // InternalKim.g:12805:3: ( (lv_name_0_0= rulePathName ) ) otherlv_1= '(' ( (lv_parameters_2_0= ruleParameterList ) )? otherlv_3= ')'
            {
            // InternalKim.g:12805:3: ( (lv_name_0_0= rulePathName ) )
            // InternalKim.g:12806:4: (lv_name_0_0= rulePathName )
            {
            // InternalKim.g:12806:4: (lv_name_0_0= rulePathName )
            // InternalKim.g:12807:5: lv_name_0_0= rulePathName
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getFunctionAccess().getNamePathNameParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_18);
            lv_name_0_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getFunctionRule());
              					}
              					set(
              						current,
              						"name",
              						lv_name_0_0,
              						"org.integratedmodelling.kim.Kim.PathName");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,33,FOLLOW_141); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1());
              		
            }
            // InternalKim.g:12828:3: ( (lv_parameters_2_0= ruleParameterList ) )?
            int alt260=2;
            int LA260_0 = input.LA(1);

            if ( ((LA260_0>=RULE_LOWERCASE_ID && LA260_0<=RULE_CAMELCASE_ID)||(LA260_0>=RULE_ID && LA260_0<=RULE_INT)||(LA260_0>=22 && LA260_0<=23)||LA260_0==25||LA260_0==33||LA260_0==46||LA260_0==183||(LA260_0>=226 && LA260_0<=227)) ) {
                alt260=1;
            }
            switch (alt260) {
                case 1 :
                    // InternalKim.g:12829:4: (lv_parameters_2_0= ruleParameterList )
                    {
                    // InternalKim.g:12829:4: (lv_parameters_2_0= ruleParameterList )
                    // InternalKim.g:12830:5: lv_parameters_2_0= ruleParameterList
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getFunctionAccess().getParametersParameterListParserRuleCall_2_0());
                      				
                    }
                    pushFollow(FOLLOW_20);
                    lv_parameters_2_0=ruleParameterList();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getFunctionRule());
                      					}
                      					set(
                      						current,
                      						"parameters",
                      						lv_parameters_2_0,
                      						"org.integratedmodelling.kim.Kim.ParameterList");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            otherlv_3=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_3, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleFunction"


    // $ANTLR start "entryRuleCONCEPT_TYPE"
    // InternalKim.g:12855:1: entryRuleCONCEPT_TYPE returns [String current=null] : iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF ;
    public final String entryRuleCONCEPT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleCONCEPT_TYPE = null;


        try {
            // InternalKim.g:12855:52: (iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF )
            // InternalKim.g:12856:2: iv_ruleCONCEPT_TYPE= ruleCONCEPT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCONCEPT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCONCEPT_TYPE=ruleCONCEPT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCONCEPT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCONCEPT_TYPE"


    // $ANTLR start "ruleCONCEPT_TYPE"
    // InternalKim.g:12862:1: ruleCONCEPT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) ;
    public final AntlrDatatypeRuleToken ruleCONCEPT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_DECLARABLE_TYPE_1 = null;



        	enterRule();

        try {
            // InternalKim.g:12868:2: ( (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE ) )
            // InternalKim.g:12869:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            {
            // InternalKim.g:12869:2: (kw= 'quality' | this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE )
            int alt261=2;
            int LA261_0 = input.LA(1);

            if ( (LA261_0==187) ) {
                alt261=1;
            }
            else if ( (LA261_0==80||(LA261_0>=136 && LA261_0<=137)||LA261_0==158||(LA261_0>=170 && LA261_0<=173)||(LA261_0>=188 && LA261_0<=215)) ) {
                alt261=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 261, 0, input);

                throw nvae;
            }
            switch (alt261) {
                case 1 :
                    // InternalKim.g:12870:3: kw= 'quality'
                    {
                    kw=(Token)match(input,187,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getCONCEPT_TYPEAccess().getQualityKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:12876:3: this_DECLARABLE_TYPE_1= ruleDECLARABLE_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getCONCEPT_TYPEAccess().getDECLARABLE_TYPEParserRuleCall_1());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_DECLARABLE_TYPE_1=ruleDECLARABLE_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_DECLARABLE_TYPE_1);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCONCEPT_TYPE"


    // $ANTLR start "entryRuleDECLARABLE_TYPE"
    // InternalKim.g:12890:1: entryRuleDECLARABLE_TYPE returns [String current=null] : iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF ;
    public final String entryRuleDECLARABLE_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleDECLARABLE_TYPE = null;


        try {
            // InternalKim.g:12890:55: (iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF )
            // InternalKim.g:12891:2: iv_ruleDECLARABLE_TYPE= ruleDECLARABLE_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getDECLARABLE_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleDECLARABLE_TYPE=ruleDECLARABLE_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleDECLARABLE_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleDECLARABLE_TYPE"


    // $ANTLR start "ruleDECLARABLE_TYPE"
    // InternalKim.g:12897:1: ruleDECLARABLE_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'extent' | this_EXTENSIVE_PROPERTY_5= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_6= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_7= ruleAGENT_TYPE | this_TRAIT_8= ruleTRAIT ) ;
    public final AntlrDatatypeRuleToken ruleDECLARABLE_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        AntlrDatatypeRuleToken this_EXTENSIVE_PROPERTY_5 = null;

        AntlrDatatypeRuleToken this_INTENSIVE_PROPERTY_6 = null;

        AntlrDatatypeRuleToken this_AGENT_TYPE_7 = null;

        AntlrDatatypeRuleToken this_TRAIT_8 = null;



        	enterRule();

        try {
            // InternalKim.g:12903:2: ( (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'extent' | this_EXTENSIVE_PROPERTY_5= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_6= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_7= ruleAGENT_TYPE | this_TRAIT_8= ruleTRAIT ) )
            // InternalKim.g:12904:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'extent' | this_EXTENSIVE_PROPERTY_5= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_6= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_7= ruleAGENT_TYPE | this_TRAIT_8= ruleTRAIT )
            {
            // InternalKim.g:12904:2: (kw= 'class' | kw= 'quantity' | kw= 'configuration' | kw= 'relationship' | kw= 'extent' | this_EXTENSIVE_PROPERTY_5= ruleEXTENSIVE_PROPERTY | this_INTENSIVE_PROPERTY_6= ruleINTENSIVE_PROPERTY | this_AGENT_TYPE_7= ruleAGENT_TYPE | this_TRAIT_8= ruleTRAIT )
            int alt262=9;
            switch ( input.LA(1) ) {
            case 188:
                {
                alt262=1;
                }
                break;
            case 189:
                {
                alt262=2;
                }
                break;
            case 190:
                {
                alt262=3;
                }
                break;
            case 137:
                {
                alt262=4;
                }
                break;
            case 173:
                {
                alt262=5;
                }
                break;
            case 192:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
                {
                alt262=6;
                }
                break;
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
                {
                alt262=7;
                }
                break;
            case 136:
            case 213:
            case 214:
            case 215:
                {
                alt262=8;
                }
                break;
            case 80:
            case 158:
            case 170:
            case 171:
            case 172:
            case 191:
                {
                alt262=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 262, 0, input);

                throw nvae;
            }

            switch (alt262) {
                case 1 :
                    // InternalKim.g:12905:3: kw= 'class'
                    {
                    kw=(Token)match(input,188,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getClassKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:12911:3: kw= 'quantity'
                    {
                    kw=(Token)match(input,189,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getQuantityKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:12917:3: kw= 'configuration'
                    {
                    kw=(Token)match(input,190,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getConfigurationKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:12923:3: kw= 'relationship'
                    {
                    kw=(Token)match(input,137,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getRelationshipKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:12929:3: kw= 'extent'
                    {
                    kw=(Token)match(input,173,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getDECLARABLE_TYPEAccess().getExtentKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:12935:3: this_EXTENSIVE_PROPERTY_5= ruleEXTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getEXTENSIVE_PROPERTYParserRuleCall_5());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_EXTENSIVE_PROPERTY_5=ruleEXTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_EXTENSIVE_PROPERTY_5);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:12946:3: this_INTENSIVE_PROPERTY_6= ruleINTENSIVE_PROPERTY
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getINTENSIVE_PROPERTYParserRuleCall_6());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_INTENSIVE_PROPERTY_6=ruleINTENSIVE_PROPERTY();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_INTENSIVE_PROPERTY_6);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:12957:3: this_AGENT_TYPE_7= ruleAGENT_TYPE
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getAGENT_TYPEParserRuleCall_7());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_AGENT_TYPE_7=ruleAGENT_TYPE();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_AGENT_TYPE_7);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:12968:3: this_TRAIT_8= ruleTRAIT
                    {
                    if ( state.backtracking==0 ) {

                      			newCompositeNode(grammarAccess.getDECLARABLE_TYPEAccess().getTRAITParserRuleCall_8());
                      		
                    }
                    pushFollow(FOLLOW_2);
                    this_TRAIT_8=ruleTRAIT();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(this_TRAIT_8);
                      		
                    }
                    if ( state.backtracking==0 ) {

                      			afterParserOrEnumRuleCall();
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDECLARABLE_TYPE"


    // $ANTLR start "entryRuleTRAIT"
    // InternalKim.g:12982:1: entryRuleTRAIT returns [String current=null] : iv_ruleTRAIT= ruleTRAIT EOF ;
    public final String entryRuleTRAIT() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleTRAIT = null;


        try {
            // InternalKim.g:12982:45: (iv_ruleTRAIT= ruleTRAIT EOF )
            // InternalKim.g:12983:2: iv_ruleTRAIT= ruleTRAIT EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getTRAITRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleTRAIT=ruleTRAIT();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleTRAIT.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleTRAIT"


    // $ANTLR start "ruleTRAIT"
    // InternalKim.g:12989:1: ruleTRAIT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) ;
    public final AntlrDatatypeRuleToken ruleTRAIT() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:12995:2: ( (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' ) )
            // InternalKim.g:12996:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            {
            // InternalKim.g:12996:2: (kw= 'ordering' | kw= 'attribute' | kw= 'identity' | kw= 'role' | kw= 'realm' | kw= 'domain' )
            int alt263=6;
            switch ( input.LA(1) ) {
            case 191:
                {
                alt263=1;
                }
                break;
            case 171:
                {
                alt263=2;
                }
                break;
            case 170:
                {
                alt263=3;
                }
                break;
            case 158:
                {
                alt263=4;
                }
                break;
            case 172:
                {
                alt263=5;
                }
                break;
            case 80:
                {
                alt263=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 263, 0, input);

                throw nvae;
            }

            switch (alt263) {
                case 1 :
                    // InternalKim.g:12997:3: kw= 'ordering'
                    {
                    kw=(Token)match(input,191,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getOrderingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13003:3: kw= 'attribute'
                    {
                    kw=(Token)match(input,171,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getAttributeKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13009:3: kw= 'identity'
                    {
                    kw=(Token)match(input,170,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getIdentityKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13015:3: kw= 'role'
                    {
                    kw=(Token)match(input,158,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRoleKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13021:3: kw= 'realm'
                    {
                    kw=(Token)match(input,172,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getRealmKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13027:3: kw= 'domain'
                    {
                    kw=(Token)match(input,80,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getTRAITAccess().getDomainKeyword_5());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleTRAIT"


    // $ANTLR start "entryRuleEXTENSIVE_PROPERTY"
    // InternalKim.g:13036:1: entryRuleEXTENSIVE_PROPERTY returns [String current=null] : iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF ;
    public final String entryRuleEXTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleEXTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13036:58: (iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF )
            // InternalKim.g:13037:2: iv_ruleEXTENSIVE_PROPERTY= ruleEXTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getEXTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleEXTENSIVE_PROPERTY=ruleEXTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleEXTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleEXTENSIVE_PROPERTY"


    // $ANTLR start "ruleEXTENSIVE_PROPERTY"
    // InternalKim.g:13043:1: ruleEXTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) ;
    public final AntlrDatatypeRuleToken ruleEXTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13049:2: ( (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' ) )
            // InternalKim.g:13050:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            {
            // InternalKim.g:13050:2: (kw= 'amount' | kw= 'length' | kw= 'mass' | kw= 'volume' | kw= 'weight' | kw= 'money' | kw= 'duration' | kw= 'area' )
            int alt264=8;
            switch ( input.LA(1) ) {
            case 192:
                {
                alt264=1;
                }
                break;
            case 193:
                {
                alt264=2;
                }
                break;
            case 194:
                {
                alt264=3;
                }
                break;
            case 195:
                {
                alt264=4;
                }
                break;
            case 196:
                {
                alt264=5;
                }
                break;
            case 197:
                {
                alt264=6;
                }
                break;
            case 198:
                {
                alt264=7;
                }
                break;
            case 199:
                {
                alt264=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 264, 0, input);

                throw nvae;
            }

            switch (alt264) {
                case 1 :
                    // InternalKim.g:13051:3: kw= 'amount'
                    {
                    kw=(Token)match(input,192,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAmountKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13057:3: kw= 'length'
                    {
                    kw=(Token)match(input,193,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getLengthKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13063:3: kw= 'mass'
                    {
                    kw=(Token)match(input,194,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMassKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13069:3: kw= 'volume'
                    {
                    kw=(Token)match(input,195,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getVolumeKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13075:3: kw= 'weight'
                    {
                    kw=(Token)match(input,196,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getWeightKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13081:3: kw= 'money'
                    {
                    kw=(Token)match(input,197,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getMoneyKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13087:3: kw= 'duration'
                    {
                    kw=(Token)match(input,198,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getDurationKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13093:3: kw= 'area'
                    {
                    kw=(Token)match(input,199,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getEXTENSIVE_PROPERTYAccess().getAreaKeyword_7());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleEXTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleINTENSIVE_PROPERTY"
    // InternalKim.g:13102:1: entryRuleINTENSIVE_PROPERTY returns [String current=null] : iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF ;
    public final String entryRuleINTENSIVE_PROPERTY() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleINTENSIVE_PROPERTY = null;


        try {
            // InternalKim.g:13102:58: (iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF )
            // InternalKim.g:13103:2: iv_ruleINTENSIVE_PROPERTY= ruleINTENSIVE_PROPERTY EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getINTENSIVE_PROPERTYRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleINTENSIVE_PROPERTY=ruleINTENSIVE_PROPERTY();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleINTENSIVE_PROPERTY.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleINTENSIVE_PROPERTY"


    // $ANTLR start "ruleINTENSIVE_PROPERTY"
    // InternalKim.g:13109:1: ruleINTENSIVE_PROPERTY returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) ;
    public final AntlrDatatypeRuleToken ruleINTENSIVE_PROPERTY() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13115:2: ( (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' ) )
            // InternalKim.g:13116:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            {
            // InternalKim.g:13116:2: (kw= 'acceleration' | kw= 'energy' | kw= 'entropy' | kw= 'priority' | kw= 'electric-potential' | kw= 'charge' | kw= 'resistance' | kw= 'resistivity' | kw= 'pressure' | kw= 'angle' | kw= 'velocity' | kw= 'temperature' | kw= 'viscosity' )
            int alt265=13;
            switch ( input.LA(1) ) {
            case 200:
                {
                alt265=1;
                }
                break;
            case 201:
                {
                alt265=2;
                }
                break;
            case 202:
                {
                alt265=3;
                }
                break;
            case 203:
                {
                alt265=4;
                }
                break;
            case 204:
                {
                alt265=5;
                }
                break;
            case 205:
                {
                alt265=6;
                }
                break;
            case 206:
                {
                alt265=7;
                }
                break;
            case 207:
                {
                alt265=8;
                }
                break;
            case 208:
                {
                alt265=9;
                }
                break;
            case 209:
                {
                alt265=10;
                }
                break;
            case 210:
                {
                alt265=11;
                }
                break;
            case 211:
                {
                alt265=12;
                }
                break;
            case 212:
                {
                alt265=13;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 265, 0, input);

                throw nvae;
            }

            switch (alt265) {
                case 1 :
                    // InternalKim.g:13117:3: kw= 'acceleration'
                    {
                    kw=(Token)match(input,200,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAccelerationKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13123:3: kw= 'energy'
                    {
                    kw=(Token)match(input,201,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEnergyKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13129:3: kw= 'entropy'
                    {
                    kw=(Token)match(input,202,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getEntropyKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13135:3: kw= 'priority'
                    {
                    kw=(Token)match(input,203,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPriorityKeyword_3());
                      		
                    }

                    }
                    break;
                case 5 :
                    // InternalKim.g:13141:3: kw= 'electric-potential'
                    {
                    kw=(Token)match(input,204,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getElectricPotentialKeyword_4());
                      		
                    }

                    }
                    break;
                case 6 :
                    // InternalKim.g:13147:3: kw= 'charge'
                    {
                    kw=(Token)match(input,205,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getChargeKeyword_5());
                      		
                    }

                    }
                    break;
                case 7 :
                    // InternalKim.g:13153:3: kw= 'resistance'
                    {
                    kw=(Token)match(input,206,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistanceKeyword_6());
                      		
                    }

                    }
                    break;
                case 8 :
                    // InternalKim.g:13159:3: kw= 'resistivity'
                    {
                    kw=(Token)match(input,207,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getResistivityKeyword_7());
                      		
                    }

                    }
                    break;
                case 9 :
                    // InternalKim.g:13165:3: kw= 'pressure'
                    {
                    kw=(Token)match(input,208,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getPressureKeyword_8());
                      		
                    }

                    }
                    break;
                case 10 :
                    // InternalKim.g:13171:3: kw= 'angle'
                    {
                    kw=(Token)match(input,209,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getAngleKeyword_9());
                      		
                    }

                    }
                    break;
                case 11 :
                    // InternalKim.g:13177:3: kw= 'velocity'
                    {
                    kw=(Token)match(input,210,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getVelocityKeyword_10());
                      		
                    }

                    }
                    break;
                case 12 :
                    // InternalKim.g:13183:3: kw= 'temperature'
                    {
                    kw=(Token)match(input,211,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getTemperatureKeyword_11());
                      		
                    }

                    }
                    break;
                case 13 :
                    // InternalKim.g:13189:3: kw= 'viscosity'
                    {
                    kw=(Token)match(input,212,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getINTENSIVE_PROPERTYAccess().getViscosityKeyword_12());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleINTENSIVE_PROPERTY"


    // $ANTLR start "entryRuleAGENT_TYPE"
    // InternalKim.g:13198:1: entryRuleAGENT_TYPE returns [String current=null] : iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF ;
    public final String entryRuleAGENT_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleAGENT_TYPE = null;


        try {
            // InternalKim.g:13198:50: (iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF )
            // InternalKim.g:13199:2: iv_ruleAGENT_TYPE= ruleAGENT_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getAGENT_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleAGENT_TYPE=ruleAGENT_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleAGENT_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleAGENT_TYPE"


    // $ANTLR start "ruleAGENT_TYPE"
    // InternalKim.g:13205:1: ruleAGENT_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) ;
    public final AntlrDatatypeRuleToken ruleAGENT_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13211:2: ( (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' ) )
            // InternalKim.g:13212:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            {
            // InternalKim.g:13212:2: (kw= 'thing' | kw= 'process' | kw= 'agent' | kw= 'event' )
            int alt266=4;
            switch ( input.LA(1) ) {
            case 213:
                {
                alt266=1;
                }
                break;
            case 214:
                {
                alt266=2;
                }
                break;
            case 136:
                {
                alt266=3;
                }
                break;
            case 215:
                {
                alt266=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 266, 0, input);

                throw nvae;
            }

            switch (alt266) {
                case 1 :
                    // InternalKim.g:13213:3: kw= 'thing'
                    {
                    kw=(Token)match(input,213,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getThingKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13219:3: kw= 'process'
                    {
                    kw=(Token)match(input,214,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getProcessKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13225:3: kw= 'agent'
                    {
                    kw=(Token)match(input,136,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getAgentKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13231:3: kw= 'event'
                    {
                    kw=(Token)match(input,215,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getAGENT_TYPEAccess().getEventKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleAGENT_TYPE"


    // $ANTLR start "entryRulePROPERTY_TYPE"
    // InternalKim.g:13240:1: entryRulePROPERTY_TYPE returns [String current=null] : iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF ;
    public final String entryRulePROPERTY_TYPE() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePROPERTY_TYPE = null;


        try {
            // InternalKim.g:13240:53: (iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF )
            // InternalKim.g:13241:2: iv_rulePROPERTY_TYPE= rulePROPERTY_TYPE EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPROPERTY_TYPERule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePROPERTY_TYPE=rulePROPERTY_TYPE();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePROPERTY_TYPE.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePROPERTY_TYPE"


    // $ANTLR start "rulePROPERTY_TYPE"
    // InternalKim.g:13247:1: rulePROPERTY_TYPE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (kw= 'functional' | kw= 'bidirectional' | kw= 'unidirectional' | kw= 'structural' ) ;
    public final AntlrDatatypeRuleToken rulePROPERTY_TYPE() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;


        	enterRule();

        try {
            // InternalKim.g:13253:2: ( (kw= 'functional' | kw= 'bidirectional' | kw= 'unidirectional' | kw= 'structural' ) )
            // InternalKim.g:13254:2: (kw= 'functional' | kw= 'bidirectional' | kw= 'unidirectional' | kw= 'structural' )
            {
            // InternalKim.g:13254:2: (kw= 'functional' | kw= 'bidirectional' | kw= 'unidirectional' | kw= 'structural' )
            int alt267=4;
            switch ( input.LA(1) ) {
            case 216:
                {
                alt267=1;
                }
                break;
            case 217:
                {
                alt267=2;
                }
                break;
            case 218:
                {
                alt267=3;
                }
                break;
            case 219:
                {
                alt267=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 267, 0, input);

                throw nvae;
            }

            switch (alt267) {
                case 1 :
                    // InternalKim.g:13255:3: kw= 'functional'
                    {
                    kw=(Token)match(input,216,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getFunctionalKeyword_0());
                      		
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13261:3: kw= 'bidirectional'
                    {
                    kw=(Token)match(input,217,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getBidirectionalKeyword_1());
                      		
                    }

                    }
                    break;
                case 3 :
                    // InternalKim.g:13267:3: kw= 'unidirectional'
                    {
                    kw=(Token)match(input,218,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getUnidirectionalKeyword_2());
                      		
                    }

                    }
                    break;
                case 4 :
                    // InternalKim.g:13273:3: kw= 'structural'
                    {
                    kw=(Token)match(input,219,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      			current.merge(kw);
                      			newLeafNode(kw, grammarAccess.getPROPERTY_TYPEAccess().getStructuralKeyword_3());
                      		
                    }

                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePROPERTY_TYPE"


    // $ANTLR start "entryRuleSimpleObservableSemantics"
    // InternalKim.g:13282:1: entryRuleSimpleObservableSemantics returns [EObject current=null] : iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF ;
    public final EObject entryRuleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleSimpleObservableSemantics = null;



        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13286:2: (iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF )
            // InternalKim.g:13287:2: iv_ruleSimpleObservableSemantics= ruleSimpleObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getSimpleObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleSimpleObservableSemantics=ruleSimpleObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleSimpleObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "entryRuleSimpleObservableSemantics"


    // $ANTLR start "ruleSimpleObservableSemantics"
    // InternalKim.g:13296:1: ruleSimpleObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) ;
    public final EObject ruleSimpleObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_2=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_downTo_6_1=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_13=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        Token lv_name_19_0=null;
        EObject lv_declaration_0_0 = null;

        EObject lv_by_3_0 = null;

        AntlrDatatypeRuleToken lv_downTo_6_2 = null;

        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;

        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;

        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;



        	enterRule();
        	UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
        	grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1()
        	);

        try {
            // InternalKim.g:13305:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) ) )
            // InternalKim.g:13306:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            {
            // InternalKim.g:13306:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) ) )
            // InternalKim.g:13307:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            {
            // InternalKim.g:13307:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13308:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13308:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:13309:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_151);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            // InternalKim.g:13326:3: ( ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) ) )
            // InternalKim.g:13327:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            {
            // InternalKim.g:13327:4: ( ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* ) )
            // InternalKim.g:13328:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            {
            getUnorderedGroupHelper().enter(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());
            // InternalKim.g:13331:5: ( ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )* )
            // InternalKim.g:13332:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            {
            // InternalKim.g:13332:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*
            loop271:
            do {
                int alt271=7;
                alt271 = dfa271.predict(input);
                switch (alt271) {
            	case 1 :
            	    // InternalKim.g:13333:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13333:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
            	    // InternalKim.g:13334:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
            	    }
            	    // InternalKim.g:13334:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
            	    // InternalKim.g:13335:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
            	    // InternalKim.g:13338:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
            	    // InternalKim.g:13338:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13338:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
            	    // InternalKim.g:13338:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
            	    {
            	    otherlv_2=(Token)match(input,93,FOLLOW_19); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_2, grammarAccess.getSimpleObservableSemanticsAccess().getByKeyword_1_0_0());
            	      								
            	    }
            	    // InternalKim.g:13342:9: ( (lv_by_3_0= ruleConcept ) )
            	    // InternalKim.g:13343:10: (lv_by_3_0= ruleConcept )
            	    {
            	    // InternalKim.g:13343:10: (lv_by_3_0= ruleConcept )
            	    // InternalKim.g:13344:11: lv_by_3_0= ruleConcept
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_by_3_0=ruleConcept();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"by",
            	      												lv_by_3_0,
            	      												"org.integratedmodelling.kim.Kim.Concept");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 2 :
            	    // InternalKim.g:13367:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13367:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) )
            	    // InternalKim.g:13368:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
            	    }
            	    // InternalKim.g:13368:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) )
            	    // InternalKim.g:13369:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
            	    // InternalKim.g:13372:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) )
            	    // InternalKim.g:13372:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13372:19: (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) )
            	    // InternalKim.g:13372:20: otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) )
            	    {
            	    otherlv_4=(Token)match(input,94,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_4, grammarAccess.getSimpleObservableSemanticsAccess().getDownKeyword_1_1_0());
            	      								
            	    }
            	    otherlv_5=(Token)match(input,39,FOLLOW_85); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_5, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_1_1());
            	      								
            	    }
            	    // InternalKim.g:13380:9: ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) )
            	    // InternalKim.g:13381:10: ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) )
            	    {
            	    // InternalKim.g:13381:10: ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) )
            	    // InternalKim.g:13382:11: (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId )
            	    {
            	    // InternalKim.g:13382:11: (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId )
            	    int alt268=2;
            	    int LA268_0 = input.LA(1);

            	    if ( (LA268_0==RULE_CAMELCASE_ID) ) {
            	        alt268=1;
            	    }
            	    else if ( (LA268_0==RULE_LOWERCASE_ID) ) {
            	        alt268=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 268, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt268) {
            	        case 1 :
            	            // InternalKim.g:13383:12: lv_downTo_6_1= RULE_CAMELCASE_ID
            	            {
            	            lv_downTo_6_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_151); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												newLeafNode(lv_downTo_6_1, grammarAccess.getSimpleObservableSemanticsAccess().getDownToCAMELCASE_IDTerminalRuleCall_1_1_2_0_0());
            	              											
            	            }
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												setWithLastConsumed(
            	              													current,
            	              													"downTo",
            	              													lv_downTo_6_1,
            	              													"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
            	              											
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13398:12: lv_downTo_6_2= ruleNamespaceId
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToNamespaceIdParserRuleCall_1_1_2_0_1());
            	              											
            	            }
            	            pushFollow(FOLLOW_151);
            	            lv_downTo_6_2=ruleNamespaceId();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"downTo",
            	              													lv_downTo_6_2,
            	              													"org.integratedmodelling.kim.Kim.NamespaceId");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }
            	            break;

            	    }


            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 3 :
            	    // InternalKim.g:13422:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13422:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
            	    // InternalKim.g:13423:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
            	    }
            	    // InternalKim.g:13423:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
            	    // InternalKim.g:13424:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
            	    // InternalKim.g:13427:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
            	    // InternalKim.g:13427:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13427:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
            	    // InternalKim.g:13427:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    {
            	    otherlv_7=(Token)match(input,38,FOLLOW_22); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_7, grammarAccess.getSimpleObservableSemanticsAccess().getAccordingKeyword_1_2_0());
            	      								
            	    }
            	    otherlv_8=(Token)match(input,39,FOLLOW_23); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_8, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_2_1());
            	      								
            	    }
            	    // InternalKim.g:13435:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
            	    // InternalKim.g:13436:10: (lv_accordingTo_9_0= rulePropertyId )
            	    {
            	    // InternalKim.g:13436:10: (lv_accordingTo_9_0= rulePropertyId )
            	    // InternalKim.g:13437:11: lv_accordingTo_9_0= rulePropertyId
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_accordingTo_9_0=rulePropertyId();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"accordingTo",
            	      												lv_accordingTo_9_0,
            	      												"org.integratedmodelling.kim.Kim.PropertyId");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 4 :
            	    // InternalKim.g:13460:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13460:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
            	    // InternalKim.g:13461:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
            	    }
            	    // InternalKim.g:13461:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
            	    // InternalKim.g:13462:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
            	    // InternalKim.g:13465:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
            	    // InternalKim.g:13465:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13465:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
            	    int alt270=2;
            	    int LA270_0 = input.LA(1);

            	    if ( (LA270_0==45) ) {
            	        alt270=1;
            	    }
            	    else if ( (LA270_0==95) ) {
            	        alt270=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 270, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt270) {
            	        case 1 :
            	            // InternalKim.g:13465:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            {
            	            // InternalKim.g:13465:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
            	            // InternalKim.g:13466:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            {
            	            otherlv_10=(Token)match(input,45,FOLLOW_86); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_10, grammarAccess.getSimpleObservableSemanticsAccess().getInKeyword_1_3_0_0());
            	              									
            	            }
            	            // InternalKim.g:13470:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
            	            int alt269=2;
            	            switch ( input.LA(1) ) {
            	            case RULE_CAMELCASE_ID:
            	                {
            	                int LA269_1 = input.LA(2);

            	                if ( (synpred506_InternalKim()) ) {
            	                    alt269=1;
            	                }
            	                else if ( (true) ) {
            	                    alt269=2;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 269, 1, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case RULE_LOWERCASE_ID:
            	                {
            	                int LA269_2 = input.LA(2);

            	                if ( (LA269_2==51||LA269_2==89) ) {
            	                    alt269=2;
            	                }
            	                else if ( (LA269_2==EOF||LA269_2==RULE_INT||LA269_2==24||LA269_2==38||LA269_2==45||LA269_2==47||LA269_2==88||(LA269_2>=93 && LA269_2<=95)||LA269_2==98||(LA269_2>=226 && LA269_2<=227)||LA269_2==237) ) {
            	                    alt269=1;
            	                }
            	                else {
            	                    if (state.backtracking>0) {state.failed=true; return current;}
            	                    NoViableAltException nvae =
            	                        new NoViableAltException("", 269, 2, input);

            	                    throw nvae;
            	                }
            	                }
            	                break;
            	            case EOF:
            	            case RULE_INT:
            	            case 24:
            	            case 33:
            	            case 38:
            	            case 45:
            	            case 47:
            	            case 88:
            	            case 93:
            	            case 94:
            	            case 95:
            	            case 98:
            	            case 226:
            	            case 227:
            	            case 237:
            	                {
            	                alt269=1;
            	                }
            	                break;
            	            case RULE_UPPERCASE_ID:
            	                {
            	                alt269=2;
            	                }
            	                break;
            	            default:
            	                if (state.backtracking>0) {state.failed=true; return current;}
            	                NoViableAltException nvae =
            	                    new NoViableAltException("", 269, 0, input);

            	                throw nvae;
            	            }

            	            switch (alt269) {
            	                case 1 :
            	                    // InternalKim.g:13471:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    {
            	                    // InternalKim.g:13471:11: ( (lv_unit_11_0= ruleUnit ) )
            	                    // InternalKim.g:13472:12: (lv_unit_11_0= ruleUnit )
            	                    {
            	                    // InternalKim.g:13472:12: (lv_unit_11_0= ruleUnit )
            	                    // InternalKim.g:13473:13: lv_unit_11_0= ruleUnit
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_151);
            	                    lv_unit_11_0=ruleUnit();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"unit",
            	                      														lv_unit_11_0,
            	                      														"org.integratedmodelling.kim.Kim.Unit");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;
            	                case 2 :
            	                    // InternalKim.g:13491:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    {
            	                    // InternalKim.g:13491:11: ( (lv_currency_12_0= ruleCurrency ) )
            	                    // InternalKim.g:13492:12: (lv_currency_12_0= ruleCurrency )
            	                    {
            	                    // InternalKim.g:13492:12: (lv_currency_12_0= ruleCurrency )
            	                    // InternalKim.g:13493:13: lv_currency_12_0= ruleCurrency
            	                    {
            	                    if ( state.backtracking==0 ) {

            	                      													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
            	                      												
            	                    }
            	                    pushFollow(FOLLOW_151);
            	                    lv_currency_12_0=ruleCurrency();

            	                    state._fsp--;
            	                    if (state.failed) return current;
            	                    if ( state.backtracking==0 ) {

            	                      													if (current==null) {
            	                      														current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	                      													}
            	                      													set(
            	                      														current,
            	                      														"currency",
            	                      														lv_currency_12_0,
            	                      														"org.integratedmodelling.kim.Kim.Currency");
            	                      													afterParserOrEnumRuleCall();
            	                      												
            	                    }

            	                    }


            	                    }


            	                    }
            	                    break;

            	            }


            	            }


            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:13513:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            {
            	            // InternalKim.g:13513:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
            	            // InternalKim.g:13514:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
            	            {
            	            otherlv_13=(Token)match(input,95,FOLLOW_152); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              										newLeafNode(otherlv_13, grammarAccess.getSimpleObservableSemanticsAccess().getPerKeyword_1_3_1_0());
            	              									
            	            }
            	            // InternalKim.g:13518:10: ( (lv_unit_14_0= ruleUnit ) )
            	            // InternalKim.g:13519:11: (lv_unit_14_0= ruleUnit )
            	            {
            	            // InternalKim.g:13519:11: (lv_unit_14_0= ruleUnit )
            	            // InternalKim.g:13520:12: lv_unit_14_0= ruleUnit
            	            {
            	            if ( state.backtracking==0 ) {

            	              												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
            	              											
            	            }
            	            pushFollow(FOLLOW_151);
            	            lv_unit_14_0=ruleUnit();

            	            state._fsp--;
            	            if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              												if (current==null) {
            	              													current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	              												}
            	              												set(
            	              													current,
            	              													"unit",
            	              													lv_unit_14_0,
            	              													"org.integratedmodelling.kim.Kim.Unit");
            	              												afterParserOrEnumRuleCall();
            	              											
            	            }

            	            }


            	            }


            	            }


            	            }
            	            break;

            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 5 :
            	    // InternalKim.g:13544:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13544:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
            	    // InternalKim.g:13545:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
            	    }
            	    // InternalKim.g:13545:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
            	    // InternalKim.g:13546:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
            	    // InternalKim.g:13549:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
            	    // InternalKim.g:13549:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13549:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
            	    // InternalKim.g:13549:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
            	    {
            	    // InternalKim.g:13549:20: ( (lv_from_15_0= ruleNumber ) )
            	    // InternalKim.g:13550:10: (lv_from_15_0= ruleNumber )
            	    {
            	    // InternalKim.g:13550:10: (lv_from_15_0= ruleNumber )
            	    // InternalKim.g:13551:11: lv_from_15_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_22);
            	    lv_from_15_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"from",
            	      												lv_from_15_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }

            	    otherlv_16=(Token)match(input,39,FOLLOW_28); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_16, grammarAccess.getSimpleObservableSemanticsAccess().getToKeyword_1_4_1());
            	      								
            	    }
            	    // InternalKim.g:13572:9: ( (lv_to_17_0= ruleNumber ) )
            	    // InternalKim.g:13573:10: (lv_to_17_0= ruleNumber )
            	    {
            	    // InternalKim.g:13573:10: (lv_to_17_0= ruleNumber )
            	    // InternalKim.g:13574:11: lv_to_17_0= ruleNumber
            	    {
            	    if ( state.backtracking==0 ) {

            	      											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
            	      										
            	    }
            	    pushFollow(FOLLOW_151);
            	    lv_to_17_0=ruleNumber();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElementForParent(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											set(
            	      												current,
            	      												"to",
            	      												lv_to_17_0,
            	      												"org.integratedmodelling.kim.Kim.Number");
            	      											afterParserOrEnumRuleCall();
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;
            	case 6 :
            	    // InternalKim.g:13597:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    {
            	    // InternalKim.g:13597:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
            	    // InternalKim.g:13598:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    {
            	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
            	    }
            	    // InternalKim.g:13598:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
            	    // InternalKim.g:13599:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    {
            	    getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
            	    // InternalKim.g:13602:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
            	    // InternalKim.g:13602:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    {
            	    if ( !((true)) ) {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        throw new FailedPredicateException(input, "ruleSimpleObservableSemantics", "true");
            	    }
            	    // InternalKim.g:13602:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
            	    // InternalKim.g:13602:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    {
            	    otherlv_18=(Token)match(input,98,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      									newLeafNode(otherlv_18, grammarAccess.getSimpleObservableSemanticsAccess().getNamedKeyword_1_5_0());
            	      								
            	    }
            	    // InternalKim.g:13606:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
            	    // InternalKim.g:13607:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    {
            	    // InternalKim.g:13607:10: (lv_name_19_0= RULE_LOWERCASE_ID )
            	    // InternalKim.g:13608:11: lv_name_19_0= RULE_LOWERCASE_ID
            	    {
            	    lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_151); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      											newLeafNode(lv_name_19_0, grammarAccess.getSimpleObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_1_5_1_0());
            	      										
            	    }
            	    if ( state.backtracking==0 ) {

            	      											if (current==null) {
            	      												current = createModelElement(grammarAccess.getSimpleObservableSemanticsRule());
            	      											}
            	      											setWithLastConsumed(
            	      												current,
            	      												"name",
            	      												lv_name_19_0,
            	      												"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
            	      										
            	    }

            	    }


            	    }


            	    }


            	    }

            	    getUnorderedGroupHelper().returnFromSelection(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop271;
                }
            } while (true);


            }


            }

            getUnorderedGroupHelper().leave(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1());

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {

            	myUnorderedGroupState.restore();

        }
        return current;
    }
    // $ANTLR end "ruleSimpleObservableSemantics"


    // $ANTLR start "entryRuleNamedObservableSemantics"
    // InternalKim.g:13644:1: entryRuleNamedObservableSemantics returns [EObject current=null] : iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF ;
    public final EObject entryRuleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNamedObservableSemantics = null;


        try {
            // InternalKim.g:13644:65: (iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF )
            // InternalKim.g:13645:2: iv_ruleNamedObservableSemantics= ruleNamedObservableSemantics EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamedObservableSemanticsRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamedObservableSemantics=ruleNamedObservableSemantics();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamedObservableSemantics; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamedObservableSemantics"


    // $ANTLR start "ruleNamedObservableSemantics"
    // InternalKim.g:13651:1: ruleNamedObservableSemantics returns [EObject current=null] : ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) ;
    public final EObject ruleNamedObservableSemantics() throws RecognitionException {
        EObject current = null;

        Token otherlv_1=null;
        Token lv_name_2_1=null;
        Token lv_name_2_2=null;
        EObject lv_declaration_0_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13657:2: ( ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) ) )
            // InternalKim.g:13658:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            {
            // InternalKim.g:13658:2: ( ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) ) )
            // InternalKim.g:13659:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) ) otherlv_1= 'named' ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            {
            // InternalKim.g:13659:3: ( (lv_declaration_0_0= ruleConceptDeclaration ) )
            // InternalKim.g:13660:4: (lv_declaration_0_0= ruleConceptDeclaration )
            {
            // InternalKim.g:13660:4: (lv_declaration_0_0= ruleConceptDeclaration )
            // InternalKim.g:13661:5: lv_declaration_0_0= ruleConceptDeclaration
            {
            if ( state.backtracking==0 ) {

              					newCompositeNode(grammarAccess.getNamedObservableSemanticsAccess().getDeclarationConceptDeclarationParserRuleCall_0_0());
              				
            }
            pushFollow(FOLLOW_153);
            lv_declaration_0_0=ruleConceptDeclaration();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElementForParent(grammarAccess.getNamedObservableSemanticsRule());
              					}
              					set(
              						current,
              						"declaration",
              						lv_declaration_0_0,
              						"org.integratedmodelling.kim.Kim.ConceptDeclaration");
              					afterParserOrEnumRuleCall();
              				
            }

            }


            }

            otherlv_1=(Token)match(input,98,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			newLeafNode(otherlv_1, grammarAccess.getNamedObservableSemanticsAccess().getNamedKeyword_1());
              		
            }
            // InternalKim.g:13682:3: ( ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:13683:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:13683:4: ( (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:13684:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:13684:5: (lv_name_2_1= RULE_LOWERCASE_ID | lv_name_2_2= RULE_LOWERCASE_DASHID )
            int alt272=2;
            int LA272_0 = input.LA(1);

            if ( (LA272_0==RULE_LOWERCASE_ID) ) {
                alt272=1;
            }
            else if ( (LA272_0==RULE_LOWERCASE_DASHID) ) {
                alt272=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 272, 0, input);

                throw nvae;
            }
            switch (alt272) {
                case 1 :
                    // InternalKim.g:13685:6: lv_name_2_1= RULE_LOWERCASE_ID
                    {
                    lv_name_2_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_1, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_IDTerminalRuleCall_2_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_1,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                      					
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:13700:6: lv_name_2_2= RULE_LOWERCASE_DASHID
                    {
                    lv_name_2_2=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_name_2_2, grammarAccess.getNamedObservableSemanticsAccess().getNameLOWERCASE_DASHIDTerminalRuleCall_2_0_1());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNamedObservableSemanticsRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"name",
                      							lv_name_2_2,
                      							"org.integratedmodelling.kim.Kim.LOWERCASE_DASHID");
                      					
                    }

                    }
                    break;

            }


            }


            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamedObservableSemantics"


    // $ANTLR start "entryRuleUnitElement"
    // InternalKim.g:13721:1: entryRuleUnitElement returns [EObject current=null] : iv_ruleUnitElement= ruleUnitElement EOF ;
    public final EObject entryRuleUnitElement() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnitElement = null;


        try {
            // InternalKim.g:13721:52: (iv_ruleUnitElement= ruleUnitElement EOF )
            // InternalKim.g:13722:2: iv_ruleUnitElement= ruleUnitElement EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnitElement=ruleUnitElement();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnitElement; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnitElement"


    // $ANTLR start "ruleUnitElement"
    // InternalKim.g:13728:1: ruleUnitElement returns [EObject current=null] : ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) ;
    public final EObject ruleUnitElement() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_1=null;
        Token lv_id_0_2=null;
        Token otherlv_2=null;
        Token otherlv_4=null;
        EObject lv_num_1_0 = null;

        EObject lv_unit_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13734:2: ( ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) ) )
            // InternalKim.g:13735:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            {
            // InternalKim.g:13735:2: ( ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) ) | ( (lv_num_1_0= ruleNumber ) ) | (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' ) )
            int alt274=3;
            switch ( input.LA(1) ) {
            case RULE_LOWERCASE_ID:
            case RULE_CAMELCASE_ID:
                {
                alt274=1;
                }
                break;
            case RULE_INT:
            case 226:
            case 227:
                {
                alt274=2;
                }
                break;
            case 33:
                {
                alt274=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 274, 0, input);

                throw nvae;
            }

            switch (alt274) {
                case 1 :
                    // InternalKim.g:13736:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    {
                    // InternalKim.g:13736:3: ( ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) ) )
                    // InternalKim.g:13737:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    {
                    // InternalKim.g:13737:4: ( (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID ) )
                    // InternalKim.g:13738:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    {
                    // InternalKim.g:13738:5: (lv_id_0_1= RULE_CAMELCASE_ID | lv_id_0_2= RULE_LOWERCASE_ID )
                    int alt273=2;
                    int LA273_0 = input.LA(1);

                    if ( (LA273_0==RULE_CAMELCASE_ID) ) {
                        alt273=1;
                    }
                    else if ( (LA273_0==RULE_LOWERCASE_ID) ) {
                        alt273=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 273, 0, input);

                        throw nvae;
                    }
                    switch (alt273) {
                        case 1 :
                            // InternalKim.g:13739:6: lv_id_0_1= RULE_CAMELCASE_ID
                            {
                            lv_id_0_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_1, grammarAccess.getUnitElementAccess().getIdCAMELCASE_IDTerminalRuleCall_0_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:13754:6: lv_id_0_2= RULE_LOWERCASE_ID
                            {
                            lv_id_0_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_id_0_2, grammarAccess.getUnitElementAccess().getIdLOWERCASE_IDTerminalRuleCall_0_0_1());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getUnitElementRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"id",
                              							lv_id_0_2,
                              							"org.integratedmodelling.kim.Kim.LOWERCASE_ID");
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13772:3: ( (lv_num_1_0= ruleNumber ) )
                    {
                    // InternalKim.g:13772:3: ( (lv_num_1_0= ruleNumber ) )
                    // InternalKim.g:13773:4: (lv_num_1_0= ruleNumber )
                    {
                    // InternalKim.g:13773:4: (lv_num_1_0= ruleNumber )
                    // InternalKim.g:13774:5: lv_num_1_0= ruleNumber
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitElementAccess().getNumNumberParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_2);
                    lv_num_1_0=ruleNumber();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      					}
                      					set(
                      						current,
                      						"num",
                      						lv_num_1_0,
                      						"org.integratedmodelling.kim.Kim.Number");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13792:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    {
                    // InternalKim.g:13792:3: (otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')' )
                    // InternalKim.g:13793:4: otherlv_2= '(' ( (lv_unit_3_0= ruleUnit ) ) otherlv_4= ')'
                    {
                    otherlv_2=(Token)match(input,33,FOLLOW_155); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_2, grammarAccess.getUnitElementAccess().getLeftParenthesisKeyword_2_0());
                      			
                    }
                    // InternalKim.g:13797:4: ( (lv_unit_3_0= ruleUnit ) )
                    // InternalKim.g:13798:5: (lv_unit_3_0= ruleUnit )
                    {
                    // InternalKim.g:13798:5: (lv_unit_3_0= ruleUnit )
                    // InternalKim.g:13799:6: lv_unit_3_0= ruleUnit
                    {
                    if ( state.backtracking==0 ) {

                      						newCompositeNode(grammarAccess.getUnitElementAccess().getUnitUnitParserRuleCall_2_1_0());
                      					
                    }
                    pushFollow(FOLLOW_20);
                    lv_unit_3_0=ruleUnit();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElementForParent(grammarAccess.getUnitElementRule());
                      						}
                      						set(
                      							current,
                      							"unit",
                      							lv_unit_3_0,
                      							"org.integratedmodelling.kim.Kim.Unit");
                      						afterParserOrEnumRuleCall();
                      					
                    }

                    }


                    }

                    otherlv_4=(Token)match(input,34,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_4, grammarAccess.getUnitElementAccess().getRightParenthesisKeyword_2_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitElement"


    // $ANTLR start "entryRuleREL_OPERATOR"
    // InternalKim.g:13825:1: entryRuleREL_OPERATOR returns [EObject current=null] : iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF ;
    public final EObject entryRuleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleREL_OPERATOR = null;


        try {
            // InternalKim.g:13825:53: (iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF )
            // InternalKim.g:13826:2: iv_ruleREL_OPERATOR= ruleREL_OPERATOR EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getREL_OPERATORRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleREL_OPERATOR=ruleREL_OPERATOR();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleREL_OPERATOR; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleREL_OPERATOR"


    // $ANTLR start "ruleREL_OPERATOR"
    // InternalKim.g:13832:1: ruleREL_OPERATOR returns [EObject current=null] : ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) ;
    public final EObject ruleREL_OPERATOR() throws RecognitionException {
        EObject current = null;

        Token lv_gt_0_0=null;
        Token lv_lt_1_0=null;
        Token lv_eq_2_0=null;
        Token lv_ne_3_0=null;
        Token lv_le_4_0=null;
        Token lv_ge_5_0=null;


        	enterRule();

        try {
            // InternalKim.g:13838:2: ( ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) ) )
            // InternalKim.g:13839:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            {
            // InternalKim.g:13839:2: ( ( (lv_gt_0_0= '>' ) ) | ( (lv_lt_1_0= '<' ) ) | ( (lv_eq_2_0= '=' ) ) | ( (lv_ne_3_0= '!=' ) ) | ( (lv_le_4_0= '<=' ) ) | ( (lv_ge_5_0= '>=' ) ) )
            int alt275=6;
            switch ( input.LA(1) ) {
            case 220:
                {
                alt275=1;
                }
                break;
            case 221:
                {
                alt275=2;
                }
                break;
            case 186:
                {
                alt275=3;
                }
                break;
            case 222:
                {
                alt275=4;
                }
                break;
            case 223:
                {
                alt275=5;
                }
                break;
            case 224:
                {
                alt275=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 275, 0, input);

                throw nvae;
            }

            switch (alt275) {
                case 1 :
                    // InternalKim.g:13840:3: ( (lv_gt_0_0= '>' ) )
                    {
                    // InternalKim.g:13840:3: ( (lv_gt_0_0= '>' ) )
                    // InternalKim.g:13841:4: (lv_gt_0_0= '>' )
                    {
                    // InternalKim.g:13841:4: (lv_gt_0_0= '>' )
                    // InternalKim.g:13842:5: lv_gt_0_0= '>'
                    {
                    lv_gt_0_0=(Token)match(input,220,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_gt_0_0, grammarAccess.getREL_OPERATORAccess().getGtGreaterThanSignKeyword_0_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "gt", true, ">");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:13855:3: ( (lv_lt_1_0= '<' ) )
                    {
                    // InternalKim.g:13855:3: ( (lv_lt_1_0= '<' ) )
                    // InternalKim.g:13856:4: (lv_lt_1_0= '<' )
                    {
                    // InternalKim.g:13856:4: (lv_lt_1_0= '<' )
                    // InternalKim.g:13857:5: lv_lt_1_0= '<'
                    {
                    lv_lt_1_0=(Token)match(input,221,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_lt_1_0, grammarAccess.getREL_OPERATORAccess().getLtLessThanSignKeyword_1_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "lt", true, "<");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:13870:3: ( (lv_eq_2_0= '=' ) )
                    {
                    // InternalKim.g:13870:3: ( (lv_eq_2_0= '=' ) )
                    // InternalKim.g:13871:4: (lv_eq_2_0= '=' )
                    {
                    // InternalKim.g:13871:4: (lv_eq_2_0= '=' )
                    // InternalKim.g:13872:5: lv_eq_2_0= '='
                    {
                    lv_eq_2_0=(Token)match(input,186,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_eq_2_0, grammarAccess.getREL_OPERATORAccess().getEqEqualsSignKeyword_2_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "eq", true, "=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:13885:3: ( (lv_ne_3_0= '!=' ) )
                    {
                    // InternalKim.g:13885:3: ( (lv_ne_3_0= '!=' ) )
                    // InternalKim.g:13886:4: (lv_ne_3_0= '!=' )
                    {
                    // InternalKim.g:13886:4: (lv_ne_3_0= '!=' )
                    // InternalKim.g:13887:5: lv_ne_3_0= '!='
                    {
                    lv_ne_3_0=(Token)match(input,222,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ne_3_0, grammarAccess.getREL_OPERATORAccess().getNeExclamationMarkEqualsSignKeyword_3_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ne", true, "!=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:13900:3: ( (lv_le_4_0= '<=' ) )
                    {
                    // InternalKim.g:13900:3: ( (lv_le_4_0= '<=' ) )
                    // InternalKim.g:13901:4: (lv_le_4_0= '<=' )
                    {
                    // InternalKim.g:13901:4: (lv_le_4_0= '<=' )
                    // InternalKim.g:13902:5: lv_le_4_0= '<='
                    {
                    lv_le_4_0=(Token)match(input,223,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_le_4_0, grammarAccess.getREL_OPERATORAccess().getLeLessThanSignEqualsSignKeyword_4_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "le", true, "<=");
                      				
                    }

                    }


                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:13915:3: ( (lv_ge_5_0= '>=' ) )
                    {
                    // InternalKim.g:13915:3: ( (lv_ge_5_0= '>=' ) )
                    // InternalKim.g:13916:4: (lv_ge_5_0= '>=' )
                    {
                    // InternalKim.g:13916:4: (lv_ge_5_0= '>=' )
                    // InternalKim.g:13917:5: lv_ge_5_0= '>='
                    {
                    lv_ge_5_0=(Token)match(input,224,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(lv_ge_5_0, grammarAccess.getREL_OPERATORAccess().getGeGreaterThanSignEqualsSignKeyword_5_0());
                      				
                    }
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElement(grammarAccess.getREL_OPERATORRule());
                      					}
                      					setWithLastConsumed(current, "ge", true, ">=");
                      				
                    }

                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleREL_OPERATOR"


    // $ANTLR start "entryRuleUnit"
    // InternalKim.g:13933:1: entryRuleUnit returns [EObject current=null] : iv_ruleUnit= ruleUnit EOF ;
    public final EObject entryRuleUnit() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleUnit = null;


        try {
            // InternalKim.g:13933:45: (iv_ruleUnit= ruleUnit EOF )
            // InternalKim.g:13934:2: iv_ruleUnit= ruleUnit EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getUnitRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleUnit=ruleUnit();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleUnit; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleUnit"


    // $ANTLR start "ruleUnit"
    // InternalKim.g:13940:1: ruleUnit returns [EObject current=null] : ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) ;
    public final EObject ruleUnit() throws RecognitionException {
        EObject current = null;

        EObject lv_root_1_0 = null;

        Enumerator lv_connectors_2_0 = null;

        EObject lv_units_3_0 = null;



        	enterRule();

        try {
            // InternalKim.g:13946:2: ( ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* ) )
            // InternalKim.g:13947:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            {
            // InternalKim.g:13947:2: ( () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )* )
            // InternalKim.g:13948:3: () ( (lv_root_1_0= ruleUnitElement ) )? ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            {
            // InternalKim.g:13948:3: ()
            // InternalKim.g:13949:4: 
            {
            if ( state.backtracking==0 ) {

              				/* */
              			
            }
            if ( state.backtracking==0 ) {

              				current = forceCreateModelElement(
              					grammarAccess.getUnitAccess().getUnitAction_0(),
              					current);
              			
            }

            }

            // InternalKim.g:13958:3: ( (lv_root_1_0= ruleUnitElement ) )?
            int alt276=2;
            alt276 = dfa276.predict(input);
            switch (alt276) {
                case 1 :
                    // InternalKim.g:13959:4: (lv_root_1_0= ruleUnitElement )
                    {
                    // InternalKim.g:13959:4: (lv_root_1_0= ruleUnitElement )
                    // InternalKim.g:13960:5: lv_root_1_0= ruleUnitElement
                    {
                    if ( state.backtracking==0 ) {

                      					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
                      				
                    }
                    pushFollow(FOLLOW_156);
                    lv_root_1_0=ruleUnitElement();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					if (current==null) {
                      						current = createModelElementForParent(grammarAccess.getUnitRule());
                      					}
                      					set(
                      						current,
                      						"root",
                      						lv_root_1_0,
                      						"org.integratedmodelling.kim.Kim.UnitElement");
                      					afterParserOrEnumRuleCall();
                      				
                    }

                    }


                    }
                    break;

            }

            // InternalKim.g:13977:3: ( ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) ) )*
            loop277:
            do {
                int alt277=2;
                int LA277_0 = input.LA(1);

                if ( (LA277_0==47||LA277_0==88||LA277_0==237) ) {
                    alt277=1;
                }


                switch (alt277) {
            	case 1 :
            	    // InternalKim.g:13978:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) ) ( (lv_units_3_0= ruleUnitElement ) )
            	    {
            	    // InternalKim.g:13978:4: ( ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) ) )
            	    // InternalKim.g:13979:5: ( ( ( ruleUnitOp ) ) )=> ( (lv_connectors_2_0= ruleUnitOp ) )
            	    {
            	    // InternalKim.g:13985:5: ( (lv_connectors_2_0= ruleUnitOp ) )
            	    // InternalKim.g:13986:6: (lv_connectors_2_0= ruleUnitOp )
            	    {
            	    // InternalKim.g:13986:6: (lv_connectors_2_0= ruleUnitOp )
            	    // InternalKim.g:13987:7: lv_connectors_2_0= ruleUnitOp
            	    {
            	    if ( state.backtracking==0 ) {

            	      							newCompositeNode(grammarAccess.getUnitAccess().getConnectorsUnitOpEnumRuleCall_2_0_0_0());
            	      						
            	    }
            	    pushFollow(FOLLOW_157);
            	    lv_connectors_2_0=ruleUnitOp();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      							if (current==null) {
            	      								current = createModelElementForParent(grammarAccess.getUnitRule());
            	      							}
            	      							add(
            	      								current,
            	      								"connectors",
            	      								lv_connectors_2_0,
            	      								"org.integratedmodelling.kim.Kim.UnitOp");
            	      							afterParserOrEnumRuleCall();
            	      						
            	    }

            	    }


            	    }


            	    }

            	    // InternalKim.g:14005:4: ( (lv_units_3_0= ruleUnitElement ) )
            	    // InternalKim.g:14006:5: (lv_units_3_0= ruleUnitElement )
            	    {
            	    // InternalKim.g:14006:5: (lv_units_3_0= ruleUnitElement )
            	    // InternalKim.g:14007:6: lv_units_3_0= ruleUnitElement
            	    {
            	    if ( state.backtracking==0 ) {

            	      						newCompositeNode(grammarAccess.getUnitAccess().getUnitsUnitElementParserRuleCall_2_1_0());
            	      					
            	    }
            	    pushFollow(FOLLOW_156);
            	    lv_units_3_0=ruleUnitElement();

            	    state._fsp--;
            	    if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      						if (current==null) {
            	      							current = createModelElementForParent(grammarAccess.getUnitRule());
            	      						}
            	      						add(
            	      							current,
            	      							"units",
            	      							lv_units_3_0,
            	      							"org.integratedmodelling.kim.Kim.UnitElement");
            	      						afterParserOrEnumRuleCall();
            	      					
            	    }

            	    }


            	    }


            	    }
            	    break;

            	default :
            	    break loop277;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnit"


    // $ANTLR start "entryRuleCurrency"
    // InternalKim.g:14029:1: entryRuleCurrency returns [EObject current=null] : iv_ruleCurrency= ruleCurrency EOF ;
    public final EObject entryRuleCurrency() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleCurrency = null;


        try {
            // InternalKim.g:14029:49: (iv_ruleCurrency= ruleCurrency EOF )
            // InternalKim.g:14030:2: iv_ruleCurrency= ruleCurrency EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getCurrencyRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleCurrency=ruleCurrency();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleCurrency; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleCurrency"


    // $ANTLR start "ruleCurrency"
    // InternalKim.g:14036:1: ruleCurrency returns [EObject current=null] : ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) ;
    public final EObject ruleCurrency() throws RecognitionException {
        EObject current = null;

        Token lv_id_0_0=null;
        Token otherlv_1=null;
        Token lv_year_2_0=null;
        Token lv_concept_3_1=null;
        AntlrDatatypeRuleToken lv_concept_3_2 = null;



        	enterRule();

        try {
            // InternalKim.g:14042:2: ( ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) ) )
            // InternalKim.g:14043:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            {
            // InternalKim.g:14043:2: ( ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) ) | ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) ) )
            int alt279=2;
            int LA279_0 = input.LA(1);

            if ( (LA279_0==RULE_UPPERCASE_ID) ) {
                alt279=1;
            }
            else if ( (LA279_0==RULE_LOWERCASE_ID||LA279_0==RULE_CAMELCASE_ID) ) {
                alt279=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 279, 0, input);

                throw nvae;
            }
            switch (alt279) {
                case 1 :
                    // InternalKim.g:14044:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    {
                    // InternalKim.g:14044:3: ( ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) ) )
                    // InternalKim.g:14045:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) ) (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14045:4: ( (lv_id_0_0= RULE_UPPERCASE_ID ) )
                    // InternalKim.g:14046:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    {
                    // InternalKim.g:14046:5: (lv_id_0_0= RULE_UPPERCASE_ID )
                    // InternalKim.g:14047:6: lv_id_0_0= RULE_UPPERCASE_ID
                    {
                    lv_id_0_0=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_158); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_id_0_0, grammarAccess.getCurrencyAccess().getIdUPPERCASE_IDTerminalRuleCall_0_0_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getCurrencyRule());
                      						}
                      						setWithLastConsumed(
                      							current,
                      							"id",
                      							lv_id_0_0,
                      							"org.integratedmodelling.kim.Kim.UPPERCASE_ID");
                      					
                    }

                    }


                    }

                    // InternalKim.g:14063:4: (otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) ) )
                    // InternalKim.g:14064:5: otherlv_1= '@' ( (lv_year_2_0= RULE_INT ) )
                    {
                    otherlv_1=(Token)match(input,225,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      					newLeafNode(otherlv_1, grammarAccess.getCurrencyAccess().getCommercialAtKeyword_0_1_0());
                      				
                    }
                    // InternalKim.g:14068:5: ( (lv_year_2_0= RULE_INT ) )
                    // InternalKim.g:14069:6: (lv_year_2_0= RULE_INT )
                    {
                    // InternalKim.g:14069:6: (lv_year_2_0= RULE_INT )
                    // InternalKim.g:14070:7: lv_year_2_0= RULE_INT
                    {
                    lv_year_2_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_year_2_0, grammarAccess.getCurrencyAccess().getYearINTTerminalRuleCall_0_1_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getCurrencyRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"year",
                      								lv_year_2_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14089:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    {
                    // InternalKim.g:14089:3: ( ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) ) )
                    // InternalKim.g:14090:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    {
                    // InternalKim.g:14090:4: ( (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId ) )
                    // InternalKim.g:14091:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    {
                    // InternalKim.g:14091:5: (lv_concept_3_1= RULE_CAMELCASE_ID | lv_concept_3_2= ruleNamespaceId )
                    int alt278=2;
                    int LA278_0 = input.LA(1);

                    if ( (LA278_0==RULE_CAMELCASE_ID) ) {
                        alt278=1;
                    }
                    else if ( (LA278_0==RULE_LOWERCASE_ID) ) {
                        alt278=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 278, 0, input);

                        throw nvae;
                    }
                    switch (alt278) {
                        case 1 :
                            // InternalKim.g:14092:6: lv_concept_3_1= RULE_CAMELCASE_ID
                            {
                            lv_concept_3_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(lv_concept_3_1, grammarAccess.getCurrencyAccess().getConceptCAMELCASE_IDTerminalRuleCall_1_0_0());
                              					
                            }
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElement(grammarAccess.getCurrencyRule());
                              						}
                              						setWithLastConsumed(
                              							current,
                              							"concept",
                              							lv_concept_3_1,
                              							"org.integratedmodelling.kim.Kim.CAMELCASE_ID");
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14107:6: lv_concept_3_2= ruleNamespaceId
                            {
                            if ( state.backtracking==0 ) {

                              						newCompositeNode(grammarAccess.getCurrencyAccess().getConceptNamespaceIdParserRuleCall_1_0_1());
                              					
                            }
                            pushFollow(FOLLOW_2);
                            lv_concept_3_2=ruleNamespaceId();

                            state._fsp--;
                            if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						if (current==null) {
                              							current = createModelElementForParent(grammarAccess.getCurrencyRule());
                              						}
                              						set(
                              							current,
                              							"concept",
                              							lv_concept_3_2,
                              							"org.integratedmodelling.kim.Kim.NamespaceId");
                              						afterParserOrEnumRuleCall();
                              					
                            }

                            }
                            break;

                    }


                    }


                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleCurrency"


    // $ANTLR start "entryRuleNumber"
    // InternalKim.g:14129:1: entryRuleNumber returns [EObject current=null] : iv_ruleNumber= ruleNumber EOF ;
    public final EObject entryRuleNumber() throws RecognitionException {
        EObject current = null;

        EObject iv_ruleNumber = null;


        try {
            // InternalKim.g:14129:47: (iv_ruleNumber= ruleNumber EOF )
            // InternalKim.g:14130:2: iv_ruleNumber= ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNumber=ruleNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNumber; 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalKim.g:14136:1: ruleNumber returns [EObject current=null] : ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) ;
    public final EObject ruleNumber() throws RecognitionException {
        EObject current = null;

        Token otherlv_0=null;
        Token lv_negative_1_0=null;
        Token lv_real_2_0=null;
        Token lv_decimal_3_0=null;
        Token lv_decimalPart_4_0=null;
        Token lv_exponential_5_1=null;
        Token lv_exponential_5_2=null;
        Token otherlv_6=null;
        Token lv_expNegative_7_0=null;
        Token lv_exp_8_0=null;


        	enterRule();

        try {
            // InternalKim.g:14142:2: ( ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? ) )
            // InternalKim.g:14143:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            {
            // InternalKim.g:14143:2: ( (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )? )
            // InternalKim.g:14144:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )? ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) ) ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )? ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            {
            // InternalKim.g:14144:3: (otherlv_0= '+' | ( (lv_negative_1_0= '-' ) ) )?
            int alt280=3;
            int LA280_0 = input.LA(1);

            if ( (LA280_0==226) ) {
                alt280=1;
            }
            else if ( (LA280_0==227) ) {
                alt280=2;
            }
            switch (alt280) {
                case 1 :
                    // InternalKim.g:14145:4: otherlv_0= '+'
                    {
                    otherlv_0=(Token)match(input,226,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				newLeafNode(otherlv_0, grammarAccess.getNumberAccess().getPlusSignKeyword_0_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14150:4: ( (lv_negative_1_0= '-' ) )
                    {
                    // InternalKim.g:14150:4: ( (lv_negative_1_0= '-' ) )
                    // InternalKim.g:14151:5: (lv_negative_1_0= '-' )
                    {
                    // InternalKim.g:14151:5: (lv_negative_1_0= '-' )
                    // InternalKim.g:14152:6: lv_negative_1_0= '-'
                    {
                    lv_negative_1_0=(Token)match(input,227,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      						newLeafNode(lv_negative_1_0, grammarAccess.getNumberAccess().getNegativeHyphenMinusKeyword_0_1_0());
                      					
                    }
                    if ( state.backtracking==0 ) {

                      						if (current==null) {
                      							current = createModelElement(grammarAccess.getNumberRule());
                      						}
                      						setWithLastConsumed(current, "negative", true, "-");
                      					
                    }

                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14165:3: ( ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT ) )
            // InternalKim.g:14166:4: ( ( RULE_INT ) )=> (lv_real_2_0= RULE_INT )
            {
            // InternalKim.g:14170:4: (lv_real_2_0= RULE_INT )
            // InternalKim.g:14171:5: lv_real_2_0= RULE_INT
            {
            lv_real_2_0=(Token)match(input,RULE_INT,FOLLOW_159); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              					newLeafNode(lv_real_2_0, grammarAccess.getNumberAccess().getRealINTTerminalRuleCall_1_0());
              				
            }
            if ( state.backtracking==0 ) {

              					if (current==null) {
              						current = createModelElement(grammarAccess.getNumberRule());
              					}
              					setWithLastConsumed(
              						current,
              						"real",
              						lv_real_2_0,
              						"org.eclipse.xtext.common.Terminals.INT");
              				
            }

            }


            }

            // InternalKim.g:14187:3: ( ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) ) )?
            int alt281=2;
            int LA281_0 = input.LA(1);

            if ( (LA281_0==89) && (synpred528_InternalKim())) {
                alt281=1;
            }
            switch (alt281) {
                case 1 :
                    // InternalKim.g:14188:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )=> ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14201:4: ( ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) ) )
                    // InternalKim.g:14202:5: ( (lv_decimal_3_0= '.' ) ) ( (lv_decimalPart_4_0= RULE_INT ) )
                    {
                    // InternalKim.g:14202:5: ( (lv_decimal_3_0= '.' ) )
                    // InternalKim.g:14203:6: (lv_decimal_3_0= '.' )
                    {
                    // InternalKim.g:14203:6: (lv_decimal_3_0= '.' )
                    // InternalKim.g:14204:7: lv_decimal_3_0= '.'
                    {
                    lv_decimal_3_0=(Token)match(input,89,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimal_3_0, grammarAccess.getNumberAccess().getDecimalFullStopKeyword_2_0_0_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(current, "decimal", true, ".");
                      						
                    }

                    }


                    }

                    // InternalKim.g:14216:5: ( (lv_decimalPart_4_0= RULE_INT ) )
                    // InternalKim.g:14217:6: (lv_decimalPart_4_0= RULE_INT )
                    {
                    // InternalKim.g:14217:6: (lv_decimalPart_4_0= RULE_INT )
                    // InternalKim.g:14218:7: lv_decimalPart_4_0= RULE_INT
                    {
                    lv_decimalPart_4_0=(Token)match(input,RULE_INT,FOLLOW_160); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_decimalPart_4_0, grammarAccess.getNumberAccess().getDecimalPartINTTerminalRuleCall_2_0_1_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"decimalPart",
                      								lv_decimalPart_4_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }

            // InternalKim.g:14236:3: ( ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) ) )?
            int alt284=2;
            int LA284_0 = input.LA(1);

            if ( (LA284_0==228) && (synpred532_InternalKim())) {
                alt284=1;
            }
            else if ( (LA284_0==229) && (synpred532_InternalKim())) {
                alt284=1;
            }
            switch (alt284) {
                case 1 :
                    // InternalKim.g:14237:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )=> ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    {
                    // InternalKim.g:14263:4: ( ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) ) )
                    // InternalKim.g:14264:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) ) (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )? ( (lv_exp_8_0= RULE_INT ) )
                    {
                    // InternalKim.g:14264:5: ( ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) ) )
                    // InternalKim.g:14265:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    {
                    // InternalKim.g:14265:6: ( (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' ) )
                    // InternalKim.g:14266:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    {
                    // InternalKim.g:14266:7: (lv_exponential_5_1= 'e' | lv_exponential_5_2= 'E' )
                    int alt282=2;
                    int LA282_0 = input.LA(1);

                    if ( (LA282_0==228) ) {
                        alt282=1;
                    }
                    else if ( (LA282_0==229) ) {
                        alt282=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return current;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 282, 0, input);

                        throw nvae;
                    }
                    switch (alt282) {
                        case 1 :
                            // InternalKim.g:14267:8: lv_exponential_5_1= 'e'
                            {
                            lv_exponential_5_1=(Token)match(input,228,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_1, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14278:8: lv_exponential_5_2= 'E'
                            {
                            lv_exponential_5_2=(Token)match(input,229,FOLLOW_28); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_exponential_5_2, grammarAccess.getNumberAccess().getExponentialEKeyword_3_0_0_0_1());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "exponential", true, null);
                              							
                            }

                            }
                            break;

                    }


                    }


                    }

                    // InternalKim.g:14291:5: (otherlv_6= '+' | ( (lv_expNegative_7_0= '-' ) ) )?
                    int alt283=3;
                    int LA283_0 = input.LA(1);

                    if ( (LA283_0==226) ) {
                        alt283=1;
                    }
                    else if ( (LA283_0==227) ) {
                        alt283=2;
                    }
                    switch (alt283) {
                        case 1 :
                            // InternalKim.g:14292:6: otherlv_6= '+'
                            {
                            otherlv_6=(Token)match(input,226,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              						newLeafNode(otherlv_6, grammarAccess.getNumberAccess().getPlusSignKeyword_3_0_1_0());
                              					
                            }

                            }
                            break;
                        case 2 :
                            // InternalKim.g:14297:6: ( (lv_expNegative_7_0= '-' ) )
                            {
                            // InternalKim.g:14297:6: ( (lv_expNegative_7_0= '-' ) )
                            // InternalKim.g:14298:7: (lv_expNegative_7_0= '-' )
                            {
                            // InternalKim.g:14298:7: (lv_expNegative_7_0= '-' )
                            // InternalKim.g:14299:8: lv_expNegative_7_0= '-'
                            {
                            lv_expNegative_7_0=(Token)match(input,227,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              								newLeafNode(lv_expNegative_7_0, grammarAccess.getNumberAccess().getExpNegativeHyphenMinusKeyword_3_0_1_1_0());
                              							
                            }
                            if ( state.backtracking==0 ) {

                              								if (current==null) {
                              									current = createModelElement(grammarAccess.getNumberRule());
                              								}
                              								setWithLastConsumed(current, "expNegative", true, "-");
                              							
                            }

                            }


                            }


                            }
                            break;

                    }

                    // InternalKim.g:14312:5: ( (lv_exp_8_0= RULE_INT ) )
                    // InternalKim.g:14313:6: (lv_exp_8_0= RULE_INT )
                    {
                    // InternalKim.g:14313:6: (lv_exp_8_0= RULE_INT )
                    // InternalKim.g:14314:7: lv_exp_8_0= RULE_INT
                    {
                    lv_exp_8_0=(Token)match(input,RULE_INT,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      							newLeafNode(lv_exp_8_0, grammarAccess.getNumberAccess().getExpINTTerminalRuleCall_3_0_2_0());
                      						
                    }
                    if ( state.backtracking==0 ) {

                      							if (current==null) {
                      								current = createModelElement(grammarAccess.getNumberRule());
                      							}
                      							setWithLastConsumed(
                      								current,
                      								"exp",
                      								lv_exp_8_0,
                      								"org.eclipse.xtext.common.Terminals.INT");
                      						
                    }

                    }


                    }


                    }


                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRulePathName"
    // InternalKim.g:14336:1: entryRulePathName returns [String current=null] : iv_rulePathName= rulePathName EOF ;
    public final String entryRulePathName() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePathName = null;


        try {
            // InternalKim.g:14336:48: (iv_rulePathName= rulePathName EOF )
            // InternalKim.g:14337:2: iv_rulePathName= rulePathName EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathNameRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePathName=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePathName.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePathName"


    // $ANTLR start "rulePathName"
    // InternalKim.g:14343:1: rulePathName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* ) ;
    public final AntlrDatatypeRuleToken rulePathName() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token kw=null;
        Token this_LOWERCASE_ID_2=null;


        	enterRule();

        try {
            // InternalKim.g:14349:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* ) )
            // InternalKim.g:14350:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* )
            {
            // InternalKim.g:14350:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )* )
            // InternalKim.g:14351:3: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )*
            {
            this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_161); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_LOWERCASE_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_0());
              		
            }
            // InternalKim.g:14358:3: (kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID )*
            loop285:
            do {
                int alt285=2;
                int LA285_0 = input.LA(1);

                if ( (LA285_0==89) ) {
                    alt285=1;
                }


                switch (alt285) {
            	case 1 :
            	    // InternalKim.g:14359:4: kw= '.' this_LOWERCASE_ID_2= RULE_LOWERCASE_ID
            	    {
            	    kw=(Token)match(input,89,FOLLOW_35); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(kw);
            	      				newLeafNode(kw, grammarAccess.getPathNameAccess().getFullStopKeyword_1_0());
            	      			
            	    }
            	    this_LOWERCASE_ID_2=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_161); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_LOWERCASE_ID_2);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_LOWERCASE_ID_2, grammarAccess.getPathNameAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop285;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePathName"


    // $ANTLR start "entryRulePath"
    // InternalKim.g:14376:1: entryRulePath returns [String current=null] : iv_rulePath= rulePath EOF ;
    public final String entryRulePath() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePath = null;


        try {
            // InternalKim.g:14376:44: (iv_rulePath= rulePath EOF )
            // InternalKim.g:14377:2: iv_rulePath= rulePath EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPathRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePath=rulePath();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePath.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePath"


    // $ANTLR start "rulePath"
    // InternalKim.g:14383:1: rulePath returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* ) ;
    public final AntlrDatatypeRuleToken rulePath() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_0=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;


        	enterRule();

        try {
            // InternalKim.g:14389:2: ( (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* ) )
            // InternalKim.g:14390:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* )
            {
            // InternalKim.g:14390:2: (this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )* )
            // InternalKim.g:14391:3: this_LOWERCASE_ID_0= RULE_LOWERCASE_ID ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )*
            {
            this_LOWERCASE_ID_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_162); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_LOWERCASE_ID_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_LOWERCASE_ID_0, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_0());
              		
            }
            // InternalKim.g:14398:3: ( (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID )*
            loop287:
            do {
                int alt287=2;
                int LA287_0 = input.LA(1);

                if ( ((LA287_0>=88 && LA287_0<=89)) ) {
                    alt287=1;
                }


                switch (alt287) {
            	case 1 :
            	    // InternalKim.g:14399:4: (kw= '.' | kw= '/' ) this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
            	    {
            	    // InternalKim.g:14399:4: (kw= '.' | kw= '/' )
            	    int alt286=2;
            	    int LA286_0 = input.LA(1);

            	    if ( (LA286_0==89) ) {
            	        alt286=1;
            	    }
            	    else if ( (LA286_0==88) ) {
            	        alt286=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return current;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 286, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt286) {
            	        case 1 :
            	            // InternalKim.g:14400:5: kw= '.'
            	            {
            	            kw=(Token)match(input,89,FOLLOW_35); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getFullStopKeyword_1_0_0());
            	              				
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // InternalKim.g:14406:5: kw= '/'
            	            {
            	            kw=(Token)match(input,88,FOLLOW_35); if (state.failed) return current;
            	            if ( state.backtracking==0 ) {

            	              					current.merge(kw);
            	              					newLeafNode(kw, grammarAccess.getPathAccess().getSolidusKeyword_1_0_1());
            	              				
            	            }

            	            }
            	            break;

            	    }

            	    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_162); if (state.failed) return current;
            	    if ( state.backtracking==0 ) {

            	      				current.merge(this_LOWERCASE_ID_3);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPathAccess().getLOWERCASE_IDTerminalRuleCall_1_1());
            	      			
            	    }

            	    }
            	    break;

            	default :
            	    break loop287;
                }
            } while (true);


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePath"


    // $ANTLR start "entryRuleNamespaceId"
    // InternalKim.g:14424:1: entryRuleNamespaceId returns [String current=null] : iv_ruleNamespaceId= ruleNamespaceId EOF ;
    public final String entryRuleNamespaceId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleNamespaceId = null;


        try {
            // InternalKim.g:14424:51: (iv_ruleNamespaceId= ruleNamespaceId EOF )
            // InternalKim.g:14425:2: iv_ruleNamespaceId= ruleNamespaceId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getNamespaceIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleNamespaceId=ruleNamespaceId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleNamespaceId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleNamespaceId"


    // $ANTLR start "ruleNamespaceId"
    // InternalKim.g:14431:1: ruleNamespaceId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) ;
    public final AntlrDatatypeRuleToken ruleNamespaceId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token kw=null;
        Token this_CAMELCASE_ID_2=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14437:2: ( (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID ) )
            // InternalKim.g:14438:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            {
            // InternalKim.g:14438:2: (this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID )
            // InternalKim.g:14439:3: this_PathName_0= rulePathName kw= ':' this_CAMELCASE_ID_2= RULE_CAMELCASE_ID
            {
            if ( state.backtracking==0 ) {

              			newCompositeNode(grammarAccess.getNamespaceIdAccess().getPathNameParserRuleCall_0());
              		
            }
            pushFollow(FOLLOW_37);
            this_PathName_0=rulePathName();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_PathName_0);
              		
            }
            if ( state.backtracking==0 ) {

              			afterParserOrEnumRuleCall();
              		
            }
            kw=(Token)match(input,51,FOLLOW_131); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getNamespaceIdAccess().getColonKeyword_1());
              		
            }
            this_CAMELCASE_ID_2=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_CAMELCASE_ID_2);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_CAMELCASE_ID_2, grammarAccess.getNamespaceIdAccess().getCAMELCASE_IDTerminalRuleCall_2());
              		
            }

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleNamespaceId"


    // $ANTLR start "entryRulePropertyId"
    // InternalKim.g:14465:1: entryRulePropertyId returns [String current=null] : iv_rulePropertyId= rulePropertyId EOF ;
    public final String entryRulePropertyId() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_rulePropertyId = null;


        try {
            // InternalKim.g:14465:50: (iv_rulePropertyId= rulePropertyId EOF )
            // InternalKim.g:14466:2: iv_rulePropertyId= rulePropertyId EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getPropertyIdRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_rulePropertyId=rulePropertyId();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_rulePropertyId.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRulePropertyId"


    // $ANTLR start "rulePropertyId"
    // InternalKim.g:14472:1: rulePropertyId returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) ;
    public final AntlrDatatypeRuleToken rulePropertyId() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_LOWERCASE_ID_1=null;
        Token kw=null;
        Token this_LOWERCASE_ID_3=null;
        Token this_LOWERCASE_DASHID_4=null;
        AntlrDatatypeRuleToken this_PathName_0 = null;



        	enterRule();

        try {
            // InternalKim.g:14478:2: ( ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) ) )
            // InternalKim.g:14479:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            {
            // InternalKim.g:14479:2: ( (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID ) )
            // InternalKim.g:14480:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID ) kw= ':' (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            {
            // InternalKim.g:14480:3: (this_PathName_0= rulePathName | this_LOWERCASE_ID_1= RULE_LOWERCASE_ID )
            int alt288=2;
            int LA288_0 = input.LA(1);

            if ( (LA288_0==RULE_LOWERCASE_ID) ) {
                int LA288_1 = input.LA(2);

                if ( (synpred539_InternalKim()) ) {
                    alt288=1;
                }
                else if ( (true) ) {
                    alt288=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return current;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 288, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 288, 0, input);

                throw nvae;
            }
            switch (alt288) {
                case 1 :
                    // InternalKim.g:14481:4: this_PathName_0= rulePathName
                    {
                    if ( state.backtracking==0 ) {

                      				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
                      			
                    }
                    pushFollow(FOLLOW_37);
                    this_PathName_0=rulePathName();

                    state._fsp--;
                    if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_PathName_0);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				afterParserOrEnumRuleCall();
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14492:4: this_LOWERCASE_ID_1= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_37); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_1);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_1, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_0_1());
                      			
                    }

                    }
                    break;

            }

            kw=(Token)match(input,51,FOLLOW_154); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(kw);
              			newLeafNode(kw, grammarAccess.getPropertyIdAccess().getColonKeyword_1());
              		
            }
            // InternalKim.g:14505:3: (this_LOWERCASE_ID_3= RULE_LOWERCASE_ID | this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID )
            int alt289=2;
            int LA289_0 = input.LA(1);

            if ( (LA289_0==RULE_LOWERCASE_ID) ) {
                alt289=1;
            }
            else if ( (LA289_0==RULE_LOWERCASE_DASHID) ) {
                alt289=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 289, 0, input);

                throw nvae;
            }
            switch (alt289) {
                case 1 :
                    // InternalKim.g:14506:4: this_LOWERCASE_ID_3= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_3=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_3);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_3, grammarAccess.getPropertyIdAccess().getLOWERCASE_IDTerminalRuleCall_2_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14514:4: this_LOWERCASE_DASHID_4= RULE_LOWERCASE_DASHID
                    {
                    this_LOWERCASE_DASHID_4=(Token)match(input,RULE_LOWERCASE_DASHID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_DASHID_4);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_DASHID_4, grammarAccess.getPropertyIdAccess().getLOWERCASE_DASHIDTerminalRuleCall_2_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "rulePropertyId"


    // $ANTLR start "entryRuleVersionNumber"
    // InternalKim.g:14526:1: entryRuleVersionNumber returns [String current=null] : iv_ruleVersionNumber= ruleVersionNumber EOF ;
    public final String entryRuleVersionNumber() throws RecognitionException {
        String current = null;

        AntlrDatatypeRuleToken iv_ruleVersionNumber = null;


        try {
            // InternalKim.g:14526:53: (iv_ruleVersionNumber= ruleVersionNumber EOF )
            // InternalKim.g:14527:2: iv_ruleVersionNumber= ruleVersionNumber EOF
            {
            if ( state.backtracking==0 ) {
               newCompositeNode(grammarAccess.getVersionNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            iv_ruleVersionNumber=ruleVersionNumber();

            state._fsp--;
            if (state.failed) return current;
            if ( state.backtracking==0 ) {
               current =iv_ruleVersionNumber.getText(); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return current;

            }

        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "entryRuleVersionNumber"


    // $ANTLR start "ruleVersionNumber"
    // InternalKim.g:14533:1: ruleVersionNumber returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] : (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) ;
    public final AntlrDatatypeRuleToken ruleVersionNumber() throws RecognitionException {
        AntlrDatatypeRuleToken current = new AntlrDatatypeRuleToken();

        Token this_INT_0=null;
        Token kw=null;
        Token this_INT_2=null;
        Token this_INT_4=null;
        Token this_LOWERCASE_ID_6=null;
        Token this_UPPERCASE_ID_7=null;


        	enterRule();

        try {
            // InternalKim.g:14539:2: ( (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? ) )
            // InternalKim.g:14540:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            {
            // InternalKim.g:14540:2: (this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )? )
            // InternalKim.g:14541:3: this_INT_0= RULE_INT (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )? (kw= '-' )? (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            {
            this_INT_0=(Token)match(input,RULE_INT,FOLLOW_163); if (state.failed) return current;
            if ( state.backtracking==0 ) {

              			current.merge(this_INT_0);
              		
            }
            if ( state.backtracking==0 ) {

              			newLeafNode(this_INT_0, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_0());
              		
            }
            // InternalKim.g:14548:3: (kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )? )?
            int alt291=2;
            int LA291_0 = input.LA(1);

            if ( (LA291_0==89) ) {
                alt291=1;
            }
            switch (alt291) {
                case 1 :
                    // InternalKim.g:14549:4: kw= '.' this_INT_2= RULE_INT (kw= '.' this_INT_4= RULE_INT )?
                    {
                    kw=(Token)match(input,89,FOLLOW_68); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_0());
                      			
                    }
                    this_INT_2=(Token)match(input,RULE_INT,FOLLOW_163); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_INT_2);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_INT_2, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_1());
                      			
                    }
                    // InternalKim.g:14561:4: (kw= '.' this_INT_4= RULE_INT )?
                    int alt290=2;
                    int LA290_0 = input.LA(1);

                    if ( (LA290_0==89) ) {
                        alt290=1;
                    }
                    switch (alt290) {
                        case 1 :
                            // InternalKim.g:14562:5: kw= '.' this_INT_4= RULE_INT
                            {
                            kw=(Token)match(input,89,FOLLOW_68); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(kw);
                              					newLeafNode(kw, grammarAccess.getVersionNumberAccess().getFullStopKeyword_1_2_0());
                              				
                            }
                            this_INT_4=(Token)match(input,RULE_INT,FOLLOW_164); if (state.failed) return current;
                            if ( state.backtracking==0 ) {

                              					current.merge(this_INT_4);
                              				
                            }
                            if ( state.backtracking==0 ) {

                              					newLeafNode(this_INT_4, grammarAccess.getVersionNumberAccess().getINTTerminalRuleCall_1_2_1());
                              				
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            // InternalKim.g:14576:3: (kw= '-' )?
            int alt292=2;
            int LA292_0 = input.LA(1);

            if ( (LA292_0==227) ) {
                alt292=1;
            }
            switch (alt292) {
                case 1 :
                    // InternalKim.g:14577:4: kw= '-'
                    {
                    kw=(Token)match(input,227,FOLLOW_165); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(kw);
                      				newLeafNode(kw, grammarAccess.getVersionNumberAccess().getHyphenMinusKeyword_2());
                      			
                    }

                    }
                    break;

            }

            // InternalKim.g:14583:3: (this_LOWERCASE_ID_6= RULE_LOWERCASE_ID | this_UPPERCASE_ID_7= RULE_UPPERCASE_ID )?
            int alt293=3;
            int LA293_0 = input.LA(1);

            if ( (LA293_0==RULE_LOWERCASE_ID) ) {
                int LA293_1 = input.LA(2);

                if ( (LA293_1==EOF||(LA293_1>=RULE_LOWERCASE_ID && LA293_1<=RULE_STRING)||LA293_1==RULE_CAMELCASE_ID||LA293_1==18||(LA293_1>=24 && LA293_1<=25)||(LA293_1>=27 && LA293_1<=28)||(LA293_1>=33 && LA293_1<=34)||(LA293_1>=41 && LA293_1<=42)||LA293_1==45||(LA293_1>=52 && LA293_1<=55)||(LA293_1>=78 && LA293_1<=79)||(LA293_1>=82 && LA293_1<=84)||LA293_1==86||(LA293_1>=107 && LA293_1<=108)||(LA293_1>=115 && LA293_1<=116)||(LA293_1>=118 && LA293_1<=129)) ) {
                    alt293=1;
                }
            }
            else if ( (LA293_0==RULE_UPPERCASE_ID) ) {
                alt293=2;
            }
            switch (alt293) {
                case 1 :
                    // InternalKim.g:14584:4: this_LOWERCASE_ID_6= RULE_LOWERCASE_ID
                    {
                    this_LOWERCASE_ID_6=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_LOWERCASE_ID_6);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_LOWERCASE_ID_6, grammarAccess.getVersionNumberAccess().getLOWERCASE_IDTerminalRuleCall_3_0());
                      			
                    }

                    }
                    break;
                case 2 :
                    // InternalKim.g:14592:4: this_UPPERCASE_ID_7= RULE_UPPERCASE_ID
                    {
                    this_UPPERCASE_ID_7=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current.merge(this_UPPERCASE_ID_7);
                      			
                    }
                    if ( state.backtracking==0 ) {

                      				newLeafNode(this_UPPERCASE_ID_7, grammarAccess.getVersionNumberAccess().getUPPERCASE_IDTerminalRuleCall_3_1());
                      			
                    }

                    }
                    break;

            }


            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleVersionNumber"


    // $ANTLR start "ruleDataType"
    // InternalKim.g:14604:1: ruleDataType returns [Enumerator current=null] : ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'double' ) | (enumLiteral_4= 'boolean' ) | (enumLiteral_5= 'date' ) | (enumLiteral_6= 'point' ) | (enumLiteral_7= 'line' ) | (enumLiteral_8= 'polygon' ) ) ;
    public final Enumerator ruleDataType() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;
        Token enumLiteral_3=null;
        Token enumLiteral_4=null;
        Token enumLiteral_5=null;
        Token enumLiteral_6=null;
        Token enumLiteral_7=null;
        Token enumLiteral_8=null;


        	enterRule();

        try {
            // InternalKim.g:14610:2: ( ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'double' ) | (enumLiteral_4= 'boolean' ) | (enumLiteral_5= 'date' ) | (enumLiteral_6= 'point' ) | (enumLiteral_7= 'line' ) | (enumLiteral_8= 'polygon' ) ) )
            // InternalKim.g:14611:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'double' ) | (enumLiteral_4= 'boolean' ) | (enumLiteral_5= 'date' ) | (enumLiteral_6= 'point' ) | (enumLiteral_7= 'line' ) | (enumLiteral_8= 'polygon' ) )
            {
            // InternalKim.g:14611:2: ( (enumLiteral_0= 'text' ) | (enumLiteral_1= 'integer' ) | (enumLiteral_2= 'float' ) | (enumLiteral_3= 'double' ) | (enumLiteral_4= 'boolean' ) | (enumLiteral_5= 'date' ) | (enumLiteral_6= 'point' ) | (enumLiteral_7= 'line' ) | (enumLiteral_8= 'polygon' ) )
            int alt294=9;
            switch ( input.LA(1) ) {
            case 73:
                {
                alt294=1;
                }
                break;
            case 230:
                {
                alt294=2;
                }
                break;
            case 231:
                {
                alt294=3;
                }
                break;
            case 232:
                {
                alt294=4;
                }
                break;
            case 74:
                {
                alt294=5;
                }
                break;
            case 233:
                {
                alt294=6;
                }
                break;
            case 234:
                {
                alt294=7;
                }
                break;
            case 235:
                {
                alt294=8;
                }
                break;
            case 236:
                {
                alt294=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 294, 0, input);

                throw nvae;
            }

            switch (alt294) {
                case 1 :
                    // InternalKim.g:14612:3: (enumLiteral_0= 'text' )
                    {
                    // InternalKim.g:14612:3: (enumLiteral_0= 'text' )
                    // InternalKim.g:14613:4: enumLiteral_0= 'text'
                    {
                    enumLiteral_0=(Token)match(input,73,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getTEXTEnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14620:3: (enumLiteral_1= 'integer' )
                    {
                    // InternalKim.g:14620:3: (enumLiteral_1= 'integer' )
                    // InternalKim.g:14621:4: enumLiteral_1= 'integer'
                    {
                    enumLiteral_1=(Token)match(input,230,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getINTEGEREnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14628:3: (enumLiteral_2= 'float' )
                    {
                    // InternalKim.g:14628:3: (enumLiteral_2= 'float' )
                    // InternalKim.g:14629:4: enumLiteral_2= 'float'
                    {
                    enumLiteral_2=(Token)match(input,231,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getDataTypeAccess().getFLOATEnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalKim.g:14636:3: (enumLiteral_3= 'double' )
                    {
                    // InternalKim.g:14636:3: (enumLiteral_3= 'double' )
                    // InternalKim.g:14637:4: enumLiteral_3= 'double'
                    {
                    enumLiteral_3=(Token)match(input,232,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_3, grammarAccess.getDataTypeAccess().getDOUBLEEnumLiteralDeclaration_3());
                      			
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalKim.g:14644:3: (enumLiteral_4= 'boolean' )
                    {
                    // InternalKim.g:14644:3: (enumLiteral_4= 'boolean' )
                    // InternalKim.g:14645:4: enumLiteral_4= 'boolean'
                    {
                    enumLiteral_4=(Token)match(input,74,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_4, grammarAccess.getDataTypeAccess().getBOOLEANEnumLiteralDeclaration_4());
                      			
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalKim.g:14652:3: (enumLiteral_5= 'date' )
                    {
                    // InternalKim.g:14652:3: (enumLiteral_5= 'date' )
                    // InternalKim.g:14653:4: enumLiteral_5= 'date'
                    {
                    enumLiteral_5=(Token)match(input,233,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_5, grammarAccess.getDataTypeAccess().getDATEEnumLiteralDeclaration_5());
                      			
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalKim.g:14660:3: (enumLiteral_6= 'point' )
                    {
                    // InternalKim.g:14660:3: (enumLiteral_6= 'point' )
                    // InternalKim.g:14661:4: enumLiteral_6= 'point'
                    {
                    enumLiteral_6=(Token)match(input,234,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getPOINTEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_6, grammarAccess.getDataTypeAccess().getPOINTEnumLiteralDeclaration_6());
                      			
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalKim.g:14668:3: (enumLiteral_7= 'line' )
                    {
                    // InternalKim.g:14668:3: (enumLiteral_7= 'line' )
                    // InternalKim.g:14669:4: enumLiteral_7= 'line'
                    {
                    enumLiteral_7=(Token)match(input,235,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getLINEEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_7, grammarAccess.getDataTypeAccess().getLINEEnumLiteralDeclaration_7());
                      			
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalKim.g:14676:3: (enumLiteral_8= 'polygon' )
                    {
                    // InternalKim.g:14676:3: (enumLiteral_8= 'polygon' )
                    // InternalKim.g:14677:4: enumLiteral_8= 'polygon'
                    {
                    enumLiteral_8=(Token)match(input,236,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getDataTypeAccess().getPOLYGONEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_8, grammarAccess.getDataTypeAccess().getPOLYGONEnumLiteralDeclaration_8());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleDataType"


    // $ANTLR start "ruleUnitOp"
    // InternalKim.g:14687:1: ruleUnitOp returns [Enumerator current=null] : ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) ;
    public final Enumerator ruleUnitOp() throws RecognitionException {
        Enumerator current = null;

        Token enumLiteral_0=null;
        Token enumLiteral_1=null;
        Token enumLiteral_2=null;


        	enterRule();

        try {
            // InternalKim.g:14693:2: ( ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) ) )
            // InternalKim.g:14694:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            {
            // InternalKim.g:14694:2: ( (enumLiteral_0= '/' ) | (enumLiteral_1= '^' ) | (enumLiteral_2= '*' ) )
            int alt295=3;
            switch ( input.LA(1) ) {
            case 88:
                {
                alt295=1;
                }
                break;
            case 237:
                {
                alt295=2;
                }
                break;
            case 47:
                {
                alt295=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return current;}
                NoViableAltException nvae =
                    new NoViableAltException("", 295, 0, input);

                throw nvae;
            }

            switch (alt295) {
                case 1 :
                    // InternalKim.g:14695:3: (enumLiteral_0= '/' )
                    {
                    // InternalKim.g:14695:3: (enumLiteral_0= '/' )
                    // InternalKim.g:14696:4: enumLiteral_0= '/'
                    {
                    enumLiteral_0=(Token)match(input,88,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_0, grammarAccess.getUnitOpAccess().getOVEREnumLiteralDeclaration_0());
                      			
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalKim.g:14703:3: (enumLiteral_1= '^' )
                    {
                    // InternalKim.g:14703:3: (enumLiteral_1= '^' )
                    // InternalKim.g:14704:4: enumLiteral_1= '^'
                    {
                    enumLiteral_1=(Token)match(input,237,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_1, grammarAccess.getUnitOpAccess().getCARETEnumLiteralDeclaration_1());
                      			
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalKim.g:14711:3: (enumLiteral_2= '*' )
                    {
                    // InternalKim.g:14711:3: (enumLiteral_2= '*' )
                    // InternalKim.g:14712:4: enumLiteral_2= '*'
                    {
                    enumLiteral_2=(Token)match(input,47,FOLLOW_2); if (state.failed) return current;
                    if ( state.backtracking==0 ) {

                      				current = grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
                      				newLeafNode(enumLiteral_2, grammarAccess.getUnitOpAccess().getSTAREnumLiteralDeclaration_2());
                      			
                    }

                    }


                    }
                    break;

            }


            }

            if ( state.backtracking==0 ) {

              	leaveRule();

            }
        }

            catch (RecognitionException re) {
                recover(input,re);
                appendSkippedTokens();
            }
        finally {
        }
        return current;
    }
    // $ANTLR end "ruleUnitOp"

    // $ANTLR start synpred2_InternalKim
    public final void synpred2_InternalKim_fragment() throws RecognitionException {   
        EObject lv_namespace_1_0 = null;


        // InternalKim.g:110:5: ( (lv_namespace_1_0= ruleNamespace ) )
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        {
        // InternalKim.g:110:5: (lv_namespace_1_0= ruleNamespace )
        // InternalKim.g:111:6: lv_namespace_1_0= ruleNamespace
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getModelAccess().getNamespaceNamespaceParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_namespace_1_0=ruleNamespace();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred2_InternalKim

    // $ANTLR start synpred4_InternalKim
    public final void synpred4_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_conceptStatement_0_0 = null;


        // InternalKim.g:167:3: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) )
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        {
        // InternalKim.g:167:3: ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' )
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';'
        {
        // InternalKim.g:168:4: ( (lv_conceptStatement_0_0= ruleConceptStatement ) )
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        {
        // InternalKim.g:169:5: (lv_conceptStatement_0_0= ruleConceptStatement )
        // InternalKim.g:170:6: lv_conceptStatement_0_0= ruleConceptStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getConceptStatementConceptStatementParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_conceptStatement_0_0=ruleConceptStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred4_InternalKim

    // $ANTLR start synpred5_InternalKim
    public final void synpred5_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_modelStatement_2_0 = null;


        // InternalKim.g:193:3: ( ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) )
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        {
        // InternalKim.g:193:3: ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' )
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';'
        {
        // InternalKim.g:194:4: ( (lv_modelStatement_2_0= ruleModelStatement ) )
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        {
        // InternalKim.g:195:5: (lv_modelStatement_2_0= ruleModelStatement )
        // InternalKim.g:196:6: lv_modelStatement_2_0= ruleModelStatement
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getModelStatementModelStatementParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_modelStatement_2_0=ruleModelStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_3=(Token)match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_InternalKim

    // $ANTLR start synpred6_InternalKim
    public final void synpred6_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_upperOntologyStatement_4_0 = null;


        // InternalKim.g:219:3: ( ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) )
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        {
        // InternalKim.g:219:3: ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' )
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';'
        {
        // InternalKim.g:220:4: ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) )
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        {
        // InternalKim.g:221:5: (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition )
        // InternalKim.g:222:6: lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getStatementAccess().getUpperOntologyStatementUpperOntologyDefinitionParserRuleCall_2_0_0());
          					
        }
        pushFollow(FOLLOW_4);
        lv_upperOntologyStatement_4_0=ruleUpperOntologyDefinition();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_5=(Token)match(input,18,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_InternalKim

    // $ANTLR start synpred8_InternalKim
    public final void synpred8_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_2_0=null;

        // InternalKim.g:325:4: ( ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) ) )
        // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:325:4: ({...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) ) )
        // InternalKim.g:326:5: {...}? => ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred8_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:326:111: ( ({...}? => ( (lv_inactive_2_0= 'void' ) ) ) )
        // InternalKim.g:327:6: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:330:9: ({...}? => ( (lv_inactive_2_0= 'void' ) ) )
        // InternalKim.g:330:10: {...}? => ( (lv_inactive_2_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred8_InternalKim", "true");
        }
        // InternalKim.g:330:19: ( (lv_inactive_2_0= 'void' ) )
        // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
        {
        // InternalKim.g:330:20: (lv_inactive_2_0= 'void' )
        // InternalKim.g:331:10: lv_inactive_2_0= 'void'
        {
        lv_inactive_2_0=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred8_InternalKim

    // $ANTLR start synpred9_InternalKim
    public final void synpred9_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_3_0=null;

        // InternalKim.g:348:4: ( ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) ) )
        // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:348:4: ({...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) ) )
        // InternalKim.g:349:5: {...}? => ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:349:111: ( ({...}? => ( (lv_private_3_0= 'private' ) ) ) )
        // InternalKim.g:350:6: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getModelStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:353:9: ({...}? => ( (lv_private_3_0= 'private' ) ) )
        // InternalKim.g:353:10: {...}? => ( (lv_private_3_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred9_InternalKim", "true");
        }
        // InternalKim.g:353:19: ( (lv_private_3_0= 'private' ) )
        // InternalKim.g:353:20: (lv_private_3_0= 'private' )
        {
        // InternalKim.g:353:20: (lv_private_3_0= 'private' )
        // InternalKim.g:354:10: lv_private_3_0= 'private'
        {
        lv_private_3_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred9_InternalKim

    // $ANTLR start synpred11_InternalKim
    public final void synpred11_InternalKim_fragment() throws RecognitionException {   
        EObject lv_urn_1_0 = null;


        // InternalKim.g:454:5: ( ( (lv_urn_1_0= ruleUrn ) ) )
        // InternalKim.g:454:5: ( (lv_urn_1_0= ruleUrn ) )
        {
        // InternalKim.g:454:5: ( (lv_urn_1_0= ruleUrn ) )
        // InternalKim.g:455:6: (lv_urn_1_0= ruleUrn )
        {
        // InternalKim.g:455:6: (lv_urn_1_0= ruleUrn )
        // InternalKim.g:456:7: lv_urn_1_0= ruleUrn
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnUrnParserRuleCall_1_0_0_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_urn_1_0=ruleUrn();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred11_InternalKim

    // $ANTLR start synpred16_InternalKim
    public final void synpred16_InternalKim_fragment() throws RecognitionException {   
        Token lv_boolean_4_1=null;
        Token lv_boolean_4_2=null;
        Token otherlv_6=null;
        EObject lv_urn_1_0 = null;

        EObject lv_function_2_0 = null;

        EObject lv_number_3_0 = null;

        EObject lv_concept_5_0 = null;


        // InternalKim.g:453:4: ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )
        // InternalKim.g:453:4: ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as'
        {
        // InternalKim.g:453:4: ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) )
        int alt298=5;
        alt298 = dfa298.predict(input);
        switch (alt298) {
            case 1 :
                // InternalKim.g:454:5: ( (lv_urn_1_0= ruleUrn ) )
                {
                // InternalKim.g:454:5: ( (lv_urn_1_0= ruleUrn ) )
                // InternalKim.g:455:6: (lv_urn_1_0= ruleUrn )
                {
                // InternalKim.g:455:6: (lv_urn_1_0= ruleUrn )
                // InternalKim.g:456:7: lv_urn_1_0= ruleUrn
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getUrnUrnParserRuleCall_1_0_0_0());
                  						
                }
                pushFollow(FOLLOW_7);
                lv_urn_1_0=ruleUrn();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:474:5: ( (lv_function_2_0= ruleFunction ) )
                {
                // InternalKim.g:474:5: ( (lv_function_2_0= ruleFunction ) )
                // InternalKim.g:475:6: (lv_function_2_0= ruleFunction )
                {
                // InternalKim.g:475:6: (lv_function_2_0= ruleFunction )
                // InternalKim.g:476:7: lv_function_2_0= ruleFunction
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getFunctionFunctionParserRuleCall_1_0_1_0());
                  						
                }
                pushFollow(FOLLOW_7);
                lv_function_2_0=ruleFunction();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:494:5: ( (lv_number_3_0= ruleNumber ) )
                {
                // InternalKim.g:494:5: ( (lv_number_3_0= ruleNumber ) )
                // InternalKim.g:495:6: (lv_number_3_0= ruleNumber )
                {
                // InternalKim.g:495:6: (lv_number_3_0= ruleNumber )
                // InternalKim.g:496:7: lv_number_3_0= ruleNumber
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getNumberNumberParserRuleCall_1_0_2_0());
                  						
                }
                pushFollow(FOLLOW_7);
                lv_number_3_0=ruleNumber();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;
            case 4 :
                // InternalKim.g:514:5: ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) )
                {
                // InternalKim.g:514:5: ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) )
                // InternalKim.g:515:6: ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) )
                {
                // InternalKim.g:515:6: ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) )
                // InternalKim.g:516:7: (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' )
                {
                // InternalKim.g:516:7: (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' )
                int alt297=2;
                int LA297_0 = input.LA(1);

                if ( (LA297_0==22) ) {
                    alt297=1;
                }
                else if ( (LA297_0==23) ) {
                    alt297=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 297, 0, input);

                    throw nvae;
                }
                switch (alt297) {
                    case 1 :
                        // InternalKim.g:517:8: lv_boolean_4_1= 'true'
                        {
                        lv_boolean_4_1=(Token)match(input,22,FOLLOW_7); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:528:8: lv_boolean_4_2= 'false'
                        {
                        lv_boolean_4_2=(Token)match(input,23,FOLLOW_7); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 5 :
                // InternalKim.g:542:5: ( (lv_concept_5_0= ruleSimpleObservableSemantics ) )
                {
                // InternalKim.g:542:5: ( (lv_concept_5_0= ruleSimpleObservableSemantics ) )
                // InternalKim.g:543:6: (lv_concept_5_0= ruleSimpleObservableSemantics )
                {
                // InternalKim.g:543:6: (lv_concept_5_0= ruleSimpleObservableSemantics )
                // InternalKim.g:544:7: lv_concept_5_0= ruleSimpleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  							newCompositeNode(grammarAccess.getModelBodyStatementAccess().getConceptSimpleObservableSemanticsParserRuleCall_1_0_4_0());
                  						
                }
                pushFollow(FOLLOW_7);
                lv_concept_5_0=ruleSimpleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        otherlv_6=(Token)match(input,24,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred16_InternalKim

    // $ANTLR start synpred40_InternalKim
    public final void synpred40_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1233:5: ( 'to' )
        // InternalKim.g:1233:6: 'to'
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred40_InternalKim

    // $ANTLR start synpred44_InternalKim
    public final void synpred44_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1191:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1191:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1191:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1192:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1192:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1193:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1193:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1194:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_27);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1211:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt304=3;
        int LA304_0 = input.LA(1);

        if ( (LA304_0==43) ) {
            alt304=1;
        }
        else if ( (LA304_0==44) ) {
            alt304=2;
        }
        switch (alt304) {
            case 1 :
                // InternalKim.g:1212:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1212:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1213:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1213:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1214:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,43,FOLLOW_22); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1227:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,44,FOLLOW_22); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1232:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1233:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,39,FOLLOW_28); if (state.failed) return ;

        }

        // InternalKim.g:1239:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1240:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1244:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1245:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1262:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt305=3;
        int LA305_0 = input.LA(1);

        if ( (LA305_0==43) ) {
            alt305=1;
        }
        else if ( (LA305_0==44) ) {
            alt305=2;
        }
        switch (alt305) {
            case 1 :
                // InternalKim.g:1263:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1263:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1264:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1264:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1265:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1278:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred44_InternalKim

    // $ANTLR start synpred45_InternalKim
    public final void synpred45_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1285:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1285:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1285:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1286:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1286:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1287:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred45_InternalKim

    // $ANTLR start synpred47_InternalKim
    public final void synpred47_InternalKim_fragment() throws RecognitionException {   
        Token lv_string_12_0=null;

        // InternalKim.g:1331:3: ( ( (lv_string_12_0= RULE_STRING ) ) )
        // InternalKim.g:1331:3: ( (lv_string_12_0= RULE_STRING ) )
        {
        // InternalKim.g:1331:3: ( (lv_string_12_0= RULE_STRING ) )
        // InternalKim.g:1332:4: (lv_string_12_0= RULE_STRING )
        {
        // InternalKim.g:1332:4: (lv_string_12_0= RULE_STRING )
        // InternalKim.g:1333:5: lv_string_12_0= RULE_STRING
        {
        lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred47_InternalKim

    // $ANTLR start synpred48_InternalKim
    public final void synpred48_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1350:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1350:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1350:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1351:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1351:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1352:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred48_InternalKim

    // $ANTLR start synpred51_InternalKim
    public final void synpred51_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        Token otherlv_18=null;
        EObject lv_toResolve_15_0 = null;

        EObject lv_toResolve_17_0 = null;


        // InternalKim.g:1370:3: ( (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) )
        // InternalKim.g:1370:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        {
        // InternalKim.g:1370:3: (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' )
        // InternalKim.g:1371:4: otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')'
        {
        otherlv_14=(Token)match(input,33,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:1375:4: ( (lv_toResolve_15_0= ruleConceptDeclaration ) )
        // InternalKim.g:1376:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1376:5: (lv_toResolve_15_0= ruleConceptDeclaration )
        // InternalKim.g:1377:6: lv_toResolve_15_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_1_0());
          					
        }
        pushFollow(FOLLOW_30);
        lv_toResolve_15_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1394:4: ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )*
        loop306:
        do {
            int alt306=2;
            int LA306_0 = input.LA(1);

            if ( (LA306_0==25) ) {
                alt306=1;
            }


            switch (alt306) {
        	case 1 :
        	    // InternalKim.g:1395:5: ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    {
        	    // InternalKim.g:1395:5: ( ( ',' )=>otherlv_16= ',' )
        	    // InternalKim.g:1396:6: ( ',' )=>otherlv_16= ','
        	    {
        	    otherlv_16=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;

        	    }

        	    // InternalKim.g:1402:5: ( (lv_toResolve_17_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:1403:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:1403:6: (lv_toResolve_17_0= ruleConceptDeclaration )
        	    // InternalKim.g:1404:7: lv_toResolve_17_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      							newCompositeNode(grammarAccess.getClassifierRHSAccess().getToResolveConceptDeclarationParserRuleCall_6_2_1_0());
        	      						
        	    }
        	    pushFollow(FOLLOW_30);
        	    lv_toResolve_17_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop306;
            }
        } while (true);

        otherlv_18=(Token)match(input,34,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred51_InternalKim

    // $ANTLR start synpred58_InternalKim
    public final void synpred58_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:1591:5: ( 'to' )
        // InternalKim.g:1591:6: 'to'
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred58_InternalKim

    // $ANTLR start synpred62_InternalKim
    public final void synpred62_InternalKim_fragment() throws RecognitionException {   
        Token lv_leftLimit_3_0=null;
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_rightLimit_7_0=null;
        Token otherlv_8=null;
        EObject lv_int0_2_0 = null;

        EObject lv_int1_6_0 = null;


        // InternalKim.g:1549:3: ( ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) )
        // InternalKim.g:1549:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        {
        // InternalKim.g:1549:3: ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? )
        // InternalKim.g:1550:4: ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        {
        // InternalKim.g:1550:4: ( (lv_int0_2_0= ruleNumber ) )
        // InternalKim.g:1551:5: (lv_int0_2_0= ruleNumber )
        {
        // InternalKim.g:1551:5: (lv_int0_2_0= ruleNumber )
        // InternalKim.g:1552:6: lv_int0_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt0NumberParserRuleCall_1_0_0());
          					
        }
        pushFollow(FOLLOW_27);
        lv_int0_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1569:4: ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )?
        int alt308=3;
        int LA308_0 = input.LA(1);

        if ( (LA308_0==43) ) {
            alt308=1;
        }
        else if ( (LA308_0==44) ) {
            alt308=2;
        }
        switch (alt308) {
            case 1 :
                // InternalKim.g:1570:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                {
                // InternalKim.g:1570:5: ( (lv_leftLimit_3_0= 'inclusive' ) )
                // InternalKim.g:1571:6: (lv_leftLimit_3_0= 'inclusive' )
                {
                // InternalKim.g:1571:6: (lv_leftLimit_3_0= 'inclusive' )
                // InternalKim.g:1572:7: lv_leftLimit_3_0= 'inclusive'
                {
                lv_leftLimit_3_0=(Token)match(input,43,FOLLOW_22); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1585:5: otherlv_4= 'exclusive'
                {
                otherlv_4=(Token)match(input,44,FOLLOW_22); if (state.failed) return ;

                }
                break;

        }

        // InternalKim.g:1590:4: ( ( 'to' )=>otherlv_5= 'to' )
        // InternalKim.g:1591:5: ( 'to' )=>otherlv_5= 'to'
        {
        otherlv_5=(Token)match(input,39,FOLLOW_28); if (state.failed) return ;

        }

        // InternalKim.g:1597:4: ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) )
        // InternalKim.g:1598:5: ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber )
        {
        // InternalKim.g:1602:5: (lv_int1_6_0= ruleNumber )
        // InternalKim.g:1603:6: lv_int1_6_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getInt1NumberParserRuleCall_1_3_0());
          					
        }
        pushFollow(FOLLOW_29);
        lv_int1_6_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:1620:4: ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )?
        int alt309=3;
        int LA309_0 = input.LA(1);

        if ( (LA309_0==43) ) {
            alt309=1;
        }
        else if ( (LA309_0==44) ) {
            alt309=2;
        }
        switch (alt309) {
            case 1 :
                // InternalKim.g:1621:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                {
                // InternalKim.g:1621:5: ( (lv_rightLimit_7_0= 'inclusive' ) )
                // InternalKim.g:1622:6: (lv_rightLimit_7_0= 'inclusive' )
                {
                // InternalKim.g:1622:6: (lv_rightLimit_7_0= 'inclusive' )
                // InternalKim.g:1623:7: lv_rightLimit_7_0= 'inclusive'
                {
                lv_rightLimit_7_0=(Token)match(input,43,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:1636:5: otherlv_8= 'exclusive'
                {
                otherlv_8=(Token)match(input,44,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }
    }
    // $ANTLR end synpred62_InternalKim

    // $ANTLR start synpred63_InternalKim
    public final void synpred63_InternalKim_fragment() throws RecognitionException {   
        EObject lv_num_9_0 = null;


        // InternalKim.g:1643:3: ( ( (lv_num_9_0= ruleNumber ) ) )
        // InternalKim.g:1643:3: ( (lv_num_9_0= ruleNumber ) )
        {
        // InternalKim.g:1643:3: ( (lv_num_9_0= ruleNumber ) )
        // InternalKim.g:1644:4: (lv_num_9_0= ruleNumber )
        {
        // InternalKim.g:1644:4: (lv_num_9_0= ruleNumber )
        // InternalKim.g:1645:5: lv_num_9_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getNumNumberParserRuleCall_2_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_num_9_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred63_InternalKim

    // $ANTLR start synpred65_InternalKim
    public final void synpred65_InternalKim_fragment() throws RecognitionException {   
        Token lv_string_12_0=null;

        // InternalKim.g:1689:3: ( ( (lv_string_12_0= RULE_STRING ) ) )
        // InternalKim.g:1689:3: ( (lv_string_12_0= RULE_STRING ) )
        {
        // InternalKim.g:1689:3: ( (lv_string_12_0= RULE_STRING ) )
        // InternalKim.g:1690:4: (lv_string_12_0= RULE_STRING )
        {
        // InternalKim.g:1690:4: (lv_string_12_0= RULE_STRING )
        // InternalKim.g:1691:5: lv_string_12_0= RULE_STRING
        {
        lv_string_12_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred65_InternalKim

    // $ANTLR start synpred66_InternalKim
    public final void synpred66_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_13_0 = null;


        // InternalKim.g:1708:3: ( ( (lv_concept_13_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:1708:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:1708:3: ( (lv_concept_13_0= ruleConceptDeclaration ) )
        // InternalKim.g:1709:4: (lv_concept_13_0= ruleConceptDeclaration )
        {
        // InternalKim.g:1709:4: (lv_concept_13_0= ruleConceptDeclaration )
        // InternalKim.g:1710:5: lv_concept_13_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getConceptConceptDeclarationParserRuleCall_5_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_13_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred66_InternalKim

    // $ANTLR start synpred67_InternalKim
    public final void synpred67_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;

        // InternalKim.g:1731:6: (lv_id_14_1= RULE_LOWERCASE_ID )
        // InternalKim.g:1731:6: lv_id_14_1= RULE_LOWERCASE_ID
        {
        lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred67_InternalKim

    // $ANTLR start synpred68_InternalKim
    public final void synpred68_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_14_1=null;
        AntlrDatatypeRuleToken lv_id_14_2 = null;


        // InternalKim.g:1728:3: ( ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) )
        // InternalKim.g:1728:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        {
        // InternalKim.g:1728:3: ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) )
        // InternalKim.g:1729:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        {
        // InternalKim.g:1729:4: ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) )
        // InternalKim.g:1730:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        {
        // InternalKim.g:1730:5: (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId )
        int alt310=2;
        int LA310_0 = input.LA(1);

        if ( (LA310_0==RULE_LOWERCASE_ID) ) {
            int LA310_1 = input.LA(2);

            if ( (LA310_1==EOF) ) {
                alt310=1;
            }
            else if ( (LA310_1==51||LA310_1==89) ) {
                alt310=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 310, 1, input);

                throw nvae;
            }
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 310, 0, input);

            throw nvae;
        }
        switch (alt310) {
            case 1 :
                // InternalKim.g:1731:6: lv_id_14_1= RULE_LOWERCASE_ID
                {
                lv_id_14_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:1746:6: lv_id_14_2= rulePropertyId
                {
                if ( state.backtracking==0 ) {

                  						newCompositeNode(grammarAccess.getClassifierRHSWithIdAccess().getIdPropertyIdParserRuleCall_6_0_1());
                  					
                }
                pushFollow(FOLLOW_2);
                lv_id_14_2=rulePropertyId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred68_InternalKim

    // $ANTLR start synpred86_InternalKim
    public final void synpred86_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:2305:5: ( 'to' )
        // InternalKim.g:2305:6: 'to'
        {
        match(input,39,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred86_InternalKim

    // $ANTLR start synpred112_InternalKim
    public final void synpred112_InternalKim_fragment() throws RecognitionException {   
        EObject lv_parameters_19_0 = null;


        // InternalKim.g:2835:5: ( (lv_parameters_19_0= ruleList ) )
        // InternalKim.g:2835:5: (lv_parameters_19_0= ruleList )
        {
        // InternalKim.g:2835:5: (lv_parameters_19_0= ruleList )
        // InternalKim.g:2836:6: lv_parameters_19_0= ruleList
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getActionSpecificationAccess().getParametersListParserRuleCall_1_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_parameters_19_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred112_InternalKim

    // $ANTLR start synpred116_InternalKim
    public final void synpred116_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_0_0 = null;


        // InternalKim.g:2922:3: ( ( (lv_function_0_0= ruleFunction ) ) )
        // InternalKim.g:2922:3: ( (lv_function_0_0= ruleFunction ) )
        {
        // InternalKim.g:2922:3: ( (lv_function_0_0= ruleFunction ) )
        // InternalKim.g:2923:4: (lv_function_0_0= ruleFunction )
        {
        // InternalKim.g:2923:4: (lv_function_0_0= ruleFunction )
        // InternalKim.g:2924:5: lv_function_0_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getFunctionOrIDAccess().getFunctionFunctionParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_0_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred116_InternalKim

    // $ANTLR start synpred138_InternalKim
    public final void synpred138_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:3411:5: ( ( ruleValue ) )
        // InternalKim.g:3411:6: ( ruleValue )
        {
        // InternalKim.g:3411:6: ( ruleValue )
        // InternalKim.g:3412:6: ruleValue
        {
        pushFollow(FOLLOW_2);
        ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred138_InternalKim

    // $ANTLR start synpred142_InternalKim
    public final void synpred142_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:3535:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:3535:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:3535:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:3536:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:3536:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:3537:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getComputableValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred142_InternalKim

    // $ANTLR start synpred149_InternalKim
    public final void synpred149_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_5_1=null;
        Token lv_id_5_2=null;
        Token lv_id_5_3=null;

        // InternalKim.g:3632:3: ( ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:3632:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:3632:3: ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:3633:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:3633:4: ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:3634:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:3634:5: (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID )
        int alt343=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt343=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt343=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt343=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 343, 0, input);

            throw nvae;
        }

        switch (alt343) {
            case 1 :
                // InternalKim.g:3635:6: lv_id_5_1= RULE_LOWERCASE_ID
                {
                lv_id_5_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:3650:6: lv_id_5_2= RULE_UPPERCASE_ID
                {
                lv_id_5_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:3665:6: lv_id_5_3= RULE_CAMELCASE_ID
                {
                lv_id_5_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred149_InternalKim

    // $ANTLR start synpred163_InternalKim
    public final void synpred163_InternalKim_fragment() throws RecognitionException {   
        Token lv_private_2_0=null;

        // InternalKim.g:4027:4: ( ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) ) )
        // InternalKim.g:4027:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
        {
        // InternalKim.g:4027:4: ({...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) ) )
        // InternalKim.g:4028:5: {...}? => ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred163_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:4028:106: ( ({...}? => ( (lv_private_2_0= 'private' ) ) ) )
        // InternalKim.g:4029:6: ({...}? => ( (lv_private_2_0= 'private' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:4032:9: ({...}? => ( (lv_private_2_0= 'private' ) ) )
        // InternalKim.g:4032:10: {...}? => ( (lv_private_2_0= 'private' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred163_InternalKim", "true");
        }
        // InternalKim.g:4032:19: ( (lv_private_2_0= 'private' ) )
        // InternalKim.g:4032:20: (lv_private_2_0= 'private' )
        {
        // InternalKim.g:4032:20: (lv_private_2_0= 'private' )
        // InternalKim.g:4033:10: lv_private_2_0= 'private'
        {
        lv_private_2_0=(Token)match(input,20,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred163_InternalKim

    // $ANTLR start synpred164_InternalKim
    public final void synpred164_InternalKim_fragment() throws RecognitionException {   
        Token lv_inactive_3_0=null;

        // InternalKim.g:4050:4: ( ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) ) )
        // InternalKim.g:4050:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        {
        // InternalKim.g:4050:4: ({...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) ) )
        // InternalKim.g:4051:5: {...}? => ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred164_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:4051:106: ( ({...}? => ( (lv_inactive_3_0= 'void' ) ) ) )
        // InternalKim.g:4052:6: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:4055:9: ({...}? => ( (lv_inactive_3_0= 'void' ) ) )
        // InternalKim.g:4055:10: {...}? => ( (lv_inactive_3_0= 'void' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred164_InternalKim", "true");
        }
        // InternalKim.g:4055:19: ( (lv_inactive_3_0= 'void' ) )
        // InternalKim.g:4055:20: (lv_inactive_3_0= 'void' )
        {
        // InternalKim.g:4055:20: (lv_inactive_3_0= 'void' )
        // InternalKim.g:4056:10: lv_inactive_3_0= 'void'
        {
        lv_inactive_3_0=(Token)match(input,19,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred164_InternalKim

    // $ANTLR start synpred170_InternalKim
    public final void synpred170_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_12=null;
        EObject lv_imported_11_0 = null;

        EObject lv_imported_13_0 = null;


        // InternalKim.g:4160:4: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) )
        // InternalKim.g:4160:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4160:4: ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) )
        // InternalKim.g:4161:5: {...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred170_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0)");
        }
        // InternalKim.g:4161:106: ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) )
        // InternalKim.g:4162:6: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0);
        // InternalKim.g:4165:9: ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) )
        // InternalKim.g:4165:10: {...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred170_InternalKim", "true");
        }
        // InternalKim.g:4165:19: (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* )
        // InternalKim.g:4165:20: otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
        {
        otherlv_10=(Token)match(input,27,FOLLOW_60); if (state.failed) return ;
        // InternalKim.g:4169:9: ( (lv_imported_11_0= ruleImport ) )
        // InternalKim.g:4170:10: (lv_imported_11_0= ruleImport )
        {
        // InternalKim.g:4170:10: (lv_imported_11_0= ruleImport )
        // InternalKim.g:4171:11: lv_imported_11_0= ruleImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_imported_11_0=ruleImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4188:9: ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )*
        loop347:
        do {
            int alt347=2;
            int LA347_0 = input.LA(1);

            if ( (LA347_0==25) ) {
                alt347=1;
            }


            switch (alt347) {
        	case 1 :
        	    // InternalKim.g:4189:10: ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) )
        	    {
        	    // InternalKim.g:4189:10: ( ( ',' )=>otherlv_12= ',' )
        	    // InternalKim.g:4190:11: ( ',' )=>otherlv_12= ','
        	    {
        	    otherlv_12=(Token)match(input,25,FOLLOW_60); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4196:10: ( (lv_imported_13_0= ruleImport ) )
        	    // InternalKim.g:4197:11: (lv_imported_13_0= ruleImport )
        	    {
        	    // InternalKim.g:4197:11: (lv_imported_13_0= ruleImport )
        	    // InternalKim.g:4198:12: lv_imported_13_0= ruleImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getImportedImportParserRuleCall_5_0_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_imported_13_0=ruleImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop347;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred170_InternalKim

    // $ANTLR start synpred172_InternalKim
    public final void synpred172_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_14=null;
        Token otherlv_16=null;
        EObject lv_owlImports_15_0 = null;

        EObject lv_owlImports_17_0 = null;


        // InternalKim.g:4222:4: ( ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) )
        // InternalKim.g:4222:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
        {
        // InternalKim.g:4222:4: ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) )
        // InternalKim.g:4223:5: {...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred172_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1)");
        }
        // InternalKim.g:4223:106: ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) )
        // InternalKim.g:4224:6: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1);
        // InternalKim.g:4227:9: ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) )
        // InternalKim.g:4227:10: {...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred172_InternalKim", "true");
        }
        // InternalKim.g:4227:19: (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* )
        // InternalKim.g:4227:20: otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
        {
        otherlv_14=(Token)match(input,78,FOLLOW_62); if (state.failed) return ;
        // InternalKim.g:4231:9: ( (lv_owlImports_15_0= ruleOwlImport ) )
        // InternalKim.g:4232:10: (lv_owlImports_15_0= ruleOwlImport )
        {
        // InternalKim.g:4232:10: (lv_owlImports_15_0= ruleOwlImport )
        // InternalKim.g:4233:11: lv_owlImports_15_0= ruleOwlImport
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_owlImports_15_0=ruleOwlImport();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4250:9: (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )*
        loop348:
        do {
            int alt348=2;
            int LA348_0 = input.LA(1);

            if ( (LA348_0==25) ) {
                alt348=1;
            }


            switch (alt348) {
        	case 1 :
        	    // InternalKim.g:4251:10: otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) )
        	    {
        	    otherlv_16=(Token)match(input,25,FOLLOW_62); if (state.failed) return ;
        	    // InternalKim.g:4255:10: ( (lv_owlImports_17_0= ruleOwlImport ) )
        	    // InternalKim.g:4256:11: (lv_owlImports_17_0= ruleOwlImport )
        	    {
        	    // InternalKim.g:4256:11: (lv_owlImports_17_0= ruleOwlImport )
        	    // InternalKim.g:4257:12: lv_owlImports_17_0= ruleOwlImport
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getOwlImportsOwlImportParserRuleCall_5_1_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_owlImports_17_0=ruleOwlImport();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop348;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred172_InternalKim

    // $ANTLR start synpred175_InternalKim
    public final void synpred175_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token otherlv_20=null;
        EObject lv_coverage_19_0 = null;

        EObject lv_coverage_21_0 = null;


        // InternalKim.g:4281:4: ( ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) )
        // InternalKim.g:4281:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
        {
        // InternalKim.g:4281:4: ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) )
        // InternalKim.g:4282:5: {...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred175_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2)");
        }
        // InternalKim.g:4282:106: ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) )
        // InternalKim.g:4283:6: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2);
        // InternalKim.g:4286:9: ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) )
        // InternalKim.g:4286:10: {...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred175_InternalKim", "true");
        }
        // InternalKim.g:4286:19: (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* )
        // InternalKim.g:4286:20: otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
        {
        otherlv_18=(Token)match(input,79,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:4290:9: ( (lv_coverage_19_0= ruleFunction ) )
        // InternalKim.g:4291:10: (lv_coverage_19_0= ruleFunction )
        {
        // InternalKim.g:4291:10: (lv_coverage_19_0= ruleFunction )
        // InternalKim.g:4292:11: lv_coverage_19_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_coverage_19_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4309:9: ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )*
        loop349:
        do {
            int alt349=2;
            int LA349_0 = input.LA(1);

            if ( (LA349_0==25) ) {
                alt349=1;
            }


            switch (alt349) {
        	case 1 :
        	    // InternalKim.g:4310:10: ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) )
        	    {
        	    // InternalKim.g:4310:10: ( ( ',' )=>otherlv_20= ',' )
        	    // InternalKim.g:4311:11: ( ',' )=>otherlv_20= ','
        	    {
        	    otherlv_20=(Token)match(input,25,FOLLOW_23); if (state.failed) return ;

        	    }

        	    // InternalKim.g:4317:10: ( (lv_coverage_21_0= ruleFunction ) )
        	    // InternalKim.g:4318:11: (lv_coverage_21_0= ruleFunction )
        	    {
        	    // InternalKim.g:4318:11: (lv_coverage_21_0= ruleFunction )
        	    // InternalKim.g:4319:12: lv_coverage_21_0= ruleFunction
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getCoverageFunctionParserRuleCall_5_2_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_coverage_21_0=ruleFunction();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop349;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred175_InternalKim

    // $ANTLR start synpred177_InternalKim
    public final void synpred177_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_22=null;
        Token otherlv_23=null;
        Token lv_rootDomain_24_0=null;
        EObject lv_domainConcept_25_0 = null;


        // InternalKim.g:4343:4: ( ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:4343:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:4343:4: ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:4344:5: {...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred177_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3)");
        }
        // InternalKim.g:4344:106: ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:4345:6: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3);
        // InternalKim.g:4348:9: ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) )
        // InternalKim.g:4348:10: {...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred177_InternalKim", "true");
        }
        // InternalKim.g:4348:19: (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) )
        // InternalKim.g:4348:20: otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
        {
        otherlv_22=(Token)match(input,45,FOLLOW_63); if (state.failed) return ;
        otherlv_23=(Token)match(input,80,FOLLOW_64); if (state.failed) return ;
        // InternalKim.g:4356:9: ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) )
        int alt350=2;
        int LA350_0 = input.LA(1);

        if ( (LA350_0==81) ) {
            alt350=1;
        }
        else if ( (LA350_0==RULE_LOWERCASE_ID||LA350_0==RULE_CAMELCASE_ID||LA350_0==33||(LA350_0>=107 && LA350_0<=108)||(LA350_0>=115 && LA350_0<=116)||(LA350_0>=118 && LA350_0<=129)) ) {
            alt350=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 350, 0, input);

            throw nvae;
        }
        switch (alt350) {
            case 1 :
                // InternalKim.g:4357:10: ( (lv_rootDomain_24_0= 'root' ) )
                {
                // InternalKim.g:4357:10: ( (lv_rootDomain_24_0= 'root' ) )
                // InternalKim.g:4358:11: (lv_rootDomain_24_0= 'root' )
                {
                // InternalKim.g:4358:11: (lv_rootDomain_24_0= 'root' )
                // InternalKim.g:4359:12: lv_rootDomain_24_0= 'root'
                {
                lv_rootDomain_24_0=(Token)match(input,81,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:4372:10: ( (lv_domainConcept_25_0= ruleConcept ) )
                {
                // InternalKim.g:4372:10: ( (lv_domainConcept_25_0= ruleConcept ) )
                // InternalKim.g:4373:11: (lv_domainConcept_25_0= ruleConcept )
                {
                // InternalKim.g:4373:11: (lv_domainConcept_25_0= ruleConcept )
                // InternalKim.g:4374:12: lv_domainConcept_25_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getNamespaceAccess().getDomainConceptConceptParserRuleCall_5_3_2_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_domainConcept_25_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred177_InternalKim

    // $ANTLR start synpred179_InternalKim
    public final void synpred179_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_26=null;
        Token otherlv_27=null;
        Token otherlv_29=null;
        AntlrDatatypeRuleToken lv_disjointNamespaces_28_0 = null;

        AntlrDatatypeRuleToken lv_disjointNamespaces_30_0 = null;


        // InternalKim.g:4398:4: ( ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) )
        // InternalKim.g:4398:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
        {
        // InternalKim.g:4398:4: ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4399:5: {...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred179_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4)");
        }
        // InternalKim.g:4399:106: ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4400:6: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4);
        // InternalKim.g:4403:9: ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) )
        // InternalKim.g:4403:10: {...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred179_InternalKim", "true");
        }
        // InternalKim.g:4403:19: (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) )
        // InternalKim.g:4403:20: otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
        {
        otherlv_26=(Token)match(input,82,FOLLOW_65); if (state.failed) return ;
        otherlv_27=(Token)match(input,28,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:4411:9: ( (lv_disjointNamespaces_28_0= rulePathName ) )
        // InternalKim.g:4412:10: (lv_disjointNamespaces_28_0= rulePathName )
        {
        // InternalKim.g:4412:10: (lv_disjointNamespaces_28_0= rulePathName )
        // InternalKim.g:4413:11: lv_disjointNamespaces_28_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_2_0());
          										
        }
        pushFollow(FOLLOW_66);
        lv_disjointNamespaces_28_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:4430:9: (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* )
        // InternalKim.g:4431:10: otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )*
        {
        otherlv_29=(Token)match(input,25,FOLLOW_166); if (state.failed) return ;
        // InternalKim.g:4435:10: ( (lv_disjointNamespaces_30_0= rulePathName ) )*
        loop351:
        do {
            int alt351=2;
            int LA351_0 = input.LA(1);

            if ( (LA351_0==RULE_LOWERCASE_ID) ) {
                alt351=1;
            }


            switch (alt351) {
        	case 1 :
        	    // InternalKim.g:4436:11: (lv_disjointNamespaces_30_0= rulePathName )
        	    {
        	    // InternalKim.g:4436:11: (lv_disjointNamespaces_30_0= rulePathName )
        	    // InternalKim.g:4437:12: lv_disjointNamespaces_30_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getNamespaceAccess().getDisjointNamespacesPathNameParserRuleCall_5_4_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_166);
        	    lv_disjointNamespaces_30_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop351;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred179_InternalKim

    // $ANTLR start synpred180_InternalKim
    public final void synpred180_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        AntlrDatatypeRuleToken lv_version_32_0 = null;


        // InternalKim.g:4461:4: ( ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) )
        // InternalKim.g:4461:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
        {
        // InternalKim.g:4461:4: ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) )
        // InternalKim.g:4462:5: {...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred180_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5)");
        }
        // InternalKim.g:4462:106: ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) )
        // InternalKim.g:4463:6: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5);
        // InternalKim.g:4466:9: ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) )
        // InternalKim.g:4466:10: {...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred180_InternalKim", "true");
        }
        // InternalKim.g:4466:19: (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) )
        // InternalKim.g:4466:20: otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) )
        {
        otherlv_31=(Token)match(input,83,FOLLOW_68); if (state.failed) return ;
        // InternalKim.g:4470:9: ( (lv_version_32_0= ruleVersionNumber ) )
        // InternalKim.g:4471:10: (lv_version_32_0= ruleVersionNumber )
        {
        // InternalKim.g:4471:10: (lv_version_32_0= ruleVersionNumber )
        // InternalKim.g:4472:11: lv_version_32_0= ruleVersionNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getNamespaceAccess().getVersionVersionNumberParserRuleCall_5_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_version_32_0=ruleVersionNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred180_InternalKim

    // $ANTLR start synpred183_InternalKim
    public final void synpred183_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;


        // InternalKim.g:4506:9: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) )
        // InternalKim.g:4506:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        {
        // InternalKim.g:4506:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        // InternalKim.g:4507:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred183_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        }
        // InternalKim.g:4507:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        // InternalKim.g:4508:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        // InternalKim.g:4511:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        // InternalKim.g:4511:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred183_InternalKim", "true");
        }
        // InternalKim.g:4511:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        // InternalKim.g:4511:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        {
        otherlv_34=(Token)match(input,84,FOLLOW_167); if (state.failed) return ;
        // InternalKim.g:4515:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        int alt354=2;
        int LA354_0 = input.LA(1);

        if ( (LA354_0==85) ) {
            alt354=1;
        }
        switch (alt354) {
            case 1 :
                // InternalKim.g:4516:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
                {
                otherlv_35=(Token)match(input,85,FOLLOW_166); if (state.failed) return ;
                // InternalKim.g:4520:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
                loop353:
                do {
                    int alt353=2;
                    int LA353_0 = input.LA(1);

                    if ( (LA353_0==RULE_LOWERCASE_ID) ) {
                        alt353=1;
                    }


                    switch (alt353) {
                	case 1 :
                	    // InternalKim.g:4521:16: (lv_lookupNamespace_36_0= rulePathName )
                	    {
                	    // InternalKim.g:4521:16: (lv_lookupNamespace_36_0= rulePathName )
                	    // InternalKim.g:4522:17: lv_lookupNamespace_36_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
                	      																
                	    }
                	    pushFollow(FOLLOW_166);
                	    lv_lookupNamespace_36_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop353;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred183_InternalKim

    // $ANTLR start synpred185_InternalKim
    public final void synpred185_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;


        // InternalKim.g:4546:9: ( ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) )
        // InternalKim.g:4546:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        {
        // InternalKim.g:4546:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        // InternalKim.g:4547:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred185_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        }
        // InternalKim.g:4547:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        // InternalKim.g:4548:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        // InternalKim.g:4551:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        // InternalKim.g:4551:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred185_InternalKim", "true");
        }
        // InternalKim.g:4551:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        // InternalKim.g:4551:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        {
        otherlv_37=(Token)match(input,86,FOLLOW_166); if (state.failed) return ;
        // InternalKim.g:4555:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        loop355:
        do {
            int alt355=2;
            int LA355_0 = input.LA(1);

            if ( (LA355_0==RULE_LOWERCASE_ID) ) {
                alt355=1;
            }


            switch (alt355) {
        	case 1 :
        	    // InternalKim.g:4556:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    {
        	    // InternalKim.g:4556:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    // InternalKim.g:4557:16: lv_blacklistNamespace_38_0= rulePathName
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_166);
        	    lv_blacklistNamespace_38_0=rulePathName();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop355;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred185_InternalKim

    // $ANTLR start synpred186_InternalKim
    public final void synpred186_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_39=null;
        EObject lv_weights_40_0 = null;


        // InternalKim.g:4580:9: ( ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:4580:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:4580:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:4581:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred186_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        }
        // InternalKim.g:4581:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:4582:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        // InternalKim.g:4585:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        // InternalKim.g:4585:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred186_InternalKim", "true");
        }
        // InternalKim.g:4585:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        // InternalKim.g:4585:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
        {
        otherlv_39=(Token)match(input,27,FOLLOW_15); if (state.failed) return ;
        // InternalKim.g:4589:14: ( (lv_weights_40_0= ruleMetadata ) )
        // InternalKim.g:4590:15: (lv_weights_40_0= ruleMetadata )
        {
        // InternalKim.g:4590:15: (lv_weights_40_0= ruleMetadata )
        // InternalKim.g:4591:16: lv_weights_40_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
          															
        }
        pushFollow(FOLLOW_2);
        lv_weights_40_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred186_InternalKim

    // $ANTLR start synpred187_InternalKim
    public final void synpred187_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_34=null;
        Token otherlv_35=null;
        Token otherlv_37=null;
        Token otherlv_39=null;
        AntlrDatatypeRuleToken lv_lookupNamespace_36_0 = null;

        AntlrDatatypeRuleToken lv_blacklistNamespace_38_0 = null;

        EObject lv_weights_40_0 = null;


        // InternalKim.g:4495:4: ( ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )
        // InternalKim.g:4495:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        {
        // InternalKim.g:4495:4: ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) )
        // InternalKim.g:4496:5: {...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6)");
        }
        // InternalKim.g:4496:106: ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) )
        // InternalKim.g:4497:6: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6);
        // InternalKim.g:4500:9: ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) )
        // InternalKim.g:4500:10: {...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "true");
        }
        // InternalKim.g:4500:19: ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) )
        // InternalKim.g:4500:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        {
        // InternalKim.g:4500:20: ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) )
        // InternalKim.g:4501:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        {
        getUnorderedGroupHelper().enter(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6());
        // InternalKim.g:4504:10: ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?)
        // InternalKim.g:4505:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?
        {
        // InternalKim.g:4505:11: ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+
        int cnt359=0;
        loop359:
        do {
            int alt359=4;
            int LA359_0 = input.LA(1);

            if ( LA359_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
                alt359=1;
            }
            else if ( LA359_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
                alt359=2;
            }
            else if ( LA359_0 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
                alt359=3;
            }


            switch (alt359) {
        	case 1 :
        	    // InternalKim.g:4506:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        	    {
        	    // InternalKim.g:4506:9: ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) )
        	    // InternalKim.g:4507:10: {...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0)");
        	    }
        	    // InternalKim.g:4507:113: ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) )
        	    // InternalKim.g:4508:11: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 0);
        	    // InternalKim.g:4511:14: ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) )
        	    // InternalKim.g:4511:15: {...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred187_InternalKim", "true");
        	    }
        	    // InternalKim.g:4511:24: (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? )
        	    // InternalKim.g:4511:25: otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        	    {
        	    otherlv_34=(Token)match(input,84,FOLLOW_168); if (state.failed) return ;
        	    // InternalKim.g:4515:14: (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )?
        	    int alt357=2;
        	    int LA357_0 = input.LA(1);

        	    if ( (LA357_0==85) ) {
        	        alt357=1;
        	    }
        	    switch (alt357) {
        	        case 1 :
        	            // InternalKim.g:4516:15: otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )*
        	            {
        	            otherlv_35=(Token)match(input,85,FOLLOW_169); if (state.failed) return ;
        	            // InternalKim.g:4520:15: ( (lv_lookupNamespace_36_0= rulePathName ) )*
        	            loop356:
        	            do {
        	                int alt356=2;
        	                int LA356_0 = input.LA(1);

        	                if ( (LA356_0==RULE_LOWERCASE_ID) ) {
        	                    alt356=1;
        	                }


        	                switch (alt356) {
        	            	case 1 :
        	            	    // InternalKim.g:4521:16: (lv_lookupNamespace_36_0= rulePathName )
        	            	    {
        	            	    // InternalKim.g:4521:16: (lv_lookupNamespace_36_0= rulePathName )
        	            	    // InternalKim.g:4522:17: lv_lookupNamespace_36_0= rulePathName
        	            	    {
        	            	    if ( state.backtracking==0 ) {

        	            	      																	newCompositeNode(grammarAccess.getNamespaceAccess().getLookupNamespacePathNameParserRuleCall_5_6_0_1_1_0());
        	            	      																
        	            	    }
        	            	    pushFollow(FOLLOW_169);
        	            	    lv_lookupNamespace_36_0=rulePathName();

        	            	    state._fsp--;
        	            	    if (state.failed) return ;

        	            	    }


        	            	    }
        	            	    break;

        	            	default :
        	            	    break loop356;
        	                }
        	            } while (true);


        	            }
        	            break;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 2 :
        	    // InternalKim.g:4546:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        	    {
        	    // InternalKim.g:4546:9: ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) )
        	    // InternalKim.g:4547:10: {...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1)");
        	    }
        	    // InternalKim.g:4547:113: ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) )
        	    // InternalKim.g:4548:11: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 1);
        	    // InternalKim.g:4551:14: ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) )
        	    // InternalKim.g:4551:15: {...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred187_InternalKim", "true");
        	    }
        	    // InternalKim.g:4551:24: (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* )
        	    // InternalKim.g:4551:25: otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        	    {
        	    otherlv_37=(Token)match(input,86,FOLLOW_169); if (state.failed) return ;
        	    // InternalKim.g:4555:14: ( (lv_blacklistNamespace_38_0= rulePathName ) )*
        	    loop358:
        	    do {
        	        int alt358=2;
        	        int LA358_0 = input.LA(1);

        	        if ( (LA358_0==RULE_LOWERCASE_ID) ) {
        	            alt358=1;
        	        }


        	        switch (alt358) {
        	    	case 1 :
        	    	    // InternalKim.g:4556:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    	    {
        	    	    // InternalKim.g:4556:15: (lv_blacklistNamespace_38_0= rulePathName )
        	    	    // InternalKim.g:4557:16: lv_blacklistNamespace_38_0= rulePathName
        	    	    {
        	    	    if ( state.backtracking==0 ) {

        	    	      																newCompositeNode(grammarAccess.getNamespaceAccess().getBlacklistNamespacePathNameParserRuleCall_5_6_1_1_0());
        	    	      															
        	    	    }
        	    	    pushFollow(FOLLOW_169);
        	    	    lv_blacklistNamespace_38_0=rulePathName();

        	    	    state._fsp--;
        	    	    if (state.failed) return ;

        	    	    }


        	    	    }
        	    	    break;

        	    	default :
        	    	    break loop358;
        	        }
        	    } while (true);


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;
        	case 3 :
        	    // InternalKim.g:4580:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        	    {
        	    // InternalKim.g:4580:9: ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) )
        	    // InternalKim.g:4581:10: {...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        	    {
        	    if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2)");
        	    }
        	    // InternalKim.g:4581:113: ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) )
        	    // InternalKim.g:4582:11: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        	    {
        	    getUnorderedGroupHelper().select(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6(), 2);
        	    // InternalKim.g:4585:14: ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) )
        	    // InternalKim.g:4585:15: {...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred187_InternalKim", "true");
        	    }
        	    // InternalKim.g:4585:24: (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) )
        	    // InternalKim.g:4585:25: otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) )
        	    {
        	    otherlv_39=(Token)match(input,27,FOLLOW_15); if (state.failed) return ;
        	    // InternalKim.g:4589:14: ( (lv_weights_40_0= ruleMetadata ) )
        	    // InternalKim.g:4590:15: (lv_weights_40_0= ruleMetadata )
        	    {
        	    // InternalKim.g:4590:15: (lv_weights_40_0= ruleMetadata )
        	    // InternalKim.g:4591:16: lv_weights_40_0= ruleMetadata
        	    {
        	    if ( state.backtracking==0 ) {

        	      																newCompositeNode(grammarAccess.getNamespaceAccess().getWeightsMetadataParserRuleCall_5_6_2_1_0());
        	      															
        	    }
        	    pushFollow(FOLLOW_170);
        	    lv_weights_40_0=ruleMetadata();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }


        	    }


        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt359 >= 1 ) break loop359;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(359, input);
                    throw eee;
            }
            cnt359++;
        } while (true);

        if ( ! getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6()) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred187_InternalKim", "getUnorderedGroupHelper().canLeave(grammarAccess.getNamespaceAccess().getUnorderedGroup_5_6())");
        }

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred187_InternalKim

    // $ANTLR start synpred203_InternalKim
    public final void synpred203_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_2_0=null;

        // InternalKim.g:5177:9: ( (lv_docstring_2_0= RULE_STRING ) )
        // InternalKim.g:5177:9: (lv_docstring_2_0= RULE_STRING )
        {
        // InternalKim.g:5177:9: (lv_docstring_2_0= RULE_STRING )
        // InternalKim.g:5178:10: lv_docstring_2_0= RULE_STRING
        {
        lv_docstring_2_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred203_InternalKim

    // $ANTLR start synpred206_InternalKim
    public final void synpred206_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_8=null;
        Token otherlv_10=null;
        EObject lv_observations_9_0 = null;


        // InternalKim.g:5250:10: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) )
        // InternalKim.g:5250:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
        {
        // InternalKim.g:5250:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
        // InternalKim.g:5251:11: otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')'
        {
        otherlv_8=(Token)match(input,33,FOLLOW_80); if (state.failed) return ;
        // InternalKim.g:5255:11: ( (lv_observations_9_0= ruleObserveStatementBody ) )
        // InternalKim.g:5256:12: (lv_observations_9_0= ruleObserveStatementBody )
        {
        // InternalKim.g:5256:12: (lv_observations_9_0= ruleObserveStatementBody )
        // InternalKim.g:5257:13: lv_observations_9_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_1_0_1_0());
          												
        }
        pushFollow(FOLLOW_20);
        lv_observations_9_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_10=(Token)match(input,34,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred206_InternalKim

    // $ANTLR start synpred207_InternalKim
    public final void synpred207_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_13=null;
        Token otherlv_15=null;
        EObject lv_observations_14_0 = null;


        // InternalKim.g:5306:11: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) )
        // InternalKim.g:5306:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
        {
        // InternalKim.g:5306:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
        // InternalKim.g:5307:12: otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')'
        {
        otherlv_13=(Token)match(input,33,FOLLOW_80); if (state.failed) return ;
        // InternalKim.g:5311:12: ( (lv_observations_14_0= ruleObserveStatementBody ) )
        // InternalKim.g:5312:13: (lv_observations_14_0= ruleObserveStatementBody )
        {
        // InternalKim.g:5312:13: (lv_observations_14_0= ruleObserveStatementBody )
        // InternalKim.g:5313:14: lv_observations_14_0= ruleObserveStatementBody
        {
        if ( state.backtracking==0 ) {

          														newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_2_1_0_1_0());
          													
        }
        pushFollow(FOLLOW_20);
        lv_observations_14_0=ruleObserveStatementBody();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_15=(Token)match(input,34,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred207_InternalKim

    // $ANTLR start synpred212_InternalKim
    public final void synpred212_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_2_0=null;
        Token otherlv_3=null;
        Token otherlv_5=null;
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token otherlv_10=null;
        Token otherlv_12=null;
        Token otherlv_13=null;
        Token otherlv_15=null;
        Token otherlv_17=null;
        EObject lv_concept_1_0 = null;

        AntlrDatatypeRuleToken lv_parents_4_0 = null;

        AntlrDatatypeRuleToken lv_parents_6_0 = null;

        EObject lv_observations_9_0 = null;

        EObject lv_states_11_0 = null;

        EObject lv_observations_14_0 = null;

        EObject lv_states_16_0 = null;

        EObject lv_accessor_18_0 = null;


        // InternalKim.g:5152:3: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) )
        // InternalKim.g:5152:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
        {
        // InternalKim.g:5152:3: ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) )
        // InternalKim.g:5153:4: {...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred212_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0)");
        }
        // InternalKim.g:5153:114: ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) )
        // InternalKim.g:5154:5: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0);
        // InternalKim.g:5157:8: ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) )
        // InternalKim.g:5157:9: {...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred212_InternalKim", "true");
        }
        // InternalKim.g:5157:18: ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? )
        // InternalKim.g:5157:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
        {
        // InternalKim.g:5157:19: ( (lv_concept_1_0= ruleNamedObservableSemantics ) )
        // InternalKim.g:5158:9: (lv_concept_1_0= ruleNamedObservableSemantics )
        {
        // InternalKim.g:5158:9: (lv_concept_1_0= ruleNamedObservableSemantics )
        // InternalKim.g:5159:10: lv_concept_1_0= ruleNamedObservableSemantics
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getConceptNamedObservableSemanticsParserRuleCall_0_0_0());
          									
        }
        pushFollow(FOLLOW_171);
        lv_concept_1_0=ruleNamedObservableSemantics();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:5176:8: ( (lv_docstring_2_0= RULE_STRING ) )?
        int alt368=2;
        int LA368_0 = input.LA(1);

        if ( (LA368_0==RULE_STRING) ) {
            alt368=1;
        }
        switch (alt368) {
            case 1 :
                // InternalKim.g:5177:9: (lv_docstring_2_0= RULE_STRING )
                {
                // InternalKim.g:5177:9: (lv_docstring_2_0= RULE_STRING )
                // InternalKim.g:5178:10: lv_docstring_2_0= RULE_STRING
                {
                lv_docstring_2_0=(Token)match(input,RULE_STRING,FOLLOW_172); if (state.failed) return ;

                }


                }
                break;

        }

        // InternalKim.g:5194:8: (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )?
        int alt370=2;
        int LA370_0 = input.LA(1);

        if ( (LA370_0==91) ) {
            alt370=1;
        }
        switch (alt370) {
            case 1 :
                // InternalKim.g:5195:9: otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
                {
                otherlv_3=(Token)match(input,91,FOLLOW_23); if (state.failed) return ;
                // InternalKim.g:5199:9: ( (lv_parents_4_0= rulePathName ) )
                // InternalKim.g:5200:10: (lv_parents_4_0= rulePathName )
                {
                // InternalKim.g:5200:10: (lv_parents_4_0= rulePathName )
                // InternalKim.g:5201:11: lv_parents_4_0= rulePathName
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_1_0());
                  										
                }
                pushFollow(FOLLOW_173);
                lv_parents_4_0=rulePathName();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:5218:9: (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )*
                loop369:
                do {
                    int alt369=2;
                    int LA369_0 = input.LA(1);

                    if ( (LA369_0==25) ) {
                        alt369=1;
                    }


                    switch (alt369) {
                	case 1 :
                	    // InternalKim.g:5219:10: otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) )
                	    {
                	    otherlv_5=(Token)match(input,25,FOLLOW_23); if (state.failed) return ;
                	    // InternalKim.g:5223:10: ( (lv_parents_6_0= rulePathName ) )
                	    // InternalKim.g:5224:11: (lv_parents_6_0= rulePathName )
                	    {
                	    // InternalKim.g:5224:11: (lv_parents_6_0= rulePathName )
                	    // InternalKim.g:5225:12: lv_parents_6_0= rulePathName
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getParentsPathNameParserRuleCall_0_2_2_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_173);
                	    lv_parents_6_0=rulePathName();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop369;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5244:8: (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )?
        int alt374=2;
        int LA374_0 = input.LA(1);

        if ( (LA374_0==26) ) {
            alt374=1;
        }
        switch (alt374) {
            case 1 :
                // InternalKim.g:5245:9: otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
                {
                otherlv_7=(Token)match(input,26,FOLLOW_6); if (state.failed) return ;
                // InternalKim.g:5249:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )
                int alt371=2;
                alt371 = dfa371.predict(input);
                switch (alt371) {
                    case 1 :
                        // InternalKim.g:5250:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
                        {
                        // InternalKim.g:5250:10: (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' )
                        // InternalKim.g:5251:11: otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')'
                        {
                        otherlv_8=(Token)match(input,33,FOLLOW_80); if (state.failed) return ;
                        // InternalKim.g:5255:11: ( (lv_observations_9_0= ruleObserveStatementBody ) )
                        // InternalKim.g:5256:12: (lv_observations_9_0= ruleObserveStatementBody )
                        {
                        // InternalKim.g:5256:12: (lv_observations_9_0= ruleObserveStatementBody )
                        // InternalKim.g:5257:13: lv_observations_9_0= ruleObserveStatementBody
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_1_0_1_0());
                          												
                        }
                        pushFollow(FOLLOW_20);
                        lv_observations_9_0=ruleObserveStatementBody();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }

                        otherlv_10=(Token)match(input,34,FOLLOW_174); if (state.failed) return ;

                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:5280:10: ( (lv_states_11_0= ruleObservableSemantics ) )
                        {
                        // InternalKim.g:5280:10: ( (lv_states_11_0= ruleObservableSemantics ) )
                        // InternalKim.g:5281:11: (lv_states_11_0= ruleObservableSemantics )
                        {
                        // InternalKim.g:5281:11: (lv_states_11_0= ruleObservableSemantics )
                        // InternalKim.g:5282:12: lv_states_11_0= ruleObservableSemantics
                        {
                        if ( state.backtracking==0 ) {

                          												newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_1_1_0());
                          											
                        }
                        pushFollow(FOLLOW_174);
                        lv_states_11_0=ruleObservableSemantics();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }

                // InternalKim.g:5300:9: (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )*
                loop373:
                do {
                    int alt373=2;
                    int LA373_0 = input.LA(1);

                    if ( (LA373_0==25) ) {
                        alt373=1;
                    }


                    switch (alt373) {
                	case 1 :
                	    // InternalKim.g:5301:10: otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
                	    {
                	    otherlv_12=(Token)match(input,25,FOLLOW_6); if (state.failed) return ;
                	    // InternalKim.g:5305:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )
                	    int alt372=2;
                	    alt372 = dfa372.predict(input);
                	    switch (alt372) {
                	        case 1 :
                	            // InternalKim.g:5306:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
                	            {
                	            // InternalKim.g:5306:11: (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' )
                	            // InternalKim.g:5307:12: otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')'
                	            {
                	            otherlv_13=(Token)match(input,33,FOLLOW_80); if (state.failed) return ;
                	            // InternalKim.g:5311:12: ( (lv_observations_14_0= ruleObserveStatementBody ) )
                	            // InternalKim.g:5312:13: (lv_observations_14_0= ruleObserveStatementBody )
                	            {
                	            // InternalKim.g:5312:13: (lv_observations_14_0= ruleObserveStatementBody )
                	            // InternalKim.g:5313:14: lv_observations_14_0= ruleObserveStatementBody
                	            {
                	            if ( state.backtracking==0 ) {

                	              														newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getObservationsObserveStatementBodyParserRuleCall_0_3_2_1_0_1_0());
                	              													
                	            }
                	            pushFollow(FOLLOW_20);
                	            lv_observations_14_0=ruleObserveStatementBody();

                	            state._fsp--;
                	            if (state.failed) return ;

                	            }


                	            }

                	            otherlv_15=(Token)match(input,34,FOLLOW_174); if (state.failed) return ;

                	            }


                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:5336:11: ( (lv_states_16_0= ruleObservableSemantics ) )
                	            {
                	            // InternalKim.g:5336:11: ( (lv_states_16_0= ruleObservableSemantics ) )
                	            // InternalKim.g:5337:12: (lv_states_16_0= ruleObservableSemantics )
                	            {
                	            // InternalKim.g:5337:12: (lv_states_16_0= ruleObservableSemantics )
                	            // InternalKim.g:5338:13: lv_states_16_0= ruleObservableSemantics
                	            {
                	            if ( state.backtracking==0 ) {

                	              													newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getStatesObservableSemanticsParserRuleCall_0_3_2_1_1_0());
                	              												
                	            }
                	            pushFollow(FOLLOW_174);
                	            lv_states_16_0=ruleObservableSemantics();

                	            state._fsp--;
                	            if (state.failed) return ;

                	            }


                	            }


                	            }
                	            break;

                	    }


                	    }
                	    break;

                	default :
                	    break loop373;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:5358:8: (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )?
        int alt376=2;
        int LA376_0 = input.LA(1);

        if ( (LA376_0==27) ) {
            alt376=1;
        }
        switch (alt376) {
            case 1 :
                // InternalKim.g:5359:9: otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )?
                {
                otherlv_17=(Token)match(input,27,FOLLOW_166); if (state.failed) return ;
                // InternalKim.g:5363:9: ( (lv_accessor_18_0= ruleFunction ) )?
                int alt375=2;
                int LA375_0 = input.LA(1);

                if ( (LA375_0==RULE_LOWERCASE_ID) ) {
                    alt375=1;
                }
                switch (alt375) {
                    case 1 :
                        // InternalKim.g:5364:10: (lv_accessor_18_0= ruleFunction )
                        {
                        // InternalKim.g:5364:10: (lv_accessor_18_0= ruleFunction )
                        // InternalKim.g:5365:11: lv_accessor_18_0= ruleFunction
                        {
                        if ( state.backtracking==0 ) {

                          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getAccessorFunctionParserRuleCall_0_4_1_0());
                          										
                        }
                        pushFollow(FOLLOW_2);
                        lv_accessor_18_0=ruleFunction();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }
                        break;

                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred212_InternalKim

    // $ANTLR start synpred213_InternalKim
    public final void synpred213_InternalKim_fragment() throws RecognitionException {   
        EObject lv_actions_19_0 = null;


        // InternalKim.g:5395:9: ( (lv_actions_19_0= ruleActionSpecification ) )
        // InternalKim.g:5395:9: (lv_actions_19_0= ruleActionSpecification )
        {
        // InternalKim.g:5395:9: (lv_actions_19_0= ruleActionSpecification )
        // InternalKim.g:5396:10: lv_actions_19_0= ruleActionSpecification
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_1_0_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_actions_19_0=ruleActionSpecification();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred213_InternalKim

    // $ANTLR start synpred214_InternalKim
    public final void synpred214_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token otherlv_21=null;
        EObject lv_metadata_22_0 = null;


        // InternalKim.g:5414:9: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )
        // InternalKim.g:5414:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
        {
        otherlv_20=(Token)match(input,28,FOLLOW_14); if (state.failed) return ;
        otherlv_21=(Token)match(input,29,FOLLOW_15); if (state.failed) return ;
        // InternalKim.g:5422:9: ( (lv_metadata_22_0= ruleMetadata ) )
        // InternalKim.g:5423:10: (lv_metadata_22_0= ruleMetadata )
        {
        // InternalKim.g:5423:10: (lv_metadata_22_0= ruleMetadata )
        // InternalKim.g:5424:11: lv_metadata_22_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_1_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_22_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred214_InternalKim

    // $ANTLR start synpred215_InternalKim
    public final void synpred215_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_documentation_25_0 = null;


        // InternalKim.g:5443:9: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )
        // InternalKim.g:5443:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
        {
        otherlv_23=(Token)match(input,28,FOLLOW_17); if (state.failed) return ;
        otherlv_24=(Token)match(input,30,FOLLOW_15); if (state.failed) return ;
        // InternalKim.g:5451:9: ( (lv_documentation_25_0= ruleMetadata ) )
        // InternalKim.g:5452:10: (lv_documentation_25_0= ruleMetadata )
        {
        // InternalKim.g:5452:10: (lv_documentation_25_0= ruleMetadata )
        // InternalKim.g:5453:11: lv_documentation_25_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_documentation_25_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred215_InternalKim

    // $ANTLR start synpred216_InternalKim
    public final void synpred216_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        Token otherlv_21=null;
        Token otherlv_23=null;
        Token otherlv_24=null;
        EObject lv_actions_19_0 = null;

        EObject lv_metadata_22_0 = null;

        EObject lv_documentation_25_0 = null;


        // InternalKim.g:5389:3: ( ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )
        // InternalKim.g:5389:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
        {
        // InternalKim.g:5389:3: ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) )
        // InternalKim.g:5390:4: {...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1)");
        }
        // InternalKim.g:5390:114: ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) )
        // InternalKim.g:5391:5: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1);
        // InternalKim.g:5394:8: ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) )
        // InternalKim.g:5394:9: {...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred216_InternalKim", "true");
        }
        // InternalKim.g:5394:18: ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? )
        // InternalKim.g:5394:19: ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
        {
        // InternalKim.g:5394:19: ( (lv_actions_19_0= ruleActionSpecification ) )*
        loop377:
        do {
            int alt377=2;
            int LA377_0 = input.LA(1);

            if ( ((LA377_0>=53 && LA377_0<=55)) ) {
                alt377=1;
            }


            switch (alt377) {
        	case 1 :
        	    // InternalKim.g:5395:9: (lv_actions_19_0= ruleActionSpecification )
        	    {
        	    // InternalKim.g:5395:9: (lv_actions_19_0= ruleActionSpecification )
        	    // InternalKim.g:5396:10: lv_actions_19_0= ruleActionSpecification
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getActionsActionSpecificationParserRuleCall_1_0_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_13);
        	    lv_actions_19_0=ruleActionSpecification();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }
        	    break;

        	default :
        	    break loop377;
            }
        } while (true);

        // InternalKim.g:5413:8: (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )?
        int alt378=2;
        int LA378_0 = input.LA(1);

        if ( (LA378_0==28) ) {
            int LA378_1 = input.LA(2);

            if ( (LA378_1==29) ) {
                alt378=1;
            }
        }
        switch (alt378) {
            case 1 :
                // InternalKim.g:5414:9: otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) )
                {
                otherlv_20=(Token)match(input,28,FOLLOW_14); if (state.failed) return ;
                otherlv_21=(Token)match(input,29,FOLLOW_15); if (state.failed) return ;
                // InternalKim.g:5422:9: ( (lv_metadata_22_0= ruleMetadata ) )
                // InternalKim.g:5423:10: (lv_metadata_22_0= ruleMetadata )
                {
                // InternalKim.g:5423:10: (lv_metadata_22_0= ruleMetadata )
                // InternalKim.g:5424:11: lv_metadata_22_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getMetadataMetadataParserRuleCall_1_1_2_0());
                  										
                }
                pushFollow(FOLLOW_16);
                lv_metadata_22_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:5442:8: (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )?
        int alt379=2;
        int LA379_0 = input.LA(1);

        if ( (LA379_0==28) ) {
            alt379=1;
        }
        switch (alt379) {
            case 1 :
                // InternalKim.g:5443:9: otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) )
                {
                otherlv_23=(Token)match(input,28,FOLLOW_17); if (state.failed) return ;
                otherlv_24=(Token)match(input,30,FOLLOW_15); if (state.failed) return ;
                // InternalKim.g:5451:9: ( (lv_documentation_25_0= ruleMetadata ) )
                // InternalKim.g:5452:10: (lv_documentation_25_0= ruleMetadata )
                {
                // InternalKim.g:5452:10: (lv_documentation_25_0= ruleMetadata )
                // InternalKim.g:5453:11: lv_documentation_25_0= ruleMetadata
                {
                if ( state.backtracking==0 ) {

                  											newCompositeNode(grammarAccess.getObserveStatementBodyAccess().getDocumentationMetadataParserRuleCall_1_2_2_0());
                  										
                }
                pushFollow(FOLLOW_2);
                lv_documentation_25_0=ruleMetadata();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred216_InternalKim

    // $ANTLR start synpred217_InternalKim
    public final void synpred217_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_value_0_0 = null;


        // InternalKim.g:5517:4: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )
        // InternalKim.g:5517:4: ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as'
        {
        // InternalKim.g:5517:4: ( (lv_value_0_0= ruleValue ) )
        // InternalKim.g:5518:5: (lv_value_0_0= ruleValue )
        {
        // InternalKim.g:5518:5: (lv_value_0_0= ruleValue )
        // InternalKim.g:5519:6: lv_value_0_0= ruleValue
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getObservableSemanticsAccess().getValueValueParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_7);
        lv_value_0_0=ruleValue();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_1=(Token)match(input,24,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred217_InternalKim

    // $ANTLR start synpred219_InternalKim
    public final void synpred219_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_by_6_0 = null;


        // InternalKim.g:5581:4: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5581:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5581:4: ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5582:5: {...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred219_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:5582:116: ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5583:6: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:5586:9: ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) )
        // InternalKim.g:5586:10: {...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred219_InternalKim", "true");
        }
        // InternalKim.g:5586:19: (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) )
        // InternalKim.g:5586:20: otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) )
        {
        otherlv_5=(Token)match(input,93,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:5590:9: ( (lv_by_6_0= ruleConcept ) )
        // InternalKim.g:5591:10: (lv_by_6_0= ruleConcept )
        {
        // InternalKim.g:5591:10: (lv_by_6_0= ruleConcept )
        // InternalKim.g:5592:11: lv_by_6_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getByConceptParserRuleCall_3_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_6_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred219_InternalKim

    // $ANTLR start synpred221_InternalKim
    public final void synpred221_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        Token lv_downTo_9_1=null;
        AntlrDatatypeRuleToken lv_downTo_9_2 = null;


        // InternalKim.g:5615:4: ( ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) )
        // InternalKim.g:5615:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) )
        {
        // InternalKim.g:5615:4: ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) )
        // InternalKim.g:5616:5: {...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:5616:116: ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) )
        // InternalKim.g:5617:6: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:5620:9: ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) )
        // InternalKim.g:5620:10: {...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred221_InternalKim", "true");
        }
        // InternalKim.g:5620:19: (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) )
        // InternalKim.g:5620:20: otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) )
        {
        otherlv_7=(Token)match(input,94,FOLLOW_22); if (state.failed) return ;
        otherlv_8=(Token)match(input,39,FOLLOW_85); if (state.failed) return ;
        // InternalKim.g:5628:9: ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) )
        // InternalKim.g:5629:10: ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) )
        {
        // InternalKim.g:5629:10: ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) )
        // InternalKim.g:5630:11: (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId )
        {
        // InternalKim.g:5630:11: (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId )
        int alt380=2;
        int LA380_0 = input.LA(1);

        if ( (LA380_0==RULE_CAMELCASE_ID) ) {
            alt380=1;
        }
        else if ( (LA380_0==RULE_LOWERCASE_ID) ) {
            alt380=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 380, 0, input);

            throw nvae;
        }
        switch (alt380) {
            case 1 :
                // InternalKim.g:5631:12: lv_downTo_9_1= RULE_CAMELCASE_ID
                {
                lv_downTo_9_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:5646:12: lv_downTo_9_2= ruleNamespaceId
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getDownToNamespaceIdParserRuleCall_3_1_2_0_1());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_downTo_9_2=ruleNamespaceId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred221_InternalKim

    // $ANTLR start synpred222_InternalKim
    public final void synpred222_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        EObject lv_role_11_0 = null;


        // InternalKim.g:5670:4: ( ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:5670:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:5670:4: ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:5671:5: {...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:5671:116: ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) )
        // InternalKim.g:5672:6: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:5675:9: ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) )
        // InternalKim.g:5675:10: {...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred222_InternalKim", "true");
        }
        // InternalKim.g:5675:19: (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) )
        // InternalKim.g:5675:20: otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) )
        {
        otherlv_10=(Token)match(input,24,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:5679:9: ( (lv_role_11_0= ruleConcept ) )
        // InternalKim.g:5680:10: (lv_role_11_0= ruleConcept )
        {
        // InternalKim.g:5680:10: (lv_role_11_0= ruleConcept )
        // InternalKim.g:5681:11: lv_role_11_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getRoleConceptParserRuleCall_3_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_role_11_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred222_InternalKim

    // $ANTLR start synpred223_InternalKim
    public final void synpred223_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        AntlrDatatypeRuleToken lv_accordingTo_14_0 = null;


        // InternalKim.g:5704:4: ( ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:5704:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:5704:4: ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:5705:5: {...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:5705:116: ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:5706:6: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:5709:9: ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) )
        // InternalKim.g:5709:10: {...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred223_InternalKim", "true");
        }
        // InternalKim.g:5709:19: (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) )
        // InternalKim.g:5709:20: otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) )
        {
        otherlv_12=(Token)match(input,38,FOLLOW_22); if (state.failed) return ;
        otherlv_13=(Token)match(input,39,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:5717:9: ( (lv_accordingTo_14_0= rulePropertyId ) )
        // InternalKim.g:5718:10: (lv_accordingTo_14_0= rulePropertyId )
        {
        // InternalKim.g:5718:10: (lv_accordingTo_14_0= rulePropertyId )
        // InternalKim.g:5719:11: lv_accordingTo_14_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_3_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_14_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred223_InternalKim

    // $ANTLR start synpred224_InternalKim
    public final void synpred224_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_16_0 = null;


        // InternalKim.g:5753:11: ( ( (lv_unit_16_0= ruleUnit ) ) )
        // InternalKim.g:5753:11: ( (lv_unit_16_0= ruleUnit ) )
        {
        // InternalKim.g:5753:11: ( (lv_unit_16_0= ruleUnit ) )
        // InternalKim.g:5754:12: (lv_unit_16_0= ruleUnit )
        {
        // InternalKim.g:5754:12: (lv_unit_16_0= ruleUnit )
        // InternalKim.g:5755:13: lv_unit_16_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_16_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred224_InternalKim

    // $ANTLR start synpred226_InternalKim
    public final void synpred226_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_18=null;
        EObject lv_unit_16_0 = null;

        EObject lv_currency_17_0 = null;

        EObject lv_unit_19_0 = null;


        // InternalKim.g:5742:4: ( ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:5742:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:5742:4: ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:5743:5: {...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred226_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:5743:116: ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:5744:6: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:5747:9: ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) )
        // InternalKim.g:5747:10: {...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred226_InternalKim", "true");
        }
        // InternalKim.g:5747:19: ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) )
        int alt383=2;
        int LA383_0 = input.LA(1);

        if ( (LA383_0==45) ) {
            alt383=1;
        }
        else if ( (LA383_0==95) ) {
            alt383=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 383, 0, input);

            throw nvae;
        }
        switch (alt383) {
            case 1 :
                // InternalKim.g:5747:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:5747:20: (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) )
                // InternalKim.g:5748:10: otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                {
                otherlv_15=(Token)match(input,45,FOLLOW_86); if (state.failed) return ;
                // InternalKim.g:5752:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )
                int alt382=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA382_1 = input.LA(2);

                    if ( (synpred224_InternalKim()) ) {
                        alt382=1;
                    }
                    else if ( (true) ) {
                        alt382=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 382, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA382_2 = input.LA(2);

                    if ( (LA382_2==51||LA382_2==89) ) {
                        alt382=2;
                    }
                    else if ( (LA382_2==EOF||LA382_2==47||LA382_2==88||LA382_2==237) ) {
                        alt382=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 382, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 33:
                case 47:
                case 88:
                case 226:
                case 227:
                case 237:
                    {
                    alt382=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                    {
                    alt382=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 382, 0, input);

                    throw nvae;
                }

                switch (alt382) {
                    case 1 :
                        // InternalKim.g:5753:11: ( (lv_unit_16_0= ruleUnit ) )
                        {
                        // InternalKim.g:5753:11: ( (lv_unit_16_0= ruleUnit ) )
                        // InternalKim.g:5754:12: (lv_unit_16_0= ruleUnit )
                        {
                        // InternalKim.g:5754:12: (lv_unit_16_0= ruleUnit )
                        // InternalKim.g:5755:13: lv_unit_16_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_16_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:5773:11: ( (lv_currency_17_0= ruleCurrency ) )
                        {
                        // InternalKim.g:5773:11: ( (lv_currency_17_0= ruleCurrency ) )
                        // InternalKim.g:5774:12: (lv_currency_17_0= ruleCurrency )
                        {
                        // InternalKim.g:5774:12: (lv_currency_17_0= ruleCurrency )
                        // InternalKim.g:5775:13: lv_currency_17_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_3_4_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_17_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:5795:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                {
                // InternalKim.g:5795:9: (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) )
                // InternalKim.g:5796:10: otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) )
                {
                otherlv_18=(Token)match(input,95,FOLLOW_175); if (state.failed) return ;
                // InternalKim.g:5800:10: ( (lv_unit_19_0= ruleUnit ) )
                // InternalKim.g:5801:11: (lv_unit_19_0= ruleUnit )
                {
                // InternalKim.g:5801:11: (lv_unit_19_0= ruleUnit )
                // InternalKim.g:5802:12: lv_unit_19_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getObservableSemanticsAccess().getUnitUnitParserRuleCall_3_4_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_19_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred226_InternalKim

    // $ANTLR start synpred228_InternalKim
    public final void synpred228_InternalKim_fragment() throws RecognitionException {   
        Token lv_optional_20_0=null;
        Token otherlv_21=null;

        // InternalKim.g:5826:4: ( ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) )
        // InternalKim.g:5826:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        {
        // InternalKim.g:5826:4: ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) )
        // InternalKim.g:5827:5: {...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred228_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:5827:116: ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) )
        // InternalKim.g:5828:6: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:5831:9: ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) )
        // InternalKim.g:5831:10: {...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred228_InternalKim", "true");
        }
        // InternalKim.g:5831:19: ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' )
        int alt384=2;
        int LA384_0 = input.LA(1);

        if ( (LA384_0==96) ) {
            alt384=1;
        }
        else if ( (LA384_0==97) ) {
            alt384=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 384, 0, input);

            throw nvae;
        }
        switch (alt384) {
            case 1 :
                // InternalKim.g:5831:20: ( (lv_optional_20_0= 'optional' ) )
                {
                // InternalKim.g:5831:20: ( (lv_optional_20_0= 'optional' ) )
                // InternalKim.g:5832:10: (lv_optional_20_0= 'optional' )
                {
                // InternalKim.g:5832:10: (lv_optional_20_0= 'optional' )
                // InternalKim.g:5833:11: lv_optional_20_0= 'optional'
                {
                lv_optional_20_0=(Token)match(input,96,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:5846:9: otherlv_21= 'required'
                {
                otherlv_21=(Token)match(input,97,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred228_InternalKim

    // $ANTLR start synpred229_InternalKim
    public final void synpred229_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_23=null;
        EObject lv_from_22_0 = null;

        EObject lv_to_24_0 = null;


        // InternalKim.g:5856:4: ( ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:5856:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:5856:4: ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:5857:5: {...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred229_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:5857:116: ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) )
        // InternalKim.g:5858:6: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:5861:9: ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) )
        // InternalKim.g:5861:10: {...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred229_InternalKim", "true");
        }
        // InternalKim.g:5861:19: ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) )
        // InternalKim.g:5861:20: ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) )
        {
        // InternalKim.g:5861:20: ( (lv_from_22_0= ruleNumber ) )
        // InternalKim.g:5862:10: (lv_from_22_0= ruleNumber )
        {
        // InternalKim.g:5862:10: (lv_from_22_0= ruleNumber )
        // InternalKim.g:5863:11: lv_from_22_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getFromNumberParserRuleCall_3_6_0_0());
          										
        }
        pushFollow(FOLLOW_22);
        lv_from_22_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_23=(Token)match(input,39,FOLLOW_28); if (state.failed) return ;
        // InternalKim.g:5884:9: ( (lv_to_24_0= ruleNumber ) )
        // InternalKim.g:5885:10: (lv_to_24_0= ruleNumber )
        {
        // InternalKim.g:5885:10: (lv_to_24_0= ruleNumber )
        // InternalKim.g:5886:11: lv_to_24_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getObservableSemanticsAccess().getToNumberParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_24_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred229_InternalKim

    // $ANTLR start synpred230_InternalKim
    public final void synpred230_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_25=null;
        Token lv_name_26_0=null;

        // InternalKim.g:5909:4: ( ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:5909:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:5909:4: ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:5910:5: {...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred230_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:5910:116: ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:5911:6: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:5914:9: ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:5914:10: {...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred230_InternalKim", "true");
        }
        // InternalKim.g:5914:19: (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:5914:20: otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_25=(Token)match(input,98,FOLLOW_35); if (state.failed) return ;
        // InternalKim.g:5918:9: ( (lv_name_26_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:5919:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:5919:10: (lv_name_26_0= RULE_LOWERCASE_ID )
        // InternalKim.g:5920:11: lv_name_26_0= RULE_LOWERCASE_ID
        {
        lv_name_26_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred230_InternalKim

    // $ANTLR start synpred231_InternalKim
    public final void synpred231_InternalKim_fragment() throws RecognitionException {   
        Token lv_modelReference_0_1=null;

        // InternalKim.g:5974:6: (lv_modelReference_0_1= RULE_LOWERCASE_ID )
        // InternalKim.g:5974:6: lv_modelReference_0_1= RULE_LOWERCASE_ID
        {
        lv_modelReference_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred231_InternalKim

    // $ANTLR start synpred234_InternalKim
    public final void synpred234_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:6075:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:6075:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:6075:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:6076:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred234_InternalKim

    // $ANTLR start synpred235_InternalKim
    public final void synpred235_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_3=null;
        EObject lv_inherency_4_0 = null;


        // InternalKim.g:6100:4: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6100:4: ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6101:5: {...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred235_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0)");
        }
        // InternalKim.g:6101:115: ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6102:6: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0);
        // InternalKim.g:6105:9: ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6105:10: {...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred235_InternalKim", "true");
        }
        // InternalKim.g:6105:19: (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6105:20: otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_3=(Token)match(input,99,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6109:9: ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6110:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6110:10: (lv_inherency_4_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6111:11: lv_inherency_4_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getInherencySimpleConceptDeclarationParserRuleCall_2_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inherency_4_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred235_InternalKim

    // $ANTLR start synpred236_InternalKim
    public final void synpred236_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_5=null;
        EObject lv_motivation_6_0 = null;


        // InternalKim.g:6134:4: ( ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6134:4: ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6135:5: {...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred236_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1)");
        }
        // InternalKim.g:6135:115: ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6136:6: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1);
        // InternalKim.g:6139:9: ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6139:10: {...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred236_InternalKim", "true");
        }
        // InternalKim.g:6139:19: (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6139:20: otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_5=(Token)match(input,100,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6143:9: ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6144:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6144:10: (lv_motivation_6_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6145:11: lv_motivation_6_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getMotivationSimpleConceptDeclarationParserRuleCall_2_1_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_motivation_6_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred236_InternalKim

    // $ANTLR start synpred237_InternalKim
    public final void synpred237_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        EObject lv_compresent_8_0 = null;


        // InternalKim.g:6168:4: ( ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6168:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6168:4: ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6169:5: {...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred237_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2)");
        }
        // InternalKim.g:6169:115: ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6170:6: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2);
        // InternalKim.g:6173:9: ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6173:10: {...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred237_InternalKim", "true");
        }
        // InternalKim.g:6173:19: (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6173:20: otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_7=(Token)match(input,28,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6177:9: ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6178:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6178:10: (lv_compresent_8_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6179:11: lv_compresent_8_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCompresentSimpleConceptDeclarationParserRuleCall_2_2_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_compresent_8_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred237_InternalKim

    // $ANTLR start synpred238_InternalKim
    public final void synpred238_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_9=null;
        Token otherlv_10=null;
        EObject lv_causant_11_0 = null;


        // InternalKim.g:6202:4: ( ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6202:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6202:4: ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6203:5: {...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred238_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3)");
        }
        // InternalKim.g:6203:115: ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6204:6: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3);
        // InternalKim.g:6207:9: ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6207:10: {...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred238_InternalKim", "true");
        }
        // InternalKim.g:6207:19: (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6207:20: otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_9=(Token)match(input,101,FOLLOW_90); if (state.failed) return ;
        otherlv_10=(Token)match(input,93,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6215:9: ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6216:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6216:10: (lv_causant_11_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6217:11: lv_causant_11_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausantSimpleConceptDeclarationParserRuleCall_2_3_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_causant_11_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred238_InternalKim

    // $ANTLR start synpred239_InternalKim
    public final void synpred239_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token otherlv_13=null;
        EObject lv_adjacent_14_0 = null;


        // InternalKim.g:6240:4: ( ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6240:4: ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6241:5: {...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred239_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4)");
        }
        // InternalKim.g:6241:115: ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6242:6: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4);
        // InternalKim.g:6245:9: ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6245:10: {...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred239_InternalKim", "true");
        }
        // InternalKim.g:6245:19: (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6245:20: otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_12=(Token)match(input,102,FOLLOW_22); if (state.failed) return ;
        otherlv_13=(Token)match(input,39,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6253:9: ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6254:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6254:10: (lv_adjacent_14_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6255:11: lv_adjacent_14_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getAdjacentSimpleConceptDeclarationParserRuleCall_2_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_adjacent_14_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred239_InternalKim

    // $ANTLR start synpred240_InternalKim
    public final void synpred240_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_15=null;
        Token otherlv_16=null;
        EObject lv_container_17_0 = null;


        // InternalKim.g:6278:4: ( ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6278:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6278:4: ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6279:5: {...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred240_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5)");
        }
        // InternalKim.g:6279:115: ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6280:6: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5);
        // InternalKim.g:6283:9: ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6283:10: {...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred240_InternalKim", "true");
        }
        // InternalKim.g:6283:19: (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6283:20: otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_15=(Token)match(input,103,FOLLOW_91); if (state.failed) return ;
        otherlv_16=(Token)match(input,45,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6291:9: ( (lv_container_17_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6292:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6292:10: (lv_container_17_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6293:11: lv_container_17_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainerSimpleConceptDeclarationParserRuleCall_2_5_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_container_17_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred240_InternalKim

    // $ANTLR start synpred241_InternalKim
    public final void synpred241_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        EObject lv_contained_19_0 = null;


        // InternalKim.g:6316:4: ( ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6316:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6316:4: ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6317:5: {...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6)");
        }
        // InternalKim.g:6317:115: ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6318:6: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6);
        // InternalKim.g:6321:9: ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6321:10: {...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred241_InternalKim", "true");
        }
        // InternalKim.g:6321:19: (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6321:20: otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_18=(Token)match(input,104,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6325:9: ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6326:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6326:10: (lv_contained_19_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6327:11: lv_contained_19_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getContainedSimpleConceptDeclarationParserRuleCall_2_6_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_contained_19_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred241_InternalKim

    // $ANTLR start synpred242_InternalKim
    public final void synpred242_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_20=null;
        EObject lv_caused_21_0 = null;


        // InternalKim.g:6350:4: ( ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:6350:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:6350:4: ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:6351:5: {...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred242_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7)");
        }
        // InternalKim.g:6351:115: ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) )
        // InternalKim.g:6352:6: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7);
        // InternalKim.g:6355:9: ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) )
        // InternalKim.g:6355:10: {...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred242_InternalKim", "true");
        }
        // InternalKim.g:6355:19: (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:6355:20: otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
        {
        otherlv_20=(Token)match(input,105,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:6359:9: ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:6360:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:6360:10: (lv_caused_21_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:6361:11: lv_caused_21_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptDeclarationAccess().getCausedSimpleConceptDeclarationParserRuleCall_2_7_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_caused_21_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred242_InternalKim

    // $ANTLR start synpred289_InternalKim
    public final void synpred289_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_36=null;
        EObject lv_other_37_0 = null;


        // InternalKim.g:7708:5: ( ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7708:5: ( ( 'in' )=>otherlv_36= 'in' ) ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7708:5: ( ( 'in' )=>otherlv_36= 'in' )
        // InternalKim.g:7709:6: ( 'in' )=>otherlv_36= 'in'
        {
        otherlv_36=(Token)match(input,45,FOLLOW_19); if (state.failed) return ;

        }

        // InternalKim.g:7715:5: ( (lv_other_37_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7716:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7716:6: (lv_other_37_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7717:7: lv_other_37_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_9_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_37_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred289_InternalKim

    // $ANTLR start synpred294_InternalKim
    public final void synpred294_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_46=null;
        EObject lv_other_47_0 = null;


        // InternalKim.g:7842:5: ( ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) ) )
        // InternalKim.g:7842:5: ( ( 'over' )=>otherlv_46= 'over' ) ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
        {
        // InternalKim.g:7842:5: ( ( 'over' )=>otherlv_46= 'over' )
        // InternalKim.g:7843:6: ( 'over' )=>otherlv_46= 'over'
        {
        otherlv_46=(Token)match(input,54,FOLLOW_19); if (state.failed) return ;

        }

        // InternalKim.g:7849:5: ( (lv_other_47_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:7850:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:7850:6: (lv_other_47_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:7851:7: lv_other_47_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          							newCompositeNode(grammarAccess.getConceptAccess().getOtherSimpleConceptDeclarationParserRuleCall_11_3_1_0());
          						
        }
        pushFollow(FOLLOW_2);
        lv_other_47_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred294_InternalKim

    // $ANTLR start synpred297_InternalKim
    public final void synpred297_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_0=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:7999:4: ( ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) ) )
        // InternalKim.g:7999:4: ( (lv_operators_1_0= 'or' ) ) ( (lv_operands_2_0= ruleFactor ) )
        {
        // InternalKim.g:7999:4: ( (lv_operators_1_0= 'or' ) )
        // InternalKim.g:8000:5: (lv_operators_1_0= 'or' )
        {
        // InternalKim.g:8000:5: (lv_operators_1_0= 'or' )
        // InternalKim.g:8001:6: lv_operators_1_0= 'or'
        {
        lv_operators_1_0=(Token)match(input,130,FOLLOW_19); if (state.failed) return ;

        }


        }

        // InternalKim.g:8013:4: ( (lv_operands_2_0= ruleFactor ) )
        // InternalKim.g:8014:5: (lv_operands_2_0= ruleFactor )
        {
        // InternalKim.g:8014:5: (lv_operands_2_0= ruleFactor )
        // InternalKim.g:8015:6: lv_operands_2_0= ruleFactor
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getTermAccess().getOperandsFactorParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleFactor();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred297_InternalKim

    // $ANTLR start synpred299_InternalKim
    public final void synpred299_InternalKim_fragment() throws RecognitionException {   
        Token lv_operators_1_1=null;
        Token lv_operators_1_2=null;
        EObject lv_operands_2_0 = null;


        // InternalKim.g:8064:4: ( ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) ) )
        // InternalKim.g:8064:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) ) ( (lv_operands_2_0= ruleTerm ) )
        {
        // InternalKim.g:8064:4: ( ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) ) )
        // InternalKim.g:8065:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        {
        // InternalKim.g:8065:5: ( (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' ) )
        // InternalKim.g:8066:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        {
        // InternalKim.g:8066:6: (lv_operators_1_1= 'and' | lv_operators_1_2= 'follows' )
        int alt408=2;
        int LA408_0 = input.LA(1);

        if ( (LA408_0==131) ) {
            alt408=1;
        }
        else if ( (LA408_0==132) ) {
            alt408=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 408, 0, input);

            throw nvae;
        }
        switch (alt408) {
            case 1 :
                // InternalKim.g:8067:7: lv_operators_1_1= 'and'
                {
                lv_operators_1_1=(Token)match(input,131,FOLLOW_19); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:8078:7: lv_operators_1_2= 'follows'
                {
                lv_operators_1_2=(Token)match(input,132,FOLLOW_19); if (state.failed) return ;

                }
                break;

        }


        }


        }

        // InternalKim.g:8091:4: ( (lv_operands_2_0= ruleTerm ) )
        // InternalKim.g:8092:5: (lv_operands_2_0= ruleTerm )
        {
        // InternalKim.g:8092:5: (lv_operands_2_0= ruleTerm )
        // InternalKim.g:8093:6: lv_operands_2_0= ruleTerm
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getFactorAccess().getOperandsTermParserRuleCall_1_1_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_operands_2_0=ruleTerm();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred299_InternalKim

    // $ANTLR start synpred301_InternalKim
    public final void synpred301_InternalKim_fragment() throws RecognitionException {   
        EObject lv_main_1_0 = null;


        // InternalKim.g:8149:4: ( (lv_main_1_0= ruleConcept ) )
        // InternalKim.g:8149:4: (lv_main_1_0= ruleConcept )
        {
        // InternalKim.g:8149:4: (lv_main_1_0= ruleConcept )
        // InternalKim.g:8150:5: lv_main_1_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getSimpleConceptDeclarationAccess().getMainConceptParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_main_1_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred301_InternalKim

    // $ANTLR start synpred311_InternalKim
    public final void synpred311_InternalKim_fragment() throws RecognitionException {   
        Token lv_abstract_2_0=null;

        // InternalKim.g:8464:4: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) )
        // InternalKim.g:8464:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        {
        // InternalKim.g:8464:4: ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) )
        // InternalKim.g:8465:5: {...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred311_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:8465:113: ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) )
        // InternalKim.g:8466:6: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:8469:9: ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) )
        // InternalKim.g:8469:10: {...}? => ( (lv_abstract_2_0= 'abstract' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred311_InternalKim", "true");
        }
        // InternalKim.g:8469:19: ( (lv_abstract_2_0= 'abstract' ) )
        // InternalKim.g:8469:20: (lv_abstract_2_0= 'abstract' )
        {
        // InternalKim.g:8469:20: (lv_abstract_2_0= 'abstract' )
        // InternalKim.g:8470:10: lv_abstract_2_0= 'abstract'
        {
        lv_abstract_2_0=(Token)match(input,138,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred311_InternalKim

    // $ANTLR start synpred312_InternalKim
    public final void synpred312_InternalKim_fragment() throws RecognitionException {   
        Token lv_deniable_3_0=null;

        // InternalKim.g:8487:4: ( ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) )
        // InternalKim.g:8487:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        {
        // InternalKim.g:8487:4: ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) )
        // InternalKim.g:8488:5: {...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred312_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:8488:113: ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) )
        // InternalKim.g:8489:6: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:8492:9: ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) )
        // InternalKim.g:8492:10: {...}? => ( (lv_deniable_3_0= 'deniable' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred312_InternalKim", "true");
        }
        // InternalKim.g:8492:19: ( (lv_deniable_3_0= 'deniable' ) )
        // InternalKim.g:8492:20: (lv_deniable_3_0= 'deniable' )
        {
        // InternalKim.g:8492:20: (lv_deniable_3_0= 'deniable' )
        // InternalKim.g:8493:10: lv_deniable_3_0= 'deniable'
        {
        lv_deniable_3_0=(Token)match(input,139,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred312_InternalKim

    // $ANTLR start synpred313_InternalKim
    public final void synpred313_InternalKim_fragment() throws RecognitionException {   
        Token lv_subjective_4_0=null;

        // InternalKim.g:8510:4: ( ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) )
        // InternalKim.g:8510:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        {
        // InternalKim.g:8510:4: ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) )
        // InternalKim.g:8511:5: {...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred313_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:8511:113: ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) )
        // InternalKim.g:8512:6: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:8515:9: ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) )
        // InternalKim.g:8515:10: {...}? => ( (lv_subjective_4_0= 'subjective' ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred313_InternalKim", "true");
        }
        // InternalKim.g:8515:19: ( (lv_subjective_4_0= 'subjective' ) )
        // InternalKim.g:8515:20: (lv_subjective_4_0= 'subjective' )
        {
        // InternalKim.g:8515:20: (lv_subjective_4_0= 'subjective' )
        // InternalKim.g:8516:10: lv_subjective_4_0= 'subjective'
        {
        lv_subjective_4_0=(Token)match(input,140,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred313_InternalKim

    // $ANTLR start synpred317_InternalKim
    public final void synpred317_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:8598:11: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )
        // InternalKim.g:8598:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        {
        // InternalKim.g:8598:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
        // InternalKim.g:8599:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
          											
        }
        pushFollow(FOLLOW_2);
        lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred317_InternalKim

    // $ANTLR start synpred318_InternalKim
    public final void synpred318_InternalKim_fragment() throws RecognitionException {   
        Token lv_agentSpecifier_5_1=null;
        Token lv_agentSpecifier_5_2=null;
        Token lv_agentSpecifier_5_3=null;
        AntlrDatatypeRuleToken lv_propertySpecifiers_6_0 = null;

        AntlrDatatypeRuleToken lv_propertySpecifiers_7_0 = null;


        // InternalKim.g:8533:4: ( ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )
        // InternalKim.g:8533:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        {
        // InternalKim.g:8533:4: ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) )
        // InternalKim.g:8534:5: {...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred318_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:8534:113: ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) )
        // InternalKim.g:8535:6: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:8538:9: ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) )
        // InternalKim.g:8538:10: {...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred318_InternalKim", "true");
        }
        // InternalKim.g:8538:19: ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) )
        int alt419=2;
        int LA419_0 = input.LA(1);

        if ( ((LA419_0>=133 && LA419_0<=135)) ) {
            alt419=1;
        }
        else if ( ((LA419_0>=216 && LA419_0<=219)) ) {
            alt419=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 419, 0, input);

            throw nvae;
        }
        switch (alt419) {
            case 1 :
                // InternalKim.g:8538:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                {
                // InternalKim.g:8538:20: ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) )
                // InternalKim.g:8539:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                {
                // InternalKim.g:8539:10: ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) )
                // InternalKim.g:8540:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                {
                // InternalKim.g:8540:11: (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' )
                int alt417=3;
                switch ( input.LA(1) ) {
                case 133:
                    {
                    alt417=1;
                    }
                    break;
                case 134:
                    {
                    alt417=2;
                    }
                    break;
                case 135:
                    {
                    alt417=3;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 417, 0, input);

                    throw nvae;
                }

                switch (alt417) {
                    case 1 :
                        // InternalKim.g:8541:12: lv_agentSpecifier_5_1= 'deliberative'
                        {
                        lv_agentSpecifier_5_1=(Token)match(input,133,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 2 :
                        // InternalKim.g:8552:12: lv_agentSpecifier_5_2= 'interactive'
                        {
                        lv_agentSpecifier_5_2=(Token)match(input,134,FOLLOW_2); if (state.failed) return ;

                        }
                        break;
                    case 3 :
                        // InternalKim.g:8563:12: lv_agentSpecifier_5_3= 'reactive'
                        {
                        lv_agentSpecifier_5_3=(Token)match(input,135,FOLLOW_2); if (state.failed) return ;

                        }
                        break;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8577:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                {
                // InternalKim.g:8577:9: ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* )
                // InternalKim.g:8578:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                {
                // InternalKim.g:8578:10: ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) )
                // InternalKim.g:8579:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                {
                // InternalKim.g:8579:11: (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE )
                // InternalKim.g:8580:12: lv_propertySpecifiers_6_0= rulePROPERTY_TYPE
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_0_0());
                  											
                }
                pushFollow(FOLLOW_176);
                lv_propertySpecifiers_6_0=rulePROPERTY_TYPE();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:8597:10: ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )*
                loop418:
                do {
                    int alt418=2;
                    int LA418_0 = input.LA(1);

                    if ( ((LA418_0>=216 && LA418_0<=219)) ) {
                        alt418=1;
                    }


                    switch (alt418) {
                	case 1 :
                	    // InternalKim.g:8598:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    {
                	    // InternalKim.g:8598:11: (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE )
                	    // InternalKim.g:8599:12: lv_propertySpecifiers_7_0= rulePROPERTY_TYPE
                	    {
                	    if ( state.backtracking==0 ) {

                	      												newCompositeNode(grammarAccess.getConceptStatementAccess().getPropertySpecifiersPROPERTY_TYPEParserRuleCall_1_3_1_1_0());
                	      											
                	    }
                	    pushFollow(FOLLOW_176);
                	    lv_propertySpecifiers_7_0=rulePROPERTY_TYPE();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }
                	    break;

                	default :
                	    break loop418;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred318_InternalKim

    // $ANTLR start synpred327_InternalKim
    public final void synpred327_InternalKim_fragment() throws RecognitionException {   
        Token lv_docstring_11_0=null;

        // InternalKim.g:8907:4: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) )
        // InternalKim.g:8907:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        {
        // InternalKim.g:8907:4: ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) )
        // InternalKim.g:8908:5: {...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred327_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0)");
        }
        // InternalKim.g:8908:117: ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) )
        // InternalKim.g:8909:6: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0);
        // InternalKim.g:8912:9: ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) )
        // InternalKim.g:8912:10: {...}? => ( (lv_docstring_11_0= RULE_STRING ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred327_InternalKim", "true");
        }
        // InternalKim.g:8912:19: ( (lv_docstring_11_0= RULE_STRING ) )
        // InternalKim.g:8912:20: (lv_docstring_11_0= RULE_STRING )
        {
        // InternalKim.g:8912:20: (lv_docstring_11_0= RULE_STRING )
        // InternalKim.g:8913:10: lv_docstring_11_0= RULE_STRING
        {
        lv_docstring_11_0=(Token)match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred327_InternalKim

    // $ANTLR start synpred334_InternalKim
    public final void synpred334_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_12=null;
        Token lv_coreConcept_13_0=null;
        Token lv_alias_14_0=null;
        Token lv_nothing_15_0=null;
        Token lv_connectors_17_1=null;
        Token lv_connectors_17_2=null;
        Token lv_connectors_17_3=null;
        EObject lv_parents_16_0 = null;

        EObject lv_parents_18_0 = null;


        // InternalKim.g:8934:4: ( ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) )
        // InternalKim.g:8934:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        {
        // InternalKim.g:8934:4: ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:8935:5: {...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred334_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1)");
        }
        // InternalKim.g:8935:117: ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:8936:6: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1);
        // InternalKim.g:8939:9: ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:8939:10: {...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred334_InternalKim", "true");
        }
        // InternalKim.g:8939:19: ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:8939:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        {
        // InternalKim.g:8939:20: ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) )
        int alt427=2;
        int LA427_0 = input.LA(1);

        if ( (LA427_0==141) ) {
            alt427=1;
        }
        else if ( (LA427_0==143) ) {
            alt427=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 427, 0, input);

            throw nvae;
        }
        switch (alt427) {
            case 1 :
                // InternalKim.g:8940:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                {
                // InternalKim.g:8940:10: (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? )
                // InternalKim.g:8941:11: otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )?
                {
                otherlv_12=(Token)match(input,141,FOLLOW_115); if (state.failed) return ;
                // InternalKim.g:8945:11: ( (lv_coreConcept_13_0= 'core' ) )?
                int alt426=2;
                int LA426_0 = input.LA(1);

                if ( (LA426_0==142) ) {
                    alt426=1;
                }
                switch (alt426) {
                    case 1 :
                        // InternalKim.g:8946:12: (lv_coreConcept_13_0= 'core' )
                        {
                        // InternalKim.g:8946:12: (lv_coreConcept_13_0= 'core' )
                        // InternalKim.g:8947:13: lv_coreConcept_13_0= 'core'
                        {
                        lv_coreConcept_13_0=(Token)match(input,142,FOLLOW_116); if (state.failed) return ;

                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8961:10: ( (lv_alias_14_0= 'equals' ) )
                {
                // InternalKim.g:8961:10: ( (lv_alias_14_0= 'equals' ) )
                // InternalKim.g:8962:11: (lv_alias_14_0= 'equals' )
                {
                // InternalKim.g:8962:11: (lv_alias_14_0= 'equals' )
                // InternalKim.g:8963:12: lv_alias_14_0= 'equals'
                {
                lv_alias_14_0=(Token)match(input,143,FOLLOW_116); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:8976:9: ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) )
        int alt430=2;
        int LA430_0 = input.LA(1);

        if ( (LA430_0==144) ) {
            alt430=1;
        }
        else if ( ((LA430_0>=RULE_LOWERCASE_ID && LA430_0<=RULE_STRING)||LA430_0==RULE_CAMELCASE_ID||LA430_0==33||(LA430_0>=107 && LA430_0<=108)||(LA430_0>=115 && LA430_0<=116)||(LA430_0>=118 && LA430_0<=129)) ) {
            alt430=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 430, 0, input);

            throw nvae;
        }
        switch (alt430) {
            case 1 :
                // InternalKim.g:8977:10: ( (lv_nothing_15_0= 'nothing' ) )
                {
                // InternalKim.g:8977:10: ( (lv_nothing_15_0= 'nothing' ) )
                // InternalKim.g:8978:11: (lv_nothing_15_0= 'nothing' )
                {
                // InternalKim.g:8978:11: (lv_nothing_15_0= 'nothing' )
                // InternalKim.g:8979:12: lv_nothing_15_0= 'nothing'
                {
                lv_nothing_15_0=(Token)match(input,144,FOLLOW_2); if (state.failed) return ;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:8992:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:8992:10: ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:8993:11: ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:8993:11: ( (lv_parents_16_0= ruleConceptDeclaration ) )
                // InternalKim.g:8994:12: (lv_parents_16_0= ruleConceptDeclaration )
                {
                // InternalKim.g:8994:12: (lv_parents_16_0= ruleConceptDeclaration )
                // InternalKim.g:8995:13: lv_parents_16_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_0_0());
                  												
                }
                pushFollow(FOLLOW_177);
                lv_parents_16_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9012:11: ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )*
                loop429:
                do {
                    int alt429=2;
                    int LA429_0 = input.LA(1);

                    if ( (LA429_0==25||(LA429_0>=130 && LA429_0<=131)) ) {
                        alt429=1;
                    }


                    switch (alt429) {
                	case 1 :
                	    // InternalKim.g:9013:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    {
                	    // InternalKim.g:9013:12: ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) )
                	    // InternalKim.g:9014:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    {
                	    // InternalKim.g:9014:13: ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) )
                	    // InternalKim.g:9015:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    {
                	    // InternalKim.g:9015:14: (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' )
                	    int alt428=3;
                	    switch ( input.LA(1) ) {
                	    case 25:
                	        {
                	        alt428=1;
                	        }
                	        break;
                	    case 130:
                	        {
                	        alt428=2;
                	        }
                	        break;
                	    case 131:
                	        {
                	        alt428=3;
                	        }
                	        break;
                	    default:
                	        if (state.backtracking>0) {state.failed=true; return ;}
                	        NoViableAltException nvae =
                	            new NoViableAltException("", 428, 0, input);

                	        throw nvae;
                	    }

                	    switch (alt428) {
                	        case 1 :
                	            // InternalKim.g:9016:15: lv_connectors_17_1= ','
                	            {
                	            lv_connectors_17_1=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;

                	            }
                	            break;
                	        case 2 :
                	            // InternalKim.g:9027:15: lv_connectors_17_2= 'or'
                	            {
                	            lv_connectors_17_2=(Token)match(input,130,FOLLOW_19); if (state.failed) return ;

                	            }
                	            break;
                	        case 3 :
                	            // InternalKim.g:9038:15: lv_connectors_17_3= 'and'
                	            {
                	            lv_connectors_17_3=(Token)match(input,131,FOLLOW_19); if (state.failed) return ;

                	            }
                	            break;

                	    }


                	    }


                	    }

                	    // InternalKim.g:9051:12: ( (lv_parents_18_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9052:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9052:13: (lv_parents_18_0= ruleConceptDeclaration )
                	    // InternalKim.g:9053:14: lv_parents_18_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      														newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getParentsConceptDeclarationParserRuleCall_3_1_1_1_1_1_0());
                	      													
                	    }
                	    pushFollow(FOLLOW_177);
                	    lv_parents_18_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop429;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred334_InternalKim

    // $ANTLR start synpred338_InternalKim
    public final void synpred338_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_19=null;
        Token otherlv_21=null;
        Token lv_specific_23_0=null;
        Token otherlv_25=null;
        EObject lv_contextualizedTraits_20_0 = null;

        EObject lv_contextualizedTraits_22_0 = null;

        EObject lv_contextualizesTraits_24_0 = null;

        EObject lv_contextualizesTraits_26_0 = null;


        // InternalKim.g:9079:4: ( ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9079:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:9079:4: ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9080:5: {...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred338_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2)");
        }
        // InternalKim.g:9080:117: ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9081:6: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2);
        // InternalKim.g:9084:9: ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9084:10: {...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred338_InternalKim", "true");
        }
        // InternalKim.g:9084:19: ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) )
        int alt434=2;
        int LA434_0 = input.LA(1);

        if ( (LA434_0==145) ) {
            alt434=1;
        }
        else if ( (LA434_0==146) ) {
            alt434=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 434, 0, input);

            throw nvae;
        }
        switch (alt434) {
            case 1 :
                // InternalKim.g:9084:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                {
                // InternalKim.g:9084:20: (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* )
                // InternalKim.g:9085:10: otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                {
                otherlv_19=(Token)match(input,145,FOLLOW_6); if (state.failed) return ;
                // InternalKim.g:9089:10: ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) )
                // InternalKim.g:9090:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                {
                // InternalKim.g:9090:11: (lv_contextualizedTraits_20_0= ruleObservableSemantics )
                // InternalKim.g:9091:12: lv_contextualizedTraits_20_0= ruleObservableSemantics
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_1_0());
                  											
                }
                pushFollow(FOLLOW_24);
                lv_contextualizedTraits_20_0=ruleObservableSemantics();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9108:10: (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )*
                loop432:
                do {
                    int alt432=2;
                    int LA432_0 = input.LA(1);

                    if ( (LA432_0==25) ) {
                        alt432=1;
                    }


                    switch (alt432) {
                	case 1 :
                	    // InternalKim.g:9109:11: otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    {
                	    otherlv_21=(Token)match(input,25,FOLLOW_6); if (state.failed) return ;
                	    // InternalKim.g:9113:11: ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) )
                	    // InternalKim.g:9114:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    {
                	    // InternalKim.g:9114:12: (lv_contextualizedTraits_22_0= ruleObservableSemantics )
                	    // InternalKim.g:9115:13: lv_contextualizedTraits_22_0= ruleObservableSemantics
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizedTraitsObservableSemanticsParserRuleCall_3_2_0_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_24);
                	    lv_contextualizedTraits_22_0=ruleObservableSemantics();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop432;
                    }
                } while (true);


                }


                }
                break;
            case 2 :
                // InternalKim.g:9135:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                {
                // InternalKim.g:9135:9: ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* )
                // InternalKim.g:9136:10: ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                {
                // InternalKim.g:9136:10: ( (lv_specific_23_0= 'exposing' ) )
                // InternalKim.g:9137:11: (lv_specific_23_0= 'exposing' )
                {
                // InternalKim.g:9137:11: (lv_specific_23_0= 'exposing' )
                // InternalKim.g:9138:12: lv_specific_23_0= 'exposing'
                {
                lv_specific_23_0=(Token)match(input,146,FOLLOW_19); if (state.failed) return ;

                }


                }

                // InternalKim.g:9150:10: ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) )
                // InternalKim.g:9151:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9151:11: (lv_contextualizesTraits_24_0= ruleConceptDeclaration )
                // InternalKim.g:9152:12: lv_contextualizesTraits_24_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_1_0());
                  											
                }
                pushFollow(FOLLOW_24);
                lv_contextualizesTraits_24_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9169:10: (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )*
                loop433:
                do {
                    int alt433=2;
                    int LA433_0 = input.LA(1);

                    if ( (LA433_0==25) ) {
                        alt433=1;
                    }


                    switch (alt433) {
                	case 1 :
                	    // InternalKim.g:9170:11: otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_25=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
                	    // InternalKim.g:9174:11: ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9175:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9175:12: (lv_contextualizesTraits_26_0= ruleConceptDeclaration )
                	    // InternalKim.g:9176:13: lv_contextualizesTraits_26_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getContextualizesTraitsConceptDeclarationParserRuleCall_3_2_1_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_24);
                	    lv_contextualizesTraits_26_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop433;
                    }
                } while (true);


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred338_InternalKim

    // $ANTLR start synpred340_InternalKim
    public final void synpred340_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_27=null;
        Token otherlv_28=null;
        Token lv_definedAuthority_29_0=null;
        EObject lv_upperConcept_30_0 = null;


        // InternalKim.g:9201:4: ( ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) )
        // InternalKim.g:9201:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        {
        // InternalKim.g:9201:4: ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:9202:5: {...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred340_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3)");
        }
        // InternalKim.g:9202:117: ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:9203:6: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3);
        // InternalKim.g:9206:9: ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) )
        // InternalKim.g:9206:10: {...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred340_InternalKim", "true");
        }
        // InternalKim.g:9206:19: (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) )
        // InternalKim.g:9206:20: otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        {
        otherlv_27=(Token)match(input,147,FOLLOW_119); if (state.failed) return ;
        // InternalKim.g:9210:9: ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) )
        int alt435=2;
        int LA435_0 = input.LA(1);

        if ( (LA435_0==148) ) {
            alt435=1;
        }
        else if ( (LA435_0==RULE_LOWERCASE_ID||LA435_0==RULE_CAMELCASE_ID||LA435_0==33||(LA435_0>=107 && LA435_0<=108)||(LA435_0>=115 && LA435_0<=116)||(LA435_0>=118 && LA435_0<=129)) ) {
            alt435=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 435, 0, input);

            throw nvae;
        }
        switch (alt435) {
            case 1 :
                // InternalKim.g:9211:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                {
                // InternalKim.g:9211:10: (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) )
                // InternalKim.g:9212:11: otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                {
                otherlv_28=(Token)match(input,148,FOLLOW_120); if (state.failed) return ;
                // InternalKim.g:9216:11: ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) )
                // InternalKim.g:9217:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                {
                // InternalKim.g:9217:12: (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH )
                // InternalKim.g:9218:13: lv_definedAuthority_29_0= RULE_UPPERCASE_PATH
                {
                lv_definedAuthority_29_0=(Token)match(input,RULE_UPPERCASE_PATH,FOLLOW_2); if (state.failed) return ;

                }


                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:9236:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                {
                // InternalKim.g:9236:10: ( (lv_upperConcept_30_0= ruleConcept ) )
                // InternalKim.g:9237:11: (lv_upperConcept_30_0= ruleConcept )
                {
                // InternalKim.g:9237:11: (lv_upperConcept_30_0= ruleConcept )
                // InternalKim.g:9238:12: lv_upperConcept_30_0= ruleConcept
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getUpperConceptConceptParserRuleCall_3_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_upperConcept_30_0=ruleConcept();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred340_InternalKim

    // $ANTLR start synpred342_InternalKim
    public final void synpred342_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_31=null;
        Token otherlv_33=null;
        EObject lv_requirements_32_0 = null;

        EObject lv_requirements_34_0 = null;


        // InternalKim.g:9262:4: ( ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) )
        // InternalKim.g:9262:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        {
        // InternalKim.g:9262:4: ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) )
        // InternalKim.g:9263:5: {...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4)");
        }
        // InternalKim.g:9263:117: ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) )
        // InternalKim.g:9264:6: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4);
        // InternalKim.g:9267:9: ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) )
        // InternalKim.g:9267:10: {...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred342_InternalKim", "true");
        }
        // InternalKim.g:9267:19: (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* )
        // InternalKim.g:9267:20: otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        {
        otherlv_31=(Token)match(input,149,FOLLOW_121); if (state.failed) return ;
        // InternalKim.g:9271:9: ( (lv_requirements_32_0= ruleIdentityRequirement ) )
        // InternalKim.g:9272:10: (lv_requirements_32_0= ruleIdentityRequirement )
        {
        // InternalKim.g:9272:10: (lv_requirements_32_0= ruleIdentityRequirement )
        // InternalKim.g:9273:11: lv_requirements_32_0= ruleIdentityRequirement
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_requirements_32_0=ruleIdentityRequirement();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9290:9: (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )*
        loop436:
        do {
            int alt436=2;
            int LA436_0 = input.LA(1);

            if ( (LA436_0==25) ) {
                alt436=1;
            }


            switch (alt436) {
        	case 1 :
        	    // InternalKim.g:9291:10: otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    {
        	    otherlv_33=(Token)match(input,25,FOLLOW_121); if (state.failed) return ;
        	    // InternalKim.g:9295:10: ( (lv_requirements_34_0= ruleIdentityRequirement ) )
        	    // InternalKim.g:9296:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    {
        	    // InternalKim.g:9296:11: (lv_requirements_34_0= ruleIdentityRequirement )
        	    // InternalKim.g:9297:12: lv_requirements_34_0= ruleIdentityRequirement
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRequirementsIdentityRequirementParserRuleCall_3_4_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_requirements_34_0=ruleIdentityRequirement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop436;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred342_InternalKim

    // $ANTLR start synpred343_InternalKim
    public final void synpred343_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_35=null;
        EObject lv_describedQuality_36_0 = null;


        // InternalKim.g:9321:4: ( ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9321:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9321:4: ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9322:5: {...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred343_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5)");
        }
        // InternalKim.g:9322:117: ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9323:6: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5);
        // InternalKim.g:9326:9: ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9326:10: {...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred343_InternalKim", "true");
        }
        // InternalKim.g:9326:19: (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9326:20: otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        {
        otherlv_35=(Token)match(input,150,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9330:9: ( (lv_describedQuality_36_0= ruleConceptDeclaration ) )
        // InternalKim.g:9331:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9331:10: (lv_describedQuality_36_0= ruleConceptDeclaration )
        // InternalKim.g:9332:11: lv_describedQuality_36_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedQualityConceptDeclarationParserRuleCall_3_5_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedQuality_36_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred343_InternalKim

    // $ANTLR start synpred344_InternalKim
    public final void synpred344_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_37=null;
        Token otherlv_38=null;
        EObject lv_describedProportionality_39_0 = null;


        // InternalKim.g:9355:4: ( ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9355:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9355:4: ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9356:5: {...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred344_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6)");
        }
        // InternalKim.g:9356:117: ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9357:6: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6);
        // InternalKim.g:9360:9: ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9360:10: {...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred344_InternalKim", "true");
        }
        // InternalKim.g:9360:19: (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9360:20: otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        {
        otherlv_37=(Token)match(input,151,FOLLOW_65); if (state.failed) return ;
        otherlv_38=(Token)match(input,28,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9368:9: ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) )
        // InternalKim.g:9369:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9369:10: (lv_describedProportionality_39_0= ruleConceptDeclaration )
        // InternalKim.g:9370:11: lv_describedProportionality_39_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedProportionalityConceptDeclarationParserRuleCall_3_6_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedProportionality_39_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred344_InternalKim

    // $ANTLR start synpred345_InternalKim
    public final void synpred345_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_40=null;
        Token otherlv_41=null;
        EObject lv_describedInverseProportionalityQuality_42_0 = null;


        // InternalKim.g:9393:4: ( ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9393:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9393:4: ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9394:5: {...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred345_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7)");
        }
        // InternalKim.g:9394:117: ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9395:6: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7);
        // InternalKim.g:9398:9: ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9398:10: {...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred345_InternalKim", "true");
        }
        // InternalKim.g:9398:19: (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9398:20: otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        {
        otherlv_40=(Token)match(input,152,FOLLOW_65); if (state.failed) return ;
        otherlv_41=(Token)match(input,28,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9406:9: ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) )
        // InternalKim.g:9407:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9407:10: (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration )
        // InternalKim.g:9408:11: lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedInverseProportionalityQualityConceptDeclarationParserRuleCall_3_7_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedInverseProportionalityQuality_42_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred345_InternalKim

    // $ANTLR start synpred346_InternalKim
    public final void synpred346_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_43=null;
        EObject lv_describedNonzeroQuality_44_0 = null;


        // InternalKim.g:9431:4: ( ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9431:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9431:4: ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9432:5: {...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred346_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8)");
        }
        // InternalKim.g:9432:117: ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9433:6: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8);
        // InternalKim.g:9436:9: ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9436:10: {...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred346_InternalKim", "true");
        }
        // InternalKim.g:9436:19: (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9436:20: otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        {
        otherlv_43=(Token)match(input,153,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9440:9: ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) )
        // InternalKim.g:9441:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9441:10: (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration )
        // InternalKim.g:9442:11: lv_describedNonzeroQuality_44_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDescribedNonzeroQualityConceptDeclarationParserRuleCall_3_8_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_describedNonzeroQuality_44_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred346_InternalKim

    // $ANTLR start synpred347_InternalKim
    public final void synpred347_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_45=null;
        EObject lv_classifiesQuality_46_0 = null;


        // InternalKim.g:9465:4: ( ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9465:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9465:4: ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9466:5: {...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9)");
        }
        // InternalKim.g:9466:117: ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9467:6: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9);
        // InternalKim.g:9470:9: ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9470:10: {...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred347_InternalKim", "true");
        }
        // InternalKim.g:9470:19: (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9470:20: otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        {
        otherlv_45=(Token)match(input,154,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9474:9: ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) )
        // InternalKim.g:9475:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9475:10: (lv_classifiesQuality_46_0= ruleConceptDeclaration )
        // InternalKim.g:9476:11: lv_classifiesQuality_46_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getClassifiesQualityConceptDeclarationParserRuleCall_3_9_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_classifiesQuality_46_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred347_InternalKim

    // $ANTLR start synpred348_InternalKim
    public final void synpred348_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_47=null;
        EObject lv_discretizesQuality_48_0 = null;


        // InternalKim.g:9499:4: ( ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9499:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9499:4: ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9500:5: {...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred348_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10)");
        }
        // InternalKim.g:9500:118: ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9501:6: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10);
        // InternalKim.g:9504:9: ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9504:10: {...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred348_InternalKim", "true");
        }
        // InternalKim.g:9504:19: (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9504:20: otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        {
        otherlv_47=(Token)match(input,155,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9508:9: ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) )
        // InternalKim.g:9509:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9509:10: (lv_discretizesQuality_48_0= ruleConceptDeclaration )
        // InternalKim.g:9510:11: lv_discretizesQuality_48_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDiscretizesQualityConceptDeclarationParserRuleCall_3_10_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_discretizesQuality_48_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred348_InternalKim

    // $ANTLR start synpred350_InternalKim
    public final void synpred350_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_49=null;
        Token otherlv_51=null;
        EObject lv_actuallyInheritedTraits_50_0 = null;

        EObject lv_actuallyInheritedTraits_52_0 = null;


        // InternalKim.g:9533:4: ( ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9533:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:9533:4: ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9534:5: {...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred350_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11)");
        }
        // InternalKim.g:9534:118: ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9535:6: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11);
        // InternalKim.g:9538:9: ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9538:10: {...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred350_InternalKim", "true");
        }
        // InternalKim.g:9538:19: (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9538:20: otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_49=(Token)match(input,156,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9542:9: ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) )
        // InternalKim.g:9543:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9543:10: (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration )
        // InternalKim.g:9544:11: lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_actuallyInheritedTraits_50_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9561:9: (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )*
        loop437:
        do {
            int alt437=2;
            int LA437_0 = input.LA(1);

            if ( (LA437_0==25) ) {
                alt437=1;
            }


            switch (alt437) {
        	case 1 :
        	    // InternalKim.g:9562:10: otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_51=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:9566:10: ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9567:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9567:11: (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration )
        	    // InternalKim.g:9568:12: lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getActuallyInheritedTraitsConceptDeclarationParserRuleCall_3_11_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_actuallyInheritedTraits_52_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop437;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred350_InternalKim

    // $ANTLR start synpred355_InternalKim
    public final void synpred355_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_53=null;
        Token otherlv_54=null;
        Token otherlv_56=null;
        Token otherlv_58=null;
        Token otherlv_60=null;
        Token otherlv_62=null;
        Token otherlv_64=null;
        EObject lv_roles_55_0 = null;

        EObject lv_roles_57_0 = null;

        EObject lv_targetObservables_59_0 = null;

        EObject lv_targetObservables_61_0 = null;

        EObject lv_restrictedObservables_63_0 = null;

        EObject lv_restrictedObservables_65_0 = null;


        // InternalKim.g:9592:4: ( ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) )
        // InternalKim.g:9592:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        {
        // InternalKim.g:9592:4: ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9593:5: {...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12)");
        }
        // InternalKim.g:9593:118: ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9594:6: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12);
        // InternalKim.g:9597:9: ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9597:10: {...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred355_InternalKim", "true");
        }
        // InternalKim.g:9597:19: (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9597:20: otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        {
        otherlv_53=(Token)match(input,157,FOLLOW_122); if (state.failed) return ;
        otherlv_54=(Token)match(input,158,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9605:9: ( (lv_roles_55_0= ruleConceptDeclaration ) )
        // InternalKim.g:9606:10: (lv_roles_55_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9606:10: (lv_roles_55_0= ruleConceptDeclaration )
        // InternalKim.g:9607:11: lv_roles_55_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_2_0());
          										
        }
        pushFollow(FOLLOW_123);
        lv_roles_55_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9624:9: (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )*
        loop439:
        do {
            int alt439=2;
            int LA439_0 = input.LA(1);

            if ( (LA439_0==25) ) {
                alt439=1;
            }


            switch (alt439) {
        	case 1 :
        	    // InternalKim.g:9625:10: otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_56=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:9629:10: ( (lv_roles_57_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9630:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9630:11: (lv_roles_57_0= ruleConceptDeclaration )
        	    // InternalKim.g:9631:12: lv_roles_57_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRolesConceptDeclarationParserRuleCall_3_12_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_123);
        	    lv_roles_57_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop439;
            }
        } while (true);

        // InternalKim.g:9649:9: (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )?
        int alt441=2;
        int LA441_0 = input.LA(1);

        if ( (LA441_0==100) ) {
            alt441=1;
        }
        switch (alt441) {
            case 1 :
                // InternalKim.g:9650:10: otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_58=(Token)match(input,100,FOLLOW_19); if (state.failed) return ;
                // InternalKim.g:9654:10: ( (lv_targetObservables_59_0= ruleConceptDeclaration ) )
                // InternalKim.g:9655:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9655:11: (lv_targetObservables_59_0= ruleConceptDeclaration )
                // InternalKim.g:9656:12: lv_targetObservables_59_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_1_0());
                  											
                }
                pushFollow(FOLLOW_124);
                lv_targetObservables_59_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9673:10: (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )*
                loop440:
                do {
                    int alt440=2;
                    int LA440_0 = input.LA(1);

                    if ( (LA440_0==25) ) {
                        alt440=1;
                    }


                    switch (alt440) {
                	case 1 :
                	    // InternalKim.g:9674:11: otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_60=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
                	    // InternalKim.g:9678:11: ( (lv_targetObservables_61_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9679:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9679:12: (lv_targetObservables_61_0= ruleConceptDeclaration )
                	    // InternalKim.g:9680:13: lv_targetObservables_61_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTargetObservablesConceptDeclarationParserRuleCall_3_12_4_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_124);
                	    lv_targetObservables_61_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop440;
                    }
                } while (true);


                }
                break;

        }

        // InternalKim.g:9699:9: (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9700:10: otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_62=(Token)match(input,45,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9704:10: ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) )
        // InternalKim.g:9705:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9705:11: (lv_restrictedObservables_63_0= ruleConceptDeclaration )
        // InternalKim.g:9706:12: lv_restrictedObservables_63_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_1_0());
          											
        }
        pushFollow(FOLLOW_24);
        lv_restrictedObservables_63_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9723:10: (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )*
        loop442:
        do {
            int alt442=2;
            int LA442_0 = input.LA(1);

            if ( (LA442_0==25) ) {
                alt442=1;
            }


            switch (alt442) {
        	case 1 :
        	    // InternalKim.g:9724:11: otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_64=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:9728:11: ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9729:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9729:12: (lv_restrictedObservables_65_0= ruleConceptDeclaration )
        	    // InternalKim.g:9730:13: lv_restrictedObservables_65_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictedObservablesConceptDeclarationParserRuleCall_3_12_5_2_1_0());
        	      												
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_restrictedObservables_65_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop442;
            }
        } while (true);


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred355_InternalKim

    // $ANTLR start synpred359_InternalKim
    public final void synpred359_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_66=null;
        Token otherlv_68=null;
        Token otherlv_70=null;
        Token otherlv_72=null;
        EObject lv_conferredTraits_67_0 = null;

        EObject lv_conferredTraits_69_0 = null;

        EObject lv_conferredTargets_71_0 = null;

        EObject lv_conferredTargets_73_0 = null;


        // InternalKim.g:9755:4: ( ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) )
        // InternalKim.g:9755:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        {
        // InternalKim.g:9755:4: ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) )
        // InternalKim.g:9756:5: {...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13)");
        }
        // InternalKim.g:9756:118: ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) )
        // InternalKim.g:9757:6: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13);
        // InternalKim.g:9760:9: ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) )
        // InternalKim.g:9760:10: {...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred359_InternalKim", "true");
        }
        // InternalKim.g:9760:19: (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? )
        // InternalKim.g:9760:20: otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        {
        otherlv_66=(Token)match(input,159,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9764:9: ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) )
        // InternalKim.g:9765:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9765:10: (lv_conferredTraits_67_0= ruleConceptDeclaration )
        // InternalKim.g:9766:11: lv_conferredTraits_67_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_1_0());
          										
        }
        pushFollow(FOLLOW_178);
        lv_conferredTraits_67_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9783:9: (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )*
        loop444:
        do {
            int alt444=2;
            int LA444_0 = input.LA(1);

            if ( (LA444_0==25) ) {
                alt444=1;
            }


            switch (alt444) {
        	case 1 :
        	    // InternalKim.g:9784:10: otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_68=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:9788:10: ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9789:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9789:11: (lv_conferredTraits_69_0= ruleConceptDeclaration )
        	    // InternalKim.g:9790:12: lv_conferredTraits_69_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTraitsConceptDeclarationParserRuleCall_3_13_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_178);
        	    lv_conferredTraits_69_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop444;
            }
        } while (true);

        // InternalKim.g:9808:9: (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )?
        int alt446=2;
        int LA446_0 = input.LA(1);

        if ( (LA446_0==39) ) {
            alt446=1;
        }
        switch (alt446) {
            case 1 :
                // InternalKim.g:9809:10: otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                {
                otherlv_70=(Token)match(input,39,FOLLOW_19); if (state.failed) return ;
                // InternalKim.g:9813:10: ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) )
                // InternalKim.g:9814:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                {
                // InternalKim.g:9814:11: (lv_conferredTargets_71_0= ruleConceptDeclaration )
                // InternalKim.g:9815:12: lv_conferredTargets_71_0= ruleConceptDeclaration
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_1_0());
                  											
                }
                pushFollow(FOLLOW_24);
                lv_conferredTargets_71_0=ruleConceptDeclaration();

                state._fsp--;
                if (state.failed) return ;

                }


                }

                // InternalKim.g:9832:10: (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )*
                loop445:
                do {
                    int alt445=2;
                    int LA445_0 = input.LA(1);

                    if ( (LA445_0==25) ) {
                        alt445=1;
                    }


                    switch (alt445) {
                	case 1 :
                	    // InternalKim.g:9833:11: otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    {
                	    otherlv_72=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
                	    // InternalKim.g:9837:11: ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) )
                	    // InternalKim.g:9838:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    {
                	    // InternalKim.g:9838:12: (lv_conferredTargets_73_0= ruleConceptDeclaration )
                	    // InternalKim.g:9839:13: lv_conferredTargets_73_0= ruleConceptDeclaration
                	    {
                	    if ( state.backtracking==0 ) {

                	      													newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getConferredTargetsConceptDeclarationParserRuleCall_3_13_3_2_1_0());
                	      												
                	    }
                	    pushFollow(FOLLOW_24);
                	    lv_conferredTargets_73_0=ruleConceptDeclaration();

                	    state._fsp--;
                	    if (state.failed) return ;

                	    }


                	    }


                	    }
                	    break;

                	default :
                	    break loop445;
                    }
                } while (true);


                }
                break;

        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred359_InternalKim

    // $ANTLR start synpred362_InternalKim
    public final void synpred362_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_74=null;
        Token lv_constituent_75_0=null;
        Token lv_constitutes_76_0=null;
        Token lv_partOf_77_0=null;
        EObject lv_whole_78_0 = null;


        // InternalKim.g:9864:4: ( ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:9864:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:9864:4: ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:9865:5: {...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred362_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14)");
        }
        // InternalKim.g:9865:118: ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:9866:6: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14);
        // InternalKim.g:9869:9: ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:9869:10: {...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred362_InternalKim", "true");
        }
        // InternalKim.g:9869:19: ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:9869:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:9869:20: (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) )
        int alt447=3;
        switch ( input.LA(1) ) {
        case 160:
            {
            alt447=1;
            }
            break;
        case 161:
            {
            alt447=2;
            }
            break;
        case 162:
            {
            alt447=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 447, 0, input);

            throw nvae;
        }

        switch (alt447) {
            case 1 :
                // InternalKim.g:9870:10: otherlv_74= 'part'
                {
                otherlv_74=(Token)match(input,160,FOLLOW_99); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:9875:10: ( (lv_constituent_75_0= 'constituent' ) )
                {
                // InternalKim.g:9875:10: ( (lv_constituent_75_0= 'constituent' ) )
                // InternalKim.g:9876:11: (lv_constituent_75_0= 'constituent' )
                {
                // InternalKim.g:9876:11: (lv_constituent_75_0= 'constituent' )
                // InternalKim.g:9877:12: lv_constituent_75_0= 'constituent'
                {
                lv_constituent_75_0=(Token)match(input,161,FOLLOW_99); if (state.failed) return ;

                }


                }


                }
                break;
            case 3 :
                // InternalKim.g:9890:10: ( (lv_constitutes_76_0= 'consists' ) )
                {
                // InternalKim.g:9890:10: ( (lv_constitutes_76_0= 'consists' ) )
                // InternalKim.g:9891:11: (lv_constitutes_76_0= 'consists' )
                {
                // InternalKim.g:9891:11: (lv_constitutes_76_0= 'consists' )
                // InternalKim.g:9892:12: lv_constitutes_76_0= 'consists'
                {
                lv_constitutes_76_0=(Token)match(input,162,FOLLOW_99); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:9905:9: ( (lv_partOf_77_0= 'of' ) )
        // InternalKim.g:9906:10: (lv_partOf_77_0= 'of' )
        {
        // InternalKim.g:9906:10: (lv_partOf_77_0= 'of' )
        // InternalKim.g:9907:11: lv_partOf_77_0= 'of'
        {
        lv_partOf_77_0=(Token)match(input,99,FOLLOW_19); if (state.failed) return ;

        }


        }

        // InternalKim.g:9919:9: ( (lv_whole_78_0= ruleConceptDeclaration ) )
        // InternalKim.g:9920:10: (lv_whole_78_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9920:10: (lv_whole_78_0= ruleConceptDeclaration )
        // InternalKim.g:9921:11: lv_whole_78_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getWholeConceptDeclarationParserRuleCall_3_14_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_whole_78_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred362_InternalKim

    // $ANTLR start synpred364_InternalKim
    public final void synpred364_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_79=null;
        Token otherlv_81=null;
        EObject lv_creates_80_0 = null;

        EObject lv_creates_82_0 = null;


        // InternalKim.g:9944:4: ( ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:9944:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:9944:4: ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:9945:5: {...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred364_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15)");
        }
        // InternalKim.g:9945:118: ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:9946:6: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15);
        // InternalKim.g:9949:9: ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:9949:10: {...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred364_InternalKim", "true");
        }
        // InternalKim.g:9949:19: (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:9949:20: otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_79=(Token)match(input,163,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:9953:9: ( (lv_creates_80_0= ruleConceptDeclaration ) )
        // InternalKim.g:9954:10: (lv_creates_80_0= ruleConceptDeclaration )
        {
        // InternalKim.g:9954:10: (lv_creates_80_0= ruleConceptDeclaration )
        // InternalKim.g:9955:11: lv_creates_80_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_creates_80_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:9972:9: (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )*
        loop448:
        do {
            int alt448=2;
            int LA448_0 = input.LA(1);

            if ( (LA448_0==25) ) {
                alt448=1;
            }


            switch (alt448) {
        	case 1 :
        	    // InternalKim.g:9973:10: otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_81=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:9977:10: ( (lv_creates_82_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:9978:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:9978:11: (lv_creates_82_0= ruleConceptDeclaration )
        	    // InternalKim.g:9979:12: lv_creates_82_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getCreatesConceptDeclarationParserRuleCall_3_15_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_creates_82_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop448;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred364_InternalKim

    // $ANTLR start synpred366_InternalKim
    public final void synpred366_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_83=null;
        Token otherlv_84=null;
        Token otherlv_86=null;
        EObject lv_traitTargets_85_0 = null;

        EObject lv_traitTargets_87_0 = null;


        // InternalKim.g:10003:4: ( ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) )
        // InternalKim.g:10003:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        {
        // InternalKim.g:10003:4: ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) )
        // InternalKim.g:10004:5: {...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred366_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16)");
        }
        // InternalKim.g:10004:118: ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) )
        // InternalKim.g:10005:6: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16);
        // InternalKim.g:10008:9: ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) )
        // InternalKim.g:10008:10: {...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred366_InternalKim", "true");
        }
        // InternalKim.g:10008:19: (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* )
        // InternalKim.g:10008:20: otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        {
        otherlv_83=(Token)match(input,164,FOLLOW_22); if (state.failed) return ;
        otherlv_84=(Token)match(input,39,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:10016:9: ( (lv_traitTargets_85_0= ruleApplicableTarget ) )
        // InternalKim.g:10017:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        {
        // InternalKim.g:10017:10: (lv_traitTargets_85_0= ruleApplicableTarget )
        // InternalKim.g:10018:11: lv_traitTargets_85_0= ruleApplicableTarget
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_2_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_traitTargets_85_0=ruleApplicableTarget();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10035:9: (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )*
        loop449:
        do {
            int alt449=2;
            int LA449_0 = input.LA(1);

            if ( (LA449_0==25) ) {
                alt449=1;
            }


            switch (alt449) {
        	case 1 :
        	    // InternalKim.g:10036:10: otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    {
        	    otherlv_86=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:10040:10: ( (lv_traitTargets_87_0= ruleApplicableTarget ) )
        	    // InternalKim.g:10041:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    {
        	    // InternalKim.g:10041:11: (lv_traitTargets_87_0= ruleApplicableTarget )
        	    // InternalKim.g:10042:12: lv_traitTargets_87_0= ruleApplicableTarget
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getTraitTargetsApplicableTargetParserRuleCall_3_16_3_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_traitTargets_87_0=ruleApplicableTarget();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop449;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred366_InternalKim

    // $ANTLR start synpred370_InternalKim
    public final void synpred370_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_88=null;
        Token otherlv_90=null;
        Token otherlv_92=null;
        Token otherlv_94=null;
        EObject lv_domains_89_0 = null;

        EObject lv_ranges_91_0 = null;

        EObject lv_domains_93_0 = null;

        EObject lv_ranges_95_0 = null;


        // InternalKim.g:10066:4: ( ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10066:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10066:4: ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10067:5: {...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred370_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17)");
        }
        // InternalKim.g:10067:118: ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10068:6: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17);
        // InternalKim.g:10071:9: ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10071:10: {...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred370_InternalKim", "true");
        }
        // InternalKim.g:10071:19: (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* )
        // InternalKim.g:10071:20: otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        {
        otherlv_88=(Token)match(input,165,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:10075:9: ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10076:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10076:10: (lv_domains_89_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10077:11: lv_domains_89_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_1_0());
          										
        }
        pushFollow(FOLLOW_22);
        lv_domains_89_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10094:9: ( ( 'to' )=>otherlv_90= 'to' )
        // InternalKim.g:10095:10: ( 'to' )=>otherlv_90= 'to'
        {
        otherlv_90=(Token)match(input,39,FOLLOW_19); if (state.failed) return ;

        }

        // InternalKim.g:10101:9: ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) )
        // InternalKim.g:10102:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        {
        // InternalKim.g:10102:10: (lv_ranges_91_0= ruleSimpleConceptDeclaration )
        // InternalKim.g:10103:11: lv_ranges_91_0= ruleSimpleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_3_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_ranges_91_0=ruleSimpleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10120:9: (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )*
        loop450:
        do {
            int alt450=2;
            int LA450_0 = input.LA(1);

            if ( (LA450_0==25) ) {
                alt450=1;
            }


            switch (alt450) {
        	case 1 :
        	    // InternalKim.g:10121:10: otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    {
        	    otherlv_92=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:10125:10: ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10126:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10126:11: (lv_domains_93_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10127:12: lv_domains_93_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getDomainsSimpleConceptDeclarationParserRuleCall_3_17_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_22);
        	    lv_domains_93_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }

        	    // InternalKim.g:10144:10: ( ( 'to' )=>otherlv_94= 'to' )
        	    // InternalKim.g:10145:11: ( 'to' )=>otherlv_94= 'to'
        	    {
        	    otherlv_94=(Token)match(input,39,FOLLOW_19); if (state.failed) return ;

        	    }

        	    // InternalKim.g:10151:10: ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) )
        	    // InternalKim.g:10152:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    {
        	    // InternalKim.g:10152:11: (lv_ranges_95_0= ruleSimpleConceptDeclaration )
        	    // InternalKim.g:10153:12: lv_ranges_95_0= ruleSimpleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRangesSimpleConceptDeclarationParserRuleCall_3_17_4_3_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_ranges_95_0=ruleSimpleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop450;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred370_InternalKim

    // $ANTLR start synpred371_InternalKim
    public final void synpred371_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_96=null;
        Token otherlv_97=null;
        EObject lv_inverse_98_0 = null;


        // InternalKim.g:10177:4: ( ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) )
        // InternalKim.g:10177:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        {
        // InternalKim.g:10177:4: ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) )
        // InternalKim.g:10178:5: {...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred371_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18)");
        }
        // InternalKim.g:10178:118: ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) )
        // InternalKim.g:10179:6: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18);
        // InternalKim.g:10182:9: ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) )
        // InternalKim.g:10182:10: {...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred371_InternalKim", "true");
        }
        // InternalKim.g:10182:19: (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:10182:20: otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        {
        otherlv_96=(Token)match(input,166,FOLLOW_99); if (state.failed) return ;
        otherlv_97=(Token)match(input,99,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:10190:9: ( (lv_inverse_98_0= ruleConceptDeclaration ) )
        // InternalKim.g:10191:10: (lv_inverse_98_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10191:10: (lv_inverse_98_0= ruleConceptDeclaration )
        // InternalKim.g:10192:11: lv_inverse_98_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getInverseConceptDeclarationParserRuleCall_3_18_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_inverse_98_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred371_InternalKim

    // $ANTLR start synpred373_InternalKim
    public final void synpred373_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_99=null;
        Token otherlv_101=null;
        EObject lv_qualitiesAffected_100_0 = null;

        EObject lv_qualitiesAffected_102_0 = null;


        // InternalKim.g:10215:4: ( ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) )
        // InternalKim.g:10215:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        {
        // InternalKim.g:10215:4: ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) )
        // InternalKim.g:10216:5: {...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred373_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19)");
        }
        // InternalKim.g:10216:118: ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) )
        // InternalKim.g:10217:6: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19);
        // InternalKim.g:10220:9: ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) )
        // InternalKim.g:10220:10: {...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred373_InternalKim", "true");
        }
        // InternalKim.g:10220:19: (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* )
        // InternalKim.g:10220:20: otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        {
        otherlv_99=(Token)match(input,167,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:10224:9: ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) )
        // InternalKim.g:10225:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        {
        // InternalKim.g:10225:10: (lv_qualitiesAffected_100_0= ruleConceptDeclaration )
        // InternalKim.g:10226:11: lv_qualitiesAffected_100_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_1_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_qualitiesAffected_100_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10243:9: (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )*
        loop451:
        do {
            int alt451=2;
            int LA451_0 = input.LA(1);

            if ( (LA451_0==25) ) {
                alt451=1;
            }


            switch (alt451) {
        	case 1 :
        	    // InternalKim.g:10244:10: otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    {
        	    otherlv_101=(Token)match(input,25,FOLLOW_19); if (state.failed) return ;
        	    // InternalKim.g:10248:10: ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) )
        	    // InternalKim.g:10249:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    {
        	    // InternalKim.g:10249:11: (lv_qualitiesAffected_102_0= ruleConceptDeclaration )
        	    // InternalKim.g:10250:12: lv_qualitiesAffected_102_0= ruleConceptDeclaration
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getQualitiesAffectedConceptDeclarationParserRuleCall_3_19_2_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_qualitiesAffected_102_0=ruleConceptDeclaration();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop451;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred373_InternalKim

    // $ANTLR start synpred376_InternalKim
    public final void synpred376_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_103=null;
        Token lv_disjoint_104_0=null;
        Token otherlv_105=null;
        Token otherlv_107=null;
        EObject lv_children_106_0 = null;

        EObject lv_children_108_0 = null;


        // InternalKim.g:10274:4: ( ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) )
        // InternalKim.g:10274:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        {
        // InternalKim.g:10274:4: ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) )
        // InternalKim.g:10275:5: {...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred376_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20)");
        }
        // InternalKim.g:10275:118: ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) )
        // InternalKim.g:10276:6: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20);
        // InternalKim.g:10279:9: ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) )
        // InternalKim.g:10279:10: {...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred376_InternalKim", "true");
        }
        // InternalKim.g:10279:19: (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* )
        // InternalKim.g:10279:20: otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        {
        otherlv_103=(Token)match(input,157,FOLLOW_126); if (state.failed) return ;
        // InternalKim.g:10283:9: ( (lv_disjoint_104_0= 'disjoint' ) )?
        int alt452=2;
        int LA452_0 = input.LA(1);

        if ( (LA452_0==82) ) {
            alt452=1;
        }
        switch (alt452) {
            case 1 :
                // InternalKim.g:10284:10: (lv_disjoint_104_0= 'disjoint' )
                {
                // InternalKim.g:10284:10: (lv_disjoint_104_0= 'disjoint' )
                // InternalKim.g:10285:11: lv_disjoint_104_0= 'disjoint'
                {
                lv_disjoint_104_0=(Token)match(input,82,FOLLOW_127); if (state.failed) return ;

                }


                }
                break;

        }

        otherlv_105=(Token)match(input,168,FOLLOW_128); if (state.failed) return ;
        // InternalKim.g:10301:9: ( (lv_children_106_0= ruleChildConcept ) )
        // InternalKim.g:10302:10: (lv_children_106_0= ruleChildConcept )
        {
        // InternalKim.g:10302:10: (lv_children_106_0= ruleChildConcept )
        // InternalKim.g:10303:11: lv_children_106_0= ruleChildConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_3_0());
          										
        }
        pushFollow(FOLLOW_24);
        lv_children_106_0=ruleChildConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:10320:9: (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )*
        loop453:
        do {
            int alt453=2;
            int LA453_0 = input.LA(1);

            if ( (LA453_0==25) ) {
                alt453=1;
            }


            switch (alt453) {
        	case 1 :
        	    // InternalKim.g:10321:10: otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) )
        	    {
        	    otherlv_107=(Token)match(input,25,FOLLOW_128); if (state.failed) return ;
        	    // InternalKim.g:10325:10: ( (lv_children_108_0= ruleChildConcept ) )
        	    // InternalKim.g:10326:11: (lv_children_108_0= ruleChildConcept )
        	    {
        	    // InternalKim.g:10326:11: (lv_children_108_0= ruleChildConcept )
        	    // InternalKim.g:10327:12: lv_children_108_0= ruleChildConcept
        	    {
        	    if ( state.backtracking==0 ) {

        	      												newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getChildrenChildConceptParserRuleCall_3_20_4_1_0());
        	      											
        	    }
        	    pushFollow(FOLLOW_24);
        	    lv_children_108_0=ruleChildConcept();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop453;
            }
        } while (true);


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred376_InternalKim

    // $ANTLR start synpred377_InternalKim
    public final void synpred377_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10356:10: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )
        // InternalKim.g:10356:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred377_InternalKim", "true");
        }
        // InternalKim.g:10356:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        // InternalKim.g:10356:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        {
        // InternalKim.g:10356:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        // InternalKim.g:10357:10: lv_restrictions_109_0= ruleRestrictionStatement
        {
        if ( state.backtracking==0 ) {

          										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
          									
        }
        pushFollow(FOLLOW_2);
        lv_restrictions_109_0=ruleRestrictionStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred377_InternalKim

    // $ANTLR start synpred378_InternalKim
    public final void synpred378_InternalKim_fragment() throws RecognitionException {   
        EObject lv_restrictions_109_0 = null;


        // InternalKim.g:10351:4: ( ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) )
        // InternalKim.g:10351:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        {
        // InternalKim.g:10351:4: ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) )
        // InternalKim.g:10352:5: {...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred378_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21)");
        }
        // InternalKim.g:10352:118: ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ )
        // InternalKim.g:10353:6: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21);
        // InternalKim.g:10356:9: ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+
        int cnt454=0;
        loop454:
        do {
            int alt454=2;
            int LA454_0 = input.LA(1);

            if ( (LA454_0==174) && ((true))) {
                alt454=1;
            }
            else if ( (LA454_0==157) && ((true))) {
                alt454=1;
            }
            else if ( (LA454_0==175) && ((true))) {
                alt454=1;
            }
            else if ( (LA454_0==176) && ((true))) {
                alt454=1;
            }


            switch (alt454) {
        	case 1 :
        	    // InternalKim.g:10356:10: {...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    {
        	    if ( !((true)) ) {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        throw new FailedPredicateException(input, "synpred378_InternalKim", "true");
        	    }
        	    // InternalKim.g:10356:19: ( (lv_restrictions_109_0= ruleRestrictionStatement ) )
        	    // InternalKim.g:10356:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    {
        	    // InternalKim.g:10356:20: (lv_restrictions_109_0= ruleRestrictionStatement )
        	    // InternalKim.g:10357:10: lv_restrictions_109_0= ruleRestrictionStatement
        	    {
        	    if ( state.backtracking==0 ) {

        	      										newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getRestrictionsRestrictionStatementParserRuleCall_3_21_0());
        	      									
        	    }
        	    pushFollow(FOLLOW_179);
        	    lv_restrictions_109_0=ruleRestrictionStatement();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    if ( cnt454 >= 1 ) break loop454;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(454, input);
                    throw eee;
            }
            cnt454++;
        } while (true);


        }


        }


        }
    }
    // $ANTLR end synpred378_InternalKim

    // $ANTLR start synpred379_InternalKim
    public final void synpred379_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_110=null;
        Token otherlv_111=null;
        EObject lv_metadata_112_0 = null;


        // InternalKim.g:10379:4: ( ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )
        // InternalKim.g:10379:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        {
        // InternalKim.g:10379:4: ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) )
        // InternalKim.g:10380:5: {...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred379_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22)");
        }
        // InternalKim.g:10380:118: ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) )
        // InternalKim.g:10381:6: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22);
        // InternalKim.g:10384:9: ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) )
        // InternalKim.g:10384:10: {...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred379_InternalKim", "true");
        }
        // InternalKim.g:10384:19: (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) )
        // InternalKim.g:10384:20: otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) )
        {
        otherlv_110=(Token)match(input,28,FOLLOW_14); if (state.failed) return ;
        otherlv_111=(Token)match(input,29,FOLLOW_15); if (state.failed) return ;
        // InternalKim.g:10392:9: ( (lv_metadata_112_0= ruleMetadata ) )
        // InternalKim.g:10393:10: (lv_metadata_112_0= ruleMetadata )
        {
        // InternalKim.g:10393:10: (lv_metadata_112_0= ruleMetadata )
        // InternalKim.g:10394:11: lv_metadata_112_0= ruleMetadata
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getConceptStatementBodyAccess().getMetadataMetadataParserRuleCall_3_22_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_metadata_112_0=ruleMetadata();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred379_InternalKim

    // $ANTLR start synpred401_InternalKim
    public final void synpred401_InternalKim_fragment() throws RecognitionException {   
        Token lv_none_1_0=null;

        // InternalKim.g:11032:5: ( ( (lv_none_1_0= 'no' ) ) )
        // InternalKim.g:11032:5: ( (lv_none_1_0= 'no' ) )
        {
        // InternalKim.g:11032:5: ( (lv_none_1_0= 'no' ) )
        // InternalKim.g:11033:6: (lv_none_1_0= 'no' )
        {
        // InternalKim.g:11033:6: (lv_none_1_0= 'no' )
        // InternalKim.g:11034:7: lv_none_1_0= 'no'
        {
        lv_none_1_0=(Token)match(input,116,FOLLOW_2); if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred401_InternalKim

    // $ANTLR start synpred416_InternalKim
    public final void synpred416_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_1=null;
        EObject lv_from_0_0 = null;

        EObject lv_to_2_0 = null;


        // InternalKim.g:11436:3: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) )
        // InternalKim.g:11436:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
        {
        // InternalKim.g:11436:3: ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) )
        // InternalKim.g:11437:4: ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
        {
        // InternalKim.g:11437:4: ( (lv_from_0_0= ruleNumber ) )
        // InternalKim.g:11438:5: (lv_from_0_0= ruleNumber )
        {
        // InternalKim.g:11438:5: (lv_from_0_0= ruleNumber )
        // InternalKim.g:11439:6: lv_from_0_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralAccess().getFromNumberParserRuleCall_0_0_0());
          					
        }
        pushFollow(FOLLOW_22);
        lv_from_0_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        // InternalKim.g:11456:4: ( ( 'to' )=>otherlv_1= 'to' )
        // InternalKim.g:11457:5: ( 'to' )=>otherlv_1= 'to'
        {
        otherlv_1=(Token)match(input,39,FOLLOW_28); if (state.failed) return ;

        }

        // InternalKim.g:11463:4: ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) )
        // InternalKim.g:11464:5: ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber )
        {
        // InternalKim.g:11468:5: (lv_to_2_0= ruleNumber )
        // InternalKim.g:11469:6: lv_to_2_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          						newCompositeNode(grammarAccess.getLiteralAccess().getToNumberParserRuleCall_0_2_0());
          					
        }
        pushFollow(FOLLOW_2);
        lv_to_2_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred416_InternalKim

    // $ANTLR start synpred417_InternalKim
    public final void synpred417_InternalKim_fragment() throws RecognitionException {   
        EObject lv_number_3_0 = null;


        // InternalKim.g:11488:3: ( ( (lv_number_3_0= ruleNumber ) ) )
        // InternalKim.g:11488:3: ( (lv_number_3_0= ruleNumber ) )
        {
        // InternalKim.g:11488:3: ( (lv_number_3_0= ruleNumber ) )
        // InternalKim.g:11489:4: (lv_number_3_0= ruleNumber )
        {
        // InternalKim.g:11489:4: (lv_number_3_0= ruleNumber )
        // InternalKim.g:11490:5: lv_number_3_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getLiteralAccess().getNumberNumberParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_number_3_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred417_InternalKim

    // $ANTLR start synpred444_InternalKim
    public final void synpred444_InternalKim_fragment() throws RecognitionException {   
        Token lv_name_0_1=null;

        // InternalKim.g:12310:6: (lv_name_0_1= RULE_LOWERCASE_ID )
        // InternalKim.g:12310:6: lv_name_0_1= RULE_LOWERCASE_ID
        {
        lv_name_0_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }
    }
    // $ANTLR end synpred444_InternalKim

    // $ANTLR start synpred449_InternalKim
    public final void synpred449_InternalKim_fragment() throws RecognitionException {   
        EObject lv_concept_0_0 = null;


        // InternalKim.g:12490:3: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) )
        // InternalKim.g:12490:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        {
        // InternalKim.g:12490:3: ( (lv_concept_0_0= ruleConceptDeclaration ) )
        // InternalKim.g:12491:4: (lv_concept_0_0= ruleConceptDeclaration )
        {
        // InternalKim.g:12491:4: (lv_concept_0_0= ruleConceptDeclaration )
        // InternalKim.g:12492:5: lv_concept_0_0= ruleConceptDeclaration
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithConceptAccess().getConceptConceptDeclarationParserRuleCall_0_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_concept_0_0=ruleConceptDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred449_InternalKim

    // $ANTLR start synpred450_InternalKim
    public final void synpred450_InternalKim_fragment() throws RecognitionException {   
        EObject lv_literal_1_0 = null;


        // InternalKim.g:12510:3: ( ( (lv_literal_1_0= ruleLiteral ) ) )
        // InternalKim.g:12510:3: ( (lv_literal_1_0= ruleLiteral ) )
        {
        // InternalKim.g:12510:3: ( (lv_literal_1_0= ruleLiteral ) )
        // InternalKim.g:12511:4: (lv_literal_1_0= ruleLiteral )
        {
        // InternalKim.g:12511:4: (lv_literal_1_0= ruleLiteral )
        // InternalKim.g:12512:5: lv_literal_1_0= ruleLiteral
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithConceptAccess().getLiteralLiteralParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_literal_1_0=ruleLiteral();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred450_InternalKim

    // $ANTLR start synpred452_InternalKim
    public final void synpred452_InternalKim_fragment() throws RecognitionException {   
        EObject lv_list_3_0 = null;


        // InternalKim.g:12549:3: ( ( (lv_list_3_0= ruleList ) ) )
        // InternalKim.g:12549:3: ( (lv_list_3_0= ruleList ) )
        {
        // InternalKim.g:12549:3: ( (lv_list_3_0= ruleList ) )
        // InternalKim.g:12550:4: (lv_list_3_0= ruleList )
        {
        // InternalKim.g:12550:4: (lv_list_3_0= ruleList )
        // InternalKim.g:12551:5: lv_list_3_0= ruleList
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueWithConceptAccess().getListListParserRuleCall_3_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_list_3_0=ruleList();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred452_InternalKim

    // $ANTLR start synpred455_InternalKim
    public final void synpred455_InternalKim_fragment() throws RecognitionException {   
        EObject lv_function_1_0 = null;


        // InternalKim.g:12642:3: ( ( (lv_function_1_0= ruleFunction ) ) )
        // InternalKim.g:12642:3: ( (lv_function_1_0= ruleFunction ) )
        {
        // InternalKim.g:12642:3: ( (lv_function_1_0= ruleFunction ) )
        // InternalKim.g:12643:4: (lv_function_1_0= ruleFunction )
        {
        // InternalKim.g:12643:4: (lv_function_1_0= ruleFunction )
        // InternalKim.g:12644:5: lv_function_1_0= ruleFunction
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getValueAccess().getFunctionFunctionParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_function_1_0=ruleFunction();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred455_InternalKim

    // $ANTLR start synpred459_InternalKim
    public final void synpred459_InternalKim_fragment() throws RecognitionException {   
        Token lv_id_3_1=null;
        Token lv_id_3_2=null;
        Token lv_id_3_3=null;

        // InternalKim.g:12681:3: ( ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) )
        // InternalKim.g:12681:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        {
        // InternalKim.g:12681:3: ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) )
        // InternalKim.g:12682:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        {
        // InternalKim.g:12682:4: ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) )
        // InternalKim.g:12683:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        {
        // InternalKim.g:12683:5: (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID )
        int alt478=3;
        switch ( input.LA(1) ) {
        case RULE_LOWERCASE_ID:
            {
            alt478=1;
            }
            break;
        case RULE_UPPERCASE_ID:
            {
            alt478=2;
            }
            break;
        case RULE_CAMELCASE_ID:
            {
            alt478=3;
            }
            break;
        default:
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 478, 0, input);

            throw nvae;
        }

        switch (alt478) {
            case 1 :
                // InternalKim.g:12684:6: lv_id_3_1= RULE_LOWERCASE_ID
                {
                lv_id_3_1=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:12699:6: lv_id_3_2= RULE_UPPERCASE_ID
                {
                lv_id_3_2=(Token)match(input,RULE_UPPERCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 3 :
                // InternalKim.g:12714:6: lv_id_3_3= RULE_CAMELCASE_ID
                {
                lv_id_3_3=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;

        }


        }


        }


        }
    }
    // $ANTLR end synpred459_InternalKim

    // $ANTLR start synpred502_InternalKim
    public final void synpred502_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_2=null;
        EObject lv_by_3_0 = null;


        // InternalKim.g:13333:4: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) )
        // InternalKim.g:13333:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        {
        // InternalKim.g:13333:4: ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) )
        // InternalKim.g:13334:5: {...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred502_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0)");
        }
        // InternalKim.g:13334:122: ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) )
        // InternalKim.g:13335:6: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0);
        // InternalKim.g:13338:9: ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) )
        // InternalKim.g:13338:10: {...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred502_InternalKim", "true");
        }
        // InternalKim.g:13338:19: (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) )
        // InternalKim.g:13338:20: otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) )
        {
        otherlv_2=(Token)match(input,93,FOLLOW_19); if (state.failed) return ;
        // InternalKim.g:13342:9: ( (lv_by_3_0= ruleConcept ) )
        // InternalKim.g:13343:10: (lv_by_3_0= ruleConcept )
        {
        // InternalKim.g:13343:10: (lv_by_3_0= ruleConcept )
        // InternalKim.g:13344:11: lv_by_3_0= ruleConcept
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getByConceptParserRuleCall_1_0_1_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_by_3_0=ruleConcept();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred502_InternalKim

    // $ANTLR start synpred504_InternalKim
    public final void synpred504_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_4=null;
        Token otherlv_5=null;
        Token lv_downTo_6_1=null;
        AntlrDatatypeRuleToken lv_downTo_6_2 = null;


        // InternalKim.g:13367:4: ( ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) )
        // InternalKim.g:13367:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) )
        {
        // InternalKim.g:13367:4: ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) )
        // InternalKim.g:13368:5: {...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred504_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1)");
        }
        // InternalKim.g:13368:122: ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) )
        // InternalKim.g:13369:6: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1);
        // InternalKim.g:13372:9: ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) )
        // InternalKim.g:13372:10: {...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred504_InternalKim", "true");
        }
        // InternalKim.g:13372:19: (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) )
        // InternalKim.g:13372:20: otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) )
        {
        otherlv_4=(Token)match(input,94,FOLLOW_22); if (state.failed) return ;
        otherlv_5=(Token)match(input,39,FOLLOW_85); if (state.failed) return ;
        // InternalKim.g:13380:9: ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) )
        // InternalKim.g:13381:10: ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) )
        {
        // InternalKim.g:13381:10: ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) )
        // InternalKim.g:13382:11: (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId )
        {
        // InternalKim.g:13382:11: (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId )
        int alt479=2;
        int LA479_0 = input.LA(1);

        if ( (LA479_0==RULE_CAMELCASE_ID) ) {
            alt479=1;
        }
        else if ( (LA479_0==RULE_LOWERCASE_ID) ) {
            alt479=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 479, 0, input);

            throw nvae;
        }
        switch (alt479) {
            case 1 :
                // InternalKim.g:13383:12: lv_downTo_6_1= RULE_CAMELCASE_ID
                {
                lv_downTo_6_1=(Token)match(input,RULE_CAMELCASE_ID,FOLLOW_2); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:13398:12: lv_downTo_6_2= ruleNamespaceId
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getDownToNamespaceIdParserRuleCall_1_1_2_0_1());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_downTo_6_2=ruleNamespaceId();

                state._fsp--;
                if (state.failed) return ;

                }
                break;

        }


        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred504_InternalKim

    // $ANTLR start synpred505_InternalKim
    public final void synpred505_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_7=null;
        Token otherlv_8=null;
        AntlrDatatypeRuleToken lv_accordingTo_9_0 = null;


        // InternalKim.g:13422:4: ( ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) )
        // InternalKim.g:13422:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        {
        // InternalKim.g:13422:4: ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) )
        // InternalKim.g:13423:5: {...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred505_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2)");
        }
        // InternalKim.g:13423:122: ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) )
        // InternalKim.g:13424:6: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2);
        // InternalKim.g:13427:9: ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) )
        // InternalKim.g:13427:10: {...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred505_InternalKim", "true");
        }
        // InternalKim.g:13427:19: (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) )
        // InternalKim.g:13427:20: otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) )
        {
        otherlv_7=(Token)match(input,38,FOLLOW_22); if (state.failed) return ;
        otherlv_8=(Token)match(input,39,FOLLOW_23); if (state.failed) return ;
        // InternalKim.g:13435:9: ( (lv_accordingTo_9_0= rulePropertyId ) )
        // InternalKim.g:13436:10: (lv_accordingTo_9_0= rulePropertyId )
        {
        // InternalKim.g:13436:10: (lv_accordingTo_9_0= rulePropertyId )
        // InternalKim.g:13437:11: lv_accordingTo_9_0= rulePropertyId
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getAccordingToPropertyIdParserRuleCall_1_2_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_accordingTo_9_0=rulePropertyId();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred505_InternalKim

    // $ANTLR start synpred506_InternalKim
    public final void synpred506_InternalKim_fragment() throws RecognitionException {   
        EObject lv_unit_11_0 = null;


        // InternalKim.g:13471:11: ( ( (lv_unit_11_0= ruleUnit ) ) )
        // InternalKim.g:13471:11: ( (lv_unit_11_0= ruleUnit ) )
        {
        // InternalKim.g:13471:11: ( (lv_unit_11_0= ruleUnit ) )
        // InternalKim.g:13472:12: (lv_unit_11_0= ruleUnit )
        {
        // InternalKim.g:13472:12: (lv_unit_11_0= ruleUnit )
        // InternalKim.g:13473:13: lv_unit_11_0= ruleUnit
        {
        if ( state.backtracking==0 ) {

          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
          												
        }
        pushFollow(FOLLOW_2);
        lv_unit_11_0=ruleUnit();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred506_InternalKim

    // $ANTLR start synpred508_InternalKim
    public final void synpred508_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_10=null;
        Token otherlv_13=null;
        EObject lv_unit_11_0 = null;

        EObject lv_currency_12_0 = null;

        EObject lv_unit_14_0 = null;


        // InternalKim.g:13460:4: ( ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) )
        // InternalKim.g:13460:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        {
        // InternalKim.g:13460:4: ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) )
        // InternalKim.g:13461:5: {...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred508_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3)");
        }
        // InternalKim.g:13461:122: ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) )
        // InternalKim.g:13462:6: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3);
        // InternalKim.g:13465:9: ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) )
        // InternalKim.g:13465:10: {...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred508_InternalKim", "true");
        }
        // InternalKim.g:13465:19: ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) )
        int alt482=2;
        int LA482_0 = input.LA(1);

        if ( (LA482_0==45) ) {
            alt482=1;
        }
        else if ( (LA482_0==95) ) {
            alt482=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 482, 0, input);

            throw nvae;
        }
        switch (alt482) {
            case 1 :
                // InternalKim.g:13465:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                {
                // InternalKim.g:13465:20: (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) )
                // InternalKim.g:13466:10: otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                {
                otherlv_10=(Token)match(input,45,FOLLOW_86); if (state.failed) return ;
                // InternalKim.g:13470:10: ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) )
                int alt481=2;
                switch ( input.LA(1) ) {
                case RULE_CAMELCASE_ID:
                    {
                    int LA481_1 = input.LA(2);

                    if ( (synpred506_InternalKim()) ) {
                        alt481=1;
                    }
                    else if ( (true) ) {
                        alt481=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 481, 1, input);

                        throw nvae;
                    }
                    }
                    break;
                case RULE_LOWERCASE_ID:
                    {
                    int LA481_2 = input.LA(2);

                    if ( (LA481_2==51||LA481_2==89) ) {
                        alt481=2;
                    }
                    else if ( (LA481_2==EOF||LA481_2==47||LA481_2==88||LA481_2==237) ) {
                        alt481=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 481, 2, input);

                        throw nvae;
                    }
                    }
                    break;
                case EOF:
                case RULE_INT:
                case 33:
                case 47:
                case 88:
                case 226:
                case 227:
                case 237:
                    {
                    alt481=1;
                    }
                    break;
                case RULE_UPPERCASE_ID:
                    {
                    alt481=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 481, 0, input);

                    throw nvae;
                }

                switch (alt481) {
                    case 1 :
                        // InternalKim.g:13471:11: ( (lv_unit_11_0= ruleUnit ) )
                        {
                        // InternalKim.g:13471:11: ( (lv_unit_11_0= ruleUnit ) )
                        // InternalKim.g:13472:12: (lv_unit_11_0= ruleUnit )
                        {
                        // InternalKim.g:13472:12: (lv_unit_11_0= ruleUnit )
                        // InternalKim.g:13473:13: lv_unit_11_0= ruleUnit
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_0_1_0_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_unit_11_0=ruleUnit();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;
                    case 2 :
                        // InternalKim.g:13491:11: ( (lv_currency_12_0= ruleCurrency ) )
                        {
                        // InternalKim.g:13491:11: ( (lv_currency_12_0= ruleCurrency ) )
                        // InternalKim.g:13492:12: (lv_currency_12_0= ruleCurrency )
                        {
                        // InternalKim.g:13492:12: (lv_currency_12_0= ruleCurrency )
                        // InternalKim.g:13493:13: lv_currency_12_0= ruleCurrency
                        {
                        if ( state.backtracking==0 ) {

                          													newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getCurrencyCurrencyParserRuleCall_1_3_0_1_1_0());
                          												
                        }
                        pushFollow(FOLLOW_2);
                        lv_currency_12_0=ruleCurrency();

                        state._fsp--;
                        if (state.failed) return ;

                        }


                        }


                        }
                        break;

                }


                }


                }
                break;
            case 2 :
                // InternalKim.g:13513:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                {
                // InternalKim.g:13513:9: (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) )
                // InternalKim.g:13514:10: otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) )
                {
                otherlv_13=(Token)match(input,95,FOLLOW_175); if (state.failed) return ;
                // InternalKim.g:13518:10: ( (lv_unit_14_0= ruleUnit ) )
                // InternalKim.g:13519:11: (lv_unit_14_0= ruleUnit )
                {
                // InternalKim.g:13519:11: (lv_unit_14_0= ruleUnit )
                // InternalKim.g:13520:12: lv_unit_14_0= ruleUnit
                {
                if ( state.backtracking==0 ) {

                  												newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getUnitUnitParserRuleCall_1_3_1_1_0());
                  											
                }
                pushFollow(FOLLOW_2);
                lv_unit_14_0=ruleUnit();

                state._fsp--;
                if (state.failed) return ;

                }


                }


                }


                }
                break;

        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred508_InternalKim

    // $ANTLR start synpred509_InternalKim
    public final void synpred509_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_16=null;
        EObject lv_from_15_0 = null;

        EObject lv_to_17_0 = null;


        // InternalKim.g:13544:4: ( ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) )
        // InternalKim.g:13544:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        {
        // InternalKim.g:13544:4: ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) )
        // InternalKim.g:13545:5: {...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred509_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4)");
        }
        // InternalKim.g:13545:122: ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) )
        // InternalKim.g:13546:6: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4);
        // InternalKim.g:13549:9: ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) )
        // InternalKim.g:13549:10: {...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred509_InternalKim", "true");
        }
        // InternalKim.g:13549:19: ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) )
        // InternalKim.g:13549:20: ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) )
        {
        // InternalKim.g:13549:20: ( (lv_from_15_0= ruleNumber ) )
        // InternalKim.g:13550:10: (lv_from_15_0= ruleNumber )
        {
        // InternalKim.g:13550:10: (lv_from_15_0= ruleNumber )
        // InternalKim.g:13551:11: lv_from_15_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getFromNumberParserRuleCall_1_4_0_0());
          										
        }
        pushFollow(FOLLOW_22);
        lv_from_15_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }

        otherlv_16=(Token)match(input,39,FOLLOW_28); if (state.failed) return ;
        // InternalKim.g:13572:9: ( (lv_to_17_0= ruleNumber ) )
        // InternalKim.g:13573:10: (lv_to_17_0= ruleNumber )
        {
        // InternalKim.g:13573:10: (lv_to_17_0= ruleNumber )
        // InternalKim.g:13574:11: lv_to_17_0= ruleNumber
        {
        if ( state.backtracking==0 ) {

          											newCompositeNode(grammarAccess.getSimpleObservableSemanticsAccess().getToNumberParserRuleCall_1_4_2_0());
          										
        }
        pushFollow(FOLLOW_2);
        lv_to_17_0=ruleNumber();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred509_InternalKim

    // $ANTLR start synpred510_InternalKim
    public final void synpred510_InternalKim_fragment() throws RecognitionException {   
        Token otherlv_18=null;
        Token lv_name_19_0=null;

        // InternalKim.g:13597:4: ( ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )
        // InternalKim.g:13597:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        {
        // InternalKim.g:13597:4: ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) )
        // InternalKim.g:13598:5: {...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        {
        if ( ! getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred510_InternalKim", "getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5)");
        }
        // InternalKim.g:13598:122: ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) )
        // InternalKim.g:13599:6: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        {
        getUnorderedGroupHelper().select(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5);
        // InternalKim.g:13602:9: ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) )
        // InternalKim.g:13602:10: {...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        {
        if ( !((true)) ) {
            if (state.backtracking>0) {state.failed=true; return ;}
            throw new FailedPredicateException(input, "synpred510_InternalKim", "true");
        }
        // InternalKim.g:13602:19: (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) )
        // InternalKim.g:13602:20: otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        {
        otherlv_18=(Token)match(input,98,FOLLOW_35); if (state.failed) return ;
        // InternalKim.g:13606:9: ( (lv_name_19_0= RULE_LOWERCASE_ID ) )
        // InternalKim.g:13607:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        {
        // InternalKim.g:13607:10: (lv_name_19_0= RULE_LOWERCASE_ID )
        // InternalKim.g:13608:11: lv_name_19_0= RULE_LOWERCASE_ID
        {
        lv_name_19_0=(Token)match(input,RULE_LOWERCASE_ID,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }


        }


        }


        }
    }
    // $ANTLR end synpred510_InternalKim

    // $ANTLR start synpred520_InternalKim
    public final void synpred520_InternalKim_fragment() throws RecognitionException {   
        EObject lv_root_1_0 = null;


        // InternalKim.g:13959:4: ( (lv_root_1_0= ruleUnitElement ) )
        // InternalKim.g:13959:4: (lv_root_1_0= ruleUnitElement )
        {
        // InternalKim.g:13959:4: (lv_root_1_0= ruleUnitElement )
        // InternalKim.g:13960:5: lv_root_1_0= ruleUnitElement
        {
        if ( state.backtracking==0 ) {

          					newCompositeNode(grammarAccess.getUnitAccess().getRootUnitElementParserRuleCall_1_0());
          				
        }
        pushFollow(FOLLOW_2);
        lv_root_1_0=ruleUnitElement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred520_InternalKim

    // $ANTLR start synpred527_InternalKim
    public final void synpred527_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14166:4: ( ( RULE_INT ) )
        // InternalKim.g:14166:5: ( RULE_INT )
        {
        // InternalKim.g:14166:5: ( RULE_INT )
        // InternalKim.g:14167:5: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred527_InternalKim

    // $ANTLR start synpred528_InternalKim
    public final void synpred528_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14188:4: ( ( ( ( '.' ) ) ( ( RULE_INT ) ) ) )
        // InternalKim.g:14188:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14188:5: ( ( ( '.' ) ) ( ( RULE_INT ) ) )
        // InternalKim.g:14189:5: ( ( '.' ) ) ( ( RULE_INT ) )
        {
        // InternalKim.g:14189:5: ( ( '.' ) )
        // InternalKim.g:14190:6: ( '.' )
        {
        // InternalKim.g:14190:6: ( '.' )
        // InternalKim.g:14191:7: '.'
        {
        match(input,89,FOLLOW_68); if (state.failed) return ;

        }


        }

        // InternalKim.g:14194:5: ( ( RULE_INT ) )
        // InternalKim.g:14195:6: ( RULE_INT )
        {
        // InternalKim.g:14195:6: ( RULE_INT )
        // InternalKim.g:14196:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred528_InternalKim

    // $ANTLR start synpred532_InternalKim
    public final void synpred532_InternalKim_fragment() throws RecognitionException {   
        // InternalKim.g:14237:4: ( ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) ) )
        // InternalKim.g:14237:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        {
        // InternalKim.g:14237:5: ( ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) ) )
        // InternalKim.g:14238:5: ( ( ( 'e' | 'E' ) ) ) ( '+' | ( ( '-' ) ) )? ( ( RULE_INT ) )
        {
        // InternalKim.g:14238:5: ( ( ( 'e' | 'E' ) ) )
        // InternalKim.g:14239:6: ( ( 'e' | 'E' ) )
        {
        // InternalKim.g:14239:6: ( ( 'e' | 'E' ) )
        // InternalKim.g:14240:7: ( 'e' | 'E' )
        {
        if ( (input.LA(1)>=228 && input.LA(1)<=229) ) {
            input.consume();
            state.errorRecovery=false;state.failed=false;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            MismatchedSetException mse = new MismatchedSetException(null,input);
            throw mse;
        }


        }


        }

        // InternalKim.g:14247:5: ( '+' | ( ( '-' ) ) )?
        int alt484=3;
        int LA484_0 = input.LA(1);

        if ( (LA484_0==226) ) {
            alt484=1;
        }
        else if ( (LA484_0==227) ) {
            alt484=2;
        }
        switch (alt484) {
            case 1 :
                // InternalKim.g:14248:6: '+'
                {
                match(input,226,FOLLOW_68); if (state.failed) return ;

                }
                break;
            case 2 :
                // InternalKim.g:14250:6: ( ( '-' ) )
                {
                // InternalKim.g:14250:6: ( ( '-' ) )
                // InternalKim.g:14251:7: ( '-' )
                {
                // InternalKim.g:14251:7: ( '-' )
                // InternalKim.g:14252:8: '-'
                {
                match(input,227,FOLLOW_68); if (state.failed) return ;

                }


                }


                }
                break;

        }

        // InternalKim.g:14256:5: ( ( RULE_INT ) )
        // InternalKim.g:14257:6: ( RULE_INT )
        {
        // InternalKim.g:14257:6: ( RULE_INT )
        // InternalKim.g:14258:7: RULE_INT
        {
        match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;

        }


        }


        }


        }
    }
    // $ANTLR end synpred532_InternalKim

    // $ANTLR start synpred539_InternalKim
    public final void synpred539_InternalKim_fragment() throws RecognitionException {   
        AntlrDatatypeRuleToken this_PathName_0 = null;


        // InternalKim.g:14481:4: (this_PathName_0= rulePathName )
        // InternalKim.g:14481:4: this_PathName_0= rulePathName
        {
        if ( state.backtracking==0 ) {

          				newCompositeNode(grammarAccess.getPropertyIdAccess().getPathNameParserRuleCall_0_0());
          			
        }
        pushFollow(FOLLOW_2);
        this_PathName_0=rulePathName();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred539_InternalKim

    // Delegated rules

    public final boolean synpred509_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred509_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred313_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred313_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred508_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred508_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred163_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred163_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred312_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred312_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred164_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred164_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred355_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred355_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred359_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred359_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred318_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred318_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred317_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred317_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred311_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred311_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred350_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred350_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred236_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred236_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred234_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred234_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred235_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred235_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred242_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred242_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred240_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred240_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred241_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred241_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred230_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred230_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred231_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred231_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred502_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred502_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred505_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred505_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred506_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred506_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred504_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred504_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred172_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred172_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred346_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred346_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred345_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred345_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred347_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred347_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred170_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred170_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred344_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred344_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred348_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred348_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred539_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred539_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred327_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred327_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred175_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred175_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred366_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred366_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred301_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred301_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred342_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred342_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred343_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred343_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred16_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred16_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred364_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred364_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred340_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred340_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred362_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred362_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred289_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred289_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred203_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred203_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred224_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred224_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred226_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred226_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred401_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred401_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred444_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred444_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred228_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred228_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred206_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred206_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred229_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred229_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred207_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred207_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred86_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred86_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred183_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred183_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred377_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred377_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred378_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred378_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred528_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred528_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred142_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred142_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred185_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred185_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred334_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred334_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred376_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred376_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred373_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred373_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred338_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred338_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred4_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred4_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred370_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred370_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred149_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred149_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred520_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred520_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred2_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred2_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred214_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred214_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred180_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred180_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred299_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred299_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred371_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred371_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred213_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred213_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred222_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred222_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred417_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred417_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred459_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred459_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred221_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred221_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred223_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred223_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred416_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred416_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred212_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred212_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred294_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred294_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred297_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred297_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred449_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred449_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred179_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred179_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred47_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred47_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred186_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred186_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred187_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred187_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred527_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred527_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred177_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred177_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred8_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred8_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred11_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred11_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred116_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred116_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred138_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred138_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred532_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred532_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred510_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred510_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred215_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred215_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred237_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred237_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred216_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred216_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred455_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred455_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred217_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred217_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred238_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred238_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred239_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred239_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred219_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred219_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred452_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred452_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred379_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred379_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred450_InternalKim() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred450_InternalKim_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA1 dfa1 = new DFA1(this);
    protected DFA4 dfa4 = new DFA4(this);
    protected DFA10 dfa10 = new DFA10(this);
    protected DFA9 dfa9 = new DFA9(this);
    protected DFA30 dfa30 = new DFA30(this);
    protected DFA35 dfa35 = new DFA35(this);
    protected DFA44 dfa44 = new DFA44(this);
    protected DFA48 dfa48 = new DFA48(this);
    protected DFA56 dfa56 = new DFA56(this);
    protected DFA73 dfa73 = new DFA73(this);
    protected DFA80 dfa80 = new DFA80(this);
    protected DFA84 dfa84 = new DFA84(this);
    protected DFA99 dfa99 = new DFA99(this);
    protected DFA125 dfa125 = new DFA125(this);
    protected DFA116 dfa116 = new DFA116(this);
    protected DFA117 dfa117 = new DFA117(this);
    protected DFA120 dfa120 = new DFA120(this);
    protected DFA126 dfa126 = new DFA126(this);
    protected DFA132 dfa132 = new DFA132(this);
    protected DFA129 dfa129 = new DFA129(this);
    protected DFA134 dfa134 = new DFA134(this);
    protected DFA136 dfa136 = new DFA136(this);
    protected DFA137 dfa137 = new DFA137(this);
    protected DFA166 dfa166 = new DFA166(this);
    protected DFA171 dfa171 = new DFA171(this);
    protected DFA172 dfa172 = new DFA172(this);
    protected DFA178 dfa178 = new DFA178(this);
    protected DFA213 dfa213 = new DFA213(this);
    protected DFA227 dfa227 = new DFA227(this);
    protected DFA240 dfa240 = new DFA240(this);
    protected DFA244 dfa244 = new DFA244(this);
    protected DFA256 dfa256 = new DFA256(this);
    protected DFA257 dfa257 = new DFA257(this);
    protected DFA259 dfa259 = new DFA259(this);
    protected DFA271 dfa271 = new DFA271(this);
    protected DFA276 dfa276 = new DFA276(this);
    protected DFA298 dfa298 = new DFA298(this);
    protected DFA371 dfa371 = new DFA371(this);
    protected DFA372 dfa372 = new DFA372(this);
    static final String dfa_1s = "\76\uffff";
    static final String dfa_2s = "\1\7\75\uffff";
    static final String dfa_3s = "\1\15\3\0\72\uffff";
    static final String dfa_4s = "\1\u00db\3\0\72\uffff";
    static final String dfa_5s = "\4\uffff\1\1\2\uffff\1\2\66\uffff";
    static final String dfa_6s = "\1\uffff\1\0\1\1\1\2\72\uffff}>";
    static final String[] dfa_7s = {
            "\1\1\5\uffff\1\3\1\2\60\uffff\6\7\3\4\2\uffff\1\7\11\uffff\1\7\52\uffff\10\7\21\uffff\1\7\13\uffff\4\7\15\uffff\41\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA1 extends DFA {

        public DFA1(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 1;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "109:4: ( (lv_namespace_1_0= ruleNamespace ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA1_1 = input.LA(1);

                         
                        int index1_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA1_2 = input.LA(1);

                         
                        int index1_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA1_3 = input.LA(1);

                         
                        int index1_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred2_InternalKim()) ) {s = 4;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index1_3);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 1, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\73\uffff";
    static final String dfa_9s = "\1\15\1\0\61\uffff\1\0\7\uffff";
    static final String dfa_10s = "\1\u00db\1\0\61\uffff\1\0\7\uffff";
    static final String dfa_11s = "\2\uffff\1\1\56\uffff\1\2\7\uffff\1\4\1\3";
    static final String dfa_12s = "\1\uffff\1\0\61\uffff\1\1\7\uffff}>";
    static final String[] dfa_13s = {
            "\1\1\5\uffff\2\61\60\uffff\1\63\5\61\5\uffff\1\2\11\uffff\1\71\52\uffff\10\2\21\uffff\1\2\13\uffff\4\2\15\uffff\41\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA4 extends DFA {

        public DFA4(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 4;
            this.eot = dfa_8;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "166:2: ( ( ( (lv_conceptStatement_0_0= ruleConceptStatement ) ) otherlv_1= ';' ) | ( ( (lv_modelStatement_2_0= ruleModelStatement ) ) otherlv_3= ';' ) | ( ( (lv_upperOntologyStatement_4_0= ruleUpperOntologyDefinition ) ) otherlv_5= ';' ) | ( ( (lv_observeStatement_6_0= ruleObserveStatement ) ) otherlv_7= ';' ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA4_1 = input.LA(1);

                         
                        int index4_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred4_InternalKim()) ) {s = 2;}

                        else if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (true) ) {s = 57;}

                         
                        input.seek(index4_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA4_51 = input.LA(1);

                         
                        int index4_51 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred5_InternalKim()) ) {s = 49;}

                        else if ( (synpred6_InternalKim()) ) {s = 58;}

                         
                        input.seek(index4_51);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 4, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\43\uffff";
    static final String dfa_15s = "\1\4\1\uffff\3\0\1\uffff\26\0\7\uffff";
    static final String dfa_16s = "\1\u00e3\1\uffff\3\0\1\uffff\26\0\7\uffff";
    static final String dfa_17s = "\1\uffff\1\1\32\uffff\1\2\6\uffff";
    static final String dfa_18s = "\2\uffff\1\0\1\1\1\2\1\uffff\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\7\uffff}>";
    static final String[] dfa_19s = {
            "\1\2\1\3\2\34\1\4\1\1\1\34\1\10\12\uffff\1\11\1\12\1\uffff\1\34\7\uffff\1\33\14\uffff\1\34\50\uffff\1\1\4\uffff\1\34\16\uffff\1\15\1\16\6\uffff\1\13\1\14\1\uffff\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\65\uffff\1\34\52\uffff\1\6\1\7",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final char[] dfa_15 = DFA.unpackEncodedStringToUnsignedChars(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final short[] dfa_17 = DFA.unpackEncodedString(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[][] dfa_19 = unpackEncodedStringArray(dfa_19s);

    class DFA10 extends DFA {

        public DFA10(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 10;
            this.eot = dfa_14;
            this.eof = dfa_14;
            this.min = dfa_15;
            this.max = dfa_16;
            this.accept = dfa_17;
            this.special = dfa_18;
            this.transition = dfa_19;
        }
        public String getDescription() {
            return "452:3: ( ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) ) otherlv_6= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA10_2 = input.LA(1);

                         
                        int index10_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA10_3 = input.LA(1);

                         
                        int index10_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA10_4 = input.LA(1);

                         
                        int index10_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA10_6 = input.LA(1);

                         
                        int index10_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_6);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA10_7 = input.LA(1);

                         
                        int index10_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_7);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA10_8 = input.LA(1);

                         
                        int index10_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_8);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA10_9 = input.LA(1);

                         
                        int index10_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_9);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA10_10 = input.LA(1);

                         
                        int index10_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_10);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA10_11 = input.LA(1);

                         
                        int index10_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_11);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA10_12 = input.LA(1);

                         
                        int index10_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_12);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA10_13 = input.LA(1);

                         
                        int index10_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_13);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA10_14 = input.LA(1);

                         
                        int index10_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_14);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA10_15 = input.LA(1);

                         
                        int index10_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_15);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA10_16 = input.LA(1);

                         
                        int index10_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_16);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA10_17 = input.LA(1);

                         
                        int index10_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_17);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA10_18 = input.LA(1);

                         
                        int index10_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_18);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA10_19 = input.LA(1);

                         
                        int index10_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_19);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA10_20 = input.LA(1);

                         
                        int index10_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_20);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA10_21 = input.LA(1);

                         
                        int index10_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_21);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA10_22 = input.LA(1);

                         
                        int index10_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_22);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA10_23 = input.LA(1);

                         
                        int index10_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_23);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA10_24 = input.LA(1);

                         
                        int index10_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_24);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA10_25 = input.LA(1);

                         
                        int index10_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_25);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA10_26 = input.LA(1);

                         
                        int index10_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_26);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA10_27 = input.LA(1);

                         
                        int index10_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred16_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 28;}

                         
                        input.seek(index10_27);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 10, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_20s = "\16\uffff";
    static final String dfa_21s = "\1\4\1\uffff\1\30\1\4\1\0\3\uffff\2\4\1\uffff\1\30\1\4\1\41";
    static final String dfa_22s = "\1\u00e3\1\uffff\1\131\1\u0081\1\0\3\uffff\1\4\1\10\1\uffff\1\131\1\4\1\131";
    static final String dfa_23s = "\1\uffff\1\1\3\uffff\1\3\1\4\1\5\2\uffff\1\2\3\uffff";
    static final String dfa_24s = "\4\uffff\1\0\11\uffff}>";
    static final String[] dfa_25s = {
            "\1\2\1\3\2\uffff\1\4\1\1\1\uffff\1\5\12\uffff\2\6\11\uffff\1\7\65\uffff\1\1\23\uffff\2\7\6\uffff\2\7\1\uffff\14\7\140\uffff\2\5",
            "",
            "\1\1\10\uffff\1\12\21\uffff\1\11\1\1\43\uffff\1\1\1\10",
            "\1\7\3\uffff\1\7\17\uffff\1\1\10\uffff\1\7\111\uffff\2\7\6\uffff\2\7\1\uffff\14\7",
            "\1\uffff",
            "",
            "",
            "",
            "\1\13",
            "\1\1\3\uffff\1\7",
            "",
            "\1\1\10\uffff\1\12\21\uffff\1\11\1\1\44\uffff\1\14",
            "\1\15",
            "\1\12\21\uffff\1\11\45\uffff\1\14"
    };

    static final short[] dfa_20 = DFA.unpackEncodedString(dfa_20s);
    static final char[] dfa_21 = DFA.unpackEncodedStringToUnsignedChars(dfa_21s);
    static final char[] dfa_22 = DFA.unpackEncodedStringToUnsignedChars(dfa_22s);
    static final short[] dfa_23 = DFA.unpackEncodedString(dfa_23s);
    static final short[] dfa_24 = DFA.unpackEncodedString(dfa_24s);
    static final short[][] dfa_25 = unpackEncodedStringArray(dfa_25s);

    class DFA9 extends DFA {

        public DFA9(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 9;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "453:4: ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA9_4 = input.LA(1);

                         
                        int index9_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index9_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 9, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_26s = "\47\uffff";
    static final String dfa_27s = "\1\4\2\uffff\3\0\1\uffff\1\0\22\uffff\1\0\14\uffff";
    static final String dfa_28s = "\1\u00e3\2\uffff\3\0\1\uffff\1\0\22\uffff\1\0\14\uffff";
    static final String dfa_29s = "\1\uffff\1\1\4\uffff\1\4\1\uffff\1\6\22\uffff\1\10\5\uffff\1\11\1\12\1\2\1\3\1\5\1\7";
    static final String dfa_30s = "\3\uffff\1\0\1\1\1\2\1\uffff\1\3\22\uffff\1\4\14\uffff}>";
    static final String[] dfa_31s = {
            "\1\10\1\7\2\uffff\1\10\2\uffff\1\5\12\uffff\2\1\11\uffff\1\32\13\uffff\1\6\1\41\1\42\73\uffff\2\10\6\uffff\2\10\1\uffff\14\10\70\uffff\1\33\41\uffff\5\33\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_26 = DFA.unpackEncodedString(dfa_26s);
    static final char[] dfa_27 = DFA.unpackEncodedStringToUnsignedChars(dfa_27s);
    static final char[] dfa_28 = DFA.unpackEncodedStringToUnsignedChars(dfa_28s);
    static final short[] dfa_29 = DFA.unpackEncodedString(dfa_29s);
    static final short[] dfa_30 = DFA.unpackEncodedString(dfa_30s);
    static final short[][] dfa_31 = unpackEncodedStringArray(dfa_31s);

    class DFA30 extends DFA {

        public DFA30(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 30;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_27;
            this.max = dfa_28;
            this.accept = dfa_29;
            this.special = dfa_30;
            this.transition = dfa_31;
        }
        public String getDescription() {
            return "1158:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | (otherlv_14= '(' ( (lv_toResolve_15_0= ruleConceptDeclaration ) ) ( ( ( ',' )=>otherlv_16= ',' ) ( (lv_toResolve_17_0= ruleConceptDeclaration ) ) )* otherlv_18= ')' ) | ( ( (lv_op_19_0= ruleREL_OPERATOR ) ) ( (lv_expression_20_0= ruleNumber ) ) ) | ( (lv_nodata_21_0= 'unknown' ) ) | ( (lv_star_22_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA30_3 = input.LA(1);

                         
                        int index30_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalKim()) ) {s = 35;}

                        else if ( (synpred45_InternalKim()) ) {s = 36;}

                         
                        input.seek(index30_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA30_4 = input.LA(1);

                         
                        int index30_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalKim()) ) {s = 35;}

                        else if ( (synpred45_InternalKim()) ) {s = 36;}

                         
                        input.seek(index30_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA30_5 = input.LA(1);

                         
                        int index30_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred44_InternalKim()) ) {s = 35;}

                        else if ( (synpred45_InternalKim()) ) {s = 36;}

                         
                        input.seek(index30_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA30_7 = input.LA(1);

                         
                        int index30_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred47_InternalKim()) ) {s = 37;}

                        else if ( (synpred48_InternalKim()) ) {s = 8;}

                         
                        input.seek(index30_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA30_26 = input.LA(1);

                         
                        int index30_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred48_InternalKim()) ) {s = 8;}

                        else if ( (synpred51_InternalKim()) ) {s = 38;}

                         
                        input.seek(index30_26);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 30, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_32s = "\1\4\2\uffff\3\0\1\uffff\1\0\3\uffff\1\0\33\uffff";
    static final String dfa_33s = "\1\u00e3\2\uffff\3\0\1\uffff\1\0\3\uffff\1\0\33\uffff";
    static final String dfa_34s = "\3\uffff\1\0\1\1\1\2\1\uffff\1\3\3\uffff\1\4\33\uffff}>";
    static final String[] dfa_35s = {
            "\1\13\1\7\2\uffff\1\10\2\uffff\1\5\12\uffff\2\1\11\uffff\1\10\13\uffff\1\6\1\41\1\42\73\uffff\2\10\6\uffff\2\10\1\uffff\14\10\70\uffff\1\33\41\uffff\5\33\1\uffff\1\3\1\4",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_32 = DFA.unpackEncodedStringToUnsignedChars(dfa_32s);
    static final char[] dfa_33 = DFA.unpackEncodedStringToUnsignedChars(dfa_33s);
    static final short[] dfa_34 = DFA.unpackEncodedString(dfa_34s);
    static final short[][] dfa_35 = unpackEncodedStringArray(dfa_35s);

    class DFA35 extends DFA {

        public DFA35(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 35;
            this.eot = dfa_26;
            this.eof = dfa_26;
            this.min = dfa_32;
            this.max = dfa_33;
            this.accept = dfa_29;
            this.special = dfa_34;
            this.transition = dfa_35;
        }
        public String getDescription() {
            return "1516:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_id_14_1= RULE_LOWERCASE_ID | lv_id_14_2= rulePropertyId ) ) ) | ( ( (lv_op_15_0= ruleREL_OPERATOR ) ) ( (lv_expression_16_0= ruleNumber ) ) ) | ( (lv_nodata_17_0= 'unknown' ) ) | ( (lv_star_18_0= '*' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA35_3 = input.LA(1);

                         
                        int index35_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalKim()) ) {s = 35;}

                        else if ( (synpred63_InternalKim()) ) {s = 36;}

                         
                        input.seek(index35_3);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA35_4 = input.LA(1);

                         
                        int index35_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalKim()) ) {s = 35;}

                        else if ( (synpred63_InternalKim()) ) {s = 36;}

                         
                        input.seek(index35_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA35_5 = input.LA(1);

                         
                        int index35_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred62_InternalKim()) ) {s = 35;}

                        else if ( (synpred63_InternalKim()) ) {s = 36;}

                         
                        input.seek(index35_5);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA35_7 = input.LA(1);

                         
                        int index35_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred65_InternalKim()) ) {s = 37;}

                        else if ( (synpred66_InternalKim()) ) {s = 8;}

                         
                        input.seek(index35_7);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA35_11 = input.LA(1);

                         
                        int index35_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred66_InternalKim()) ) {s = 8;}

                        else if ( (synpred68_InternalKim()) ) {s = 38;}

                         
                        input.seek(index35_11);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 35, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_36s = "\10\uffff";
    static final String dfa_37s = "\1\2\7\uffff";
    static final String dfa_38s = "\1\22\1\4\1\uffff\1\41\1\uffff\2\4\1\41";
    static final String dfa_39s = "\1\67\1\u00e3\1\uffff\1\131\1\uffff\1\4\1\10\1\131";
    static final String dfa_40s = "\2\uffff\1\2\1\uffff\1\1\3\uffff";
    static final String dfa_41s = "\10\uffff}>";
    static final String[] dfa_42s = {
            "\1\2\6\uffff\1\1\2\uffff\1\2\30\uffff\3\2",
            "\1\3\1\4\1\2\1\uffff\1\4\2\uffff\1\4\12\uffff\2\4\7\uffff\2\2\1\4\1\uffff\3\2\7\uffff\3\4\4\uffff\1\4\42\uffff\1\2\23\uffff\2\4\6\uffff\2\4\1\uffff\14\4\70\uffff\1\4\41\uffff\5\4\1\uffff\2\4",
            "",
            "\1\2\21\uffff\1\6\45\uffff\1\5",
            "",
            "\1\7",
            "\1\2\3\uffff\1\4",
            "\1\2\21\uffff\1\6\45\uffff\1\5"
    };

    static final short[] dfa_36 = DFA.unpackEncodedString(dfa_36s);
    static final short[] dfa_37 = DFA.unpackEncodedString(dfa_37s);
    static final char[] dfa_38 = DFA.unpackEncodedStringToUnsignedChars(dfa_38s);
    static final char[] dfa_39 = DFA.unpackEncodedStringToUnsignedChars(dfa_39s);
    static final short[] dfa_40 = DFA.unpackEncodedString(dfa_40s);
    static final short[] dfa_41 = DFA.unpackEncodedString(dfa_41s);
    static final short[][] dfa_42 = unpackEncodedStringArray(dfa_42s);

    class DFA44 extends DFA {

        public DFA44(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 44;
            this.eot = dfa_36;
            this.eof = dfa_37;
            this.min = dfa_38;
            this.max = dfa_39;
            this.accept = dfa_40;
            this.special = dfa_41;
            this.transition = dfa_42;
        }
        public String getDescription() {
            return "()* loopback of 2184:3: ( ( ( ',' )=>otherlv_9= ',' ) ( (lv_elements_10_0= ruleTableClassifier ) ) )*";
        }
    }
    static final String dfa_43s = "\26\uffff";
    static final String dfa_44s = "\4\uffff\1\17\1\uffff\1\21\13\uffff\1\17\2\uffff\1\17";
    static final String dfa_45s = "\1\4\1\uffff\2\13\1\22\1\uffff\1\4\5\uffff\3\13\3\uffff\1\22\2\13\1\22";
    static final String dfa_46s = "\1\u00e3\1\uffff\2\13\1\u00e5\1\uffff\1\u0081\5\uffff\1\13\2\u00e3\3\uffff\1\u00e5\2\13\1\67";
    static final String dfa_47s = "\1\uffff\1\1\3\uffff\1\4\1\uffff\1\6\1\7\1\10\1\11\1\12\3\uffff\1\3\1\2\1\5\4\uffff";
    static final String dfa_48s = "\26\uffff}>";
    static final String[] dfa_49s = {
            "\1\7\1\6\2\uffff\1\7\2\uffff\1\4\12\uffff\2\1\11\uffff\1\7\13\uffff\1\5\1\11\1\12\4\uffff\1\13\66\uffff\2\7\6\uffff\2\7\1\uffff\14\7\70\uffff\1\10\41\uffff\5\10\1\uffff\1\2\1\3",
            "",
            "\1\4",
            "\1\4",
            "\1\17\6\uffff\1\17\2\uffff\1\17\12\uffff\1\20\3\uffff\2\20\10\uffff\3\17\41\uffff\1\14\u008a\uffff\1\15\1\16",
            "",
            "\1\7\3\uffff\1\7\11\uffff\1\21\6\uffff\1\21\2\uffff\1\21\4\uffff\1\7\23\uffff\3\21\63\uffff\2\7\6\uffff\2\7\1\uffff\14\7",
            "",
            "",
            "",
            "",
            "",
            "\1\22",
            "\1\25\u00d6\uffff\1\23\1\24",
            "\1\25\u00d6\uffff\1\23\1\24",
            "",
            "",
            "",
            "\1\17\6\uffff\1\17\2\uffff\1\17\12\uffff\1\20\3\uffff\2\20\10\uffff\3\17\u00ac\uffff\1\15\1\16",
            "\1\25",
            "\1\25",
            "\1\17\6\uffff\1\17\2\uffff\1\17\12\uffff\1\20\3\uffff\2\20\10\uffff\3\17"
    };

    static final short[] dfa_43 = DFA.unpackEncodedString(dfa_43s);
    static final short[] dfa_44 = DFA.unpackEncodedString(dfa_44s);
    static final char[] dfa_45 = DFA.unpackEncodedStringToUnsignedChars(dfa_45s);
    static final char[] dfa_46 = DFA.unpackEncodedStringToUnsignedChars(dfa_46s);
    static final short[] dfa_47 = DFA.unpackEncodedString(dfa_47s);
    static final short[] dfa_48 = DFA.unpackEncodedString(dfa_48s);
    static final short[][] dfa_49 = unpackEncodedStringArray(dfa_49s);

    class DFA48 extends DFA {

        public DFA48(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 48;
            this.eot = dfa_43;
            this.eof = dfa_44;
            this.min = dfa_45;
            this.max = dfa_46;
            this.accept = dfa_47;
            this.special = dfa_48;
            this.transition = dfa_49;
        }
        public String getDescription() {
            return "2230:2: ( ( ( (lv_boolean_0_0= 'true' ) ) | ( (lv_boolean_1_0= 'false' ) ) ) | ( ( (lv_int0_2_0= ruleNumber ) ) ( ( (lv_leftLimit_3_0= 'inclusive' ) ) | otherlv_4= 'exclusive' )? ( ( 'to' )=>otherlv_5= 'to' ) ( ( ( ruleNumber ) )=> (lv_int1_6_0= ruleNumber ) ) ( ( (lv_rightLimit_7_0= 'inclusive' ) ) | otherlv_8= 'exclusive' )? ) | ( (lv_num_9_0= ruleNumber ) ) | (otherlv_10= 'in' ( (lv_set_11_0= ruleList ) ) ) | ( (lv_string_12_0= RULE_STRING ) ) | ( (lv_concept_13_0= ruleConceptDeclaration ) ) | ( ( (lv_op_14_0= ruleREL_OPERATOR ) ) ( (lv_expression_15_0= ruleNumber ) ) ) | ( (lv_nodata_16_0= 'unknown' ) ) | ( (lv_star_17_0= '*' ) ) | ( (lv_anything_18_0= '#' ) ) )";
        }
    }
    static final String dfa_50s = "\42\uffff";
    static final String dfa_51s = "\1\2\41\uffff";
    static final String dfa_52s = "\1\4\1\0\40\uffff";
    static final String dfa_53s = "\1\u0081\1\0\40\uffff";
    static final String dfa_54s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_55s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_56s = {
            "\2\2\2\uffff\1\2\11\uffff\1\2\11\uffff\1\2\4\uffff\1\1\1\2\22\uffff\3\2\7\uffff\5\2\47\uffff\2\2\6\uffff\2\2\1\uffff\14\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_50 = DFA.unpackEncodedString(dfa_50s);
    static final short[] dfa_51 = DFA.unpackEncodedString(dfa_51s);
    static final char[] dfa_52 = DFA.unpackEncodedStringToUnsignedChars(dfa_52s);
    static final char[] dfa_53 = DFA.unpackEncodedStringToUnsignedChars(dfa_53s);
    static final short[] dfa_54 = DFA.unpackEncodedString(dfa_54s);
    static final short[] dfa_55 = DFA.unpackEncodedString(dfa_55s);
    static final short[][] dfa_56 = unpackEncodedStringArray(dfa_56s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_50;
            this.eof = dfa_51;
            this.min = dfa_52;
            this.max = dfa_53;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_56;
        }
        public String getDescription() {
            return "2834:4: ( (lv_parameters_19_0= ruleList ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_1 = input.LA(1);

                         
                        int index56_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalKim()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index56_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_57s = "\1\20\46\uffff";
    static final String dfa_58s = "\1\4\3\uffff\1\0\3\uffff\2\0\2\uffff\2\0\31\uffff";
    static final String dfa_59s = "\1\u00e3\3\uffff\1\0\3\uffff\2\0\2\uffff\2\0\31\uffff";
    static final String dfa_60s = "\1\uffff\3\1\1\uffff\3\1\2\uffff\2\1\2\uffff\2\1\1\2\26\uffff";
    static final String dfa_61s = "\1\0\3\uffff\1\1\3\uffff\1\2\1\3\2\uffff\1\4\1\5\31\uffff}>";
    static final String[] dfa_62s = {
            "\1\11\1\4\1\12\1\13\1\14\1\uffff\1\7\1\3\6\uffff\1\20\3\uffff\1\5\1\6\1\uffff\1\10\2\uffff\1\20\4\uffff\1\15\1\20\13\uffff\1\17\6\uffff\3\20\63\uffff\2\20\6\uffff\2\20\1\uffff\14\20\65\uffff\1\16\52\uffff\1\1\1\2",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final short[] dfa_57 = DFA.unpackEncodedString(dfa_57s);
    static final char[] dfa_58 = DFA.unpackEncodedStringToUnsignedChars(dfa_58s);
    static final char[] dfa_59 = DFA.unpackEncodedStringToUnsignedChars(dfa_59s);
    static final short[] dfa_60 = DFA.unpackEncodedString(dfa_60s);
    static final short[] dfa_61 = DFA.unpackEncodedString(dfa_61s);
    static final short[][] dfa_62 = unpackEncodedStringArray(dfa_62s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_26;
            this.eof = dfa_57;
            this.min = dfa_58;
            this.max = dfa_59;
            this.accept = dfa_60;
            this.special = dfa_61;
            this.transition = dfa_62;
        }
        public String getDescription() {
            return "3410:4: ( ( ( ruleValue ) )=> (lv_condition_25_0= ruleValue ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_0 = input.LA(1);

                         
                        int index73_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA73_0==226) && (synpred138_InternalKim())) {s = 1;}

                        else if ( (LA73_0==227) && (synpred138_InternalKim())) {s = 2;}

                        else if ( (LA73_0==RULE_INT) && (synpred138_InternalKim())) {s = 3;}

                        else if ( (LA73_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA73_0==22) && (synpred138_InternalKim())) {s = 5;}

                        else if ( (LA73_0==23) && (synpred138_InternalKim())) {s = 6;}

                        else if ( (LA73_0==RULE_ID) && (synpred138_InternalKim())) {s = 7;}

                        else if ( (LA73_0==25) ) {s = 8;}

                        else if ( (LA73_0==RULE_LOWERCASE_ID) ) {s = 9;}

                        else if ( (LA73_0==RULE_EXPR) && (synpred138_InternalKim())) {s = 10;}

                        else if ( (LA73_0==RULE_UPPERCASE_ID) && (synpred138_InternalKim())) {s = 11;}

                        else if ( (LA73_0==RULE_CAMELCASE_ID) ) {s = 12;}

                        else if ( (LA73_0==33) ) {s = 13;}

                        else if ( (LA73_0==183) && (synpred138_InternalKim())) {s = 14;}

                        else if ( (LA73_0==46) && (synpred138_InternalKim())) {s = 15;}

                        else if ( (LA73_0==EOF||LA73_0==18||LA73_0==28||LA73_0==34||(LA73_0>=53 && LA73_0<=55)||(LA73_0>=107 && LA73_0<=108)||(LA73_0>=115 && LA73_0<=116)||(LA73_0>=118 && LA73_0<=129)) ) {s = 16;}

                         
                        input.seek(index73_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA73_4 = input.LA(1);

                         
                        int index73_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalKim()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index73_4);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA73_8 = input.LA(1);

                         
                        int index73_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalKim()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index73_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA73_9 = input.LA(1);

                         
                        int index73_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalKim()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index73_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA73_12 = input.LA(1);

                         
                        int index73_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalKim()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index73_12);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA73_13 = input.LA(1);

                         
                        int index73_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred138_InternalKim()) ) {s = 15;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index73_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_63s = "\20\uffff";
    static final String dfa_64s = "\1\4\10\uffff\1\0\6\uffff";
    static final String dfa_65s = "\1\u00e3\10\uffff\1\0\6\uffff";
    static final String dfa_66s = "\1\uffff\1\1\10\uffff\1\3\1\4\1\uffff\1\5\1\6\1\2";
    static final String dfa_67s = "\11\uffff\1\0\6\uffff}>";
    static final String[] dfa_68s = {
            "\1\11\1\1\1\12\2\13\1\uffff\2\1\12\uffff\2\1\1\uffff\1\1\7\uffff\1\15\14\uffff\1\16\u00b3\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_63 = DFA.unpackEncodedString(dfa_63s);
    static final char[] dfa_64 = DFA.unpackEncodedStringToUnsignedChars(dfa_64s);
    static final char[] dfa_65 = DFA.unpackEncodedStringToUnsignedChars(dfa_65s);
    static final short[] dfa_66 = DFA.unpackEncodedString(dfa_66s);
    static final short[] dfa_67 = DFA.unpackEncodedString(dfa_67s);
    static final short[][] dfa_68 = unpackEncodedStringArray(dfa_68s);

    class DFA80 extends DFA {

        public DFA80(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 80;
            this.eot = dfa_63;
            this.eof = dfa_63;
            this.min = dfa_64;
            this.max = dfa_65;
            this.accept = dfa_66;
            this.special = dfa_67;
            this.transition = dfa_68;
        }
        public String getDescription() {
            return "3514:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( ( (lv_expr_2_0= RULE_EXPR ) ) (otherlv_3= 'in' ( ( (lv_language_4_1= RULE_LOWERCASE_ID | lv_language_4_2= RULE_UPPERCASE_ID | lv_language_4_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( ( (lv_id_5_1= RULE_LOWERCASE_ID | lv_id_5_2= RULE_UPPERCASE_ID | lv_id_5_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_6_0= ruleList ) ) | ( (lv_null_7_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA80_9 = input.LA(1);

                         
                        int index80_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred142_InternalKim()) ) {s = 15;}

                        else if ( (synpred149_InternalKim()) ) {s = 11;}

                         
                        input.seek(index80_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 80, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_69s = "\7\uffff";
    static final String dfa_70s = "\1\4\1\41\2\uffff\1\4\1\uffff\1\41";
    static final String dfa_71s = "\1\127\1\131\2\uffff\1\4\1\uffff\1\131";
    static final String dfa_72s = "\2\uffff\1\2\1\3\1\uffff\1\1\1\uffff";
    static final String dfa_73s = "\7\uffff}>";
    static final String[] dfa_74s = {
            "\1\1\1\uffff\1\2\120\uffff\1\3",
            "\1\5\21\uffff\1\3\45\uffff\1\4",
            "",
            "",
            "\1\6",
            "",
            "\1\5\21\uffff\1\3\45\uffff\1\4"
    };

    static final short[] dfa_69 = DFA.unpackEncodedString(dfa_69s);
    static final char[] dfa_70 = DFA.unpackEncodedStringToUnsignedChars(dfa_70s);
    static final char[] dfa_71 = DFA.unpackEncodedStringToUnsignedChars(dfa_71s);
    static final short[] dfa_72 = DFA.unpackEncodedString(dfa_72s);
    static final short[] dfa_73 = DFA.unpackEncodedString(dfa_73s);
    static final short[][] dfa_74 = unpackEncodedStringArray(dfa_74s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_70;
            this.max = dfa_71;
            this.accept = dfa_72;
            this.special = dfa_73;
            this.transition = dfa_74;
        }
        public String getDescription() {
            return "3797:2: ( ( (lv_function_0_0= ruleFunction ) ) | ( ( (lv_expr_1_0= RULE_EXPR ) ) (otherlv_2= 'in' ( ( (lv_language_3_1= RULE_LOWERCASE_ID | lv_language_3_2= RULE_UPPERCASE_ID | lv_language_3_3= RULE_CAMELCASE_ID ) ) ) )? ) | ( (lv_urn_4_0= ruleUrnId ) ) )";
        }
    }
    static final String dfa_75s = "\1\22\1\uffff\1\4\13\uffff";
    static final String dfa_76s = "\1\126\1\uffff\1\u00b7\13\uffff";
    static final String dfa_77s = "\1\uffff\1\10\1\uffff\1\2\1\3\1\4\1\5\1\6\3\7\3\1";
    static final String dfa_78s = "\1\1\1\uffff\1\0\13\uffff}>";
    static final String[] dfa_79s = {
            "\1\1\10\uffff\1\2\1\1\20\uffff\1\5\40\uffff\1\3\1\4\2\uffff\1\6\1\7\1\10\1\uffff\1\11",
            "",
            "\1\15\34\uffff\1\13\15\uffff\1\14\u0087\uffff\1\12",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_75 = DFA.unpackEncodedStringToUnsignedChars(dfa_75s);
    static final char[] dfa_76 = DFA.unpackEncodedStringToUnsignedChars(dfa_76s);
    static final short[] dfa_77 = DFA.unpackEncodedString(dfa_77s);
    static final short[] dfa_78 = DFA.unpackEncodedString(dfa_78s);
    static final short[][] dfa_79 = unpackEncodedStringArray(dfa_79s);

    class DFA99 extends DFA {

        public DFA99(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 99;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_75;
            this.max = dfa_76;
            this.accept = dfa_77;
            this.special = dfa_78;
            this.transition = dfa_79;
        }
        public String getDescription() {
            return "()* loopback of 4159:6: ( ({...}? => ( ({...}? => (otherlv_10= 'using' ( (lv_imported_11_0= ruleImport ) ) ( ( ( ',' )=>otherlv_12= ',' ) ( (lv_imported_13_0= ruleImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_14= 'imports' ( (lv_owlImports_15_0= ruleOwlImport ) ) (otherlv_16= ',' ( (lv_owlImports_17_0= ruleOwlImport ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'covering' ( (lv_coverage_19_0= ruleFunction ) ) ( ( ( ',' )=>otherlv_20= ',' ) ( (lv_coverage_21_0= ruleFunction ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_22= 'in' otherlv_23= 'domain' ( ( (lv_rootDomain_24_0= 'root' ) ) | ( (lv_domainConcept_25_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_26= 'disjoint' otherlv_27= 'with' ( (lv_disjointNamespaces_28_0= rulePathName ) ) (otherlv_29= ',' ( (lv_disjointNamespaces_30_0= rulePathName ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'version' ( (lv_version_32_0= ruleVersionNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( ( ({...}? => ( ({...}? => (otherlv_34= 'resolve' (otherlv_35= 'from' ( (lv_lookupNamespace_36_0= rulePathName ) )* )? ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'outside' ( (lv_blacklistNamespace_38_0= rulePathName ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_39= 'using' ( (lv_weights_40_0= ruleMetadata ) ) ) ) ) ) )+ {...}?) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA99_2 = input.LA(1);

                         
                        int index99_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA99_2 == 183 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 10;}

                        else if ( LA99_2 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 11;}

                        else if ( LA99_2 == 47 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 12;}

                        else if ( LA99_2 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 0) ) {s = 13;}

                         
                        input.seek(index99_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA99_0 = input.LA(1);

                         
                        int index99_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA99_0==18||LA99_0==28) ) {s = 1;}

                        else if ( (LA99_0==27) ) {s = 2;}

                        else if ( LA99_0 == 78 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 1) ) {s = 3;}

                        else if ( LA99_0 == 79 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 2) ) {s = 4;}

                        else if ( LA99_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 3) ) {s = 5;}

                        else if ( LA99_0 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 4) ) {s = 6;}

                        else if ( LA99_0 == 83 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 5) ) {s = 7;}

                        else if ( LA99_0 == 84 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 8;}

                        else if ( LA99_0 == 86 && getUnorderedGroupHelper().canSelect(grammarAccess.getNamespaceAccess().getUnorderedGroup_5(), 6) ) {s = 9;}

                         
                        input.seek(index99_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 99, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_80s = "\36\uffff";
    static final String dfa_81s = "\1\2\35\uffff";
    static final String dfa_82s = "\1\4\27\0\6\uffff";
    static final String dfa_83s = "\1\u0081\27\0\6\uffff";
    static final String dfa_84s = "\30\uffff\4\2\1\3\1\1";
    static final String dfa_85s = "\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\6\uffff}>";
    static final String[] dfa_86s = {
            "\1\10\1\4\2\uffff\1\7\11\uffff\1\1\11\uffff\1\33\4\uffff\1\27\1\3\22\uffff\1\30\1\31\1\32\63\uffff\1\11\1\12\6\uffff\1\5\1\6\1\uffff\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_80 = DFA.unpackEncodedString(dfa_80s);
    static final short[] dfa_81 = DFA.unpackEncodedString(dfa_81s);
    static final char[] dfa_82 = DFA.unpackEncodedStringToUnsignedChars(dfa_82s);
    static final char[] dfa_83 = DFA.unpackEncodedStringToUnsignedChars(dfa_83s);
    static final short[] dfa_84 = DFA.unpackEncodedString(dfa_84s);
    static final short[] dfa_85 = DFA.unpackEncodedString(dfa_85s);
    static final short[][] dfa_86 = unpackEncodedStringArray(dfa_86s);

    class DFA125 extends DFA {

        public DFA125(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 125;
            this.eot = dfa_80;
            this.eof = dfa_81;
            this.min = dfa_82;
            this.max = dfa_83;
            this.accept = dfa_84;
            this.special = dfa_85;
            this.transition = dfa_86;
        }
        public String getDescription() {
            return "()+ loopback of 5151:5: ( ({...}? => ( ({...}? => ( ( (lv_concept_1_0= ruleNamedObservableSemantics ) ) ( (lv_docstring_2_0= RULE_STRING ) )? (otherlv_3= 'extends' ( (lv_parents_4_0= rulePathName ) ) (otherlv_5= ',' ( (lv_parents_6_0= rulePathName ) ) )* )? (otherlv_7= 'observing' ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) ) (otherlv_12= ',' ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) ) )* )? (otherlv_17= 'using' ( (lv_accessor_18_0= ruleFunction ) )? )? ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_actions_19_0= ruleActionSpecification ) )* (otherlv_20= 'with' otherlv_21= 'metadata' ( (lv_metadata_22_0= ruleMetadata ) ) )? (otherlv_23= 'with' otherlv_24= 'documentation' ( (lv_documentation_25_0= ruleMetadata ) ) )? ) ) ) ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA125_0 = input.LA(1);

                         
                        int index125_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA125_0==18) ) {s = 1;}

                        else if ( (LA125_0==EOF) ) {s = 2;}

                        else if ( (LA125_0==34) ) {s = 3;}

                        else if ( (LA125_0==RULE_STRING) ) {s = 4;}

                        else if ( (LA125_0==115) ) {s = 5;}

                        else if ( (LA125_0==116) ) {s = 6;}

                        else if ( (LA125_0==RULE_CAMELCASE_ID) ) {s = 7;}

                        else if ( (LA125_0==RULE_LOWERCASE_ID) ) {s = 8;}

                        else if ( (LA125_0==107) ) {s = 9;}

                        else if ( (LA125_0==108) ) {s = 10;}

                        else if ( (LA125_0==118) ) {s = 11;}

                        else if ( (LA125_0==119) ) {s = 12;}

                        else if ( (LA125_0==120) ) {s = 13;}

                        else if ( (LA125_0==121) ) {s = 14;}

                        else if ( (LA125_0==122) ) {s = 15;}

                        else if ( (LA125_0==123) ) {s = 16;}

                        else if ( (LA125_0==124) ) {s = 17;}

                        else if ( (LA125_0==125) ) {s = 18;}

                        else if ( (LA125_0==126) ) {s = 19;}

                        else if ( (LA125_0==127) ) {s = 20;}

                        else if ( (LA125_0==128) ) {s = 21;}

                        else if ( (LA125_0==129) ) {s = 22;}

                        else if ( (LA125_0==33) ) {s = 23;}

                        else if ( LA125_0 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 24;}

                        else if ( LA125_0 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 25;}

                        else if ( LA125_0 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 26;}

                        else if ( LA125_0 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA125_1 = input.LA(1);

                         
                        int index125_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index125_1);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA125_2 = input.LA(1);

                         
                        int index125_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index125_2);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA125_3 = input.LA(1);

                         
                        int index125_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                        else if ( getUnorderedGroupHelper().canLeave(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup()) ) {s = 28;}

                         
                        input.seek(index125_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA125_4 = input.LA(1);

                         
                        int index125_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_4);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA125_5 = input.LA(1);

                         
                        int index125_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_5);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA125_6 = input.LA(1);

                         
                        int index125_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_6);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA125_7 = input.LA(1);

                         
                        int index125_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_7);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA125_8 = input.LA(1);

                         
                        int index125_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_8);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA125_9 = input.LA(1);

                         
                        int index125_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_9);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA125_10 = input.LA(1);

                         
                        int index125_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_10);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA125_11 = input.LA(1);

                         
                        int index125_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_11);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA125_12 = input.LA(1);

                         
                        int index125_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_12);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA125_13 = input.LA(1);

                         
                        int index125_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_13);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA125_14 = input.LA(1);

                         
                        int index125_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_14);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA125_15 = input.LA(1);

                         
                        int index125_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_15);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA125_16 = input.LA(1);

                         
                        int index125_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_16);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA125_17 = input.LA(1);

                         
                        int index125_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_17);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA125_18 = input.LA(1);

                         
                        int index125_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_18);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA125_19 = input.LA(1);

                         
                        int index125_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_19);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA125_20 = input.LA(1);

                         
                        int index125_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_20);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA125_21 = input.LA(1);

                         
                        int index125_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_21);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA125_22 = input.LA(1);

                         
                        int index125_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_22);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA125_23 = input.LA(1);

                         
                        int index125_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred212_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 0) ) {s = 29;}

                        else if ( synpred216_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getObserveStatementBodyAccess().getUnorderedGroup(), 1) ) {s = 27;}

                         
                        input.seek(index125_23);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 125, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_87s = "\1\u00e3\1\0\40\uffff";
    static final String[] dfa_88s = {
            "\5\2\1\uffff\2\2\12\uffff\2\2\1\uffff\1\2\7\uffff\1\1\14\uffff\1\2\55\uffff\1\2\16\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\2\52\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_87 = DFA.unpackEncodedStringToUnsignedChars(dfa_87s);
    static final short[][] dfa_88 = unpackEncodedStringArray(dfa_88s);

    class DFA116 extends DFA {

        public DFA116(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 116;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_52;
            this.max = dfa_87;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "5249:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA116_1 = input.LA(1);

                         
                        int index116_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_InternalKim()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index116_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 116, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA117 extends DFA {

        public DFA117(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 117;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_52;
            this.max = dfa_87;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "5305:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA117_1 = input.LA(1);

                         
                        int index117_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred207_InternalKim()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index117_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 117, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_89s = "\6\uffff";
    static final String dfa_90s = "\1\2\5\uffff";
    static final String dfa_91s = "\1\4\1\41\1\uffff\1\4\1\uffff\1\41";
    static final String dfa_92s = "\1\u0081\1\131\1\uffff\1\4\1\uffff\1\131";
    static final String dfa_93s = "\2\uffff\1\2\1\uffff\1\1\1\uffff";
    static final String dfa_94s = "\6\uffff}>";
    static final String[] dfa_95s = {
            "\1\1\1\2\2\uffff\1\2\11\uffff\1\2\11\uffff\1\2\4\uffff\2\2\22\uffff\3\2\63\uffff\2\2\6\uffff\2\2\1\uffff\14\2",
            "\1\4\21\uffff\1\2\45\uffff\1\3",
            "",
            "\1\5",
            "",
            "\1\4\21\uffff\1\2\45\uffff\1\3"
    };

    static final short[] dfa_89 = DFA.unpackEncodedString(dfa_89s);
    static final short[] dfa_90 = DFA.unpackEncodedString(dfa_90s);
    static final char[] dfa_91 = DFA.unpackEncodedStringToUnsignedChars(dfa_91s);
    static final char[] dfa_92 = DFA.unpackEncodedStringToUnsignedChars(dfa_92s);
    static final short[] dfa_93 = DFA.unpackEncodedString(dfa_93s);
    static final short[] dfa_94 = DFA.unpackEncodedString(dfa_94s);
    static final short[][] dfa_95 = unpackEncodedStringArray(dfa_95s);

    class DFA120 extends DFA {

        public DFA120(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 120;
            this.eot = dfa_89;
            this.eof = dfa_90;
            this.min = dfa_91;
            this.max = dfa_92;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_95;
        }
        public String getDescription() {
            return "5363:9: ( (lv_accessor_18_0= ruleFunction ) )?";
        }
    }
    static final String dfa_96s = "\41\uffff";
    static final String dfa_97s = "\1\4\3\uffff\1\0\4\uffff\1\0\2\uffff\2\0\23\uffff";
    static final String dfa_98s = "\1\u00e3\3\uffff\1\0\4\uffff\1\0\2\uffff\2\0\23\uffff";
    static final String dfa_99s = "\1\uffff\1\1\16\uffff\1\2\20\uffff";
    static final String dfa_100s = "\4\uffff\1\0\4\uffff\1\1\2\uffff\1\2\1\3\23\uffff}>";
    static final String[] dfa_101s = {
            "\1\11\1\4\2\1\1\14\1\uffff\2\1\12\uffff\2\1\1\uffff\1\1\7\uffff\1\15\14\uffff\1\1\55\uffff\1\20\16\uffff\2\20\6\uffff\2\20\1\uffff\14\20\65\uffff\1\1\52\uffff\2\1",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_96 = DFA.unpackEncodedString(dfa_96s);
    static final char[] dfa_97 = DFA.unpackEncodedStringToUnsignedChars(dfa_97s);
    static final char[] dfa_98 = DFA.unpackEncodedStringToUnsignedChars(dfa_98s);
    static final short[] dfa_99 = DFA.unpackEncodedString(dfa_99s);
    static final short[] dfa_100 = DFA.unpackEncodedString(dfa_100s);
    static final short[][] dfa_101 = unpackEncodedStringArray(dfa_101s);

    class DFA126 extends DFA {

        public DFA126(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 126;
            this.eot = dfa_96;
            this.eof = dfa_96;
            this.min = dfa_97;
            this.max = dfa_98;
            this.accept = dfa_99;
            this.special = dfa_100;
            this.transition = dfa_101;
        }
        public String getDescription() {
            return "5516:3: ( ( (lv_value_0_0= ruleValue ) ) otherlv_1= 'as' )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA126_4 = input.LA(1);

                         
                        int index126_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index126_4);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA126_9 = input.LA(1);

                         
                        int index126_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index126_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA126_12 = input.LA(1);

                         
                        int index126_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index126_12);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA126_13 = input.LA(1);

                         
                        int index126_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred217_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 16;}

                         
                        input.seek(index126_13);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 126, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_102s = "\123\uffff";
    static final String dfa_103s = "\1\1\15\uffff\1\17\104\uffff";
    static final String dfa_104s = "\1\4\1\uffff\1\4\13\uffff\1\4\104\uffff";
    static final String dfa_105s = "\1\u00e3\1\uffff\1\4\13\uffff\1\u00e3\104\uffff";
    static final String dfa_106s = "\1\uffff\1\11\1\uffff\1\1\1\2\1\3\1\4\2\5\2\6\3\7\1\uffff\104\10";
    static final String dfa_107s = "\1\0\15\uffff\1\1\104\uffff}>";
    static final String[] dfa_108s = {
            "\2\1\2\uffff\1\1\2\uffff\1\15\6\uffff\1\1\5\uffff\1\5\4\1\4\uffff\2\1\3\uffff\1\6\6\uffff\1\7\7\uffff\3\1\45\uffff\1\3\1\4\1\10\1\11\1\12\1\2\10\uffff\2\1\6\uffff\2\1\1\uffff\14\1\13\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\6\uffff\3\1\61\uffff\1\13\1\14",
            "",
            "\1\16",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\35\1\31\2\uffff\1\34\2\uffff\1\122\6\uffff\1\27\5\uffff\1\112\1\20\1\21\1\22\1\26\4\uffff\1\54\1\30\3\uffff\1\113\6\uffff\1\114\5\uffff\1\1\1\uffff\1\23\1\24\1\25\41\uffff\1\1\3\uffff\1\110\1\111\1\115\1\116\1\117\1\55\10\uffff\1\36\1\37\6\uffff\1\32\1\33\1\uffff\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\13\uffff\1\56\1\uffff\1\57\1\uffff\1\60\1\61\1\62\1\uffff\1\63\1\64\1\65\1\66\1\67\1\70\1\71\1\72\1\73\1\uffff\1\74\1\75\1\76\1\77\1\100\1\101\1\102\1\103\1\104\6\uffff\1\105\1\106\1\107\61\uffff\1\120\1\121",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_102 = DFA.unpackEncodedString(dfa_102s);
    static final short[] dfa_103 = DFA.unpackEncodedString(dfa_103s);
    static final char[] dfa_104 = DFA.unpackEncodedStringToUnsignedChars(dfa_104s);
    static final char[] dfa_105 = DFA.unpackEncodedStringToUnsignedChars(dfa_105s);
    static final short[] dfa_106 = DFA.unpackEncodedString(dfa_106s);
    static final short[] dfa_107 = DFA.unpackEncodedString(dfa_107s);
    static final short[][] dfa_108 = unpackEncodedStringArray(dfa_108s);

    class DFA132 extends DFA {

        public DFA132(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 132;
            this.eot = dfa_102;
            this.eof = dfa_103;
            this.min = dfa_104;
            this.max = dfa_105;
            this.accept = dfa_106;
            this.special = dfa_107;
            this.transition = dfa_108;
        }
        public String getDescription() {
            return "()* loopback of 5580:6: ( ({...}? => ( ({...}? => (otherlv_5= 'by' ( (lv_by_6_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'down' otherlv_8= 'to' ( ( (lv_downTo_9_1= RULE_CAMELCASE_ID | lv_downTo_9_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_10= 'as' ( (lv_role_11_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'according' otherlv_13= 'to' ( (lv_accordingTo_14_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_15= 'in' ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) ) ) | (otherlv_18= 'per' ( (lv_unit_19_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_optional_20_0= 'optional' ) ) | otherlv_21= 'required' ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_22_0= ruleNumber ) ) otherlv_23= 'to' ( (lv_to_24_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_25= 'named' ( (lv_name_26_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA132_0 = input.LA(1);

                         
                        int index132_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA132_0==EOF||(LA132_0>=RULE_LOWERCASE_ID && LA132_0<=RULE_STRING)||LA132_0==RULE_CAMELCASE_ID||LA132_0==18||(LA132_0>=25 && LA132_0<=28)||(LA132_0>=33 && LA132_0<=34)||(LA132_0>=53 && LA132_0<=55)||(LA132_0>=107 && LA132_0<=108)||(LA132_0>=115 && LA132_0<=116)||(LA132_0>=118 && LA132_0<=129)||LA132_0==141||LA132_0==143||(LA132_0>=145 && LA132_0<=147)||(LA132_0>=149 && LA132_0<=157)||(LA132_0>=159 && LA132_0<=167)||(LA132_0>=174 && LA132_0<=176)) ) {s = 1;}

                        else if ( (LA132_0==98) ) {s = 2;}

                        else if ( LA132_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 0) ) {s = 3;}

                        else if ( LA132_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA132_0 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA132_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 3) ) {s = 6;}

                        else if ( LA132_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 7;}

                        else if ( LA132_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA132_0 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA132_0 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 5) ) {s = 10;}

                        else if ( LA132_0 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 11;}

                        else if ( LA132_0 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 12;}

                        else if ( LA132_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 6) ) {s = 13;}

                         
                        input.seek(index132_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA132_14 = input.LA(1);

                         
                        int index132_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA132_14==51||LA132_14==89) ) {s = 1;}

                        else if ( LA132_14 == EOF && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 15;}

                        else if ( LA132_14 == 25 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 16;}

                        else if ( LA132_14 == 26 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 17;}

                        else if ( LA132_14 == 27 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 18;}

                        else if ( LA132_14 == 53 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 19;}

                        else if ( LA132_14 == 54 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 20;}

                        else if ( LA132_14 == 55 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 21;}

                        else if ( LA132_14 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 22;}

                        else if ( LA132_14 == 18 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 23;}

                        else if ( LA132_14 == 34 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 24;}

                        else if ( LA132_14 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 25;}

                        else if ( LA132_14 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 26;}

                        else if ( LA132_14 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 27;}

                        else if ( LA132_14 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 28;}

                        else if ( LA132_14 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 29;}

                        else if ( LA132_14 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 30;}

                        else if ( LA132_14 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 31;}

                        else if ( LA132_14 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 32;}

                        else if ( LA132_14 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 33;}

                        else if ( LA132_14 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 34;}

                        else if ( LA132_14 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 35;}

                        else if ( LA132_14 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 36;}

                        else if ( LA132_14 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 37;}

                        else if ( LA132_14 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 38;}

                        else if ( LA132_14 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 39;}

                        else if ( LA132_14 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 40;}

                        else if ( LA132_14 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 41;}

                        else if ( LA132_14 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 42;}

                        else if ( LA132_14 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 43;}

                        else if ( LA132_14 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 44;}

                        else if ( LA132_14 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 45;}

                        else if ( LA132_14 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 46;}

                        else if ( LA132_14 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 47;}

                        else if ( LA132_14 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 48;}

                        else if ( LA132_14 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 49;}

                        else if ( LA132_14 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 50;}

                        else if ( LA132_14 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 51;}

                        else if ( LA132_14 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 52;}

                        else if ( LA132_14 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 53;}

                        else if ( LA132_14 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 54;}

                        else if ( LA132_14 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 55;}

                        else if ( LA132_14 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 56;}

                        else if ( LA132_14 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 57;}

                        else if ( LA132_14 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 58;}

                        else if ( LA132_14 == 157 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 59;}

                        else if ( LA132_14 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 60;}

                        else if ( LA132_14 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 61;}

                        else if ( LA132_14 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 62;}

                        else if ( LA132_14 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 63;}

                        else if ( LA132_14 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 64;}

                        else if ( LA132_14 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 65;}

                        else if ( LA132_14 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 66;}

                        else if ( LA132_14 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 67;}

                        else if ( LA132_14 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 68;}

                        else if ( LA132_14 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 69;}

                        else if ( LA132_14 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 70;}

                        else if ( LA132_14 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 71;}

                        else if ( LA132_14 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 72;}

                        else if ( LA132_14 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 73;}

                        else if ( LA132_14 == 24 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 74;}

                        else if ( LA132_14 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 75;}

                        else if ( LA132_14 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 76;}

                        else if ( LA132_14 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 77;}

                        else if ( LA132_14 == 96 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 78;}

                        else if ( LA132_14 == 97 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 79;}

                        else if ( LA132_14 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 80;}

                        else if ( LA132_14 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 81;}

                        else if ( LA132_14 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getObservableSemanticsAccess().getUnorderedGroup_3(), 7) ) {s = 82;}

                         
                        input.seek(index132_14);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 132, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_109s = "\11\uffff";
    static final String dfa_110s = "\1\3\1\uffff\1\3\6\uffff";
    static final String dfa_111s = "\1\4\1\0\1\4\2\uffff\1\4\1\10\1\63\1\0";
    static final String dfa_112s = "\1\u00ed\1\0\1\u00ed\2\uffff\1\4\1\10\1\131\1\0";
    static final String dfa_113s = "\3\uffff\1\1\1\2\4\uffff";
    static final String dfa_114s = "\1\uffff\1\1\6\uffff\1\0}>";
    static final String[] dfa_115s = {
            "\1\2\1\3\1\uffff\1\4\1\1\2\uffff\1\3\6\uffff\1\3\5\uffff\5\3\4\uffff\2\3\3\uffff\1\3\6\uffff\1\3\1\uffff\1\3\5\uffff\3\3\40\uffff\1\3\4\uffff\6\3\10\uffff\2\3\6\uffff\2\3\1\uffff\14\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\1\uffff\11\3\6\uffff\3\3\61\uffff\2\3\11\uffff\1\3",
            "\1\uffff",
            "\2\3\2\uffff\1\3\2\uffff\1\3\6\uffff\1\3\5\uffff\5\3\4\uffff\2\3\3\uffff\1\3\6\uffff\1\3\1\uffff\1\3\3\uffff\1\6\1\uffff\3\3\40\uffff\1\3\1\5\3\uffff\6\3\10\uffff\2\3\6\uffff\2\3\1\uffff\14\3\13\uffff\1\3\1\uffff\1\3\1\uffff\3\3\1\uffff\11\3\1\uffff\11\3\6\uffff\3\3\61\uffff\2\3\11\uffff\1\3",
            "",
            "",
            "\1\7",
            "\1\10",
            "\1\6\45\uffff\1\5",
            "\1\uffff"
    };

    static final short[] dfa_109 = DFA.unpackEncodedString(dfa_109s);
    static final short[] dfa_110 = DFA.unpackEncodedString(dfa_110s);
    static final char[] dfa_111 = DFA.unpackEncodedStringToUnsignedChars(dfa_111s);
    static final char[] dfa_112 = DFA.unpackEncodedStringToUnsignedChars(dfa_112s);
    static final short[] dfa_113 = DFA.unpackEncodedString(dfa_113s);
    static final short[] dfa_114 = DFA.unpackEncodedString(dfa_114s);
    static final short[][] dfa_115 = unpackEncodedStringArray(dfa_115s);

    class DFA129 extends DFA {

        public DFA129(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 129;
            this.eot = dfa_109;
            this.eof = dfa_110;
            this.min = dfa_111;
            this.max = dfa_112;
            this.accept = dfa_113;
            this.special = dfa_114;
            this.transition = dfa_115;
        }
        public String getDescription() {
            return "5752:10: ( ( (lv_unit_16_0= ruleUnit ) ) | ( (lv_currency_17_0= ruleCurrency ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA129_8 = input.LA(1);

                         
                        int index129_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred224_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index129_8);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA129_1 = input.LA(1);

                         
                        int index129_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred224_InternalKim()) ) {s = 3;}

                        else if ( (true) ) {s = 4;}

                         
                        input.seek(index129_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 129, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_116s = "\1\uffff\1\4\3\uffff\1\4";
    static final String dfa_117s = "\1\4\1\22\1\uffff\1\4\1\uffff\1\22";
    static final String dfa_118s = "\1\u00e3\1\131\1\uffff\1\4\1\uffff\1\131";
    static final String[] dfa_119s = {
            "\1\1\4\2\1\uffff\2\2\12\uffff\2\2\1\uffff\1\2\7\uffff\1\2\14\uffff\1\2\55\uffff\1\2\16\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\2\52\uffff\2\2",
            "\1\4\5\uffff\1\2\1\4\1\uffff\2\4\4\uffff\1\2\21\uffff\1\2\1\uffff\3\4\41\uffff\1\3",
            "",
            "\1\5",
            "",
            "\1\4\6\uffff\1\4\1\uffff\2\4\4\uffff\1\2\21\uffff\1\2\1\uffff\3\4\41\uffff\1\3"
    };
    static final short[] dfa_116 = DFA.unpackEncodedString(dfa_116s);
    static final char[] dfa_117 = DFA.unpackEncodedStringToUnsignedChars(dfa_117s);
    static final char[] dfa_118 = DFA.unpackEncodedStringToUnsignedChars(dfa_118s);
    static final short[][] dfa_119 = unpackEncodedStringArray(dfa_119s);

    class DFA134 extends DFA {

        public DFA134(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 134;
            this.eot = dfa_89;
            this.eof = dfa_116;
            this.min = dfa_117;
            this.max = dfa_118;
            this.accept = dfa_93;
            this.special = dfa_94;
            this.transition = dfa_119;
        }
        public String getDescription() {
            return "5970:2: ( ( ( (lv_modelReference_0_1= RULE_LOWERCASE_ID | lv_modelReference_0_2= rulePathName ) ) ) | ( (lv_observable_1_0= ruleObservableSemantics ) ) )";
        }
    }
    static final String dfa_120s = "\136\uffff";
    static final String dfa_121s = "\1\1\135\uffff";
    static final String dfa_122s = "\1\4\25\uffff\1\0\6\uffff\22\0\57\uffff";
    static final String dfa_123s = "\1\u00e3\25\uffff\1\0\6\uffff\22\0\57\uffff";
    static final String dfa_124s = "\1\uffff\1\2\133\uffff\1\1";
    static final String dfa_125s = "\26\uffff\1\0\6\uffff\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\57\uffff}>";
    static final String[] dfa_126s = {
            "\1\40\1\1\2\uffff\1\37\2\uffff\1\1\6\uffff\1\1\5\uffff\5\1\4\uffff\1\26\1\1\3\uffff\5\1\2\uffff\1\1\5\uffff\1\1\1\uffff\3\1\7\uffff\5\1\31\uffff\16\1\1\41\1\42\5\uffff\1\1\1\35\1\36\1\uffff\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\1\55\1\56\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\53\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_120 = DFA.unpackEncodedString(dfa_120s);
    static final short[] dfa_121 = DFA.unpackEncodedString(dfa_121s);
    static final char[] dfa_122 = DFA.unpackEncodedStringToUnsignedChars(dfa_122s);
    static final char[] dfa_123 = DFA.unpackEncodedStringToUnsignedChars(dfa_123s);
    static final short[] dfa_124 = DFA.unpackEncodedString(dfa_124s);
    static final short[] dfa_125 = DFA.unpackEncodedString(dfa_125s);
    static final short[][] dfa_126 = unpackEncodedStringArray(dfa_126s);

    class DFA136 extends DFA {

        public DFA136(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 136;
            this.eot = dfa_120;
            this.eof = dfa_121;
            this.min = dfa_122;
            this.max = dfa_123;
            this.accept = dfa_124;
            this.special = dfa_125;
            this.transition = dfa_126;
        }
        public String getDescription() {
            return "()+ loopback of 6074:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA136_22 = input.LA(1);

                         
                        int index136_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_22);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA136_29 = input.LA(1);

                         
                        int index136_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_29);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA136_30 = input.LA(1);

                         
                        int index136_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_30);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA136_31 = input.LA(1);

                         
                        int index136_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_31);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA136_32 = input.LA(1);

                         
                        int index136_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_32);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA136_33 = input.LA(1);

                         
                        int index136_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_33);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA136_34 = input.LA(1);

                         
                        int index136_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_34);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA136_35 = input.LA(1);

                         
                        int index136_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_35);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA136_36 = input.LA(1);

                         
                        int index136_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_36);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA136_37 = input.LA(1);

                         
                        int index136_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_37);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA136_38 = input.LA(1);

                         
                        int index136_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_38);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA136_39 = input.LA(1);

                         
                        int index136_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_39);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA136_40 = input.LA(1);

                         
                        int index136_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_40);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA136_41 = input.LA(1);

                         
                        int index136_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_41);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA136_42 = input.LA(1);

                         
                        int index136_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_42);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA136_43 = input.LA(1);

                         
                        int index136_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_43);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA136_44 = input.LA(1);

                         
                        int index136_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_44);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA136_45 = input.LA(1);

                         
                        int index136_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_45);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA136_46 = input.LA(1);

                         
                        int index136_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred234_InternalKim()) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index136_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 136, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_127s = "\137\uffff";
    static final String dfa_128s = "\1\1\136\uffff";
    static final String dfa_129s = "\1\4\13\uffff\1\0\105\uffff\1\0\14\uffff";
    static final String dfa_130s = "\1\u00e3\13\uffff\1\0\105\uffff\1\0\14\uffff";
    static final String dfa_131s = "\1\uffff\1\11\125\uffff\1\1\1\4\1\5\1\6\1\7\1\10\1\3\1\2";
    static final String dfa_132s = "\1\0\13\uffff\1\1\105\uffff\1\2\14\uffff}>";
    static final String[] dfa_133s = {
            "\2\1\2\uffff\1\1\2\uffff\1\1\6\uffff\1\1\5\uffff\4\1\1\14\4\uffff\2\1\3\uffff\5\1\2\uffff\1\1\5\uffff\1\1\1\uffff\3\1\7\uffff\5\1\31\uffff\6\1\1\127\1\122\1\130\1\131\1\132\1\133\1\134\3\1\5\uffff\3\1\1\uffff\17\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\53\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_127 = DFA.unpackEncodedString(dfa_127s);
    static final short[] dfa_128 = DFA.unpackEncodedString(dfa_128s);
    static final char[] dfa_129 = DFA.unpackEncodedStringToUnsignedChars(dfa_129s);
    static final char[] dfa_130 = DFA.unpackEncodedStringToUnsignedChars(dfa_130s);
    static final short[] dfa_131 = DFA.unpackEncodedString(dfa_131s);
    static final short[] dfa_132 = DFA.unpackEncodedString(dfa_132s);
    static final short[][] dfa_133 = unpackEncodedStringArray(dfa_133s);

    class DFA137 extends DFA {

        public DFA137(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 137;
            this.eot = dfa_127;
            this.eof = dfa_128;
            this.min = dfa_129;
            this.max = dfa_130;
            this.accept = dfa_131;
            this.special = dfa_132;
            this.transition = dfa_133;
        }
        public String getDescription() {
            return "()* loopback of 6099:6: ( ({...}? => ( ({...}? => (otherlv_3= 'of' ( (lv_inherency_4_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_5= 'for' ( (lv_motivation_6_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'with' ( (lv_compresent_8_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_9= 'caused' otherlv_10= 'by' ( (lv_causant_11_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_12= 'adjacent' otherlv_13= 'to' ( (lv_adjacent_14_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_15= 'contained' otherlv_16= 'in' ( (lv_container_17_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'containing' ( (lv_contained_19_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_20= 'causing' ( (lv_caused_21_0= ruleSimpleConceptDeclaration ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA137_0 = input.LA(1);

                         
                        int index137_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA137_0==EOF||(LA137_0>=RULE_LOWERCASE_ID && LA137_0<=RULE_STRING)||LA137_0==RULE_CAMELCASE_ID||LA137_0==RULE_INT||LA137_0==18||(LA137_0>=24 && LA137_0<=27)||(LA137_0>=33 && LA137_0<=34)||(LA137_0>=38 && LA137_0<=42)||LA137_0==45||LA137_0==51||(LA137_0>=53 && LA137_0<=55)||(LA137_0>=63 && LA137_0<=67)||(LA137_0>=93 && LA137_0<=98)||(LA137_0>=106 && LA137_0<=108)||(LA137_0>=114 && LA137_0<=116)||(LA137_0>=118 && LA137_0<=132)||LA137_0==141||LA137_0==143||(LA137_0>=145 && LA137_0<=147)||(LA137_0>=149 && LA137_0<=157)||(LA137_0>=159 && LA137_0<=167)||LA137_0==169||(LA137_0>=174 && LA137_0<=176)||LA137_0==182||(LA137_0>=226 && LA137_0<=227)) ) {s = 1;}

                        else if ( (LA137_0==28) ) {s = 12;}

                        else if ( (LA137_0==100) ) {s = 82;}

                        else if ( LA137_0 == 99 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 0) ) {s = 87;}

                        else if ( LA137_0 == 101 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 3) ) {s = 88;}

                        else if ( LA137_0 == 102 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 4) ) {s = 89;}

                        else if ( LA137_0 == 103 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 5) ) {s = 90;}

                        else if ( LA137_0 == 104 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 6) ) {s = 91;}

                        else if ( LA137_0 == 105 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 7) ) {s = 92;}

                         
                        input.seek(index137_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA137_12 = input.LA(1);

                         
                        int index137_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred237_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 2) ) {s = 93;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_12);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA137_82 = input.LA(1);

                         
                        int index137_82 = input.index();
                        input.rewind();
                        s = -1;
                        if ( synpred236_InternalKim() && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptDeclarationAccess().getUnorderedGroup_2(), 1) ) {s = 94;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index137_82);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 137, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_134s = "\1\1\25\uffff";
    static final String dfa_135s = "\1\4\1\uffff\23\0\1\uffff";
    static final String dfa_136s = "\1\u00e3\1\uffff\23\0\1\uffff";
    static final String dfa_137s = "\1\uffff\1\2\23\uffff\1\1";
    static final String dfa_138s = "\2\uffff\1\6\1\3\1\22\1\4\1\11\1\0\1\21\1\1\1\2\1\20\1\12\1\13\1\14\1\15\1\16\1\17\1\7\1\10\1\5\1\uffff}>";
    static final String[] dfa_139s = {
            "\1\6\1\1\2\uffff\1\5\2\uffff\1\1\6\uffff\1\1\5\uffff\5\1\4\uffff\1\2\1\1\3\uffff\5\1\2\uffff\1\1\5\uffff\1\1\1\uffff\3\1\7\uffff\5\1\12\uffff\2\1\2\uffff\3\1\1\uffff\1\1\6\uffff\16\1\1\7\1\10\5\uffff\1\1\1\3\1\4\1\uffff\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\3\1\10\uffff\1\1\1\uffff\1\1\1\uffff\3\1\1\uffff\11\1\1\uffff\11\1\1\uffff\1\1\4\uffff\3\1\5\uffff\1\1\53\uffff\2\1",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            ""
    };
    static final short[] dfa_134 = DFA.unpackEncodedString(dfa_134s);
    static final char[] dfa_135 = DFA.unpackEncodedStringToUnsignedChars(dfa_135s);
    static final char[] dfa_136 = DFA.unpackEncodedStringToUnsignedChars(dfa_136s);
    static final short[] dfa_137 = DFA.unpackEncodedString(dfa_137s);
    static final short[] dfa_138 = DFA.unpackEncodedString(dfa_138s);
    static final short[][] dfa_139 = unpackEncodedStringArray(dfa_139s);

    class DFA166 extends DFA {

        public DFA166(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 166;
            this.eot = dfa_43;
            this.eof = dfa_134;
            this.min = dfa_135;
            this.max = dfa_136;
            this.accept = dfa_137;
            this.special = dfa_138;
            this.transition = dfa_139;
        }
        public String getDescription() {
            return "()+ loopback of 8148:3: ( (lv_main_1_0= ruleConcept ) )+";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA166_7 = input.LA(1);

                         
                        int index166_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_7);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA166_9 = input.LA(1);

                         
                        int index166_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_9);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA166_10 = input.LA(1);

                         
                        int index166_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_10);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA166_3 = input.LA(1);

                         
                        int index166_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_3);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA166_5 = input.LA(1);

                         
                        int index166_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA166_20 = input.LA(1);

                         
                        int index166_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_20);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA166_2 = input.LA(1);

                         
                        int index166_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_2);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA166_18 = input.LA(1);

                         
                        int index166_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_18);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA166_19 = input.LA(1);

                         
                        int index166_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_19);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA166_6 = input.LA(1);

                         
                        int index166_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_6);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA166_12 = input.LA(1);

                         
                        int index166_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA166_13 = input.LA(1);

                         
                        int index166_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA166_14 = input.LA(1);

                         
                        int index166_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA166_15 = input.LA(1);

                         
                        int index166_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA166_16 = input.LA(1);

                         
                        int index166_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA166_17 = input.LA(1);

                         
                        int index166_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA166_11 = input.LA(1);

                         
                        int index166_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_11);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA166_8 = input.LA(1);

                         
                        int index166_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_8);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA166_4 = input.LA(1);

                         
                        int index166_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred301_InternalKim()) ) {s = 21;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index166_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 166, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_140s = "\1\4\1\63\2\4\2\uffff\1\63";
    static final String dfa_141s = "\1\4\1\131\1\11\1\4\2\uffff\1\131";
    static final String dfa_142s = "\4\uffff\1\1\1\2\1\uffff";
    static final String[] dfa_143s = {
            "\1\1",
            "\1\2\45\uffff\1\3",
            "\1\5\3\uffff\1\4\1\5",
            "\1\6",
            "",
            "",
            "\1\2\45\uffff\1\3"
    };
    static final char[] dfa_140 = DFA.unpackEncodedStringToUnsignedChars(dfa_140s);
    static final char[] dfa_141 = DFA.unpackEncodedStringToUnsignedChars(dfa_141s);
    static final short[] dfa_142 = DFA.unpackEncodedString(dfa_142s);
    static final short[][] dfa_143 = unpackEncodedStringArray(dfa_143s);

    class DFA171 extends DFA {

        public DFA171(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 171;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_140;
            this.max = dfa_141;
            this.accept = dfa_142;
            this.special = dfa_73;
            this.transition = dfa_143;
        }
        public String getDescription() {
            return "8309:7: (lv_coreconcept_7_1= ruleNamespaceId | lv_coreconcept_7_2= rulePropertyId )";
        }
    }
    static final String dfa_144s = "\1\4\1\63\2\4\1\63\2\uffff";
    static final String dfa_145s = "\1\4\1\131\1\4\1\11\1\131\2\uffff";
    static final String dfa_146s = "\5\uffff\1\2\1\1";
    static final String[] dfa_147s = {
            "\1\1",
            "\1\3\45\uffff\1\2",
            "\1\4",
            "\1\6\3\uffff\1\5\1\6",
            "\1\3\45\uffff\1\2",
            "",
            ""
    };
    static final char[] dfa_144 = DFA.unpackEncodedStringToUnsignedChars(dfa_144s);
    static final char[] dfa_145 = DFA.unpackEncodedStringToUnsignedChars(dfa_145s);
    static final short[] dfa_146 = DFA.unpackEncodedString(dfa_146s);
    static final short[][] dfa_147 = unpackEncodedStringArray(dfa_147s);

    class DFA172 extends DFA {

        public DFA172(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 172;
            this.eot = dfa_69;
            this.eof = dfa_69;
            this.min = dfa_144;
            this.max = dfa_145;
            this.accept = dfa_146;
            this.special = dfa_73;
            this.transition = dfa_147;
        }
        public String getDescription() {
            return "8372:7: (lv_property_10_1= rulePropertyId | lv_property_10_2= ruleNamespaceId )";
        }
    }
    static final String dfa_148s = "\14\uffff";
    static final String dfa_149s = "\1\120\13\uffff";
    static final String dfa_150s = "\1\u00db\13\uffff";
    static final String dfa_151s = "\1\uffff\1\5\1\1\1\2\1\3\7\4";
    static final String dfa_152s = "\1\0\13\uffff}>";
    static final String[] dfa_153s = {
            "\1\1\64\uffff\1\5\1\6\1\7\2\1\1\2\1\3\1\4\21\uffff\1\1\13\uffff\4\1\15\uffff\35\1\1\10\1\11\1\12\1\13",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_148 = DFA.unpackEncodedString(dfa_148s);
    static final char[] dfa_149 = DFA.unpackEncodedStringToUnsignedChars(dfa_149s);
    static final char[] dfa_150 = DFA.unpackEncodedStringToUnsignedChars(dfa_150s);
    static final short[] dfa_151 = DFA.unpackEncodedString(dfa_151s);
    static final short[] dfa_152 = DFA.unpackEncodedString(dfa_152s);
    static final short[][] dfa_153 = unpackEncodedStringArray(dfa_153s);

    class DFA178 extends DFA {

        public DFA178(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 178;
            this.eot = dfa_148;
            this.eof = dfa_148;
            this.min = dfa_149;
            this.max = dfa_150;
            this.accept = dfa_151;
            this.special = dfa_152;
            this.transition = dfa_153;
        }
        public String getDescription() {
            return "()* loopback of 8463:6: ( ({...}? => ( ({...}? => ( (lv_abstract_2_0= 'abstract' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_deniable_3_0= 'deniable' ) ) ) ) ) | ({...}? => ( ({...}? => ( (lv_subjective_4_0= 'subjective' ) ) ) ) ) | ({...}? => ( ({...}? => ( ( ( (lv_agentSpecifier_5_1= 'deliberative' | lv_agentSpecifier_5_2= 'interactive' | lv_agentSpecifier_5_3= 'reactive' ) ) ) | ( ( (lv_propertySpecifiers_6_0= rulePROPERTY_TYPE ) ) ( (lv_propertySpecifiers_7_0= rulePROPERTY_TYPE ) )* ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA178_0 = input.LA(1);

                         
                        int index178_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA178_0==80||(LA178_0>=136 && LA178_0<=137)||LA178_0==158||(LA178_0>=170 && LA178_0<=173)||(LA178_0>=187 && LA178_0<=215)) ) {s = 1;}

                        else if ( LA178_0 == 138 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA178_0 == 139 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA178_0 == 140 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA178_0 == 133 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA178_0 == 134 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA178_0 == 135 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 7;}

                        else if ( LA178_0 == 216 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 8;}

                        else if ( LA178_0 == 217 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 9;}

                        else if ( LA178_0 == 218 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 10;}

                        else if ( LA178_0 == 219 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementAccess().getUnorderedGroup_1(), 3) ) {s = 11;}

                         
                        input.seek(index178_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 178, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_154s = "\106\uffff";
    static final String dfa_155s = "\1\1\105\uffff";
    static final String dfa_156s = "\1\5\17\uffff\1\4\65\uffff";
    static final String dfa_157s = "\1\u00b0\17\uffff\1\u00ec\65\uffff";
    static final String dfa_158s = "\1\uffff\1\30\1\1\2\2\2\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\uffff\1\16\3\17\1\20\1\21\1\22\1\23\1\24\3\26\1\27\2\25\1\15\45\26";
    static final String dfa_159s = "\1\0\17\uffff\1\1\65\uffff}>";
    static final String[] dfa_160s = {
            "\1\2\14\uffff\1\1\11\uffff\1\35\5\uffff\1\1\77\uffff\1\1\52\uffff\1\3\1\uffff\1\4\1\uffff\1\5\1\6\1\7\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\uffff\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\6\uffff\1\32\1\33\1\34",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\50\1\45\2\uffff\1\47\2\uffff\1\103\12\uffff\1\104\1\105\11\uffff\1\67\47\uffff\1\70\1\74\7\uffff\1\36\30\uffff\1\51\1\52\6\uffff\1\46\1\42\1\uffff\1\53\1\54\1\55\1\56\1\57\1\60\1\61\1\62\1\63\1\64\1\65\1\66\34\uffff\1\40\11\uffff\1\37\10\uffff\1\41\1\43\1\44\56\uffff\1\101\1\102\2\uffff\1\71\1\72\1\73\1\75\1\76\1\77\1\100",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_154 = DFA.unpackEncodedString(dfa_154s);
    static final short[] dfa_155 = DFA.unpackEncodedString(dfa_155s);
    static final char[] dfa_156 = DFA.unpackEncodedStringToUnsignedChars(dfa_156s);
    static final char[] dfa_157 = DFA.unpackEncodedStringToUnsignedChars(dfa_157s);
    static final short[] dfa_158 = DFA.unpackEncodedString(dfa_158s);
    static final short[] dfa_159 = DFA.unpackEncodedString(dfa_159s);
    static final short[][] dfa_160 = unpackEncodedStringArray(dfa_160s);

    class DFA213 extends DFA {

        public DFA213(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 213;
            this.eot = dfa_154;
            this.eof = dfa_155;
            this.min = dfa_156;
            this.max = dfa_157;
            this.accept = dfa_158;
            this.special = dfa_159;
            this.transition = dfa_160;
        }
        public String getDescription() {
            return "()* loopback of 8906:6: ( ({...}? => ( ({...}? => ( (lv_docstring_11_0= RULE_STRING ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (otherlv_12= 'is' ( (lv_coreConcept_13_0= 'core' ) )? ) | ( (lv_alias_14_0= 'equals' ) ) ) ( ( (lv_nothing_15_0= 'nothing' ) ) | ( ( (lv_parents_16_0= ruleConceptDeclaration ) ) ( ( ( (lv_connectors_17_1= ',' | lv_connectors_17_2= 'or' | lv_connectors_17_3= 'and' ) ) ) ( (lv_parents_18_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_19= 'exposes' ( (lv_contextualizedTraits_20_0= ruleObservableSemantics ) ) (otherlv_21= ',' ( (lv_contextualizedTraits_22_0= ruleObservableSemantics ) ) )* ) | ( ( (lv_specific_23_0= 'exposing' ) ) ( (lv_contextualizesTraits_24_0= ruleConceptDeclaration ) ) (otherlv_25= ',' ( (lv_contextualizesTraits_26_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_27= 'defines' ( (otherlv_28= 'authority' ( (lv_definedAuthority_29_0= RULE_UPPERCASE_PATH ) ) ) | ( (lv_upperConcept_30_0= ruleConcept ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_31= 'requires' ( (lv_requirements_32_0= ruleIdentityRequirement ) ) (otherlv_33= ',' ( (lv_requirements_34_0= ruleIdentityRequirement ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_35= 'describes' ( (lv_describedQuality_36_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_37= 'increases' otherlv_38= 'with' ( (lv_describedProportionality_39_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_40= 'decreases' otherlv_41= 'with' ( (lv_describedInverseProportionalityQuality_42_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_43= 'marks' ( (lv_describedNonzeroQuality_44_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_45= 'classifies' ( (lv_classifiesQuality_46_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_47= 'discretizes' ( (lv_discretizesQuality_48_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_49= 'inherits' ( (lv_actuallyInheritedTraits_50_0= ruleConceptDeclaration ) ) (otherlv_51= ',' ( (lv_actuallyInheritedTraits_52_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_53= 'has' otherlv_54= 'role' ( (lv_roles_55_0= ruleConceptDeclaration ) ) (otherlv_56= ',' ( (lv_roles_57_0= ruleConceptDeclaration ) ) )* (otherlv_58= 'for' ( (lv_targetObservables_59_0= ruleConceptDeclaration ) ) (otherlv_60= ',' ( (lv_targetObservables_61_0= ruleConceptDeclaration ) ) )* )? (otherlv_62= 'in' ( (lv_restrictedObservables_63_0= ruleConceptDeclaration ) ) (otherlv_64= ',' ( (lv_restrictedObservables_65_0= ruleConceptDeclaration ) ) )* ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_66= 'confers' ( (lv_conferredTraits_67_0= ruleConceptDeclaration ) ) (otherlv_68= ',' ( (lv_conferredTraits_69_0= ruleConceptDeclaration ) ) )* (otherlv_70= 'to' ( (lv_conferredTargets_71_0= ruleConceptDeclaration ) ) (otherlv_72= ',' ( (lv_conferredTargets_73_0= ruleConceptDeclaration ) ) )* )? ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_74= 'part' | ( (lv_constituent_75_0= 'constituent' ) ) | ( (lv_constitutes_76_0= 'consists' ) ) ) ( (lv_partOf_77_0= 'of' ) ) ( (lv_whole_78_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_79= 'creates' ( (lv_creates_80_0= ruleConceptDeclaration ) ) (otherlv_81= ',' ( (lv_creates_82_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_83= 'applies' otherlv_84= 'to' ( (lv_traitTargets_85_0= ruleApplicableTarget ) ) (otherlv_86= ',' ( (lv_traitTargets_87_0= ruleApplicableTarget ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_88= 'links' ( (lv_domains_89_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_90= 'to' ) ( (lv_ranges_91_0= ruleSimpleConceptDeclaration ) ) (otherlv_92= ',' ( (lv_domains_93_0= ruleSimpleConceptDeclaration ) ) ( ( 'to' )=>otherlv_94= 'to' ) ( (lv_ranges_95_0= ruleSimpleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_96= 'inverse' otherlv_97= 'of' ( (lv_inverse_98_0= ruleConceptDeclaration ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_99= 'affects' ( (lv_qualitiesAffected_100_0= ruleConceptDeclaration ) ) (otherlv_101= ',' ( (lv_qualitiesAffected_102_0= ruleConceptDeclaration ) ) )* ) ) ) ) | ({...}? => ( ({...}? => (otherlv_103= 'has' ( (lv_disjoint_104_0= 'disjoint' ) )? otherlv_105= 'children' ( (lv_children_106_0= ruleChildConcept ) ) (otherlv_107= ',' ( (lv_children_108_0= ruleChildConcept ) ) )* ) ) ) ) | ({...}? => ( ({...}? => ( (lv_restrictions_109_0= ruleRestrictionStatement ) ) )+ ) ) | ({...}? => ( ({...}? => (otherlv_110= 'with' otherlv_111= 'metadata' ( (lv_metadata_112_0= ruleMetadata ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA213_0 = input.LA(1);

                         
                        int index213_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA213_0==EOF||LA213_0==18||LA213_0==34||LA213_0==98) ) {s = 1;}

                        else if ( LA213_0 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 0) ) {s = 2;}

                        else if ( LA213_0 == 141 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 3;}

                        else if ( LA213_0 == 143 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 1) ) {s = 4;}

                        else if ( LA213_0 == 145 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 5;}

                        else if ( LA213_0 == 146 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 2) ) {s = 6;}

                        else if ( LA213_0 == 147 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 3) ) {s = 7;}

                        else if ( LA213_0 == 149 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 4) ) {s = 8;}

                        else if ( LA213_0 == 150 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 5) ) {s = 9;}

                        else if ( LA213_0 == 151 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 6) ) {s = 10;}

                        else if ( LA213_0 == 152 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 7) ) {s = 11;}

                        else if ( LA213_0 == 153 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 8) ) {s = 12;}

                        else if ( LA213_0 == 154 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 9) ) {s = 13;}

                        else if ( LA213_0 == 155 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 10) ) {s = 14;}

                        else if ( LA213_0 == 156 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 11) ) {s = 15;}

                        else if ( (LA213_0==157) ) {s = 16;}

                        else if ( LA213_0 == 159 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 13) ) {s = 17;}

                        else if ( LA213_0 == 160 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 18;}

                        else if ( LA213_0 == 161 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 19;}

                        else if ( LA213_0 == 162 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 14) ) {s = 20;}

                        else if ( LA213_0 == 163 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 15) ) {s = 21;}

                        else if ( LA213_0 == 164 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 16) ) {s = 22;}

                        else if ( LA213_0 == 165 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 17) ) {s = 23;}

                        else if ( LA213_0 == 166 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 18) ) {s = 24;}

                        else if ( LA213_0 == 167 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 19) ) {s = 25;}

                        else if ( LA213_0 == 174 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 26;}

                        else if ( LA213_0 == 175 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 27;}

                        else if ( LA213_0 == 176 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 28;}

                        else if ( LA213_0 == 28 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 22) ) {s = 29;}

                         
                        input.seek(index213_0);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA213_16 = input.LA(1);

                         
                        int index213_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( LA213_16 == 82 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 30;}

                        else if ( LA213_16 == 168 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 20) ) {s = 31;}

                        else if ( LA213_16 == 158 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 12) ) {s = 32;}

                        else if ( LA213_16 == 177 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 33;}

                        else if ( LA213_16 == 116 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 34;}

                        else if ( LA213_16 == 178 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 35;}

                        else if ( LA213_16 == 179 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 36;}

                        else if ( LA213_16 == RULE_STRING && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 37;}

                        else if ( LA213_16 == 115 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 38;}

                        else if ( LA213_16 == RULE_CAMELCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 39;}

                        else if ( LA213_16 == RULE_LOWERCASE_ID && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 40;}

                        else if ( LA213_16 == 107 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 41;}

                        else if ( LA213_16 == 108 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 42;}

                        else if ( LA213_16 == 118 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 43;}

                        else if ( LA213_16 == 119 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 44;}

                        else if ( LA213_16 == 120 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 45;}

                        else if ( LA213_16 == 121 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 46;}

                        else if ( LA213_16 == 122 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 47;}

                        else if ( LA213_16 == 123 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 48;}

                        else if ( LA213_16 == 124 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 49;}

                        else if ( LA213_16 == 125 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 50;}

                        else if ( LA213_16 == 126 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 51;}

                        else if ( LA213_16 == 127 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 52;}

                        else if ( LA213_16 == 128 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 53;}

                        else if ( LA213_16 == 129 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 54;}

                        else if ( LA213_16 == 33 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 55;}

                        else if ( LA213_16 == 73 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 56;}

                        else if ( LA213_16 == 230 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 57;}

                        else if ( LA213_16 == 231 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 58;}

                        else if ( LA213_16 == 232 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 59;}

                        else if ( LA213_16 == 74 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 60;}

                        else if ( LA213_16 == 233 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 61;}

                        else if ( LA213_16 == 234 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 62;}

                        else if ( LA213_16 == 235 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 63;}

                        else if ( LA213_16 == 236 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 64;}

                        else if ( LA213_16 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 65;}

                        else if ( LA213_16 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 66;}

                        else if ( LA213_16 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 67;}

                        else if ( LA213_16 == 22 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 68;}

                        else if ( LA213_16 == 23 && getUnorderedGroupHelper().canSelect(grammarAccess.getConceptStatementBodyAccess().getUnorderedGroup_3(), 21) ) {s = 69;}

                         
                        input.seek(index213_16);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 213, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_161s = "\1\u009d\1\4\1\uffff\2\13\1\47\1\4\2\47\1\uffff\4\13\1\4\1\47\2\13\1\47\2\13\1\47\1\63\1\uffff\3\13\2\4\1\47\2\13\1\47\1\63";
    static final String dfa_162s = "\1\u00b0\1\u00ec\1\uffff\2\13\1\u00e5\1\u0081\2\144\1\uffff\1\13\3\u00e3\1\10\1\u00e5\2\13\1\144\2\13\1\u00e5\1\131\1\uffff\1\13\2\u00e3\1\4\1\11\1\u00e5\2\13\1\144\1\131";
    static final String dfa_163s = "\2\uffff\1\1\6\uffff\1\2\15\uffff\1\3\12\uffff";
    static final String dfa_164s = "\42\uffff}>";
    static final String[] dfa_165s = {
            "\1\2\20\uffff\1\1\2\2",
            "\1\2\1\6\2\uffff\1\2\2\uffff\1\5\12\uffff\1\7\1\10\11\uffff\1\2\47\uffff\2\2\40\uffff\2\2\6\uffff\2\2\1\uffff\14\2\22\uffff\1\11\34\uffff\3\2\56\uffff\1\3\1\4\2\uffff\7\2",
            "",
            "\1\5",
            "\1\5",
            "\1\15\61\uffff\1\12\12\uffff\1\16\177\uffff\1\13\1\14",
            "\1\2\3\uffff\1\2\30\uffff\1\2\5\uffff\1\2\74\uffff\1\16\6\uffff\2\2\6\uffff\2\2\1\uffff\14\2",
            "\1\2\74\uffff\1\16",
            "\1\2\74\uffff\1\16",
            "",
            "\1\17",
            "\1\22\u00d6\uffff\1\20\1\21",
            "\1\22\u00d6\uffff\1\20\1\21",
            "\1\25\u00d6\uffff\1\23\1\24",
            "\1\26\3\uffff\1\27",
            "\1\15\74\uffff\1\16\177\uffff\1\13\1\14",
            "\1\22",
            "\1\22",
            "\1\15\74\uffff\1\16",
            "\1\25",
            "\1\25",
            "\1\2\61\uffff\1\30\12\uffff\1\16\177\uffff\1\31\1\32",
            "\1\34\45\uffff\1\33",
            "",
            "\1\35",
            "\1\40\u00d6\uffff\1\36\1\37",
            "\1\40\u00d6\uffff\1\36\1\37",
            "\1\41",
            "\1\2\3\uffff\1\27\1\2",
            "\1\2\74\uffff\1\16\177\uffff\1\31\1\32",
            "\1\40",
            "\1\40",
            "\1\2\74\uffff\1\16",
            "\1\34\45\uffff\1\33"
    };
    static final char[] dfa_161 = DFA.unpackEncodedStringToUnsignedChars(dfa_161s);
    static final char[] dfa_162 = DFA.unpackEncodedStringToUnsignedChars(dfa_162s);
    static final short[] dfa_163 = DFA.unpackEncodedString(dfa_163s);
    static final short[] dfa_164 = DFA.unpackEncodedString(dfa_164s);
    static final short[][] dfa_165 = unpackEncodedStringArray(dfa_165s);

    class DFA227 extends DFA {

        public DFA227(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 227;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_161;
            this.max = dfa_162;
            this.accept = dfa_163;
            this.special = dfa_164;
            this.transition = dfa_165;
        }
        public String getDescription() {
            return "10734:2: ( ( ( ( (lv_relType_0_1= 'uses' | lv_relType_0_2= 'has' | lv_relType_0_3= 'contains' | lv_relType_0_4= 'implies' ) ) ) ( (lv_definitions_1_0= ruleRestrictionDefinition ) ) (otherlv_2= ',' ( (lv_definitions_3_0= ruleRestrictionDefinition ) ) )* ) | (otherlv_4= 'uses' otherlv_5= 'authority' ( ( (lv_authorities_6_1= RULE_UPPERCASE_ID | lv_authorities_6_2= RULE_UPPERCASE_PATH ) ) ) ( ( ( ',' )=>otherlv_7= ',' ) ( ( (lv_authorities_8_1= RULE_UPPERCASE_ID | lv_authorities_8_2= RULE_UPPERCASE_PATH ) ) ) )* ) | (otherlv_9= 'uses' ( (lv_value_10_0= ruleLiteral ) ) ( (lv_literal_11_0= 'for' ) ) ( ( (lv_subject_12_1= RULE_CAMELCASE_ID | lv_subject_12_2= ruleNamespaceId ) ) ) ) )";
        }
    }
    static final String dfa_166s = "\23\uffff";
    static final String dfa_167s = "\3\uffff\1\11\7\uffff\1\11\2\uffff\1\11\4\uffff";
    static final String dfa_168s = "\1\5\2\13\1\31\2\uffff\3\13\1\uffff\1\13\1\31\2\13\1\31\2\13\1\0\1\uffff";
    static final String dfa_169s = "\1\u00e3\2\13\1\u00e5\2\uffff\1\13\2\u00e3\1\uffff\1\u00e3\1\u00e5\2\13\1\162\2\13\1\0\1\uffff";
    static final String dfa_170s = "\4\uffff\1\3\1\4\3\uffff\1\2\10\uffff\1\1";
    static final String dfa_171s = "\21\uffff\1\0\1\uffff}>";
    static final String[] dfa_172s = {
            "\1\4\5\uffff\1\3\12\uffff\2\5\u00ca\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\1\11\15\uffff\1\12\61\uffff\1\6\12\uffff\1\11\15\uffff\1\11\161\uffff\1\7\1\10",
            "",
            "",
            "\1\13",
            "\1\16\u00d6\uffff\1\14\1\15",
            "\1\16\u00d6\uffff\1\14\1\15",
            "",
            "\1\21\u00d6\uffff\1\17\1\20",
            "\1\11\15\uffff\1\12\74\uffff\1\11\15\uffff\1\11\161\uffff\1\7\1\10",
            "\1\16",
            "\1\16",
            "\1\11\15\uffff\1\12\74\uffff\1\11\15\uffff\1\11",
            "\1\21",
            "\1\21",
            "\1\uffff",
            ""
    };

    static final short[] dfa_166 = DFA.unpackEncodedString(dfa_166s);
    static final short[] dfa_167 = DFA.unpackEncodedString(dfa_167s);
    static final char[] dfa_168 = DFA.unpackEncodedStringToUnsignedChars(dfa_168s);
    static final char[] dfa_169 = DFA.unpackEncodedStringToUnsignedChars(dfa_169s);
    static final short[] dfa_170 = DFA.unpackEncodedString(dfa_170s);
    static final short[] dfa_171 = DFA.unpackEncodedString(dfa_171s);
    static final short[][] dfa_172 = unpackEncodedStringArray(dfa_172s);

    class DFA240 extends DFA {

        public DFA240(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 240;
            this.eot = dfa_166;
            this.eof = dfa_167;
            this.min = dfa_168;
            this.max = dfa_169;
            this.accept = dfa_170;
            this.special = dfa_171;
            this.transition = dfa_172;
        }
        public String getDescription() {
            return "11435:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA240_17 = input.LA(1);

                         
                        int index240_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred416_InternalKim()) ) {s = 18;}

                        else if ( (synpred417_InternalKim()) ) {s = 9;}

                         
                        input.seek(index240_17);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 240, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_173s = "\21\uffff";
    static final String dfa_174s = "\3\uffff\1\13\11\uffff\1\13\2\uffff\1\13";
    static final String dfa_175s = "\1\5\2\13\1\4\4\uffff\3\13\2\uffff\1\4\2\13\1\4";
    static final String dfa_176s = "\1\u00e3\2\13\1\u00e5\4\uffff\1\13\2\u00e3\2\uffff\1\u00e5\2\13\1\u00e3";
    static final String dfa_177s = "\4\uffff\1\3\1\4\1\5\1\6\3\uffff\1\2\1\1\4\uffff";
    static final String dfa_178s = "\21\uffff}>";
    static final String[] dfa_179s = {
            "\1\4\4\uffff\1\6\1\3\12\uffff\2\5\1\uffff\1\7\u00c8\uffff\1\1\1\2",
            "\1\3",
            "\1\3",
            "\5\13\1\uffff\2\13\6\uffff\1\13\3\uffff\4\13\2\uffff\1\13\4\uffff\2\13\4\uffff\1\14\1\uffff\2\13\3\uffff\1\13\6\uffff\3\13\41\uffff\1\10\21\uffff\2\13\6\uffff\2\13\1\uffff\14\13\65\uffff\1\13\52\uffff\2\13\1\11\1\12",
            "",
            "",
            "",
            "",
            "\1\15",
            "\1\20\u00d6\uffff\1\16\1\17",
            "\1\20\u00d6\uffff\1\16\1\17",
            "",
            "",
            "\5\13\1\uffff\2\13\6\uffff\1\13\3\uffff\4\13\2\uffff\1\13\4\uffff\2\13\4\uffff\1\14\1\uffff\2\13\3\uffff\1\13\6\uffff\3\13\63\uffff\2\13\6\uffff\2\13\1\uffff\14\13\65\uffff\1\13\52\uffff\2\13\1\11\1\12",
            "\1\20",
            "\1\20",
            "\5\13\1\uffff\2\13\6\uffff\1\13\3\uffff\4\13\2\uffff\1\13\4\uffff\2\13\4\uffff\1\14\1\uffff\2\13\3\uffff\1\13\6\uffff\3\13\63\uffff\2\13\6\uffff\2\13\1\uffff\14\13\65\uffff\1\13\52\uffff\2\13"
    };

    static final short[] dfa_173 = DFA.unpackEncodedString(dfa_173s);
    static final short[] dfa_174 = DFA.unpackEncodedString(dfa_174s);
    static final char[] dfa_175 = DFA.unpackEncodedStringToUnsignedChars(dfa_175s);
    static final char[] dfa_176 = DFA.unpackEncodedStringToUnsignedChars(dfa_176s);
    static final short[] dfa_177 = DFA.unpackEncodedString(dfa_177s);
    static final short[] dfa_178 = DFA.unpackEncodedString(dfa_178s);
    static final short[][] dfa_179 = unpackEncodedStringArray(dfa_179s);

    class DFA244 extends DFA {

        public DFA244(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 244;
            this.eot = dfa_173;
            this.eof = dfa_174;
            this.min = dfa_175;
            this.max = dfa_176;
            this.accept = dfa_177;
            this.special = dfa_178;
            this.transition = dfa_179;
        }
        public String getDescription() {
            return "11676:2: ( ( ( (lv_from_0_0= ruleNumber ) ) ( ( 'to' )=>otherlv_1= 'to' ) ( ( ( ruleNumber ) )=> (lv_to_2_0= ruleNumber ) ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( (lv_string_4_0= RULE_STRING ) ) | ( ( (lv_boolean_5_1= 'true' | lv_boolean_5_2= 'false' ) ) ) | ( (lv_id_6_0= RULE_ID ) ) | ( (lv_comma_7_0= ',' ) ) )";
        }
    }
    static final String dfa_180s = "\2\uffff\1\1\3\uffff";
    static final String dfa_181s = "\1\4\1\uffff\1\41\1\uffff\1\4\1\41";
    static final String dfa_182s = "\1\u00e3\1\uffff\1\u00ba\1\uffff\1\4\1\u00ba";
    static final String dfa_183s = "\1\uffff\1\1\1\uffff\1\2\2\uffff";
    static final String[] dfa_184s = {
            "\1\2\4\1\1\uffff\2\1\12\uffff\2\1\1\uffff\1\1\7\uffff\1\1\14\uffff\1\1\u0088\uffff\1\1\52\uffff\2\1",
            "",
            "\2\1\66\uffff\1\4\137\uffff\2\3",
            "",
            "\1\5",
            "\1\1\67\uffff\1\4\137\uffff\2\3"
    };
    static final short[] dfa_180 = DFA.unpackEncodedString(dfa_180s);
    static final char[] dfa_181 = DFA.unpackEncodedStringToUnsignedChars(dfa_181s);
    static final char[] dfa_182 = DFA.unpackEncodedStringToUnsignedChars(dfa_182s);
    static final short[] dfa_183 = DFA.unpackEncodedString(dfa_183s);
    static final short[][] dfa_184 = unpackEncodedStringArray(dfa_184s);

    class DFA256 extends DFA {

        public DFA256(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 256;
            this.eot = dfa_89;
            this.eof = dfa_180;
            this.min = dfa_181;
            this.max = dfa_182;
            this.accept = dfa_183;
            this.special = dfa_94;
            this.transition = dfa_184;
        }
        public String getDescription() {
            return "12401:2: ( ( (lv_singleValue_0_0= ruleValue ) ) | ( ( (lv_pairs_1_0= ruleKeyValuePair ) ) ( ( ( ',' )=>otherlv_2= ',' ) ( (lv_pairs_3_0= ruleKeyValuePair ) ) )* ) )";
        }
    }
    static final String dfa_185s = "\1\4\1\0\22\uffff\1\0\11\uffff";
    static final String dfa_186s = "\1\u00e3\1\0\22\uffff\1\0\11\uffff";
    static final String dfa_187s = "\2\uffff\1\1\22\uffff\1\2\4\uffff\1\3\1\5\1\6\1\4";
    static final String dfa_188s = "\1\uffff\1\0\22\uffff\1\1\11\uffff}>";
    static final String[] dfa_189s = {
            "\1\2\1\1\1\32\1\uffff\1\2\2\uffff\1\25\12\uffff\2\25\11\uffff\1\24\14\uffff\1\34\74\uffff\2\2\6\uffff\2\2\1\uffff\14\2\65\uffff\1\33\52\uffff\2\25",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_185 = DFA.unpackEncodedStringToUnsignedChars(dfa_185s);
    static final char[] dfa_186 = DFA.unpackEncodedStringToUnsignedChars(dfa_186s);
    static final short[] dfa_187 = DFA.unpackEncodedString(dfa_187s);
    static final short[] dfa_188 = DFA.unpackEncodedString(dfa_188s);
    static final short[][] dfa_189 = unpackEncodedStringArray(dfa_189s);

    class DFA257 extends DFA {

        public DFA257(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 257;
            this.eot = dfa_80;
            this.eof = dfa_80;
            this.min = dfa_185;
            this.max = dfa_186;
            this.accept = dfa_187;
            this.special = dfa_188;
            this.transition = dfa_189;
        }
        public String getDescription() {
            return "12489:2: ( ( (lv_concept_0_0= ruleConceptDeclaration ) ) | ( (lv_literal_1_0= ruleLiteral ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( (lv_list_3_0= ruleList ) ) | ( (lv_map_4_0= ruleMap ) ) | ( (lv_null_5_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA257_1 = input.LA(1);

                         
                        int index257_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred449_InternalKim()) ) {s = 2;}

                        else if ( (synpred450_InternalKim()) ) {s = 21;}

                         
                        input.seek(index257_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA257_20 = input.LA(1);

                         
                        int index257_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred449_InternalKim()) ) {s = 2;}

                        else if ( (synpred452_InternalKim()) ) {s = 29;}

                         
                        input.seek(index257_20);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 257, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_190s = "\1\4\10\uffff\1\0\7\uffff";
    static final String dfa_191s = "\1\u00e3\10\uffff\1\0\7\uffff";
    static final String dfa_192s = "\1\uffff\1\1\10\uffff\1\3\1\4\1\uffff\1\5\1\6\1\7\1\2";
    static final String dfa_193s = "\11\uffff\1\0\7\uffff}>";
    static final String[] dfa_194s = {
            "\1\11\1\1\1\12\2\13\1\uffff\2\1\12\uffff\2\1\1\uffff\1\1\7\uffff\1\15\14\uffff\1\17\u0088\uffff\1\16\52\uffff\2\1",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };
    static final char[] dfa_190 = DFA.unpackEncodedStringToUnsignedChars(dfa_190s);
    static final char[] dfa_191 = DFA.unpackEncodedStringToUnsignedChars(dfa_191s);
    static final short[] dfa_192 = DFA.unpackEncodedString(dfa_192s);
    static final short[] dfa_193 = DFA.unpackEncodedString(dfa_193s);
    static final short[][] dfa_194 = unpackEncodedStringArray(dfa_194s);

    class DFA259 extends DFA {

        public DFA259(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 259;
            this.eot = dfa_173;
            this.eof = dfa_173;
            this.min = dfa_190;
            this.max = dfa_191;
            this.accept = dfa_192;
            this.special = dfa_193;
            this.transition = dfa_194;
        }
        public String getDescription() {
            return "12621:2: ( ( (lv_literal_0_0= ruleLiteralOrIdOrComma ) ) | ( (lv_function_1_0= ruleFunction ) ) | ( (lv_expr_2_0= RULE_EXPR ) ) | ( ( (lv_id_3_1= RULE_LOWERCASE_ID | lv_id_3_2= RULE_UPPERCASE_ID | lv_id_3_3= RULE_CAMELCASE_ID ) ) ) | ( (lv_list_4_0= ruleList ) ) | ( (lv_map_5_0= ruleMap ) ) | ( (lv_null_6_0= 'unknown' ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA259_9 = input.LA(1);

                         
                        int index259_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred455_InternalKim()) ) {s = 16;}

                        else if ( (synpred459_InternalKim()) ) {s = 11;}

                         
                        input.seek(index259_9);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 259, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_195s = "\13\uffff";
    static final String dfa_196s = "\1\1\12\uffff";
    static final String dfa_197s = "\1\13\12\uffff";
    static final String dfa_198s = "\1\u00e3\12\uffff";
    static final String dfa_199s = "\1\uffff\1\7\1\1\1\2\1\3\2\4\3\5\1\6";
    static final String dfa_200s = "\1\0\12\uffff}>";
    static final String[] dfa_201s = {
            "\1\11\14\uffff\1\1\15\uffff\1\4\6\uffff\1\5\57\uffff\1\2\1\3\1\6\2\uffff\1\12\177\uffff\1\7\1\10",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_195 = DFA.unpackEncodedString(dfa_195s);
    static final short[] dfa_196 = DFA.unpackEncodedString(dfa_196s);
    static final char[] dfa_197 = DFA.unpackEncodedStringToUnsignedChars(dfa_197s);
    static final char[] dfa_198 = DFA.unpackEncodedStringToUnsignedChars(dfa_198s);
    static final short[] dfa_199 = DFA.unpackEncodedString(dfa_199s);
    static final short[] dfa_200 = DFA.unpackEncodedString(dfa_200s);
    static final short[][] dfa_201 = unpackEncodedStringArray(dfa_201s);

    class DFA271 extends DFA {

        public DFA271(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 271;
            this.eot = dfa_195;
            this.eof = dfa_196;
            this.min = dfa_197;
            this.max = dfa_198;
            this.accept = dfa_199;
            this.special = dfa_200;
            this.transition = dfa_201;
        }
        public String getDescription() {
            return "()* loopback of 13332:6: ( ({...}? => ( ({...}? => (otherlv_2= 'by' ( (lv_by_3_0= ruleConcept ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_4= 'down' otherlv_5= 'to' ( ( (lv_downTo_6_1= RULE_CAMELCASE_ID | lv_downTo_6_2= ruleNamespaceId ) ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_7= 'according' otherlv_8= 'to' ( (lv_accordingTo_9_0= rulePropertyId ) ) ) ) ) ) | ({...}? => ( ({...}? => ( (otherlv_10= 'in' ( ( (lv_unit_11_0= ruleUnit ) ) | ( (lv_currency_12_0= ruleCurrency ) ) ) ) | (otherlv_13= 'per' ( (lv_unit_14_0= ruleUnit ) ) ) ) ) ) ) | ({...}? => ( ({...}? => ( ( (lv_from_15_0= ruleNumber ) ) otherlv_16= 'to' ( (lv_to_17_0= ruleNumber ) ) ) ) ) ) | ({...}? => ( ({...}? => (otherlv_18= 'named' ( (lv_name_19_0= RULE_LOWERCASE_ID ) ) ) ) ) ) )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA271_0 = input.LA(1);

                         
                        int index271_0 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (LA271_0==EOF||LA271_0==24) ) {s = 1;}

                        else if ( LA271_0 == 93 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 0) ) {s = 2;}

                        else if ( LA271_0 == 94 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 1) ) {s = 3;}

                        else if ( LA271_0 == 38 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 2) ) {s = 4;}

                        else if ( LA271_0 == 45 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 5;}

                        else if ( LA271_0 == 95 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 3) ) {s = 6;}

                        else if ( LA271_0 == 226 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 7;}

                        else if ( LA271_0 == 227 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 8;}

                        else if ( LA271_0 == RULE_INT && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 4) ) {s = 9;}

                        else if ( LA271_0 == 98 && getUnorderedGroupHelper().canSelect(grammarAccess.getSimpleObservableSemanticsAccess().getUnorderedGroup_1(), 5) ) {s = 10;}

                         
                        input.seek(index271_0);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 271, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_202s = "\111\uffff";
    static final String dfa_203s = "\1\7\110\uffff";
    static final String dfa_204s = "\1\4\6\0\102\uffff";
    static final String dfa_205s = "\1\u00ed\6\0\102\uffff";
    static final String dfa_206s = "\7\uffff\1\2\100\uffff\1\1";
    static final String dfa_207s = "\1\uffff\1\0\1\1\1\2\1\3\1\4\1\5\102\uffff}>";
    static final String[] dfa_208s = {
            "\1\2\1\7\2\uffff\1\1\2\uffff\1\5\6\uffff\1\7\5\uffff\5\7\4\uffff\1\6\1\7\3\uffff\1\7\6\uffff\1\7\1\uffff\1\7\5\uffff\3\7\40\uffff\1\7\4\uffff\6\7\10\uffff\2\7\6\uffff\2\7\1\uffff\14\7\13\uffff\1\7\1\uffff\1\7\1\uffff\3\7\1\uffff\11\7\1\uffff\11\7\6\uffff\3\7\61\uffff\1\3\1\4\11\uffff\1\7",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_202 = DFA.unpackEncodedString(dfa_202s);
    static final short[] dfa_203 = DFA.unpackEncodedString(dfa_203s);
    static final char[] dfa_204 = DFA.unpackEncodedStringToUnsignedChars(dfa_204s);
    static final char[] dfa_205 = DFA.unpackEncodedStringToUnsignedChars(dfa_205s);
    static final short[] dfa_206 = DFA.unpackEncodedString(dfa_206s);
    static final short[] dfa_207 = DFA.unpackEncodedString(dfa_207s);
    static final short[][] dfa_208 = unpackEncodedStringArray(dfa_208s);

    class DFA276 extends DFA {

        public DFA276(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 276;
            this.eot = dfa_202;
            this.eof = dfa_203;
            this.min = dfa_204;
            this.max = dfa_205;
            this.accept = dfa_206;
            this.special = dfa_207;
            this.transition = dfa_208;
        }
        public String getDescription() {
            return "13958:3: ( (lv_root_1_0= ruleUnitElement ) )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA276_1 = input.LA(1);

                         
                        int index276_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalKim()) ) {s = 72;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index276_1);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA276_2 = input.LA(1);

                         
                        int index276_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalKim()) ) {s = 72;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index276_2);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA276_3 = input.LA(1);

                         
                        int index276_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalKim()) ) {s = 72;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index276_3);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA276_4 = input.LA(1);

                         
                        int index276_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalKim()) ) {s = 72;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index276_4);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA276_5 = input.LA(1);

                         
                        int index276_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalKim()) ) {s = 72;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index276_5);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA276_6 = input.LA(1);

                         
                        int index276_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred520_InternalKim()) ) {s = 72;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index276_6);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 276, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA298 extends DFA {

        public DFA298(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 298;
            this.eot = dfa_20;
            this.eof = dfa_20;
            this.min = dfa_21;
            this.max = dfa_22;
            this.accept = dfa_23;
            this.special = dfa_24;
            this.transition = dfa_25;
        }
        public String getDescription() {
            return "453:4: ( ( (lv_urn_1_0= ruleUrn ) ) | ( (lv_function_2_0= ruleFunction ) ) | ( (lv_number_3_0= ruleNumber ) ) | ( ( (lv_boolean_4_1= 'true' | lv_boolean_4_2= 'false' ) ) ) | ( (lv_concept_5_0= ruleSimpleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA298_4 = input.LA(1);

                         
                        int index298_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred11_InternalKim()) ) {s = 1;}

                        else if ( (true) ) {s = 7;}

                         
                        input.seek(index298_4);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 298, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA371 extends DFA {

        public DFA371(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 371;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_52;
            this.max = dfa_87;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "5249:9: ( (otherlv_8= '(' ( (lv_observations_9_0= ruleObserveStatementBody ) ) otherlv_10= ')' ) | ( (lv_states_11_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA371_1 = input.LA(1);

                         
                        int index371_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred206_InternalKim()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index371_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 371, _s, input);
            error(nvae);
            throw nvae;
        }
    }

    class DFA372 extends DFA {

        public DFA372(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 372;
            this.eot = dfa_50;
            this.eof = dfa_50;
            this.min = dfa_52;
            this.max = dfa_87;
            this.accept = dfa_54;
            this.special = dfa_55;
            this.transition = dfa_88;
        }
        public String getDescription() {
            return "5305:10: ( (otherlv_13= '(' ( (lv_observations_14_0= ruleObserveStatementBody ) ) otherlv_15= ')' ) | ( (lv_states_16_0= ruleObservableSemantics ) ) )";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA372_1 = input.LA(1);

                         
                        int index372_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred207_InternalKim()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index372_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 372, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000182002L,0x00000000040107E0L,0xF8003C0040001FE0L,0x000000000FFFFFFFL});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000182000L,0x00000000000007E0L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000400202E00FF0L,0xFFD8180010800000L,0x0080000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000001000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x00E000001C000002L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x00E000001E000002L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x00E000001A000002L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000003980000050L,0x0000000000800000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x00E0000012000002L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x00E0000010000002L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0080000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000040000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000008000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000010L,0x0000000000800000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000002000002L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000070000000002L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000E00200C00B30L,0xFFD8180000800000L,0x0400000000000003L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000188000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000800L,0x0000000000000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000180000000002L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000402000000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0001000000000010L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0002000000000000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0004000000000010L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000050L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000400000040L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0010E00200C00B30L,0xFFD8180000800000L,0x0400000000000003L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x8000000002000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x8000000000000000L,0x000000000000000FL});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x1F00000200C00B30L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x8000000200000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x8000200200000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x6000000000000000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x8000000000000002L,0x000000000000000FL});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000408202C00DF0L,0x0000000000800000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000060002000002L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000400202C00DF0L,0x0000000000800000L,0x0080000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000050L,0x0000000000800000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000400202C00DF0L,0x0000000000800010L,0x0080000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000400202C00DF2L,0x0000000000800000L,0x0080000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000200000000002L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000190L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000001000002L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000182000L,0x0000000000003800L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000180000L,0x0000000000003800L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000200018040020L,0x00000000005CC000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000200018040000L,0x00000000005CC000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000800200000010L,0x0000000000800000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x000020001A040000L,0x00000000005CC000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000010000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180000820000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000002000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000200018040010L,0x0000000000DCC000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000200018040000L,0x00000000007CC000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000010040000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0018000000000002L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0010000000000002L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0010000000000002L,0x0000000003000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000310L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000002000L,0x0000000004000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x00E0000210C00B30L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x00E000021CC00B32L,0xFFD8180008800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x00E000021EC00B32L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x00E0000610C00B30L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x00E000021AC00B32L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x00E0000210C00B32L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180010800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_84 = new BitSet(new long[]{0x0000204001000802L,0x00000007E0000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_85 = new BitSet(new long[]{0x0000000000000110L,0x0000000000800000L});
    public static final BitSet FOLLOW_86 = new BitSet(new long[]{0x0000A04201000990L,0x00000007E1800000L,0x0000000000000000L,0x0000200C00000000L});
    public static final BitSet FOLLOW_87 = new BitSet(new long[]{0x0000A04201000910L,0x00000007E1000000L,0x0000000000000000L,0x0000200C00000000L});
    public static final BitSet FOLLOW_88 = new BitSet(new long[]{0x0000000210C00B32L,0xFFD81FF800800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_89 = new BitSet(new long[]{0x0000000010000002L,0x000007F800000000L});
    public static final BitSet FOLLOW_90 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_91 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_92 = new BitSet(new long[]{0x2000000000000000L,0x0003E0E000000000L});
    public static final BitSet FOLLOW_93 = new BitSet(new long[]{0x0000000000002000L,0x0000000008010000L,0xF8003C0040001FE0L,0x000000000FFFFFFFL});
    public static final BitSet FOLLOW_94 = new BitSet(new long[]{0x0000000000000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_95 = new BitSet(new long[]{0x0000000000000110L,0x0018180000800000L});
    public static final BitSet FOLLOW_96 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_97 = new BitSet(new long[]{0x0000000000000C20L});
    public static final BitSet FOLLOW_98 = new BitSet(new long[]{0x0000000000001080L});
    public static final BitSet FOLLOW_99 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_100 = new BitSet(new long[]{0x0000008000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_101 = new BitSet(new long[]{0x0040000000000002L});
    public static final BitSet FOLLOW_102 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_103 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000018L});
    public static final BitSet FOLLOW_104 = new BitSet(new long[]{0x0000000200C00B32L,0xFFD8180000800000L,0x0000000000000003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_105 = new BitSet(new long[]{0x2000000008000000L,0x0003E0E000000000L,0x0000000000001CE0L,0x000000000F000000L});
    public static final BitSet FOLLOW_106 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_107 = new BitSet(new long[]{0x0000000008000000L});
    public static final BitSet FOLLOW_108 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000001EE0L,0x000000000F000000L});
    public static final BitSet FOLLOW_109 = new BitSet(new long[]{0x0000000000002000L,0x0000000000010000L,0xF8003C0040001FE0L,0x000000000FFFFFFFL});
    public static final BitSet FOLLOW_110 = new BitSet(new long[]{0x0000000000002100L,0x0000000000020000L,0x0000000000000400L});
    public static final BitSet FOLLOW_111 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000000L});
    public static final BitSet FOLLOW_112 = new BitSet(new long[]{0x0000000000000100L,0x0000000000020000L});
    public static final BitSet FOLLOW_113 = new BitSet(new long[]{0x0000000010000022L,0x0000000000000000L,0x0001C0FFBFEEA000L});
    public static final BitSet FOLLOW_114 = new BitSet(new long[]{0x0000000010000022L,0x0020000000000000L,0x0001C0FFBFEEA000L});
    public static final BitSet FOLLOW_115 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180000800000L,0x0000000000014003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_116 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180000800000L,0x0000000000010003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_117 = new BitSet(new long[]{0x0000000012000022L,0x0000000000000000L,0x0001C0FFBFEEA00CL});
    public static final BitSet FOLLOW_118 = new BitSet(new long[]{0x0000000012000022L,0x0000000000000000L,0x0001C0FFBFEEA000L});
    public static final BitSet FOLLOW_119 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180000800000L,0x0000000000100003L,0x0000000C00000000L});
    public static final BitSet FOLLOW_120 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_121 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x00003C0000100000L});
    public static final BitSet FOLLOW_122 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_123 = new BitSet(new long[]{0x0000200002000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_124 = new BitSet(new long[]{0x0000200002000000L});
    public static final BitSet FOLLOW_125 = new BitSet(new long[]{0x0000008012000022L,0x0000000000000000L,0x0001C0FFBFEEA000L});
    public static final BitSet FOLLOW_126 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L,0x0000010000000000L});
    public static final BitSet FOLLOW_127 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_128 = new BitSet(new long[]{0x0000000200000100L,0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_129 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_130 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000008L});
    public static final BitSet FOLLOW_131 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_132 = new BitSet(new long[]{0x0000000200C00B30L,0xFFD8180000800600L,0x000E000000000003L,0x00001FCC00000000L});
    public static final BitSet FOLLOW_133 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_134 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_135 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0010000000000000L});
    public static final BitSet FOLLOW_136 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_137 = new BitSet(new long[]{0x0000000001000002L,0x0000001000000000L,0x0040000000000000L});
    public static final BitSet FOLLOW_138 = new BitSet(new long[]{0x0000000001000002L,0x0000001000000000L});
    public static final BitSet FOLLOW_139 = new BitSet(new long[]{0x0000008000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_140 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_141 = new BitSet(new long[]{0x0000400602C00DF0L,0x0000000000800000L,0x0080000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_142 = new BitSet(new long[]{0x0000000000000010L,0x0004000000800000L});
    public static final BitSet FOLLOW_143 = new BitSet(new long[]{0x0000000200C00C20L,0x0000000000000000L,0x0080000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_144 = new BitSet(new long[]{0x0080000000000010L,0x0004000000800000L});
    public static final BitSet FOLLOW_145 = new BitSet(new long[]{0x0000000000C00C20L,0x0000000000000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_146 = new BitSet(new long[]{0x0000E00200C00B30L,0xFFDC180000800000L,0x0400000000000003L,0x0000000DF0000000L});
    public static final BitSet FOLLOW_147 = new BitSet(new long[]{0x0000000002000000L,0x0004000000000000L});
    public static final BitSet FOLLOW_148 = new BitSet(new long[]{0x0000400200C00B70L,0xFFD8180000800600L,0x008E000000000003L,0x00001FCC00000000L});
    public static final BitSet FOLLOW_149 = new BitSet(new long[]{0x1900000000000000L,0x0000000000000000L,0x0100000000000000L});
    public static final BitSet FOLLOW_150 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0600000000000000L});
    public static final BitSet FOLLOW_151 = new BitSet(new long[]{0x0000204000000802L,0x00000004E0000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_152 = new BitSet(new long[]{0x0000A04200000910L,0x00000004E1000000L,0x0000000000000000L,0x0000200C00000000L});
    public static final BitSet FOLLOW_153 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_154 = new BitSet(new long[]{0x0000000000000210L});
    public static final BitSet FOLLOW_155 = new BitSet(new long[]{0x0000800600000910L,0x0000000001000000L,0x0000000000000000L,0x0000200C00000000L});
    public static final BitSet FOLLOW_156 = new BitSet(new long[]{0x0000800000000002L,0x0000000001000000L,0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_157 = new BitSet(new long[]{0x0000000200000910L,0x0000000000000000L,0x0000000000000000L,0x0000000C00000000L});
    public static final BitSet FOLLOW_158 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000000L,0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_159 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L,0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_160 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000000000L,0x0000003000000000L});
    public static final BitSet FOLLOW_161 = new BitSet(new long[]{0x0000000000000002L,0x0000000002000000L});
    public static final BitSet FOLLOW_162 = new BitSet(new long[]{0x0000000000000002L,0x0000000003000000L});
    public static final BitSet FOLLOW_163 = new BitSet(new long[]{0x0000000000000092L,0x0000000002000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_164 = new BitSet(new long[]{0x0000000000000092L,0x0000000000000000L,0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_165 = new BitSet(new long[]{0x0000000000000092L});
    public static final BitSet FOLLOW_166 = new BitSet(new long[]{0x0000000000000012L,0x0000000000800000L});
    public static final BitSet FOLLOW_167 = new BitSet(new long[]{0x0000000000000002L,0x0000000000200000L});
    public static final BitSet FOLLOW_168 = new BitSet(new long[]{0x0000000008000002L,0x0000000000700000L});
    public static final BitSet FOLLOW_169 = new BitSet(new long[]{0x0000000008000012L,0x0000000000D00000L});
    public static final BitSet FOLLOW_170 = new BitSet(new long[]{0x0000000008000002L,0x0000000000500000L});
    public static final BitSet FOLLOW_171 = new BitSet(new long[]{0x000000000C000022L,0x0000000008000000L});
    public static final BitSet FOLLOW_172 = new BitSet(new long[]{0x000000000C000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_173 = new BitSet(new long[]{0x000000000E000002L});
    public static final BitSet FOLLOW_174 = new BitSet(new long[]{0x000000000A000002L});
    public static final BitSet FOLLOW_175 = new BitSet(new long[]{0x0000800200000910L,0x0000000001000000L,0x0000000000000000L,0x0000200C00000000L});
    public static final BitSet FOLLOW_176 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0000000000001CE0L,0x000000000F000000L});
    public static final BitSet FOLLOW_177 = new BitSet(new long[]{0x0000000002000002L,0x0000000000000000L,0x000000000000000CL});
    public static final BitSet FOLLOW_178 = new BitSet(new long[]{0x0000008002000002L});
    public static final BitSet FOLLOW_179 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000000L,0x0001C00020000000L});

}
